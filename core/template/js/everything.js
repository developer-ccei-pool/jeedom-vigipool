console.log("///// NEW DEVICE /////");

var x3_rainbow_value = "S#FF000094#FFFF0094#00FF0094#00FFFF94#0000FF94#FF00FF94";
var x3_fun_value = "S#FF000027#FFFF0027#0000FF27#00FF0027#00FFFF27#FF00FF27#FFFFFF27";
var x3_ocean_value = "S#0000FF32KFF32#008AFF32KFF32#00D8FF32KFF32#00DCD432KFF32#18FFFF32KFF32#01579B32KFF32#039BE532KFF32#00FFFF32KFF32";
var x3_flamme_value = "S#FD31034B#FE88174B#FD4E0A2B#FE6B104B#FFDD004B#FE88172D#FFDD004B#FE88176B";
var x3_parade_value = "S#FFFF00FE#00FF00FE#18FFFFFEKFFFE#FF00FFFE#9C27B0FE#FF0000FE#FFAB40FEK3CFE";
var x3_elegant_value = "SK8038KBF38KFF38KBF38K4438K0038K4438";
var x3_horizon_value = "S#0000FF7FK897F#04FFFF7F";
var x3_psyche_value = "S#FF005004#00000000#0000FF04#00000000#15EDFF04#00000000#C000FF04#00000000#FFFF0004#00000000#FF00FF04#00000000";

var x3_rainbow_button = ".vigipool_modal_x3_state_prog_2_rainbow_button > img";
var x3_fun_button = ".vigipool_modal_x3_state_prog_2_fun_button > img";
var x3_ocean_button = ".vigipool_modal_x3_state_prog_2_ocean_button > img";
var x3_flamme_button = ".vigipool_modal_x3_state_prog_2_flamme_button > img";
var x3_parade_button = ".vigipool_modal_x3_state_prog_2_parade_button > img";
var x3_elegant_button = ".vigipool_modal_x3_state_prog_2_elegant_button > img";
var x3_horizon_button = ".vigipool_modal_x3_state_prog_2_horizon_button > img";
var x3_psyche_button = ".vigipool_modal_x3_state_prog_2_psyche_button > img";

var x3_rainbow_image = "/plugins/vigipool/desktop/img/x3_rainbow.png";
var x3_fun_image = "/plugins/vigipool/desktop/img/x3_fun.png";
var x3_ocean_image = "/plugins/vigipool/desktop/img/x3_ocean.png";
var x3_flamme_image = "/plugins/vigipool/desktop/img/x3_flamme.png";
var x3_parade_image = "/plugins/vigipool/desktop/img/x3_parade.png";
var x3_elegant_image = "/plugins/vigipool/desktop/img/x3_elegant.png";
var x3_horizon_image = "/plugins/vigipool/desktop/img/x3_horizon.png";
var x3_psyche_image = "/plugins/vigipool/desktop/img/x3_psyche.png";

var x3_rainbow_image_ok = "/plugins/vigipool/desktop/img/x3_rainbow_ok.png";
var x3_fun_image_ok = "/plugins/vigipool/desktop/img/x3_fun_ok.png";
var x3_ocean_image_ok = "/plugins/vigipool/desktop/img/x3_ocean_ok.png";
var x3_flamme_image_ok = "/plugins/vigipool/desktop/img/x3_flamme_ok.png";
var x3_parade_image_ok = "/plugins/vigipool/desktop/img/x3_parade_ok.png";
var x3_elegant_image_ok = "/plugins/vigipool/desktop/img/x3_elegant_ok.png";
var x3_horizon_image_ok = "/plugins/vigipool/desktop/img/x3_horizon_ok.png";
var x3_psyche_image_ok = "/plugins/vigipool/desktop/img/x3_psyche_ok.png";

if (eq === undefined || eq >= $(".vigipool_ipaddr").length - 1) {
    var eq = 0;
    var global_equipment_table = new Array();
} else {
    eq = eq + 1;
}

function create_ui_options_click(file_name) {
    access_modal(`.${file_name}_see_advanced_options`, `${file_name}_advanced_options`, eq_modal);
}

function variable_check(variables) {
    for (var i = 0, max = variables.length; i < max; i++) {
        var variable = variables[i];
        // console.log("variable = " + variable);

        if (variable === undefined)
            continue;
        if (variable > 0)
            return true;
        if (variable.length > 0)
            return true;
    }

    return false;
}

function get_value_from_position(eq_modal, variable) {

    // console.log("eq_modal = " + eq_modal);
    // console.log("variable = " + variable);

    var html = $(".vigipool_" + variable).eq(eq_modal).html();
    // console.log("html = " + html);

    if (variable === "consigne_orp")
        html = fix_consigne_orp(eq_modal, variable, html);
    if (variable === "value_temp")
        html = fix_value_temp(eq_modal, variable, html);
    if (variable === "light_sched")
        return html;
    if (variable === "filt_sched")
        return html;
    if (variable === "aux_sched")
        return html;
    if (variable === "light_sched_m")
        return html;
    if (variable === "filt_sched_m")
        return html;
    if (variable === "aux1_sched")
        return html;
    if (variable === "aux2_sched")
        return html;

    // console.log("html = " + html);

    if (ValidateIPaddress(html)) {
        // console.log("TYPE : 1");
        return html;
    }

    if (html === undefined || html === "") {
        // console.log("TYPE : 2");
        return undefined;
    }

    if (html.includes("A") || html.includes("B") || html.includes("C") || html.includes("D") || html.includes("E") || html.includes("F") || html.includes(" ")) {
        // console.log("TYPE : 3");
        return html;
    }

    if (html.includes(".")) {
        // console.log("TYPE : 4");
        return parseFloat(html);
    }

    if (html.includes(",")) {
        // console.log("TYPE : 5");
        return parseFloat(html);
    }

    if (!isNaN(html)) {
        // console.log("TYPE : 6");
        return parseInt(html);
    }

    return html;
}

function ValidateIPaddress(ipaddress) {
    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) {
        return true;
    }
    return false;
}

function fix_consigne_orp(eq_modal, variable, html) {

    eq_modal = parseInt(eq_modal);

    if (variable === "consigne_orp" && parseInt(html) < 450 || parseInt(html) > 850) {
        html = $(".vigipool_" + variable).eq(eq_modal + 1).html();
    }
    if (variable === "consigne_orp" && parseInt(html) < 450 || parseInt(html) > 850) {
        html = $(".vigipool_" + variable).eq(eq_modal + 2).html();
    }
    if (variable === "consigne_orp" && parseInt(html) < 450 || parseInt(html) > 850) {
        html = $(".vigipool_" + variable).eq(eq_modal - 1).html();
    }
    if (variable === "consigne_orp" && parseInt(html) < 450 || parseInt(html) > 850) {
        html = $(".vigipool_" + variable).eq(eq_modal - 2).html();
    }

    return html;
}

function fix_value_temp(eq_modal, variable, html) {

    eq_modal = parseInt(eq_modal);

    if (variable === "value_temp" && parseInt(html) < 20 || parseInt(html) > 40) {
        html = $(".vigipool_" + variable).eq(eq_modal + 1).html();
    }
    if (variable === "value_temp" && parseInt(html) < 20 || parseInt(html) > 40) {
        html = $(".vigipool_" + variable).eq(eq_modal + 2).html();
    }
    if (variable === "value_temp" && parseInt(html) < 20 || parseInt(html) > 40) {
        html = $(".vigipool_" + variable).eq(eq_modal - 1).html();
    }
    if (variable === "value_temp" && parseInt(html) < 20 || parseInt(html) > 40) {
        html = $(".vigipool_" + variable).eq(eq_modal - 2).html();
    }

    return html;
}

function get_value_from_eq(eq_position, variable, equipement)
{
    var all_mqtt_data = get_all_mqtt_data();

    var eq_mqtt_data = all_mqtt_data[eq_position];

    for (var i = 0, max = eq_mqtt_data.length; i < max; i++) {

        var eq_mqtt_line = eq_mqtt_data[i];

        if (eq_mqtt_line.includes(equipement + "_")) {
            if (eq_mqtt_line.includes("/" + variable + "/")) {
                return eq_mqtt_line.split(" ")[1];
            }
        }
    }

    return get_value_from_position(eq_position, "variable");

}

function create_program(file_name, sched_number, variable_sched, color = "") {



    if (variable_sched === undefined) {
        return;
    }

    // console.log("file_name = " + file_name);
    // console.log("sched_number = " + sched_number);
    // console.log("variable_sched = " + variable_sched);
    // console.log("color = " + color);

    if (sched_number === 1) {
        var program_1_off_on = get_sched_value(variable_sched, "program_1_off_on");
        // console.log("program_1_off_on = " + program_1_off_on);
        var program_1_samedi = get_sched_value(variable_sched, "program_1_samedi");
        // console.log("program_1_samedi = " + program_1_samedi);
        var program_1_vendredi = get_sched_value(variable_sched, "program_1_vendredi");
        // console.log("program_1_vendredi = " + program_1_vendredi);
        var program_1_jeudi = get_sched_value(variable_sched, "program_1_jeudi");
        // console.log("program_1_jeudi = " + program_1_jeudi);
        var program_1_mercredi = get_sched_value(variable_sched, "program_1_mercredi");
        // console.log("program_1_mercredi = " + program_1_mercredi);
        var program_1_mardi = get_sched_value(variable_sched, "program_1_mardi");
        // console.log("program_1_mardi = " + program_1_mardi);
        var program_1_lundi = get_sched_value(variable_sched, "program_1_lundi");
        // console.log("program_1_lundi = " + program_1_lundi);
        var program_1_dimanche = get_sched_value(variable_sched, "program_1_dimanche");
        // console.log("program_1_dimanche = " + program_1_dimanche);

        var programmation_selected_prog_off_on = program_1_off_on;
        // console.log("programmation_selected_prog_off_on = " + programmation_selected_prog_off_on);
        var programmation_selected_prog_samedi = program_1_samedi;
        // console.log("programmation_selected_prog_samedi = " + programmation_selected_prog_samedi);
        var programmation_selected_prog_vendredi = program_1_vendredi;
        // console.log("programmation_selected_prog_vendredi = " + programmation_selected_prog_vendredi);
        var programmation_selected_prog_jeudi = program_1_jeudi;
        // console.log("programmation_selected_prog_jeudi = " + programmation_selected_prog_jeudi);
        var programmation_selected_prog_mercredi = program_1_mercredi;
        // console.log("programmation_selected_prog_mercredi = " + programmation_selected_prog_mercredi);
        var programmation_selected_prog_mardi = program_1_mardi;
        // console.log("programmation_selected_prog_mardi = " + programmation_selected_prog_mardi);
        var programmation_selected_prog_lundi = program_1_lundi;
        // console.log("programmation_selected_prog_lundi = " + programmation_selected_prog_lundi);
        var programmation_selected_prog_dimanche = program_1_dimanche;
        // console.log("programmation_selected_prog_dimanche = " + programmation_selected_prog_dimanche);

        var programmation_selected_duration = get_sched_duration(variable_sched, 1);
        // console.log("programmation_selected_duration = " + programmation_selected_duration);
    }
    if (sched_number === 2) {
        var program_2_off_on = get_sched_value(variable_sched, "program_2_off_on");
        // console.log("program_2_off_on = " + program_2_off_on);
        var program_2_samedi = get_sched_value(variable_sched, "program_2_samedi");
        // console.log("program_2_samedi = " + program_2_samedi);
        var program_2_vendredi = get_sched_value(variable_sched, "program_2_vendredi");
        // console.log("program_2_vendredi = " + program_2_vendredi);
        var program_2_jeudi = get_sched_value(variable_sched, "program_2_jeudi");
        // console.log("program_2_jeudi = " + program_2_jeudi);
        var program_2_mercredi = get_sched_value(variable_sched, "program_2_mercredi");
        // console.log("program_2_mercredi = " + program_2_mercredi);
        var program_2_mardi = get_sched_value(variable_sched, "program_2_mardi");
        // console.log("program_2_mardi = " + program_2_mardi);
        var program_2_lundi = get_sched_value(variable_sched, "program_2_lundi");
        // console.log("program_2_lundi = " + program_2_lundi);
        var program_2_dimanche = get_sched_value(variable_sched, "program_2_dimanche");
        // console.log("program_2_dimanche = " + program_2_dimanche);

        var programmation_selected_prog_off_on = program_2_off_on;
        // console.log("programmation_selected_prog_off_on = " + programmation_selected_prog_off_on);
        var programmation_selected_prog_samedi = program_2_samedi;
        // console.log("programmation_selected_prog_samedi = " + programmation_selected_prog_samedi);
        var programmation_selected_prog_vendredi = program_2_vendredi;
        // console.log("programmation_selected_prog_vendredi = " + programmation_selected_prog_vendredi);
        var programmation_selected_prog_jeudi = program_2_jeudi;
        // console.log("programmation_selected_prog_jeudi = " + programmation_selected_prog_jeudi);
        var programmation_selected_prog_mercredi = program_2_mercredi;
        // console.log("programmation_selected_prog_mercredi = " + programmation_selected_prog_mercredi);
        var programmation_selected_prog_mardi = program_2_mardi;
        // console.log("programmation_selected_prog_mardi = " + programmation_selected_prog_mardi);
        var programmation_selected_prog_lundi = program_2_lundi;
        // console.log("programmation_selected_prog_lundi = " + programmation_selected_prog_lundi);
        var programmation_selected_prog_dimanche = program_2_dimanche;
        // console.log("programmation_selected_prog_dimanche = " + programmation_selected_prog_dimanche);

        var programmation_selected_duration = get_sched_duration(variable_sched, 2);
        // console.log("programmation_selected_duration = " + programmation_selected_duration);
    }

    if (programmation_selected_prog_off_on === 0) {
        $(`.${file_name}_${sched_number}_off_on`).html("<p style=\"color:red;\">OFF</p>");
    }
    if (programmation_selected_prog_off_on === 1) {
        $(`.${file_name}_${sched_number}_off_on`).html("<p style=\"color:green;\">ON</p>");
    }
    if (programmation_selected_prog_lundi === 0)
    {
        $(`.${file_name}_${sched_number}_lundi`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_lundi`).removeClass("vigipool_prog_on");
        // console.log("test = ");
        // console.log(`$(` + `.${file_name}_${sched_number}_lundi` + `).addClass("vigipool_prog_off");`);
    }
    if (programmation_selected_prog_mardi === 0)
    {
        $(`.${file_name}_${sched_number}_mardi`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_mardi`).removeClass("vigipool_prog_on");
    }
    if (programmation_selected_prog_mercredi === 0)
    {
        $(`.${file_name}_${sched_number}_mercredi`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_mercredi`).removeClass("vigipool_prog_on");
    }
    if (programmation_selected_prog_jeudi === 0)
    {
        $(`.${file_name}_${sched_number}_jeudi`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_jeudi`).removeClass("vigipool_prog_on");
    }
    if (programmation_selected_prog_vendredi === 0)
    {
        $(`.${file_name}_${sched_number}_vendredi`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_vendredi`).removeClass("vigipool_prog_on");
    }
    if (programmation_selected_prog_samedi === 0)
    {
        $(`.${file_name}_${sched_number}_samedi`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_samedi`).removeClass("vigipool_prog_on");
    }
    if (programmation_selected_prog_dimanche === 0)
    {
        $(`.${file_name}_${sched_number}_dimanche`).addClass("vigipool_prog_off");
        $(`.${file_name}_${sched_number}_dimanche`).removeClass("vigipool_prog_on");
    }

    if (programmation_selected_prog_lundi === 1)
    {
        $(`.${file_name}_${sched_number}_lundi`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_lundi`).removeClass("vigipool_prog_off");
        // console.log("test = ");
        // console.log(`$(` + `.${file_name}_${sched_number}_lundi` + `).addClass("vigipool_prog_off");`);
    }
    if (programmation_selected_prog_mardi === 1)
    {
        $(`.${file_name}_${sched_number}_mardi`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_mardi`).removeClass("vigipool_prog_off");
    }
    if (programmation_selected_prog_mercredi === 1)
    {
        $(`.${file_name}_${sched_number}_mercredi`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_mercredi`).removeClass("vigipool_prog_off");
    }
    if (programmation_selected_prog_jeudi === 1)
    {
        $(`.${file_name}_${sched_number}_jeudi`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_jeudi`).removeClass("vigipool_prog_off");
    }
    if (programmation_selected_prog_vendredi === 1)
    {
        $(`.${file_name}_${sched_number}_vendredi`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_vendredi`).removeClass("vigipool_prog_off");
    }
    if (programmation_selected_prog_samedi === 1)
    {
        $(`.${file_name}_${sched_number}_samedi`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_samedi`).removeClass("vigipool_prog_off");
    }
    if (programmation_selected_prog_dimanche === 1)
    {
        $(`.${file_name}_${sched_number}_dimanche`).addClass("vigipool_prog_on");
        $(`.${file_name}_${sched_number}_dimanche`).removeClass("vigipool_prog_off");
    }

    // Color Sequence

    if (is_sequence(color)) {
        // console.log("----------");
        // console.log("file_name = " + file_name);
        // console.log("sched_number = " + sched_number);
        // console.log("color = " + color + "(is_sequence)");
        // console.log("----------");

        $(`.${file_name}_${sched_number}_color_label`).html(get_text("color") + " : ");
        $(`.${file_name}_${sched_number}_color`).html(color_to_text(color));

        var image_from_color = get_image_from_color(color);
        $(`.${file_name}_${sched_number}_color_circle > img`).show();
        $(`.${file_name}_${sched_number}_color_circle > img`).attr("src", get_image_from_color(color));
        $(`.${file_name}_${sched_number}_color_circle > img`).attr("alt", color_to_text(color).toLowerCase());
    } else if (is_not_sequence(color)) {
        // console.log("----------");
        // console.log("file_name = " + file_name);
        // console.log("sched_number = " + sched_number);
        // console.log("color = " + color + "(is_not_sequence)");
        // console.log("----------");

        $(`.${file_name}_${sched_number}_color_label`).html(get_text("color") + " : ");
        $(`.${file_name}_${sched_number}_color`).html(color_to_text(color));

        $(`.${file_name}_${sched_number}_color_circle > svg`).show();
        $(`.${file_name}_${sched_number}_color_circle > svg > circle`).attr("fill", convert_color_id_to_color_hex(color));
    }

    // Duration
    if (file_name === "vigipool_modal_light")
        var sched_duration = get_sched_duration(variable_sched, sched_number);
    else
        var sched_duration = get_sched_duration_to(variable_sched, sched_number);
    // console.log("sched_duration = " + sched_duration);
    $(`.${file_name}_${sched_number}_duration`).html(sched_duration);

    $(document).ready(function () {
        $(`.${file_name}`).show();
    });
}

function create_program_simple(file_name, sched_number, variable_sched, color = "") {

    // tild_B8D61A440B70    / s44_w / light_sched   / info / reported 02 3E 02 0A 01 4C 88 41 02 0A 01 4C 88
    // tild_B8D61A440B70    / s44_w / aux_sched     / info / reported 02 3E 00 00 01 20 50 41 00 00 01 20 50
    // tild_B8D61A440B70    / s44_w / filt_sched    / info / reported 02 3E 00 00 01 20 50 41 00 00 01 20 50
    // anteam_90380CABBD94  / s44_w / light_sched_m / info / reported 2A 02
    // anteam_90380CABBD94  / s44_w / filt_sched_m  / info / reported 01 02 04 05 06 07
    // anteam_90380CABBD94  / s44_w / aux1_sched    / info / reported 04 02
    // anteam_90380CABBD94  / s44_w / aux2_sched    / info / reported 10 24

    var day = get_text("day");

    if (variable_sched !== undefined) {

        var max_length = variable_sched.length;

        if (max_length >= 3) {
            var from_1 = variable_sched[0] + variable_sched[1];
            var to_1 = variable_sched[2] + variable_sched[3];
            from_1 = converter("hex", "time_2", from_1);
            to_1 = converter("hex", "time_2", to_1);
            $(`.${file_name}_${sched_number}_from_value_1`).html("&nbsp;" + from_1 + "&nbsp;");
            $(`.${file_name}_${sched_number}_to_value_1`).html("&nbsp;" + to_1 + "&nbsp;");
        }

        if (max_length >= 7) {
            var from_2 = variable_sched[4] + variable_sched[5];
            var to_2 = variable_sched[6] + variable_sched[7];
            from_2 = converter("hex", "time_2", from_2);
            to_2 = converter("hex", "time_2", to_2);
            $(`.${file_name}_${sched_number}_from_value_2`).html("&nbsp;" + from_2 + "&nbsp;");
            $(`.${file_name}_${sched_number}_to_value_2`).html("&nbsp;" + to_2 + "&nbsp;");
        } else {
            $(`.${file_name}_${sched_number}_from_label_2`).html("");
            $(`.${file_name}_${sched_number}_to_label_2`).html("");
        }

        if (max_length >= 11) {
            var from_3 = variable_sched[8] + variable_sched[9];
            var to_3 = variable_sched[10] + variable_sched[11];
            from_3 = converter("hex", "time_2", from_3);
            to_3 = converter("hex", "time_2", to_3);
            $(`.${file_name}_${sched_number}_from_value_3`).html("&nbsp;" + from_3 + "&nbsp;");
            $(`.${file_name}_${sched_number}_to_value_3`).html("&nbsp;" + to_3 + "&nbsp;");
        } else {
            $(`.${file_name}_${sched_number}_from_label_3`).html("");
            $(`.${file_name}_${sched_number}_to_label_3`).html("");
        }

        if (max_length >= 3)
        {
            from_1 = converter("hex", "dec", variable_sched[0] + variable_sched[1]);
            to_1 = converter("hex", "dec", variable_sched[2] + variable_sched[3]);
            $(`.${file_name}_${sched_number}_duration`).html("<img src=\"/plugins/vigipool/desktop/img/clock.svg\" style=\"filter: invert(1);\" />" + "&nbsp;" + get_duration_2(from_1, to_1) + " / " + day);
        }

        if (max_length >= 7)
        {
            from_2 = converter("hex", "dec", variable_sched[4] + variable_sched[5]);
            to_2 = converter("hex", "dec", variable_sched[6] + variable_sched[7]);
            $(`.${file_name}_${sched_number}_duration`).html("<img src=\"/plugins/vigipool/desktop/img/clock.svg\" style=\"filter: invert(1);\" />" + "&nbsp;" + get_duration_2(from_1, to_1, from_2, to_2) + " / " + day);
        }

        if (max_length >= 11)
        {
            from_3 = converter("hex", "dec", variable_sched[8] + variable_sched[9]);
            to_3 = converter("hex", "dec", variable_sched[10] + variable_sched[11]);
            $(`.${file_name}_${sched_number}_duration`).html("<img src=\"/plugins/vigipool/desktop/img/clock.svg\" style=\"filter: invert(1);\" />" + "&nbsp;" + get_duration_2(from_1, to_1, from_2, to_2, from_3, to_3) + " / " + day);
        }
}
}

function get_duration_2(from_1, to_1, from_2 = "", to_2 = "", from_3 = "", to_3 = "")
{
    var duration = [];
    for (let index = 0; index < 47; index++)
    {
        if (from_1 < to_1)
        {
            if (from_1 <= index && index < to_1)
            {
                duration[index] = true;
            }
        }
        if (from_2 < to_2 && from_2 != "" && to_2 != "")
        {
            if (from_2 <= index && index < to_2)
            {
                duration[index] = true;
            }
        }
        if (from_3 < to_3 && from_3 != "" && to_3 != "")
        {
            if (from_3 <= index && index < to_3)
            {
                duration[index] = true;
            }
        }
        if (from_1 > to_1)
        {
            if (from_1 <= index || index < to_1)
            {
                duration[index] = true;
            }
        }
        if (from_2 > to_2 && from_2 != "" && to_2 != "")
        {
            if (from_2 <= index || index < to_2)
            {
                duration[index] = true;
            }
        }
        if (from_3 > to_3 && from_3 != "" && to_3 != "")
        {
            if (from_3 <= index || index < to_3)
            {
                duration[index] = true;
            }
        }
    }

    var result = 0;

    for (let index = 0; index < 47; index++)
    {
        if (duration[index])
        {
            result = result + 1;
        }
    }

    result = converter("dec", "time_2", result);

    return result;
}

function getName(d) {
    const error = new Error();
    const firefoxMatch = (error.stack.split('\n')[0 + d].match(/^.*(?=@)/) || [])[0];
    const chromeMatch = ((((error.stack.split('at ') || [])[1 + d] || '').match(/(^|\.| <| )(.*[^(<])( \()/) || [])[2] || '').split('.').pop();
    const safariMatch = error.stack.split('\n')[0 + d];

    // firefoxMatch ? console.log('firefoxMatch', firefoxMatch) : void 0;
    // chromeMatch ? console.log('chromeMatch', chromeMatch) : void 0;
    // safariMatch ? console.log('safariMatch', safariMatch) : void 0;

    return firefoxMatch || chromeMatch || safariMatch;
}


function get_image_from_color(color) {

    // Tild

    var id_gradiant = 16;
    var id_rainbow = 17;
    var id_parade = 18;
    var id_techno = 19;
    var id_horizon = 20;
    var id_random = 21;
    var id_magical = 22;
    var id_favorite = 11;

    var id_gradiant_2 = "16";
    var id_rainbow_2 = "17";
    var id_parade_2 = "18";
    var id_techno_2 = "19";
    var id_horizon_2 = "20";
    var id_random_2 = "21";
    var id_magical_2 = "22";
    var id_favorite_2 = "11";

    if (color === id_gradiant || color === id_gradiant_2 || color === "gradiant")
        return "/plugins/vigipool/desktop/img/gradiant.png";
    if (color === id_rainbow || color === id_rainbow_2 || color === "rainbow")
        return "/plugins/vigipool/desktop/img/rainbow.png";
    if (color === id_parade || color === id_parade_2 || color === "parade")
        return "/plugins/vigipool/desktop/img/parade.png";
    if (color === id_techno || color === id_techno_2 || color === "techno")
        return "/plugins/vigipool/desktop/img/techno.png";
    if (color === id_horizon || color === id_horizon_2 || color === "horizon")
        return "/plugins/vigipool/desktop/img/horizon.png";
    if (color === id_random || color === id_random_2 || color === "random")
        return "/plugins/vigipool/desktop/img/random.png";
    if (color === id_magical || color === id_magical_2 || color === "magical")
        return "/plugins/vigipool/desktop/img/magical.png";
    if (color === id_favorite || color === id_favorite_2 || color === "favorite")
        return "/plugins/vigipool/desktop/img/favorite.png";

    // X3

    var x3_rainbow_value = "S#FF000094#FFFF0094#00FF0094#00FFFF94#0000FF94#FF00FF94";
    var x3_fun_value = "S#FF000027#FFFF0027#0000FF27#00FF0027#00FFFF27#FF00FF27#FFFFFF27";
    var x3_ocean_value = "S#0000FF32KFF32#008AFF32KFF32#00D8FF32KFF32#00DCD432KFF32#18FFFF32KFF32#01579B32KFF32#039BE532KFF32#00FFFF32KFF32";
    var x3_flamme_value = "S#FD31034B#FE88174B#FD4E0A2B#FE6B104B#FFDD004B#FE88172D#FFDD004B#FE88176B";
    var x3_parade_value = "S#FFFF00FE#00FF00FE#18FFFFFEKFFFE#FF00FFFE#9C27B0FE#FF0000FE#FFAB40FEK3CFE";
    var x3_elegant_value = "SK8038KBF38KFF38KBF38K4438K0038K4438";
    var x3_horizon_value = "S#0000FF7FK897F#04FFFF7F";
    var x3_psyche_value = "S#FF005004#00000000#0000FF04#00000000#15EDFF04#00000000#C000FF04#00000000#FFFF0004#00000000#FF00FF04#00000000";

    if (color === x3_rainbow_value || color === "rainbow")
        return "/plugins/vigipool/desktop/img/x3_rainbow.png";
    if (color === x3_fun_value || color === "fun")
        return "/plugins/vigipool/desktop/img/x3_fun.png";
    if (color === x3_ocean_value || color === "ocean")
        return "/plugins/vigipool/desktop/img/x3_ocean.png";
    if (color === x3_flamme_value || color === "flamme")
        return "/plugins/vigipool/desktop/img/x3_flamme.png";
    if (color === x3_parade_value || color === "parade")
        return "/plugins/vigipool/desktop/img/x3_parade.png";
    if (color === x3_elegant_value || color === "elegant")
        return "/plugins/vigipool/desktop/img/x3_elegant.png";
    if (color === x3_horizon_value || color === "horizon")
        return "/plugins/vigipool/desktop/img/x3_horizon.png";
    if (color === x3_psyche_value || color === "psyche")
        return "/plugins/vigipool/desktop/img/x3_psyche.png";

    return "/plugins/vigipool/desktop/img/" + color + ".png";
}

function convert_color_id_to_color_hex(color) {
    var id_warm = 0;
    var id_cold = 1;
    var id_blue = 2;
    var id_lagoon = 3;
    var id_cyan = 4;
    var id_green = 10;
    var id_purple = 5;
    var id_magenta = 6;
    var id_pink = 7;
    var id_red = 8;
    var id_orange = 9;

    var id_warm_2 = "0";
    var id_cold_2 = "1";
    var id_blue_2 = "2";
    var id_lagoon_2 = "3";
    var id_cyan_2 = "4";
    var id_green_2 = "10";
    var id_purple_2 = "5";
    var id_magenta_2 = "6";
    var id_pink_2 = "7";
    var id_red_2 = "8";
    var id_orange_2 = "9";

    var hex_warm = "#f4e3be";
    var hex_cold = "#ffffff";
    var hex_blue = "#7eadcf";
    var hex_lagoon = "#a0d4dc";
    var hex_cyan = "#c1f1f9";
    var hex_green = "#9dc46f";
    var hex_purple = "#c25dba";
    var hex_magenta = "#cc86c3";
    var hex_pink = "#ecb7e7";
    var hex_red = "#d3585a";
    var hex_orange = "#e3aa52";

    if (color === id_warm || color === id_warm_2)
        return hex_warm;
    if (color === id_cold || color === id_cold_2)
        return hex_cold;
    if (color === id_blue || color === id_blue_2)
        return hex_blue;
    if (color === id_lagoon || color === id_lagoon_2)
        return hex_lagoon;
    if (color === id_cyan || color === id_cyan_2)
        return hex_cyan;
    if (color === id_green || color === id_green_2)
        return hex_green;
    if (color === id_purple || color === id_purple_2)
        return hex_purple;
    if (color === id_magenta || color === id_magenta_2)
        return hex_magenta;
    if (color === id_pink || color === id_pink_2)
        return hex_pink;
    if (color === id_red || color === id_red_2)
        return hex_red;
    if (color === id_orange || color === id_orange_2)
        return hex_orange;

    if (color === "warm")
        return hex_warm;
    if (color === "cold")
        return hex_cold;
    if (color === "blue")
        return hex_blue;
    if (color === "lagoon")
        return hex_lagoon;
    if (color === "cyan")
        return hex_cyan;
    if (color === "green")
        return hex_green;
    if (color === "purple")
        return hex_purple;
    if (color === "magenta")
        return hex_magenta;
    if (color === "pink")
        return hex_pink;
    if (color === "red")
        return hex_red;
    if (color === "orange")
        return hex_orange;

    return color;
}

function is_not_sequence(color) {
    var id_warm = 0;
    var id_cold = 1;
    var id_blue = 2;
    var id_lagoon = 3;
    var id_cyan = 4;
    var id_green = 10;
    var id_purple = 5;
    var id_magenta = 6;
    var id_pink = 7;
    var id_red = 8;
    var id_orange = 9;

    var id_warm_2 = "0";
    var id_cold_2 = "1";
    var id_blue_2 = "2";
    var id_lagoon_2 = "3";
    var id_cyan_2 = "4";
    var id_green_2 = "10";
    var id_purple_2 = "5";
    var id_magenta_2 = "6";
    var id_pink_2 = "7";
    var id_red_2 = "8";
    var id_orange_2 = "9";

    if (id_warm === color || id_warm_2 === color)
        return true;
    if (id_cold === color || id_cold_2 === color)
        return true;
    if (id_blue === color || id_blue_2 === color)
        return true;
    if (id_lagoon === color || id_lagoon_2 === color)
        return true;
    if (id_cyan === color || id_cyan_2 === color)
        return true;
    if (id_green === color || id_green_2 === color)
        return true;
    if (id_purple === color || id_purple_2 === color)
        return true;
    if (id_magenta === color || id_magenta_2 === color)
        return true;
    if (id_pink === color || id_pink_2 === color)
        return true;
    if (id_red === color || id_red_2 === color)
        return true;
    if (id_orange === color || id_orange_2 === color)
        return true;

    return false;
}

function is_sequence(color) {

    if (color === "S#FF000094#FFFF0094#00FF0094#00FFFF94#0000FF94#FF00FF94")
        return true;
    if (color === "S#FF000027#FFFF0027#0000FF27#00FF0027#00FFFF27#FF00FF27#FFFFFF27")
        return true;
    if (color === "S#0000FF32KFF32#008AFF32KFF32#00D8FF32KFF32#00DCD432KFF32#18FFFF32KFF32#01579B32KFF32#039BE532KFF32#00FFFF32KFF32")
        return true;
    if (color === "S#FD31034B#FE88174B#FD4E0A2B#FE6B104B#FFDD004B#FE88172D#FFDD004B#FE88176B")
        return true;
    if (color === "S#FFFF00FE#00FF00FE#18FFFFFEKFFFE#FF00FFFE#9C27B0FE#FF0000FE#FFAB40FEK3CFE")
        return true;
    if (color === "SK8038KBF38KFF38KBF38K4438K0038K4438")
        return true;
    if (color === "S#0000FF7FK897F#04FFFF7F")
        return true;
    if (color === "S#FF005004#00000000#0000FF04#00000000#15EDFF04#00000000#C000FF04#00000000#FFFF0004#00000000#FF00FF04#00000000")
        return true;
    if (color === "16")
        return true;
    if (color === "17")
        return true;
    if (color === "18")
        return true;
    if (color === "19")
        return true;
    if (color === "20")
        return true;
    if (color === "21")
        return true;
    if (color === "22")
        return true;
    if (color === 16)
        return true;
    if (color === 17)
        return true;
    if (color === 18)
        return true;
    if (color === 19)
        return true;
    if (color === 20)
        return true;
    if (color === 21)
        return true;
    if (color === 22)
        return true;

    // console.log("color = " + color + "(is not a sequence)");

    return false;
}


function color_to_text(color) {

    // Couleurs Tild

    if (color === 0)
        return get_text("warm");
    if (color === 1)
        return get_text("cold");
    if (color === 2)
        return get_text("blue");
    if (color === 3)
        return get_text("lagoon");
    if (color === 4)
        return get_text("cyan");
    if (color === 10)
        return get_text("green");
    if (color === 5)
        return get_text("purple");
    if (color === 6)
        return get_text("magenta");
    if (color === 7)
        return get_text("pink");
    if (color === 8)
        return get_text("red");
    if (color === 9)
        return get_text("orange");
    if (color === 16)
        return get_text("gradiant");
    if (color === 17)
        return get_text("rainbow");
    if (color === 18)
        return get_text("parade");
    if (color === 19)
        return get_text("techno");
    if (color === 20)
        return get_text("horizon");
    if (color === 21)
        return get_text("random");
    if (color === 22)
        return get_text("magical");
    if (color === 11)
        return get_text("favorite");

    // Sequences X3

    if (color === "S#FF000094#FFFF0094#00FF0094#00FFFF94#0000FF94#FF00FF94")
        return get_text("rainbow");

    if (color === "S#FF000027#FFFF0027#0000FF27#00FF0027#00FFFF27#FF00FF27#FFFFFF27")
        return get_text("fun");

    if (color === "S#0000FF32KFF32#008AFF32KFF32#00D8FF32KFF32#00DCD432KFF32#18FFFF32KFF32#01579B32KFF32#039BE532KFF32#00FFFF32KFF32")
        return get_text("ocean");

    if (color === "S#FD31034B#FE88174B#FD4E0A2B#FE6B104B#FFDD004B#FE88172D#FFDD004B#FE88176B")
        return get_text("flamme");

    if (color === "S#FFFF00FE#00FF00FE#18FFFFFEKFFFE#FF00FFFE#9C27B0FE#FF0000FE#FFAB40FEK3CFE")
        return get_text("parade");

    if (color === "SK8038KBF38KFF38KBF38K4438K0038K4438")
        return get_text("elegant");

    if (color === "S#0000FF7FK897F#04FFFF7F")
        return get_text("horizon");

    if (color === "S#FF005004#00000000#0000FF04#00000000#15EDFF04#00000000#C000FF04#00000000#FFFF0004#00000000#FF00FF04#00000000")
        return get_text("psyche");

    return color;
}

function get_sched_duration(sched, program) {
    if (program === 1) {
        var program_1_sched_1_begin = get_sched_value(sched, "program_1_sched_1_begin");
        var program_1_sched_1_end = get_sched_value(sched, "program_1_sched_1_end");
        program_1_sched_1_end = fix_end_dec(program_1_sched_1_end);
        // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
        // console.log("program_1_sched_1_end = " + program_1_sched_1_end);

        var program_1_sched_2_begin = get_sched_value(sched, "program_1_sched_2_begin");
        var program_1_sched_2_end = get_sched_value(sched, "program_1_sched_2_end");
        program_1_sched_2_end = fix_end_dec(program_1_sched_2_end);
        // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
        // console.log("program_1_sched_2_end = " + program_1_sched_2_end);

        var program_1_sched_3_begin = get_sched_value(sched, "program_1_sched_3_begin");
        var program_1_sched_3_end = get_sched_value(sched, "program_1_sched_3_end");
        program_1_sched_3_end = fix_end_dec(program_1_sched_3_end);
        // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
        // console.log("program_1_sched_3_end = " + program_1_sched_3_end);

        var program_1_sched_1_finish = program_1_sched_1_begin + program_1_sched_1_end;
        var program_1_sched_2_finish = program_1_sched_2_begin + program_1_sched_2_end;
        var program_1_sched_3_finish = program_1_sched_3_begin + program_1_sched_3_end;
        // console.log("program_1_sched_1_finish" + program_1_sched_1_finish);
        // console.log("program_1_sched_2_finish" + program_1_sched_2_finish);
        // console.log("program_1_sched_3_finish" + program_1_sched_3_finish);
    }
    if (program === 2) {
        var program_2_sched_1_begin = get_sched_value(sched, "program_2_sched_1_begin");
        var program_2_sched_1_end = get_sched_value(sched, "program_2_sched_1_end");
        program_2_sched_1_end = fix_end_dec(program_2_sched_1_end);
        // console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
        // console.log("program_2_sched_1_end = " + program_2_sched_1_end);

        var program_2_sched_2_begin = get_sched_value(sched, "program_2_sched_2_begin");
        var program_2_sched_2_end = get_sched_value(sched, "program_2_sched_2_end");
        program_2_sched_2_end = fix_end_dec(program_2_sched_2_end);
        // console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
        // console.log("program_2_sched_2_end = " + program_2_sched_2_end);

        var program_2_sched_3_begin = get_sched_value(sched, "program_2_sched_3_begin");
        var program_2_sched_3_end = get_sched_value(sched, "program_2_sched_3_end");
        program_2_sched_3_end = fix_end_dec(program_2_sched_3_end);
        // console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
        // console.log("program_2_sched_3_end = " + program_2_sched_3_end);

        var program_2_sched_1_finish = program_2_sched_1_begin + program_2_sched_1_end;
        var program_2_sched_2_finish = program_2_sched_2_begin + program_2_sched_2_end;
        var program_2_sched_3_finish = program_2_sched_3_begin + program_2_sched_3_end;
        // console.log("program_2_sched_1_finish" + program_2_sched_1_finish);
        // console.log("program_2_sched_2_finish" + program_2_sched_2_finish);
        // console.log("program_2_sched_3_finish" + program_2_sched_3_finish);

    }

    var day = [];

    if (program === 1) {
        for (var i = 0, max = 96; i < max; i++) {
            if (program_1_sched_1_begin <= i && i <= program_1_sched_1_finish) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_1_sched_2_begin <= i && i <= program_1_sched_2_finish) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_1_sched_3_begin <= i && i <= program_1_sched_3_finish) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
        }
    }
    if (program === 2) {
        for (var i = 0, max = 96; i < max; i++) {
            if (program_2_sched_1_begin <= i && i <= program_2_sched_1_finish) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_2_sched_2_begin <= i && i <= program_2_sched_2_finish) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_2_sched_3_begin <= i && i <= program_2_sched_3_finish) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
        }
    }

    // console.log("day = " + day);

    var result = -1;

    for (var i = 0, max = 96; i < max; i++)
        if (day[i])
            result = result + 1;

    // console.log("result = " + result);

    result = converter("dec", "time_4", result);

    // console.log("result = " + result);

    return result;

}

function get_sched_duration_to(sched, program) {
    if (program === 1) {
        var program_1_sched_1_begin = get_sched_value(sched, "program_1_sched_1_begin");
        var program_1_sched_1_end = get_sched_value(sched, "program_1_sched_1_end");
        program_1_sched_1_end = fix_end_dec(program_1_sched_1_end);
        // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
        // console.log("program_1_sched_1_end = " + program_1_sched_1_end);

        var program_1_sched_2_begin = get_sched_value(sched, "program_1_sched_2_begin");
        var program_1_sched_2_end = get_sched_value(sched, "program_1_sched_2_end");
        program_1_sched_2_end = fix_end_dec(program_1_sched_2_end);
        // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
        // console.log("program_1_sched_2_end = " + program_1_sched_2_end);

        var program_1_sched_3_begin = get_sched_value(sched, "program_1_sched_3_begin");
        var program_1_sched_3_end = get_sched_value(sched, "program_1_sched_3_end");
        program_1_sched_3_end = fix_end_dec(program_1_sched_3_end);
        // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
        // console.log("program_1_sched_3_end = " + program_1_sched_3_end);

        var program_1_sched_1_finish = program_1_sched_1_begin + program_1_sched_1_end;
        var program_1_sched_2_finish = program_1_sched_2_begin + program_1_sched_2_end;
        var program_1_sched_3_finish = program_1_sched_3_begin + program_1_sched_3_end;
        // console.log("program_1_sched_1_finish" + program_1_sched_1_finish);
        // console.log("program_1_sched_2_finish" + program_1_sched_2_finish);
        // console.log("program_1_sched_3_finish" + program_1_sched_3_finish);
    }
    if (program === 2) {
        var program_2_sched_1_begin = get_sched_value(sched, "program_2_sched_1_begin");
        var program_2_sched_1_end = get_sched_value(sched, "program_2_sched_1_end");
        program_2_sched_1_end = fix_end_dec(program_2_sched_1_end);
        // console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
        // console.log("program_2_sched_1_end = " + program_2_sched_1_end);

        var program_2_sched_2_begin = get_sched_value(sched, "program_2_sched_2_begin");
        var program_2_sched_2_end = get_sched_value(sched, "program_2_sched_2_end");
        program_2_sched_2_end = fix_end_dec(program_2_sched_2_end);
        // console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
        // console.log("program_2_sched_2_end = " + program_2_sched_2_end);

        var program_2_sched_3_begin = get_sched_value(sched, "program_2_sched_3_begin");
        var program_2_sched_3_end = get_sched_value(sched, "program_2_sched_3_end");
        program_2_sched_3_end = fix_end_dec(program_2_sched_3_end);
        // console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
        // console.log("program_2_sched_3_end = " + program_2_sched_3_end);
    }

    var day = [];

    if (program === 1) {
        for (var i = 0, max = 96; i < max; i++) {
            if (program_1_sched_1_begin <= i && i <= program_1_sched_1_end) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_1_sched_2_begin <= i && i <= program_1_sched_2_end) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_1_sched_3_begin <= i && i <= program_1_sched_3_end) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
        }
    }
    if (program === 2) {
        for (var i = 0, max = 96; i < max; i++) {
            if (program_2_sched_1_begin <= i && i <= program_2_sched_1_end) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_2_sched_2_begin <= i && i <= program_2_sched_2_end) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
            if (program_2_sched_3_begin <= i && i <= program_2_sched_3_end) {
                day[i] = true;
                // console.log("day[" + i + "] = true;");
            }
        }
    }

    // console.log("day = " + day);

    var result = -1;

    for (var i = 0, max = 96; i < max; i++)
        if (day[i])
            result = result + 1;

    // console.log("result = " + result);

    result = converter("dec", "time_4", result);

    // console.log("result = " + result);

    return result;

}

function convert_light_timer_to_slider(light_timer) {

    // console.log("light_timer = " + light_timer);
    light_timer = light_timer * 1000;
    // console.log("light_timer = " + light_timer);
    light_timer = light_timer - Date.now();
    // console.log("light_timer - Date.now = " + light_timer);

    var quarter = 3600000 / 4;
    var quarters = 0;

    while (light_timer > 0) {
        light_timer = light_timer - quarter;
        // console.log("light_timer = " + light_timer);
        quarters = quarters + 1;
        // console.log("quarters = " + quarters);
    }

    return quarters;

}

function create_ui_tild_light(file_name, light_code) {

    if (light_code !== "error" && light_code !== undefined) {

        // console.log(`file_name = ${file_name}`);
        // console.log(`light_code = ${light_code}`);

        $(`.${file_name}_warm_button > img`).hide();
        $(`.${file_name}_cold_button > img`).hide();
        $(`.${file_name}_blue_button > img`).hide();
        $(`.${file_name}_lagoon_button > img`).hide();
        $(`.${file_name}_cyan_button > img`).hide();
        $(`.${file_name}_green_button > img`).hide();
        $(`.${file_name}_purple_button > img`).hide();
        $(`.${file_name}_magenta_button > img`).hide();
        $(`.${file_name}_pink_button > img`).hide();
        $(`.${file_name}_red_button > img`).hide();
        $(`.${file_name}_orange_button > img`).hide();
        $(`.${file_name}_favorite_button > img`).hide();
        $(`.${file_name}_gradiant_button > img`).css(`opacity`, `0%`);
        $(`.${file_name}_rainbow_button > img`).css(`opacity`, `0%`);
        $(`.${file_name}_parade_button > img`).css(`opacity`, `0%`);
        $(`.${file_name}_techno_button > img`).css(`opacity`, `0%`);
        $(`.${file_name}_horizon_button > img`).css(`opacity`, `0%`);
        $(`.${file_name}_random_button > img`).css(`opacity`, `0%`);
        $(`.${file_name}_magical_button > img`).css(`opacity`, `0%`);

        $(`.${file_name}_warm_label`).css(`opacity`, `100%`);
        $(`.${file_name}_cold_label`).css(`opacity`, `100%`);
        $(`.${file_name}_blue_label`).css(`opacity`, `100%`);
        $(`.${file_name}_lagoon_label`).css(`opacity`, `100%`);
        $(`.${file_name}_cyan_label`).css(`opacity`, `100%`);
        $(`.${file_name}_green_label`).css(`opacity`, `100%`);
        $(`.${file_name}_purple_label`).css(`opacity`, `100%`);
        $(`.${file_name}_magenta_label`).css(`opacity`, `100%`);
        $(`.${file_name}_pink_label`).css(`opacity`, `100%`);
        $(`.${file_name}_red_label`).css(`opacity`, `100%`);
        $(`.${file_name}_orange_label`).css(`opacity`, `100%`);
        $(`.${file_name}_favorite_label`).css(`opacity`, `100%`);
        $(`.${file_name}_gradiant_label`).css(`opacity`, `100%`);
        $(`.${file_name}_rainbow_label`).css(`opacity`, `100%`);
        $(`.${file_name}_parade_label`).css(`opacity`, `100%`);
        $(`.${file_name}_techno_label`).css(`opacity`, `100%`);
        $(`.${file_name}_horizon_label`).css(`opacity`, `100%`);
        $(`.${file_name}_random_label`).css(`opacity`, `100%`);
        $(`.${file_name}_magical_label`).css(`opacity`, `100%`);


        $(document).ready(function () {
            switch (light_code) {
                case 0:
                    $(`.${file_name}_warm_button > img`).show();
                    $(`.${file_name}_warm_label`).css(`opacity`, `50%`);
                    break;
                case 1:
                    $(`.${file_name}_cold_button > img`).show();
                    $(`.${file_name}_cold_label`).css(`opacity`, `50%`);
                    break;
                case 2:
                    $(`.${file_name}_blue_button > img`).show();
                    $(`.${file_name}_blue_label`).css(`opacity`, `50%`);
                    break;
                case 3:
                    $(`.${file_name}_lagoon_button > img`).show();
                    $(`.${file_name}_lagoon_label`).css(`opacity`, `50%`);
                    break;
                case 4:
                    $(`.${file_name}_cyan_button > img`).show();
                    $(`.${file_name}_cyan_label`).css(`opacity`, `50%`);
                    break;
                case 10:
                    $(`.${file_name}_green_button > img`).show();
                    $(`.${file_name}_green_label`).css(`opacity`, `50%`);
                    break;
                case 5:
                    $(`.${file_name}_purple_button > img`).show();
                    $(`.${file_name}_purple_label`).css(`opacity`, `50%`);
                    break;
                case 6:
                    $(`.${file_name}_magenta_button > img`).show();
                    $(`.${file_name}_magenta_label`).css(`opacity`, `50%`);
                    break;
                case 7:
                    $(`.${file_name}_pink_button > img`).show();
                    $(`.${file_name}_pink_label`).css(`opacity`, `50%`);
                    break;
                case 8:
                    $(`.${file_name}_red_button > img`).show();
                    $(`.${file_name}_red_label`).css(`opacity`, `50%`);
                    break;
                case 9:
                    $(`.${file_name}_orange_button > img`).show();
                    $(`.${file_name}_orange_label`).css(`opacity`, `50%`);
                    break;
                case 11:
                    $(`.${file_name}_favorite_button > img`).show();
                    $(`.${file_name}_favorite_label`).css(`opacity`, `50%`);
                    break;
                case 16:
                    $(`.${file_name}_gradiant_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_gradiant_label`).css(`opacity`, `50%`);
                    break;
                case 17:
                    $(`.${file_name}_rainbow_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_rainbow_label`).css(`opacity`, `50%`);
                    break;
                case 18:
                    $(`.${file_name}_parade_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_parade_label`).css(`opacity`, `50%`);
                    break;
                case 19:
                    $(`.${file_name}_techno_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_techno_label`).css(`opacity`, `50%`);
                    break;
                case 20:
                    $(`.${file_name}_horizon_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_horizon_label`).css(`opacity`, `50%`);
                    break;
                case 21:
                    $(`.${file_name}_random_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_random_label`).css(`opacity`, `50%`);
                    break;
                case 22:
                    $(`.${file_name}_magical_button > img`).css(`opacity`, `100%`);
                    $(`.${file_name}_magical_label`).css(`opacity`, `50%`);
                    break;
                default:
                    console.log(`ERROR light_code not found : ${light_code}`);
            }
        });
    }
}

function create_ui_bright(file_name, program_2_bright) {
    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";

    $(`.${file_name}_bright > th:nth-child(2) > p`).css("background-color", background_color_off);
    $(`.${file_name}_bright > th:nth-child(2) > p`).css("color", color_off);
    $(`.${file_name}_bright > th:nth-child(3) > p`).css("background-color", background_color_off);
    $(`.${file_name}_bright > th:nth-child(3) > p`).css("color", color_off);
    $(`.${file_name}_bright > th:nth-child(4) > p`).css("background-color", background_color_off);
    $(`.${file_name}_bright > th:nth-child(4) > p`).css("color", color_off);
    $(`.${file_name}_bright > th:nth-child(5) > p`).css("background-color", background_color_off);
    $(`.${file_name}_bright > th:nth-child(5) > p`).css("color", color_off);

    if (program_2_bright === 0) {
        $(`.${file_name}_bright > th:nth-child(2) > p`).css("background-color", background_color_on);
        $(`.${file_name}_bright > th:nth-child(2) > p`).css("color", color_on);
    } else if (program_2_bright === 1) {
        $(`.${file_name}_bright > th:nth-child(3) > p`).css("background-color", background_color_on);
        $(`.${file_name}_bright > th:nth-child(3) > p`).css("color", color_on);
    } else if (program_2_bright === 2) {
        $(`.${file_name}_bright > th:nth-child(4) > p`).css("background-color", background_color_on);
        $(`.${file_name}_bright > th:nth-child(4) > p`).css("color", color_on);
    } else if (program_2_bright === 3) {
        $(`.${file_name}_bright > th:nth-child(5) > p`).css("background-color", background_color_on);
        $(`.${file_name}_bright > th:nth-child(5) > p`).css("color", color_on);
    }
}

function create_ui_speed(file_name, program_2_speed, p2_color) {
    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";


    $(document).ready(function () {
        if (16 <= p2_color) {
            $(`.${file_name}_speed`).show();
            $(`.${file_name}_speed_title`).show();
        } else {
            $(`.${file_name}_speed`).hide();
            $(`.${file_name}_speed_title`).hide();
        }
    });


    $(`.${file_name}_speed > th:nth-child(2) > p`).css("background-color", background_color_off);
    $(`.${file_name}_speed > th:nth-child(2) > p`).css("color", color_off);
    $(`.${file_name}_speed > th:nth-child(3) > p`).css("background-color", background_color_off);
    $(`.${file_name}_speed > th:nth-child(3) > p`).css("color", color_off);
    $(`.${file_name}_speed > th:nth-child(4) > p`).css("background-color", background_color_off);
    $(`.${file_name}_speed > th:nth-child(4) > p`).css("color", color_off);

    if (program_2_speed === 1) {
        $(`.${file_name}_speed > th:nth-child(2) > p`).css("background-color", background_color_on);
        $(`.${file_name}_speed > th:nth-child(2) > p`).css("color", color_on);
    } else if (program_2_speed === 2) {
        $(`.${file_name}_speed > th:nth-child(3) > p`).css("background-color", background_color_on);
        $(`.${file_name}_speed > th:nth-child(3) > p`).css("color", color_on);
    } else if (program_2_speed === 3) {
        $(`.${file_name}_speed > th:nth-child(4) > p`).css("background-color", background_color_on);
        $(`.${file_name}_speed > th:nth-child(4) > p`).css("color", color_on);
    }
}

function create_ui_tild_light_click(file_name) {

    var id_warm = 0;
    var id_cold = 1;
    var id_blue = 2;
    var id_lagoon = 3;
    var id_cyan = 4;
    var id_green = 10;
    var id_purple = 5;
    var id_magenta = 6;
    var id_pink = 7;
    var id_red = 8;
    var id_orange = 9;
    var id_gradiant = 16;
    var id_rainbow = 17;
    var id_parade = 18;
    var id_techno = 19;
    var id_horizon = 20;
    var id_random = 21;
    var id_magical = 22;
    var id_favorite = 11;

    $(`.${file_name}_warm_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_warm);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_cold_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_cold);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_blue_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_blue);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_lagoon_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_lagoon);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_cyan_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_cyan);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_green_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_green);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_purple_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_purple);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_magenta_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_magenta);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_pink_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_pink);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_red_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_red);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_orange_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_orange);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_favorite_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_favorite);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_gradiant_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_gradiant);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_rainbow_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_rainbow);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_parade_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_parade);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_techno_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_techno);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_horizon_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_horizon);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_random_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_random);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
    $(`.${file_name}_magical_button`).click(function () {
        var new_light_sched = set_light_sched_value(`prog_2_bright`, id_magical);
        update_vigipool_modal_light_prog_2(new_light_sched);
    });
}

function get_sched_value(variable_sched, selection) {

    if (variable_sched === undefined) {
        return;
    }

    var programs_number = "";
    var program_1_off_on_and_days = "";
    var program_1_bright = "";
    var program_1_speed = "";
    var program_1_sched_number = "";
    var program_1_sched_1_begin = "";
    var program_1_sched_1_end = "";
    var program_1_sched_2_begin = "";
    var program_1_sched_2_end = "";
    var program_1_sched_3_begin = "";
    var program_1_sched_3_end = "";
    var program_2_off_on_and_days = "";
    var program_2_bright = "";
    var program_2_speed = "";
    var program_2_sched_number = "";
    var program_2_sched_1_begin = "";
    var program_2_sched_1_end = "";
    var program_2_sched_2_begin = "";
    var program_2_sched_2_end = "";
    var program_2_sched_3_begin = "";
    var program_2_sched_3_end = "";
    var program_3_off_on_and_days = "";
    var program_3_bright = "";
    var program_3_speed = "";
    var program_3_sched_number = "";
    var program_3_sched_1_begin = "";
    var program_3_sched_1_end = "";
    var program_3_sched_2_begin = "";
    var program_3_sched_2_end = "";
    var program_3_sched_3_begin = "";
    var program_3_sched_3_end = "";

    var variable_selector = 0;
    var position_selector = 0;

    // console.log("variable_selector = " + variable_selector);
    // console.log("position_selector = " + position_selector);

    for (var i = 0, max = 54; i < max; i++) {
        // console.log("variable_selector = " + variable_selector);
        // console.log("position_selector = " + position_selector);

        switch (variable_selector) {
            case 0:
                programs_number = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 1:
                program_1_off_on_and_days = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 2:
                program_1_bright = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 3:
                program_1_speed = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 4:
                program_1_sched_number = parseInt(variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 5:
                program_1_sched_1_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 6:
                program_1_sched_1_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                if (program_1_sched_number === 1) {
                    variable_selector = variable_selector + 1 + 2 + 2;
                    position_selector = position_selector + 2;
                }
                if (program_1_sched_number === 2) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                if (program_1_sched_number === 3) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                break;
            case 7:
                program_1_sched_2_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 8:
                program_1_sched_2_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                if (program_1_sched_number === 2) {
                    variable_selector = variable_selector + 1 + 2;
                    position_selector = position_selector + 2;
                }
                if (program_1_sched_number === 3) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                break;
            case 9:
                program_1_sched_3_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 10:
                program_1_sched_3_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 11:
                program_2_off_on_and_days = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 12:
                program_2_bright = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 13:
                program_2_speed = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 14:
                program_2_sched_number = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 15:
                program_2_sched_1_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 16:
                program_2_sched_1_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                if (program_2_sched_number === 1) {
                    variable_selector = variable_selector + 1 + 2 + 2;
                    position_selector = position_selector + 2;
                }
                if (program_2_sched_number === 2) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                if (program_2_sched_number === 3) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                break;
            case 17:
                program_2_sched_2_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 18:
                program_2_sched_2_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                if (program_2_sched_number === 2) {
                    variable_selector = variable_selector + 1 + 1;
                    position_selector = position_selector + 2;
                }
                if (program_2_sched_number === 3) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                break;
            case 19:
                program_2_sched_3_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 20:
                program_2_sched_3_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 21:
                program_3_off_on_and_days = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 22:
                program_3_bright = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 23:
                program_3_speed = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 24:
                program_3_sched_number = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 25:
                program_3_sched_1_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 26:
                program_3_sched_1_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                if (program_3_sched_number === 1) {
                    variable_selector = variable_selector + 1 + 2 + 2;
                    position_selector = position_selector + 2;
                }
                if (program_3_sched_number === 2) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                if (program_3_sched_number === 3) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                break;
            case 27:
                program_3_sched_2_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 28:
                program_3_sched_2_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                if (program_3_sched_number === 2) {
                    variable_selector = variable_selector + 1 + 2;
                    position_selector = position_selector + 2;
                }
                if (program_3_sched_number === 3) {
                    variable_selector = variable_selector + 1;
                    position_selector = position_selector + 2;
                }
                break;
            case 29:
                program_3_sched_3_begin = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]);
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            case 30:
                program_3_sched_3_end = converter("hex", "dec", variable_sched[position_selector] + variable_sched[position_selector + 1]) - 128;
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
                break;
            default:
                variable_selector = variable_selector + 1;
                position_selector = position_selector + 2;
        }
    }

    // console.log("programs_number = " + programs_number);
    // console.log("program_1_off_on_and_days = " + program_1_off_on_and_days);
    // console.log("program_1_bright = " + program_1_bright);
    // console.log("program_1_speed = " + program_1_speed);
    // console.log("program_1_sched_number = " + program_1_sched_number);
    // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
    // console.log("program_1_sched_1_end = " + program_1_sched_1_end);
    // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
    // console.log("program_1_sched_2_end = " + program_1_sched_2_end);
    // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
    // console.log("program_1_sched_3_end = " + program_1_sched_3_end);
    // console.log("program_2_off_on_and_days = " + program_2_off_on_and_days);
    // console.log("program_2_bright = " + program_2_bright);
    // console.log("program_2_speed = " + program_2_speed);
    // console.log("program_2_sched_number = " + program_2_sched_number);
    // console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
    // console.log("program_2_sched_1_end = " + program_2_sched_1_end);
    // console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
    // console.log("program_2_sched_2_end = " + program_2_sched_2_end);
    // console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
    // console.log("program_2_sched_3_end = " + program_2_sched_3_end);
    // console.log("program_3_off_on_and_days = " + program_3_off_on_and_days);
    // console.log("program_3_bright = " + program_3_bright);
    // console.log("program_3_speed = " + program_3_speed);
    // console.log("program_3_sched_number = " + program_3_sched_number);
    // console.log("program_3_sched_1_begin = " + program_3_sched_1_begin);
    // console.log("program_3_sched_1_end = " + program_3_sched_1_end);
    // console.log("program_3_sched_2_begin = " + program_3_sched_2_begin);
    // console.log("program_3_sched_2_end = " + program_3_sched_2_end);
    // console.log("program_3_sched_3_begin = " + program_3_sched_3_begin);
    // console.log("program_3_sched_3_end = " + program_3_sched_3_end);

    if (selection === "programs_number")
        return parseInt(programs_number);
    if (selection === "program_1_off_on_and_days")
        return parseInt(program_1_off_on_and_days);
    if (selection === "program_1_bright")
        return parseInt(program_1_bright);
    if (selection === "program_1_speed")
        return parseInt(program_1_speed);
    if (selection === "program_1_sched_number")
        return parseInt(program_1_sched_number);
    if (selection === "program_1_sched_1_begin")
        return parseInt(program_1_sched_1_begin);
    if (selection === "program_1_sched_1_end")
        return parseInt(program_1_sched_1_end);
    if (selection === "program_1_sched_2_begin")
        return parseInt(program_1_sched_2_begin);
    if (selection === "program_1_sched_2_end")
        return parseInt(program_1_sched_2_end);
    if (selection === "program_1_sched_3_begin")
        return parseInt(program_1_sched_3_begin);
    if (selection === "program_1_sched_3_end")
        return parseInt(program_1_sched_3_end);
    if (selection === "program_2_off_on_and_days")
        return parseInt(program_2_off_on_and_days);
    if (selection === "program_2_bright")
        return parseInt(program_2_bright);
    if (selection === "program_2_speed")
        return parseInt(program_2_speed);
    if (selection === "program_2_sched_number")
        return parseInt(program_2_sched_number);
    if (selection === "program_2_sched_1_begin")
        return parseInt(program_2_sched_1_begin);
    if (selection === "program_2_sched_1_end")
        return parseInt(program_2_sched_1_end);
    if (selection === "program_2_sched_2_begin")
        return parseInt(program_2_sched_2_begin);
    if (selection === "program_2_sched_2_end")
        return parseInt(program_2_sched_2_end);
    if (selection === "program_2_sched_3_begin")
        return parseInt(program_2_sched_3_begin);
    if (selection === "program_2_sched_3_end")
        return parseInt(program_2_sched_3_end);
    if (selection === "program_3_off_on_and_days")
        return parseInt(program_3_off_on_and_days);
    if (selection === "program_3_bright")
        return parseInt(program_3_bright);
    if (selection === "program_3_speed")
        return parseInt(program_3_speed);
    if (selection === "program_3_sched_number")
        return parseInt(program_3_sched_number);
    if (selection === "program_3_sched_1_begin")
        return parseInt(program_3_sched_1_begin);
    if (selection === "program_3_sched_1_end")
        return parseInt(program_3_sched_1_end);
    if (selection === "program_3_sched_2_begin")
        return parseInt(program_3_sched_2_begin);
    if (selection === "program_3_sched_2_end")
        return parseInt(program_3_sched_2_end);
    if (selection === "program_3_sched_3_begin")
        return parseInt(program_3_sched_3_begin);
    if (selection === "program_3_sched_3_end")
        return parseInt(program_3_sched_3_end);

    if (selection === "program_1_color")
        return parseInt(program_1_bright);
    if (selection === "program_2_color")
        return parseInt(program_2_bright);

    if (program_1_off_on_and_days === undefined) {
        return;
    }

    program_1_off_on_and_days = converter("dec", "bin", program_1_off_on_and_days);
    program_1_off_on = parseInt(program_1_off_on_and_days[0]);
    program_1_samedi = parseInt(program_1_off_on_and_days[1]);
    program_1_vendredi = parseInt(program_1_off_on_and_days[2]);
    program_1_jeudi = parseInt(program_1_off_on_and_days[3]);
    program_1_mercredi = parseInt(program_1_off_on_and_days[4]);
    program_1_mardi = parseInt(program_1_off_on_and_days[5]);
    program_1_lundi = parseInt(program_1_off_on_and_days[6]);
    program_1_dimanche = parseInt(program_1_off_on_and_days[7]);

    // console.log("program_1_off_on = " + program_1_off_on);
    // console.log("program_1_samedi = " + program_1_samedi);
    // console.log("program_1_vendredi = " + program_1_vendredi);
    // console.log("program_1_jeudi = " + program_1_jeudi);
    // console.log("program_1_mercredi = " + program_1_mercredi);
    // console.log("program_1_mardi = " + program_1_mardi);
    // console.log("program_1_lundi = " + program_1_lundi);
    // console.log("program_1_dimanche = " + program_1_dimanche);

    if (selection === "program_1_off_on")
        return parseInt(program_1_off_on);
    if (selection === "program_1_samedi")
        return parseInt(program_1_samedi);
    if (selection === "program_1_vendredi")
        return parseInt(program_1_vendredi);
    if (selection === "program_1_jeudi")
        return parseInt(program_1_jeudi);
    if (selection === "program_1_mercredi")
        return parseInt(program_1_mercredi);
    if (selection === "program_1_mardi")
        return parseInt(program_1_mardi);
    if (selection === "program_1_lundi")
        return parseInt(program_1_lundi);
    if (selection === "program_1_dimanche")
        return parseInt(program_1_dimanche);

    program_2_off_on_and_days = converter("dec", "bin", program_2_off_on_and_days);
    program_2_off_on = parseInt(program_2_off_on_and_days[0]);
    program_2_samedi = parseInt(program_2_off_on_and_days[1]);
    program_2_vendredi = parseInt(program_2_off_on_and_days[2]);
    program_2_jeudi = parseInt(program_2_off_on_and_days[3]);
    program_2_mercredi = parseInt(program_2_off_on_and_days[4]);
    program_2_mardi = parseInt(program_2_off_on_and_days[5]);
    program_2_lundi = parseInt(program_2_off_on_and_days[6]);
    program_2_dimanche = parseInt(program_2_off_on_and_days[7]);

    // console.log("program_2_off_on = " + program_2_off_on);
    // console.log("program_2_samedi = " + program_2_samedi);
    // console.log("program_2_vendredi = " + program_2_vendredi);
    // console.log("program_2_jeudi = " + program_2_jeudi);
    // console.log("program_2_mercredi = " + program_2_mercredi);
    // console.log("program_2_mardi = " + program_2_mardi);
    // console.log("program_2_lundi = " + program_2_lundi);
    // console.log("program_2_dimanche = " + program_2_dimanche);

    if (selection === "program_2_off_on")
        return parseInt(program_2_off_on);
    if (selection === "program_2_samedi")
        return parseInt(program_2_samedi);
    if (selection === "program_2_vendredi")
        return parseInt(program_2_vendredi);
    if (selection === "program_2_jeudi")
        return parseInt(program_2_jeudi);
    if (selection === "program_2_mercredi")
        return parseInt(program_2_mercredi);
    if (selection === "program_2_mardi")
        return parseInt(program_2_mardi);
    if (selection === "program_2_lundi")
        return parseInt(program_2_lundi);
    if (selection === "program_2_dimanche")
        return parseInt(program_2_dimanche);

    return "error";
}

var set_light_sched_value_save = "";

function set_light_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_light_sched_value_save === "") {
        var light_sched = get_value_from_position(eq_modal, "light_sched");
    } else {
        var light_sched = set_light_sched_value_save;
    }
    console.log("light_sched = " + light_sched);


    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88

    var selected_programs_number = get_sched_value(light_sched, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(light_sched, "program_1_off_on_and_days");
    var selected_program_1_bright = get_sched_value(light_sched, "program_1_bright");
    var selected_program_1_speed = get_sched_value(light_sched, "program_1_speed");
    var selected_program_1_sched_number = get_sched_value(light_sched, "program_1_sched_number");
    var selected_program_1_sched_1_begin = get_sched_value(light_sched, "program_1_sched_1_begin");
    var selected_program_1_sched_1_end = get_sched_value(light_sched, "program_1_sched_1_end");
    var selected_program_1_sched_2_begin = get_sched_value(light_sched, "program_1_sched_2_begin");
    var selected_program_1_sched_2_end = get_sched_value(light_sched, "program_1_sched_2_end");
    var selected_program_1_sched_3_begin = get_sched_value(light_sched, "program_1_sched_3_begin");
    var selected_program_1_sched_3_end = get_sched_value(light_sched, "program_1_sched_3_end");
    var selected_program_2_off_on_and_days = get_sched_value(light_sched, "program_2_off_on_and_days");
    var selected_program_2_bright = get_sched_value(light_sched, "program_2_bright");
    var selected_program_2_speed = get_sched_value(light_sched, "program_2_speed");
    var selected_program_2_sched_number = get_sched_value(light_sched, "program_2_sched_number");
    var selected_program_2_sched_1_begin = get_sched_value(light_sched, "program_2_sched_1_begin");
    var selected_program_2_sched_1_end = get_sched_value(light_sched, "program_2_sched_1_end");
    var selected_program_2_sched_2_begin = get_sched_value(light_sched, "program_2_sched_2_begin");
    var selected_program_2_sched_2_end = get_sched_value(light_sched, "program_2_sched_2_end");
    var selected_program_2_sched_3_begin = get_sched_value(light_sched, "program_2_sched_3_begin");
    var selected_program_2_sched_3_end = get_sched_value(light_sched, "program_2_sched_3_end");
    var selected_program_3_off_on_and_days = get_sched_value(light_sched, "program_3_off_on_and_days");
    var selected_program_3_bright = get_sched_value(light_sched, "program_3_bright");
    var selected_program_3_speed = get_sched_value(light_sched, "program_3_speed");
    var selected_program_3_sched_number = get_sched_value(light_sched, "program_3_sched_number");
    var selected_program_3_sched_1_begin = get_sched_value(light_sched, "program_3_sched_1_begin");
    var selected_program_3_sched_1_end = get_sched_value(light_sched, "program_3_sched_1_end");
    var selected_program_3_sched_2_begin = get_sched_value(light_sched, "program_3_sched_2_begin");
    var selected_program_3_sched_2_end = get_sched_value(light_sched, "program_3_sched_2_end");
    var selected_program_3_sched_3_begin = get_sched_value(light_sched, "program_3_sched_3_begin");
    var selected_program_3_sched_3_end = get_sched_value(light_sched, "program_3_sched_3_end");


    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    selected_program_1_sched_1_end = fix_end_dec(selected_program_1_sched_1_end);
    selected_program_1_sched_2_end = fix_end_dec(selected_program_1_sched_2_end);
    selected_program_1_sched_3_end = fix_end_dec(selected_program_1_sched_3_end);
    selected_program_2_sched_1_end = fix_end_dec(selected_program_2_sched_1_end);
    selected_program_2_sched_2_end = fix_end_dec(selected_program_2_sched_2_end);
    selected_program_2_sched_3_end = fix_end_dec(selected_program_2_sched_3_end);
    selected_program_3_sched_1_end = fix_end_dec(selected_program_3_sched_1_end);
    selected_program_3_sched_2_end = fix_end_dec(selected_program_3_sched_2_end);
    selected_program_3_sched_3_end = fix_end_dec(selected_program_3_sched_3_end);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    var old_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    var old_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    var old_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    var old_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    var old_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    var old_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    var old_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    var old_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    var old_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    var old_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    var old_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    var old_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    var old_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    var old_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    var old_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    var old_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    var old_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    var old_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    var old_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    var old_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    var old_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    var old_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    var old_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    var old_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    var old_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    var old_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    var old_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    var old_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    var old_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";
    if (old_program_1_bright === undefined)
        old_program_1_bright = "";
    if (old_program_1_speed === undefined)
        old_program_1_speed = "";
    if (old_program_1_sched_number === undefined)
        old_program_1_sched_number = "";
    if (old_program_1_sched_1_begin === undefined)
        old_program_1_sched_1_begin = "";
    if (old_program_1_sched_1_end === undefined)
        old_program_1_sched_1_end = "";
    if (old_program_1_sched_2_begin === undefined)
        old_program_1_sched_2_begin = "";
    if (old_program_1_sched_2_end === undefined)
        old_program_1_sched_2_end = "";
    if (old_program_1_sched_3_begin === undefined)
        old_program_1_sched_3_begin = "";
    if (old_program_1_sched_3_end === undefined)
        old_program_1_sched_3_end = "";
    if (old_program_2_off_on_and_days === undefined)
        old_program_2_off_on_and_days = "";
    if (old_program_2_bright === undefined)
        old_program_2_bright = "";
    if (old_program_2_speed === undefined)
        old_program_2_speed = "";
    if (old_program_2_sched_number === undefined)
        old_program_2_sched_number = "";
    if (old_program_2_sched_1_begin === undefined)
        old_program_2_sched_1_begin = "";
    if (old_program_2_sched_1_end === undefined)
        old_program_2_sched_1_end = "";
    if (old_program_2_sched_2_begin === undefined)
        old_program_2_sched_2_begin = "";
    if (old_program_2_sched_2_end === undefined)
        old_program_2_sched_2_end = "";
    if (old_program_2_sched_3_begin === undefined)
        old_program_2_sched_3_begin = "";
    if (old_program_2_sched_3_end === undefined)
        old_program_2_sched_3_end = "";
    if (old_program_3_off_on_and_days === undefined)
        old_program_3_off_on_and_days = "";
    if (old_program_3_bright === undefined)
        old_program_3_bright = "";
    if (old_program_3_speed === undefined)
        old_program_3_speed = "";
    if (old_program_3_sched_number === undefined)
        old_program_3_sched_number = "";
    if (old_program_3_sched_1_begin === undefined)
        old_program_3_sched_1_begin = "";
    if (old_program_3_sched_1_end === undefined)
        old_program_3_sched_1_end = "";
    if (old_program_3_sched_2_begin === undefined)
        old_program_3_sched_2_begin = "";
    if (old_program_3_sched_2_end === undefined)
        old_program_3_sched_2_end = "";
    if (old_program_3_sched_3_begin === undefined)
        old_program_3_sched_3_begin = "";
    if (old_program_3_sched_3_end === undefined)
        old_program_3_sched_3_end = "";

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(old_program_1_off_on_and_days + "     " + old_program_1_bright + "     " + old_program_1_speed + "     " + old_program_1_sched_number + "     " + old_program_1_sched_1_begin + "     " + old_program_1_sched_1_end + "     " + old_program_1_sched_2_begin + "     " + old_program_1_sched_2_end + "     " + old_program_1_sched_3_begin + "     " + old_program_1_sched_3_end + "     ");
    console.log(old_program_2_off_on_and_days + "     " + old_program_2_bright + "     " + old_program_2_speed + "     " + old_program_2_sched_number + "     " + old_program_2_sched_1_begin + "     " + old_program_2_sched_1_end + "     " + old_program_2_sched_2_begin + "     " + old_program_2_sched_2_end + "     " + old_program_2_sched_3_begin + "     " + old_program_2_sched_3_end + "     ");
    console.log(old_program_3_off_on_and_days + "     " + old_program_3_bright + "     " + old_program_3_speed + "     " + old_program_3_sched_number + "     " + old_program_3_sched_1_begin + "     " + old_program_3_sched_1_end + "     " + old_program_3_sched_2_begin + "     " + old_program_3_sched_2_end + "     " + old_program_3_sched_3_begin + "     " + old_program_3_sched_3_end + "     ");


    // Ajout des nouvelles valeurs

    if ("progs_number" === name)
        selected_programs_number = value;
    else if ("prog_1_off_on_and_days" === name)
        selected_program_1_off_on_and_days = value;
    else if ("prog_1_bright" === name)
        selected_program_1_bright = value;
    else if ("prog_1_speed" === name)
        selected_program_1_speed = value;
    else if ("prog_1_sched_number" === name)
        selected_program_1_sched_number = value;
    else if ("prog_1_sched_1_begin" === name)
        selected_program_1_sched_1_begin = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_sched_1_end = value;
    else if ("prog_1_sched_2_begin" === name)
        selected_program_1_sched_2_begin = value;
    else if ("prog_1_sched_2_end" === name)
        selected_program_1_sched_2_end = value;
    else if ("prog_1_sched_3_begin" === name)
        selected_program_1_sched_3_begin = value;
    else if ("prog_1_sched_3_end" === name)
        selected_program_1_sched_3_end = value;
    else if ("prog_2_off_on_and_days" === name)
        selected_program_2_off_on_and_days = value;
    else if ("prog_2_bright" === name)
        selected_program_2_bright = value;
    else if ("prog_2_speed" === name)
        selected_program_2_speed = value;
    else if ("prog_2_sched_number" === name)
        selected_program_2_sched_number = value;
    else if ("prog_2_sched_1_begin" === name)
        selected_program_2_sched_1_begin = value;
    else if ("prog_2_sched_1_end" === name)
        selected_program_2_sched_1_end = value;
    else if ("prog_2_sched_2_begin" === name)
        selected_program_2_sched_2_begin = value;
    else if ("prog_2_sched_2_end" === name)
        selected_program_2_sched_2_end = value;
    else if ("prog_2_sched_3_begin" === name)
        selected_program_2_sched_3_begin = value;
    else if ("prog_2_sched_3_end" === name)
        selected_program_2_sched_3_end = value;
    else if ("prog_3_off_on_and_days" === name)
        selected_program_3_off_on_and_days = value;
    else if ("prog_3_bright" === name)
        selected_program_3_bright = value;
    else if ("prog_3_speed" === name)
        selected_program_3_speed = value;
    else if ("prog_3_sched_number" === name)
        selected_program_3_sched_number = value;
    else if ("prog_3_sched_1_begin" === name)
        selected_program_3_sched_1_begin = value;
    else if ("prog_3_sched_1_end" === name)
        selected_program_3_sched_1_end = value;
    else if ("prog_3_sched_2_begin" === name)
        selected_program_3_sched_2_begin = value;
    else if ("prog_3_sched_2_end" === name)
        selected_program_3_sched_2_end = value;
    else if ("prog_3_sched_3_begin" === name)
        selected_program_3_sched_3_begin = value;
    else if ("prog_3_sched_3_end" === name)
        selected_program_3_sched_3_end = value;

    // fix sched number

    if (selected_program_1_sched_1_begin > 0 || selected_program_1_sched_1_end > 0)
        selected_program_1_sched_number = 1;
    if (selected_program_1_sched_2_begin > 0 || selected_program_1_sched_2_end > 0)
        selected_program_1_sched_number = 2;
    if (selected_program_1_sched_3_begin > 0 || selected_program_1_sched_3_end > 0)
        selected_program_1_sched_number = 3;

//    if (selected_program_1_sched_1_begin > 0) {
//        console.log("selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ") > 0");
//    }
//    if (selected_program_1_sched_1_end > 0) {
//        console.log("selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ") > 0");
//    }
//    if (selected_program_1_sched_2_begin > 0) {
//        console.log("selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ") > 0");
//    }
//    if (selected_program_1_sched_2_end > 0) {
//        console.log("selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ") > 0");
//    }
//    if (selected_program_1_sched_3_begin > 0) {
//        console.log("selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ") > 0");
//    }
//    if (selected_program_1_sched_3_end > 0) {
//        console.log("selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ") > 0");
//    }
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);

    if (selected_program_2_sched_1_begin > 0 || selected_program_2_sched_1_end > 0)
        selected_program_2_sched_number = 1;
    if (selected_program_2_sched_2_begin > 0 || selected_program_2_sched_2_end > 0)
        selected_program_2_sched_number = 2;
    if (selected_program_2_sched_3_begin > 0 || selected_program_2_sched_3_end > 0)
        selected_program_2_sched_number = 3;

    if (selected_program_2_sched_1_begin > 0) {
        console.log("selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ") > 0");
    }
    if (selected_program_2_sched_1_end > 0) {
        console.log("selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ") > 0");
    }
    if (selected_program_2_sched_2_begin > 0) {
        console.log("selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ") > 0");
    }
    if (selected_program_2_sched_2_end > 0) {
        console.log("selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ") > 0");
    }
    if (selected_program_2_sched_3_begin > 0) {
        console.log("selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ") > 0");
    }
    if (selected_program_2_sched_3_end > 0) {
        console.log("selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ") > 0");
    }
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);

    // Convertion

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    selected_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    selected_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    selected_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    selected_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    selected_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    selected_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    selected_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    selected_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    selected_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    selected_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    selected_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    selected_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    selected_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    selected_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    selected_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    selected_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    selected_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    selected_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    selected_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    selected_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    selected_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    selected_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    selected_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    selected_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    selected_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    selected_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    selected_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    selected_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    selected_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";
    if (selected_program_1_bright === undefined)
        selected_program_1_bright = "";
    if (selected_program_1_speed === undefined)
        selected_program_1_speed = "";
    if (selected_program_1_sched_number === undefined)
        selected_program_1_sched_number = "";
    if (selected_program_1_sched_1_begin === undefined)
        selected_program_1_sched_1_begin = "";
    if (selected_program_1_sched_1_end === undefined)
        selected_program_1_sched_1_end = "";
    if (selected_program_1_sched_2_begin === undefined)
        selected_program_1_sched_2_begin = "";
    if (selected_program_1_sched_2_end === undefined)
        selected_program_1_sched_2_end = "";
    if (selected_program_1_sched_3_begin === undefined)
        selected_program_1_sched_3_begin = "";
    if (selected_program_1_sched_3_end === undefined)
        selected_program_1_sched_3_end = "";
    if (selected_program_2_off_on_and_days === undefined)
        selected_program_2_off_on_and_days = "";
    if (selected_program_2_bright === undefined)
        selected_program_2_bright = "";
    if (selected_program_2_speed === undefined)
        selected_program_2_speed = "";
    if (selected_program_2_sched_number === undefined)
        selected_program_2_sched_number = "";
    if (selected_program_2_sched_1_begin === undefined)
        selected_program_2_sched_1_begin = "";
    if (selected_program_2_sched_1_end === undefined)
        selected_program_2_sched_1_end = "";
    if (selected_program_2_sched_2_begin === undefined)
        selected_program_2_sched_2_begin = "";
    if (selected_program_2_sched_2_end === undefined)
        selected_program_2_sched_2_end = "";
    if (selected_program_2_sched_3_begin === undefined)
        selected_program_2_sched_3_begin = "";
    if (selected_program_2_sched_3_end === undefined)
        selected_program_2_sched_3_end = "";
    if (selected_program_3_off_on_and_days === undefined)
        selected_program_3_off_on_and_days = "";
    if (selected_program_3_bright === undefined)
        selected_program_3_bright = "";
    if (selected_program_3_speed === undefined)
        selected_program_3_speed = "";
    if (selected_program_3_sched_number === undefined)
        selected_program_3_sched_number = "";
    if (selected_program_3_sched_1_begin === undefined)
        selected_program_3_sched_1_begin = "";
    if (selected_program_3_sched_1_end === undefined)
        selected_program_3_sched_1_end = "";
    if (selected_program_3_sched_2_begin === undefined)
        selected_program_3_sched_2_begin = "";
    if (selected_program_3_sched_2_end === undefined)
        selected_program_3_sched_2_end = "";
    if (selected_program_3_sched_3_begin === undefined)
        selected_program_3_sched_3_begin = "";
    if (selected_program_3_sched_3_end === undefined)
        selected_program_3_sched_3_end = "";

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    // Fill Blank

    if (is_void(selected_program_1_sched_2_begin) && !is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_begin = "00";
    if (!is_void(selected_program_1_sched_2_begin) && is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_end = "00";
    if (is_void(selected_program_1_sched_3_begin) && !is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_begin = "00";
    if (!is_void(selected_program_1_sched_3_begin) && is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_end = "00";

    // Delete Void Sched

    if (selected_program_1_sched_2_begin === "00" && selected_program_1_sched_2_end === "00") {
        selected_program_1_sched_2_begin = "";
        selected_program_1_sched_2_end = "";
    }
    if (selected_program_1_sched_3_begin === "00" && selected_program_1_sched_3_end === "00") {
        selected_program_1_sched_3_begin = "";
        selected_program_1_sched_3_end = "";
    }

    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);

    // Final

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(selected_program_1_off_on_and_days + "     " + selected_program_1_bright + "     " + selected_program_1_speed + "     " + selected_program_1_sched_number + "     " + selected_program_1_sched_1_begin + "     " + selected_program_1_sched_1_end + "     " + selected_program_1_sched_2_begin + "     " + selected_program_1_sched_2_end + "     " + selected_program_1_sched_3_begin + "     " + selected_program_1_sched_3_end + "     ");
    console.log(selected_program_2_off_on_and_days + "     " + selected_program_2_bright + "     " + selected_program_2_speed + "     " + selected_program_2_sched_number + "     " + selected_program_2_sched_1_begin + "     " + selected_program_2_sched_1_end + "     " + selected_program_2_sched_2_begin + "     " + selected_program_2_sched_2_end + "     " + selected_program_2_sched_3_begin + "     " + selected_program_2_sched_3_end + "     ");
    console.log(selected_program_3_off_on_and_days + "     " + selected_program_3_bright + "     " + selected_program_3_speed + "     " + selected_program_3_sched_number + "     " + selected_program_3_sched_1_begin + "     " + selected_program_3_sched_1_end + "     " + selected_program_3_sched_2_begin + "     " + selected_program_3_sched_2_end + "     " + selected_program_3_sched_3_begin + "     " + selected_program_3_sched_3_end + "     ");

    if (old_programs_number !== selected_programs_number) {
        console.log("old_programs_number (" + old_programs_number + ") -----> selected_programs_number (" + selected_programs_number + ")");
    }
    if (old_program_1_off_on_and_days !== selected_program_1_off_on_and_days) {
        console.log("old_program_1_off_on_and_days (" + old_program_1_off_on_and_days + ") -----> selected_program_1_off_on_and_days (" + selected_program_1_off_on_and_days + ")");
    }
    if (old_program_1_bright !== selected_program_1_bright) {
        console.log("old_program_1_bright (" + old_program_1_bright + ") -----> selected_program_1_bright (" + selected_program_1_bright + ")");
    }
    if (old_program_1_speed !== selected_program_1_speed) {
        console.log("old_program_1_speed (" + old_program_1_speed + ") -----> selected_program_1_speed (" + selected_program_1_speed + ")");
    }
    if (old_program_1_sched_number !== selected_program_1_sched_number) {
        console.log("old_program_1_sched_number (" + old_program_1_sched_number + ") -----> selected_program_1_sched_number (" + selected_program_1_sched_number + ")");
    }
    if (old_program_1_sched_1_begin !== selected_program_1_sched_1_begin) {
        console.log("old_program_1_sched_1_begin (" + old_program_1_sched_1_begin + ") -----> selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ")");
    }
    if (old_program_1_sched_1_end !== selected_program_1_sched_1_end) {
        console.log("old_program_1_sched_1_end (" + old_program_1_sched_1_end + ") -----> selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ")");
    }
    if (old_program_1_sched_2_begin !== selected_program_1_sched_2_begin) {
        console.log("old_program_1_sched_2_begin (" + old_program_1_sched_2_begin + ") -----> selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ")");
    }
    if (old_program_1_sched_2_end !== selected_program_1_sched_2_end) {
        console.log("old_program_1_sched_2_end (" + old_program_1_sched_2_end + ") -----> selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ")");
    }
    if (old_program_1_sched_3_begin !== selected_program_1_sched_3_begin) {
        console.log("old_program_1_sched_3_begin (" + old_program_1_sched_3_begin + ") -----> selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ")");
    }
    if (old_program_1_sched_3_end !== selected_program_1_sched_3_end) {
        console.log("old_program_1_sched_3_end (" + old_program_1_sched_3_end + ") -----> selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ")");
    }
    if (old_program_2_off_on_and_days !== selected_program_2_off_on_and_days) {
        console.log("old_program_2_off_on_and_days (" + old_program_2_off_on_and_days + ") -----> selected_program_2_off_on_and_days (" + selected_program_2_off_on_and_days + ")");
    }
    if (old_program_2_bright !== selected_program_2_bright) {
        console.log("old_program_2_bright (" + old_program_2_bright + ") -----> selected_program_2_bright (" + selected_program_2_bright + ")");
    }
    if (old_program_2_speed !== selected_program_2_speed) {
        console.log("old_program_2_speed (" + old_program_2_speed + ") -----> selected_program_2_speed (" + selected_program_2_speed + ")");
    }
    if (old_program_2_sched_number !== selected_program_2_sched_number) {
        console.log("old_program_2_sched_number (" + old_program_2_sched_number + ") -----> selected_program_2_sched_number (" + selected_program_2_sched_number + ")");
    }
    if (old_program_2_sched_1_begin !== selected_program_2_sched_1_begin) {
        console.log("old_program_2_sched_1_begin (" + old_program_2_sched_1_begin + ") -----> selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ")");
    }
    if (old_program_2_sched_1_end !== selected_program_2_sched_1_end) {
        console.log("old_program_2_sched_1_end (" + old_program_2_sched_1_end + ") -----> selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ")");
    }
    if (old_program_2_sched_2_begin !== selected_program_2_sched_2_begin) {
        console.log("old_program_2_sched_2_begin (" + old_program_2_sched_2_begin + ") -----> selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ")");
    }
    if (old_program_2_sched_2_end !== selected_program_2_sched_2_end) {
        console.log("old_program_2_sched_2_end (" + old_program_2_sched_2_end + ") -----> selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ")");
    }
    if (old_program_2_sched_3_begin !== selected_program_2_sched_3_begin) {
        console.log("old_program_2_sched_3_begin (" + old_program_2_sched_3_begin + ") -----> selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ")");
    }
    if (old_program_2_sched_3_end !== selected_program_2_sched_3_end) {
        console.log("old_program_2_sched_3_end (" + old_program_2_sched_3_end + ") -----> selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ")");
    }
    if (old_program_3_off_on_and_days !== selected_program_3_off_on_and_days) {
        console.log("old_program_3_off_on_and_days (" + old_program_3_off_on_and_days + ") -----> selected_program_3_off_on_and_days (" + selected_program_3_off_on_and_days + ")");
    }
    if (old_program_3_bright !== selected_program_3_bright) {
        console.log("old_program_3_bright (" + old_program_3_bright + ") -----> selected_program_3_bright (" + selected_program_3_bright + ")");
    }
    if (old_program_3_speed !== selected_program_3_speed) {
        console.log("old_program_3_speed (" + old_program_3_speed + ") -----> selected_program_3_speed (" + selected_program_3_speed + ")");
    }
    if (old_program_3_sched_number !== selected_program_3_sched_number) {
        console.log("old_program_3_sched_number (" + old_program_3_sched_number + ") -----> selected_program_3_sched_number (" + selected_program_3_sched_number + ")");
    }
    if (old_program_3_sched_1_begin !== selected_program_3_sched_1_begin) {
        console.log("old_program_3_sched_1_begin (" + old_program_3_sched_1_begin + ") -----> selected_program_3_sched_1_begin (" + selected_program_3_sched_1_begin + ")");
    }
    if (old_program_3_sched_1_end !== selected_program_3_sched_1_end) {
        console.log("old_program_3_sched_1_end (" + old_program_3_sched_1_end + ") -----> selected_program_3_sched_1_end (" + selected_program_3_sched_1_end + ")");
    }
    if (old_program_3_sched_2_begin !== selected_program_3_sched_2_begin) {
        console.log("old_program_3_sched_2_begin (" + old_program_3_sched_2_begin + ") -----> selected_program_3_sched_2_begin (" + selected_program_3_sched_2_begin + ")");
    }
    if (old_program_3_sched_2_end !== selected_program_3_sched_2_end) {
        console.log("old_program_3_sched_2_end (" + old_program_3_sched_2_end + ") -----> selected_program_3_sched_2_end (" + selected_program_3_sched_2_end + ")");
    }
    if (old_program_3_sched_3_begin !== selected_program_3_sched_3_begin) {
        console.log("old_program_3_sched_3_begin (" + old_program_3_sched_3_begin + ") -----> selected_program_3_sched_3_begin (" + selected_program_3_sched_3_begin + ")");
    }
    if (old_program_3_sched_3_end !== selected_program_3_sched_3_end) {
        console.log("old_program_3_sched_3_end (" + old_program_3_sched_3_end + ") -----> selected_program_3_sched_3_end (" + selected_program_3_sched_3_end + ")");
    }

    var new_light_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}${selected_program_1_bright}${selected_program_1_speed}${selected_program_1_sched_number}${selected_program_1_sched_1_begin}${selected_program_1_sched_1_end}${selected_program_1_sched_2_begin}${selected_program_1_sched_2_end}${selected_program_1_sched_3_begin}${selected_program_1_sched_3_end}${selected_program_2_off_on_and_days}${selected_program_2_bright}${selected_program_2_speed}${selected_program_2_sched_number}${selected_program_2_sched_1_begin}${selected_program_2_sched_1_end}${selected_program_2_sched_2_begin}${selected_program_2_sched_2_end}${selected_program_2_sched_3_begin}${selected_program_2_sched_3_end}${selected_program_3_off_on_and_days}${selected_program_3_bright}${selected_program_3_speed}${selected_program_3_sched_number}${selected_program_3_sched_1_begin}${selected_program_3_sched_1_end}${selected_program_3_sched_2_begin}${selected_program_3_sched_2_end}${selected_program_3_sched_3_begin}${selected_program_3_sched_3_end}`;
    console.log("new_light_sched = " + new_light_sched);

    var ok = check_sched_for_errors(selected_programs_number, selected_program_1_off_on_and_days, selected_program_1_bright, selected_program_1_speed, selected_program_1_sched_number, selected_program_1_sched_1_begin, selected_program_1_sched_1_end, selected_program_1_sched_2_begin, selected_program_1_sched_2_end, selected_program_1_sched_3_begin, selected_program_1_sched_3_end, selected_program_2_off_on_and_days, selected_program_2_bright, selected_program_2_speed, selected_program_2_sched_number, selected_program_2_sched_1_begin, selected_program_2_sched_1_end, selected_program_2_sched_2_begin, selected_program_2_sched_2_end, selected_program_2_sched_3_begin, selected_program_2_sched_3_end, selected_program_3_off_on_and_days, selected_program_3_bright, selected_program_3_speed, selected_program_3_sched_number, selected_program_3_sched_1_begin, selected_program_3_sched_1_end, selected_program_3_sched_2_begin, selected_program_3_sched_2_end, selected_program_3_sched_3_begin, selected_program_3_sched_3_end);

    set_light_sched_value_save = new_light_sched;
    return new_light_sched;
//    if (ok)
//        quick_send("s44_w", "light_sched", "info", "desired", new_light_sched);

    // quick_send("s44_w", "light_sched", "info", "desired", new_light_sched);
    // quick_send("s44_w", "light_sched", "info", "desired", "02 FE 64 64 03 04 08 7E 64 64 03 04 08 03");
    // hard reset : quick_send("s44_w", "light_sched", "info", "desired", "027E64640104887E6464010488");
    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88
    // 02 7E 64 64 01 04 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 0F 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 10 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0C 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0C 17 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0A 0D 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 0A 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 08 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 08 0C 00 00 00 7E 64 64 01
}

var set_filtration_sched_value_save = "";

function set_filtration_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_filtration_sched_value_save === "") {
        var filtration_sched = get_value_from_position(eq_modal, "filt_sched");
    } else {
        var filtration_sched = set_filtration_sched_value_save;
    }
    console.log("filtration_sched = " + filtration_sched);


    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88

    var selected_programs_number = get_sched_value(filtration_sched, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(filtration_sched, "program_1_off_on_and_days");
    var selected_program_1_bright = get_sched_value(filtration_sched, "program_1_bright");
    var selected_program_1_speed = get_sched_value(filtration_sched, "program_1_speed");
    var selected_program_1_sched_number = get_sched_value(filtration_sched, "program_1_sched_number");
    var selected_program_1_sched_1_begin = get_sched_value(filtration_sched, "program_1_sched_1_begin");
    var selected_program_1_sched_1_end = get_sched_value(filtration_sched, "program_1_sched_1_end");
    var selected_program_1_sched_2_begin = get_sched_value(filtration_sched, "program_1_sched_2_begin");
    var selected_program_1_sched_2_end = get_sched_value(filtration_sched, "program_1_sched_2_end");
    var selected_program_1_sched_3_begin = get_sched_value(filtration_sched, "program_1_sched_3_begin");
    var selected_program_1_sched_3_end = get_sched_value(filtration_sched, "program_1_sched_3_end");
    var selected_program_2_off_on_and_days = get_sched_value(filtration_sched, "program_2_off_on_and_days");
    var selected_program_2_bright = get_sched_value(filtration_sched, "program_2_bright");
    var selected_program_2_speed = get_sched_value(filtration_sched, "program_2_speed");
    var selected_program_2_sched_number = get_sched_value(filtration_sched, "program_2_sched_number");
    var selected_program_2_sched_1_begin = get_sched_value(filtration_sched, "program_2_sched_1_begin");
    var selected_program_2_sched_1_end = get_sched_value(filtration_sched, "program_2_sched_1_end");
    var selected_program_2_sched_2_begin = get_sched_value(filtration_sched, "program_2_sched_2_begin");
    var selected_program_2_sched_2_end = get_sched_value(filtration_sched, "program_2_sched_2_end");
    var selected_program_2_sched_3_begin = get_sched_value(filtration_sched, "program_2_sched_3_begin");
    var selected_program_2_sched_3_end = get_sched_value(filtration_sched, "program_2_sched_3_end");
    var selected_program_3_off_on_and_days = get_sched_value(filtration_sched, "program_3_off_on_and_days");
    var selected_program_3_bright = get_sched_value(filtration_sched, "program_3_bright");
    var selected_program_3_speed = get_sched_value(filtration_sched, "program_3_speed");
    var selected_program_3_sched_number = get_sched_value(filtration_sched, "program_3_sched_number");
    var selected_program_3_sched_1_begin = get_sched_value(filtration_sched, "program_3_sched_1_begin");
    var selected_program_3_sched_1_end = get_sched_value(filtration_sched, "program_3_sched_1_end");
    var selected_program_3_sched_2_begin = get_sched_value(filtration_sched, "program_3_sched_2_begin");
    var selected_program_3_sched_2_end = get_sched_value(filtration_sched, "program_3_sched_2_end");
    var selected_program_3_sched_3_begin = get_sched_value(filtration_sched, "program_3_sched_3_begin");
    var selected_program_3_sched_3_end = get_sched_value(filtration_sched, "program_3_sched_3_end");


    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    selected_program_1_sched_1_end = fix_end_dec(selected_program_1_sched_1_end);
    selected_program_1_sched_2_end = fix_end_dec(selected_program_1_sched_2_end);
    selected_program_1_sched_3_end = fix_end_dec(selected_program_1_sched_3_end);
    selected_program_2_sched_1_end = fix_end_dec(selected_program_2_sched_1_end);
    selected_program_2_sched_2_end = fix_end_dec(selected_program_2_sched_2_end);
    selected_program_2_sched_3_end = fix_end_dec(selected_program_2_sched_3_end);
    selected_program_3_sched_1_end = fix_end_dec(selected_program_3_sched_1_end);
    selected_program_3_sched_2_end = fix_end_dec(selected_program_3_sched_2_end);
    selected_program_3_sched_3_end = fix_end_dec(selected_program_3_sched_3_end);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    var old_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    var old_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    var old_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    var old_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    var old_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    var old_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    var old_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    var old_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    var old_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    var old_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    var old_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    var old_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    var old_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    var old_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    var old_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    var old_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    var old_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    var old_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    var old_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    var old_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    var old_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    var old_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    var old_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    var old_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    var old_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    var old_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    var old_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    var old_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    var old_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";
    if (old_program_1_bright === undefined)
        old_program_1_bright = "";
    if (old_program_1_speed === undefined)
        old_program_1_speed = "";
    if (old_program_1_sched_number === undefined)
        old_program_1_sched_number = "";
    if (old_program_1_sched_1_begin === undefined)
        old_program_1_sched_1_begin = "";
    if (old_program_1_sched_1_end === undefined)
        old_program_1_sched_1_end = "";
    if (old_program_1_sched_2_begin === undefined)
        old_program_1_sched_2_begin = "";
    if (old_program_1_sched_2_end === undefined)
        old_program_1_sched_2_end = "";
    if (old_program_1_sched_3_begin === undefined)
        old_program_1_sched_3_begin = "";
    if (old_program_1_sched_3_end === undefined)
        old_program_1_sched_3_end = "";
    if (old_program_2_off_on_and_days === undefined)
        old_program_2_off_on_and_days = "";
    if (old_program_2_bright === undefined)
        old_program_2_bright = "";
    if (old_program_2_speed === undefined)
        old_program_2_speed = "";
    if (old_program_2_sched_number === undefined)
        old_program_2_sched_number = "";
    if (old_program_2_sched_1_begin === undefined)
        old_program_2_sched_1_begin = "";
    if (old_program_2_sched_1_end === undefined)
        old_program_2_sched_1_end = "";
    if (old_program_2_sched_2_begin === undefined)
        old_program_2_sched_2_begin = "";
    if (old_program_2_sched_2_end === undefined)
        old_program_2_sched_2_end = "";
    if (old_program_2_sched_3_begin === undefined)
        old_program_2_sched_3_begin = "";
    if (old_program_2_sched_3_end === undefined)
        old_program_2_sched_3_end = "";
    if (old_program_3_off_on_and_days === undefined)
        old_program_3_off_on_and_days = "";
    if (old_program_3_bright === undefined)
        old_program_3_bright = "";
    if (old_program_3_speed === undefined)
        old_program_3_speed = "";
    if (old_program_3_sched_number === undefined)
        old_program_3_sched_number = "";
    if (old_program_3_sched_1_begin === undefined)
        old_program_3_sched_1_begin = "";
    if (old_program_3_sched_1_end === undefined)
        old_program_3_sched_1_end = "";
    if (old_program_3_sched_2_begin === undefined)
        old_program_3_sched_2_begin = "";
    if (old_program_3_sched_2_end === undefined)
        old_program_3_sched_2_end = "";
    if (old_program_3_sched_3_begin === undefined)
        old_program_3_sched_3_begin = "";
    if (old_program_3_sched_3_end === undefined)
        old_program_3_sched_3_end = "";

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(old_program_1_off_on_and_days + "     " + old_program_1_bright + "     " + old_program_1_speed + "     " + old_program_1_sched_number + "     " + old_program_1_sched_1_begin + "     " + old_program_1_sched_1_end + "     " + old_program_1_sched_2_begin + "     " + old_program_1_sched_2_end + "     " + old_program_1_sched_3_begin + "     " + old_program_1_sched_3_end + "     ");
    console.log(old_program_2_off_on_and_days + "     " + old_program_2_bright + "     " + old_program_2_speed + "     " + old_program_2_sched_number + "     " + old_program_2_sched_1_begin + "     " + old_program_2_sched_1_end + "     " + old_program_2_sched_2_begin + "     " + old_program_2_sched_2_end + "     " + old_program_2_sched_3_begin + "     " + old_program_2_sched_3_end + "     ");
    console.log(old_program_3_off_on_and_days + "     " + old_program_3_bright + "     " + old_program_3_speed + "     " + old_program_3_sched_number + "     " + old_program_3_sched_1_begin + "     " + old_program_3_sched_1_end + "     " + old_program_3_sched_2_begin + "     " + old_program_3_sched_2_end + "     " + old_program_3_sched_3_begin + "     " + old_program_3_sched_3_end + "     ");


    // Ajout des nouvelles valeurs

    if ("progs_number" === name)
        selected_programs_number = value;
    else if ("prog_1_off_on_and_days" === name)
        selected_program_1_off_on_and_days = value;
    else if ("prog_1_bright" === name)
        selected_program_1_bright = value;
    else if ("prog_1_speed" === name)
        selected_program_1_speed = value;
    else if ("prog_1_sched_number" === name)
        selected_program_1_sched_number = value;
    else if ("prog_1_sched_1_begin" === name)
        selected_program_1_sched_1_begin = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_sched_1_end = value;
    else if ("prog_1_sched_2_begin" === name)
        selected_program_1_sched_2_begin = value;
    else if ("prog_1_sched_2_end" === name)
        selected_program_1_sched_2_end = value;
    else if ("prog_1_sched_3_begin" === name)
        selected_program_1_sched_3_begin = value;
    else if ("prog_1_sched_3_end" === name)
        selected_program_1_sched_3_end = value;
    else if ("prog_2_off_on_and_days" === name)
        selected_program_2_off_on_and_days = value;
    else if ("prog_2_bright" === name)
        selected_program_2_bright = value;
    else if ("prog_2_speed" === name)
        selected_program_2_speed = value;
    else if ("prog_2_sched_number" === name)
        selected_program_2_sched_number = value;
    else if ("prog_2_sched_1_begin" === name)
        selected_program_2_sched_1_begin = value;
    else if ("prog_2_sched_1_end" === name)
        selected_program_2_sched_1_end = value;
    else if ("prog_2_sched_2_begin" === name)
        selected_program_2_sched_2_begin = value;
    else if ("prog_2_sched_2_end" === name)
        selected_program_2_sched_2_end = value;
    else if ("prog_2_sched_3_begin" === name)
        selected_program_2_sched_3_begin = value;
    else if ("prog_2_sched_3_end" === name)
        selected_program_2_sched_3_end = value;
    else if ("prog_3_off_on_and_days" === name)
        selected_program_3_off_on_and_days = value;
    else if ("prog_3_bright" === name)
        selected_program_3_bright = value;
    else if ("prog_3_speed" === name)
        selected_program_3_speed = value;
    else if ("prog_3_sched_number" === name)
        selected_program_3_sched_number = value;
    else if ("prog_3_sched_1_begin" === name)
        selected_program_3_sched_1_begin = value;
    else if ("prog_3_sched_1_end" === name)
        selected_program_3_sched_1_end = value;
    else if ("prog_3_sched_2_begin" === name)
        selected_program_3_sched_2_begin = value;
    else if ("prog_3_sched_2_end" === name)
        selected_program_3_sched_2_end = value;
    else if ("prog_3_sched_3_begin" === name)
        selected_program_3_sched_3_begin = value;
    else if ("prog_3_sched_3_end" === name)
        selected_program_3_sched_3_end = value;

    // fix sched number

    if (selected_program_1_sched_1_begin > 0 || selected_program_1_sched_1_end > 0)
        selected_program_1_sched_number = 1;
    if (selected_program_1_sched_2_begin > 0 || selected_program_1_sched_2_end > 0)
        selected_program_1_sched_number = 2;
    if (selected_program_1_sched_3_begin > 0 || selected_program_1_sched_3_end > 0)
        selected_program_1_sched_number = 3;

//    if (selected_program_1_sched_1_begin > 0) {
//        console.log("selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ") > 0");
//    }
//    if (selected_program_1_sched_1_end > 0) {
//        console.log("selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ") > 0");
//    }
//    if (selected_program_1_sched_2_begin > 0) {
//        console.log("selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ") > 0");
//    }
//    if (selected_program_1_sched_2_end > 0) {
//        console.log("selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ") > 0");
//    }
//    if (selected_program_1_sched_3_begin > 0) {
//        console.log("selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ") > 0");
//    }
//    if (selected_program_1_sched_3_end > 0) {
//        console.log("selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ") > 0");
//    }
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);

    if (selected_program_2_sched_1_begin > 0 || selected_program_2_sched_1_end > 0)
        selected_program_2_sched_number = 1;
    if (selected_program_2_sched_2_begin > 0 || selected_program_2_sched_2_end > 0)
        selected_program_2_sched_number = 2;
    if (selected_program_2_sched_3_begin > 0 || selected_program_2_sched_3_end > 0)
        selected_program_2_sched_number = 3;

    if (selected_program_2_sched_1_begin > 0) {
        console.log("selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ") > 0");
    }
    if (selected_program_2_sched_1_end > 0) {
        console.log("selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ") > 0");
    }
    if (selected_program_2_sched_2_begin > 0) {
        console.log("selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ") > 0");
    }
    if (selected_program_2_sched_2_end > 0) {
        console.log("selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ") > 0");
    }
    if (selected_program_2_sched_3_begin > 0) {
        console.log("selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ") > 0");
    }
    if (selected_program_2_sched_3_end > 0) {
        console.log("selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ") > 0");
    }
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);

    // Convertion

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    selected_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    selected_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    selected_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    selected_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    selected_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    selected_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    selected_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    selected_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    selected_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    selected_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    selected_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    selected_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    selected_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    selected_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    selected_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    selected_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    selected_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    selected_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    selected_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    selected_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    selected_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    selected_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    selected_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    selected_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    selected_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    selected_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    selected_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    selected_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    selected_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";
    if (selected_program_1_bright === undefined)
        selected_program_1_bright = "";
    if (selected_program_1_speed === undefined)
        selected_program_1_speed = "";
    if (selected_program_1_sched_number === undefined)
        selected_program_1_sched_number = "";
    if (selected_program_1_sched_1_begin === undefined)
        selected_program_1_sched_1_begin = "";
    if (selected_program_1_sched_1_end === undefined)
        selected_program_1_sched_1_end = "";
    if (selected_program_1_sched_2_begin === undefined)
        selected_program_1_sched_2_begin = "";
    if (selected_program_1_sched_2_end === undefined)
        selected_program_1_sched_2_end = "";
    if (selected_program_1_sched_3_begin === undefined)
        selected_program_1_sched_3_begin = "";
    if (selected_program_1_sched_3_end === undefined)
        selected_program_1_sched_3_end = "";
    if (selected_program_2_off_on_and_days === undefined)
        selected_program_2_off_on_and_days = "";
    if (selected_program_2_bright === undefined)
        selected_program_2_bright = "";
    if (selected_program_2_speed === undefined)
        selected_program_2_speed = "";
    if (selected_program_2_sched_number === undefined)
        selected_program_2_sched_number = "";
    if (selected_program_2_sched_1_begin === undefined)
        selected_program_2_sched_1_begin = "";
    if (selected_program_2_sched_1_end === undefined)
        selected_program_2_sched_1_end = "";
    if (selected_program_2_sched_2_begin === undefined)
        selected_program_2_sched_2_begin = "";
    if (selected_program_2_sched_2_end === undefined)
        selected_program_2_sched_2_end = "";
    if (selected_program_2_sched_3_begin === undefined)
        selected_program_2_sched_3_begin = "";
    if (selected_program_2_sched_3_end === undefined)
        selected_program_2_sched_3_end = "";
    if (selected_program_3_off_on_and_days === undefined)
        selected_program_3_off_on_and_days = "";
    if (selected_program_3_bright === undefined)
        selected_program_3_bright = "";
    if (selected_program_3_speed === undefined)
        selected_program_3_speed = "";
    if (selected_program_3_sched_number === undefined)
        selected_program_3_sched_number = "";
    if (selected_program_3_sched_1_begin === undefined)
        selected_program_3_sched_1_begin = "";
    if (selected_program_3_sched_1_end === undefined)
        selected_program_3_sched_1_end = "";
    if (selected_program_3_sched_2_begin === undefined)
        selected_program_3_sched_2_begin = "";
    if (selected_program_3_sched_2_end === undefined)
        selected_program_3_sched_2_end = "";
    if (selected_program_3_sched_3_begin === undefined)
        selected_program_3_sched_3_begin = "";
    if (selected_program_3_sched_3_end === undefined)
        selected_program_3_sched_3_end = "";

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    // Fill Blank

    if (is_void(selected_program_1_sched_2_begin) && !is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_begin = "00";
    if (!is_void(selected_program_1_sched_2_begin) && is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_end = "00";
    if (is_void(selected_program_1_sched_3_begin) && !is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_begin = "00";
    if (!is_void(selected_program_1_sched_3_begin) && is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_end = "00";

    // Delete Void Sched

    if (selected_program_1_sched_2_begin === "00" && selected_program_1_sched_2_end === "00") {
        selected_program_1_sched_2_begin = "";
        selected_program_1_sched_2_end = "";
    }
    if (selected_program_1_sched_3_begin === "00" && selected_program_1_sched_3_end === "00") {
        selected_program_1_sched_3_begin = "";
        selected_program_1_sched_3_end = "";
    }

    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);

    // Final

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(selected_program_1_off_on_and_days + "     " + selected_program_1_bright + "     " + selected_program_1_speed + "     " + selected_program_1_sched_number + "     " + selected_program_1_sched_1_begin + "     " + selected_program_1_sched_1_end + "     " + selected_program_1_sched_2_begin + "     " + selected_program_1_sched_2_end + "     " + selected_program_1_sched_3_begin + "     " + selected_program_1_sched_3_end + "     ");
    console.log(selected_program_2_off_on_and_days + "     " + selected_program_2_bright + "     " + selected_program_2_speed + "     " + selected_program_2_sched_number + "     " + selected_program_2_sched_1_begin + "     " + selected_program_2_sched_1_end + "     " + selected_program_2_sched_2_begin + "     " + selected_program_2_sched_2_end + "     " + selected_program_2_sched_3_begin + "     " + selected_program_2_sched_3_end + "     ");
    console.log(selected_program_3_off_on_and_days + "     " + selected_program_3_bright + "     " + selected_program_3_speed + "     " + selected_program_3_sched_number + "     " + selected_program_3_sched_1_begin + "     " + selected_program_3_sched_1_end + "     " + selected_program_3_sched_2_begin + "     " + selected_program_3_sched_2_end + "     " + selected_program_3_sched_3_begin + "     " + selected_program_3_sched_3_end + "     ");

    if (old_programs_number !== selected_programs_number) {
        console.log("old_programs_number (" + old_programs_number + ") -----> selected_programs_number (" + selected_programs_number + ")");
    }
    if (old_program_1_off_on_and_days !== selected_program_1_off_on_and_days) {
        console.log("old_program_1_off_on_and_days (" + old_program_1_off_on_and_days + ") -----> selected_program_1_off_on_and_days (" + selected_program_1_off_on_and_days + ")");
    }
    if (old_program_1_bright !== selected_program_1_bright) {
        console.log("old_program_1_bright (" + old_program_1_bright + ") -----> selected_program_1_bright (" + selected_program_1_bright + ")");
    }
    if (old_program_1_speed !== selected_program_1_speed) {
        console.log("old_program_1_speed (" + old_program_1_speed + ") -----> selected_program_1_speed (" + selected_program_1_speed + ")");
    }
    if (old_program_1_sched_number !== selected_program_1_sched_number) {
        console.log("old_program_1_sched_number (" + old_program_1_sched_number + ") -----> selected_program_1_sched_number (" + selected_program_1_sched_number + ")");
    }
    if (old_program_1_sched_1_begin !== selected_program_1_sched_1_begin) {
        console.log("old_program_1_sched_1_begin (" + old_program_1_sched_1_begin + ") -----> selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ")");
    }
    if (old_program_1_sched_1_end !== selected_program_1_sched_1_end) {
        console.log("old_program_1_sched_1_end (" + old_program_1_sched_1_end + ") -----> selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ")");
    }
    if (old_program_1_sched_2_begin !== selected_program_1_sched_2_begin) {
        console.log("old_program_1_sched_2_begin (" + old_program_1_sched_2_begin + ") -----> selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ")");
    }
    if (old_program_1_sched_2_end !== selected_program_1_sched_2_end) {
        console.log("old_program_1_sched_2_end (" + old_program_1_sched_2_end + ") -----> selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ")");
    }
    if (old_program_1_sched_3_begin !== selected_program_1_sched_3_begin) {
        console.log("old_program_1_sched_3_begin (" + old_program_1_sched_3_begin + ") -----> selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ")");
    }
    if (old_program_1_sched_3_end !== selected_program_1_sched_3_end) {
        console.log("old_program_1_sched_3_end (" + old_program_1_sched_3_end + ") -----> selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ")");
    }
    if (old_program_2_off_on_and_days !== selected_program_2_off_on_and_days) {
        console.log("old_program_2_off_on_and_days (" + old_program_2_off_on_and_days + ") -----> selected_program_2_off_on_and_days (" + selected_program_2_off_on_and_days + ")");
    }
    if (old_program_2_bright !== selected_program_2_bright) {
        console.log("old_program_2_bright (" + old_program_2_bright + ") -----> selected_program_2_bright (" + selected_program_2_bright + ")");
    }
    if (old_program_2_speed !== selected_program_2_speed) {
        console.log("old_program_2_speed (" + old_program_2_speed + ") -----> selected_program_2_speed (" + selected_program_2_speed + ")");
    }
    if (old_program_2_sched_number !== selected_program_2_sched_number) {
        console.log("old_program_2_sched_number (" + old_program_2_sched_number + ") -----> selected_program_2_sched_number (" + selected_program_2_sched_number + ")");
    }
    if (old_program_2_sched_1_begin !== selected_program_2_sched_1_begin) {
        console.log("old_program_2_sched_1_begin (" + old_program_2_sched_1_begin + ") -----> selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ")");
    }
    if (old_program_2_sched_1_end !== selected_program_2_sched_1_end) {
        console.log("old_program_2_sched_1_end (" + old_program_2_sched_1_end + ") -----> selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ")");
    }
    if (old_program_2_sched_2_begin !== selected_program_2_sched_2_begin) {
        console.log("old_program_2_sched_2_begin (" + old_program_2_sched_2_begin + ") -----> selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ")");
    }
    if (old_program_2_sched_2_end !== selected_program_2_sched_2_end) {
        console.log("old_program_2_sched_2_end (" + old_program_2_sched_2_end + ") -----> selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ")");
    }
    if (old_program_2_sched_3_begin !== selected_program_2_sched_3_begin) {
        console.log("old_program_2_sched_3_begin (" + old_program_2_sched_3_begin + ") -----> selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ")");
    }
    if (old_program_2_sched_3_end !== selected_program_2_sched_3_end) {
        console.log("old_program_2_sched_3_end (" + old_program_2_sched_3_end + ") -----> selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ")");
    }
    if (old_program_3_off_on_and_days !== selected_program_3_off_on_and_days) {
        console.log("old_program_3_off_on_and_days (" + old_program_3_off_on_and_days + ") -----> selected_program_3_off_on_and_days (" + selected_program_3_off_on_and_days + ")");
    }
    if (old_program_3_bright !== selected_program_3_bright) {
        console.log("old_program_3_bright (" + old_program_3_bright + ") -----> selected_program_3_bright (" + selected_program_3_bright + ")");
    }
    if (old_program_3_speed !== selected_program_3_speed) {
        console.log("old_program_3_speed (" + old_program_3_speed + ") -----> selected_program_3_speed (" + selected_program_3_speed + ")");
    }
    if (old_program_3_sched_number !== selected_program_3_sched_number) {
        console.log("old_program_3_sched_number (" + old_program_3_sched_number + ") -----> selected_program_3_sched_number (" + selected_program_3_sched_number + ")");
    }
    if (old_program_3_sched_1_begin !== selected_program_3_sched_1_begin) {
        console.log("old_program_3_sched_1_begin (" + old_program_3_sched_1_begin + ") -----> selected_program_3_sched_1_begin (" + selected_program_3_sched_1_begin + ")");
    }
    if (old_program_3_sched_1_end !== selected_program_3_sched_1_end) {
        console.log("old_program_3_sched_1_end (" + old_program_3_sched_1_end + ") -----> selected_program_3_sched_1_end (" + selected_program_3_sched_1_end + ")");
    }
    if (old_program_3_sched_2_begin !== selected_program_3_sched_2_begin) {
        console.log("old_program_3_sched_2_begin (" + old_program_3_sched_2_begin + ") -----> selected_program_3_sched_2_begin (" + selected_program_3_sched_2_begin + ")");
    }
    if (old_program_3_sched_2_end !== selected_program_3_sched_2_end) {
        console.log("old_program_3_sched_2_end (" + old_program_3_sched_2_end + ") -----> selected_program_3_sched_2_end (" + selected_program_3_sched_2_end + ")");
    }
    if (old_program_3_sched_3_begin !== selected_program_3_sched_3_begin) {
        console.log("old_program_3_sched_3_begin (" + old_program_3_sched_3_begin + ") -----> selected_program_3_sched_3_begin (" + selected_program_3_sched_3_begin + ")");
    }
    if (old_program_3_sched_3_end !== selected_program_3_sched_3_end) {
        console.log("old_program_3_sched_3_end (" + old_program_3_sched_3_end + ") -----> selected_program_3_sched_3_end (" + selected_program_3_sched_3_end + ")");
    }

    var new_filtration_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}${selected_program_1_bright}${selected_program_1_speed}${selected_program_1_sched_number}${selected_program_1_sched_1_begin}${selected_program_1_sched_1_end}${selected_program_1_sched_2_begin}${selected_program_1_sched_2_end}${selected_program_1_sched_3_begin}${selected_program_1_sched_3_end}${selected_program_2_off_on_and_days}${selected_program_2_bright}${selected_program_2_speed}${selected_program_2_sched_number}${selected_program_2_sched_1_begin}${selected_program_2_sched_1_end}${selected_program_2_sched_2_begin}${selected_program_2_sched_2_end}${selected_program_2_sched_3_begin}${selected_program_2_sched_3_end}${selected_program_3_off_on_and_days}${selected_program_3_bright}${selected_program_3_speed}${selected_program_3_sched_number}${selected_program_3_sched_1_begin}${selected_program_3_sched_1_end}${selected_program_3_sched_2_begin}${selected_program_3_sched_2_end}${selected_program_3_sched_3_begin}${selected_program_3_sched_3_end}`;
    console.log("new_filtration_sched = " + new_filtration_sched);

    var ok = check_sched_for_errors(selected_programs_number, selected_program_1_off_on_and_days, selected_program_1_bright, selected_program_1_speed, selected_program_1_sched_number, selected_program_1_sched_1_begin, selected_program_1_sched_1_end, selected_program_1_sched_2_begin, selected_program_1_sched_2_end, selected_program_1_sched_3_begin, selected_program_1_sched_3_end, selected_program_2_off_on_and_days, selected_program_2_bright, selected_program_2_speed, selected_program_2_sched_number, selected_program_2_sched_1_begin, selected_program_2_sched_1_end, selected_program_2_sched_2_begin, selected_program_2_sched_2_end, selected_program_2_sched_3_begin, selected_program_2_sched_3_end, selected_program_3_off_on_and_days, selected_program_3_bright, selected_program_3_speed, selected_program_3_sched_number, selected_program_3_sched_1_begin, selected_program_3_sched_1_end, selected_program_3_sched_2_begin, selected_program_3_sched_2_end, selected_program_3_sched_3_begin, selected_program_3_sched_3_end);

    set_filtration_sched_value_save = new_filtration_sched;
    return new_filtration_sched;
//    if (ok)
//        quick_send("s44_w", "filtration_sched", "info", "desired", new_filtration_sched);

    // quick_send("s44_w", "filtration_sched", "info", "desired", new_filtration_sched);
    // quick_send("s44_w", "filtration_sched", "info", "desired", "02 FE 64 64 03 04 08 7E 64 64 03 04 08 03");
    // hard reset : quick_send("s44_w", "filtration_sched", "info", "desired", "027E64640104887E6464010488");
    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88
    // 02 7E 64 64 01 04 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 0F 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 10 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0C 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0C 17 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0A 0D 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 0A 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 08 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 08 0C 00 00 00 7E 64 64 01
}

var set_auxiliary_sched_value_save = "";

function set_auxiliary_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_auxiliary_sched_value_save === "") {
        var auxiliary_sched = get_value_from_position(eq_modal, "filt_sched");
    } else {
        var auxiliary_sched = set_auxiliary_sched_value_save;
    }
    // console.log("auxiliary_sched = " + auxiliary_sched);

    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88

    var selected_programs_number = get_sched_value(auxiliary_sched, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(auxiliary_sched, "program_1_off_on_and_days");
    var selected_program_1_bright = get_sched_value(auxiliary_sched, "program_1_bright");
    var selected_program_1_speed = get_sched_value(auxiliary_sched, "program_1_speed");
    var selected_program_1_sched_number = get_sched_value(auxiliary_sched, "program_1_sched_number");
    var selected_program_1_sched_1_begin = get_sched_value(auxiliary_sched, "program_1_sched_1_begin");
    var selected_program_1_sched_1_end = get_sched_value(auxiliary_sched, "program_1_sched_1_end");
    var selected_program_1_sched_2_begin = get_sched_value(auxiliary_sched, "program_1_sched_2_begin");
    var selected_program_1_sched_2_end = get_sched_value(auxiliary_sched, "program_1_sched_2_end");
    var selected_program_1_sched_3_begin = get_sched_value(auxiliary_sched, "program_1_sched_3_begin");
    var selected_program_1_sched_3_end = get_sched_value(auxiliary_sched, "program_1_sched_3_end");
    var selected_program_2_off_on_and_days = get_sched_value(auxiliary_sched, "program_2_off_on_and_days");
    var selected_program_2_bright = get_sched_value(auxiliary_sched, "program_2_bright");
    var selected_program_2_speed = get_sched_value(auxiliary_sched, "program_2_speed");
    var selected_program_2_sched_number = get_sched_value(auxiliary_sched, "program_2_sched_number");
    var selected_program_2_sched_1_begin = get_sched_value(auxiliary_sched, "program_2_sched_1_begin");
    var selected_program_2_sched_1_end = get_sched_value(auxiliary_sched, "program_2_sched_1_end");
    var selected_program_2_sched_2_begin = get_sched_value(auxiliary_sched, "program_2_sched_2_begin");
    var selected_program_2_sched_2_end = get_sched_value(auxiliary_sched, "program_2_sched_2_end");
    var selected_program_2_sched_3_begin = get_sched_value(auxiliary_sched, "program_2_sched_3_begin");
    var selected_program_2_sched_3_end = get_sched_value(auxiliary_sched, "program_2_sched_3_end");
    var selected_program_3_off_on_and_days = get_sched_value(auxiliary_sched, "program_3_off_on_and_days");
    var selected_program_3_bright = get_sched_value(auxiliary_sched, "program_3_bright");
    var selected_program_3_speed = get_sched_value(auxiliary_sched, "program_3_speed");
    var selected_program_3_sched_number = get_sched_value(auxiliary_sched, "program_3_sched_number");
    var selected_program_3_sched_1_begin = get_sched_value(auxiliary_sched, "program_3_sched_1_begin");
    var selected_program_3_sched_1_end = get_sched_value(auxiliary_sched, "program_3_sched_1_end");
    var selected_program_3_sched_2_begin = get_sched_value(auxiliary_sched, "program_3_sched_2_begin");
    var selected_program_3_sched_2_end = get_sched_value(auxiliary_sched, "program_3_sched_2_end");
    var selected_program_3_sched_3_begin = get_sched_value(auxiliary_sched, "program_3_sched_3_begin");
    var selected_program_3_sched_3_end = get_sched_value(auxiliary_sched, "program_3_sched_3_end");


    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    selected_program_1_sched_1_end = fix_end_dec(selected_program_1_sched_1_end);
    selected_program_1_sched_2_end = fix_end_dec(selected_program_1_sched_2_end);
    selected_program_1_sched_3_end = fix_end_dec(selected_program_1_sched_3_end);
    selected_program_2_sched_1_end = fix_end_dec(selected_program_2_sched_1_end);
    selected_program_2_sched_2_end = fix_end_dec(selected_program_2_sched_2_end);
    selected_program_2_sched_3_end = fix_end_dec(selected_program_2_sched_3_end);
    selected_program_3_sched_1_end = fix_end_dec(selected_program_3_sched_1_end);
    selected_program_3_sched_2_end = fix_end_dec(selected_program_3_sched_2_end);
    selected_program_3_sched_3_end = fix_end_dec(selected_program_3_sched_3_end);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    var old_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    var old_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    var old_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    var old_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    var old_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    var old_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    var old_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    var old_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    var old_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    var old_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    var old_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    var old_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    var old_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    var old_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    var old_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    var old_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    var old_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    var old_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    var old_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    var old_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    var old_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    var old_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    var old_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    var old_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    var old_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    var old_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    var old_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    var old_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    var old_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";
    if (old_program_1_bright === undefined)
        old_program_1_bright = "";
    if (old_program_1_speed === undefined)
        old_program_1_speed = "";
    if (old_program_1_sched_number === undefined)
        old_program_1_sched_number = "";
    if (old_program_1_sched_1_begin === undefined)
        old_program_1_sched_1_begin = "";
    if (old_program_1_sched_1_end === undefined)
        old_program_1_sched_1_end = "";
    if (old_program_1_sched_2_begin === undefined)
        old_program_1_sched_2_begin = "";
    if (old_program_1_sched_2_end === undefined)
        old_program_1_sched_2_end = "";
    if (old_program_1_sched_3_begin === undefined)
        old_program_1_sched_3_begin = "";
    if (old_program_1_sched_3_end === undefined)
        old_program_1_sched_3_end = "";
    if (old_program_2_off_on_and_days === undefined)
        old_program_2_off_on_and_days = "";
    if (old_program_2_bright === undefined)
        old_program_2_bright = "";
    if (old_program_2_speed === undefined)
        old_program_2_speed = "";
    if (old_program_2_sched_number === undefined)
        old_program_2_sched_number = "";
    if (old_program_2_sched_1_begin === undefined)
        old_program_2_sched_1_begin = "";
    if (old_program_2_sched_1_end === undefined)
        old_program_2_sched_1_end = "";
    if (old_program_2_sched_2_begin === undefined)
        old_program_2_sched_2_begin = "";
    if (old_program_2_sched_2_end === undefined)
        old_program_2_sched_2_end = "";
    if (old_program_2_sched_3_begin === undefined)
        old_program_2_sched_3_begin = "";
    if (old_program_2_sched_3_end === undefined)
        old_program_2_sched_3_end = "";
    if (old_program_3_off_on_and_days === undefined)
        old_program_3_off_on_and_days = "";
    if (old_program_3_bright === undefined)
        old_program_3_bright = "";
    if (old_program_3_speed === undefined)
        old_program_3_speed = "";
    if (old_program_3_sched_number === undefined)
        old_program_3_sched_number = "";
    if (old_program_3_sched_1_begin === undefined)
        old_program_3_sched_1_begin = "";
    if (old_program_3_sched_1_end === undefined)
        old_program_3_sched_1_end = "";
    if (old_program_3_sched_2_begin === undefined)
        old_program_3_sched_2_begin = "";
    if (old_program_3_sched_2_end === undefined)
        old_program_3_sched_2_end = "";
    if (old_program_3_sched_3_begin === undefined)
        old_program_3_sched_3_begin = "";
    if (old_program_3_sched_3_end === undefined)
        old_program_3_sched_3_end = "";

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(old_program_1_off_on_and_days + "     " + old_program_1_bright + "     " + old_program_1_speed + "     " + old_program_1_sched_number + "     " + old_program_1_sched_1_begin + "     " + old_program_1_sched_1_end + "     " + old_program_1_sched_2_begin + "     " + old_program_1_sched_2_end + "     " + old_program_1_sched_3_begin + "     " + old_program_1_sched_3_end + "     ");
    console.log(old_program_2_off_on_and_days + "     " + old_program_2_bright + "     " + old_program_2_speed + "     " + old_program_2_sched_number + "     " + old_program_2_sched_1_begin + "     " + old_program_2_sched_1_end + "     " + old_program_2_sched_2_begin + "     " + old_program_2_sched_2_end + "     " + old_program_2_sched_3_begin + "     " + old_program_2_sched_3_end + "     ");
    console.log(old_program_3_off_on_and_days + "     " + old_program_3_bright + "     " + old_program_3_speed + "     " + old_program_3_sched_number + "     " + old_program_3_sched_1_begin + "     " + old_program_3_sched_1_end + "     " + old_program_3_sched_2_begin + "     " + old_program_3_sched_2_end + "     " + old_program_3_sched_3_begin + "     " + old_program_3_sched_3_end + "     ");


    // Ajout des nouvelles valeurs

    if ("progs_number" === name)
        selected_programs_number = value;
    else if ("prog_1_off_on_and_days" === name)
        selected_program_1_off_on_and_days = value;
    else if ("prog_1_bright" === name)
        selected_program_1_bright = value;
    else if ("prog_1_speed" === name)
        selected_program_1_speed = value;
    else if ("prog_1_sched_number" === name)
        selected_program_1_sched_number = value;
    else if ("prog_1_sched_1_begin" === name)
        selected_program_1_sched_1_begin = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_sched_1_end = value;
    else if ("prog_1_sched_2_begin" === name)
        selected_program_1_sched_2_begin = value;
    else if ("prog_1_sched_2_end" === name)
        selected_program_1_sched_2_end = value;
    else if ("prog_1_sched_3_begin" === name)
        selected_program_1_sched_3_begin = value;
    else if ("prog_1_sched_3_end" === name)
        selected_program_1_sched_3_end = value;
    else if ("prog_2_off_on_and_days" === name)
        selected_program_2_off_on_and_days = value;
    else if ("prog_2_bright" === name)
        selected_program_2_bright = value;
    else if ("prog_2_speed" === name)
        selected_program_2_speed = value;
    else if ("prog_2_sched_number" === name)
        selected_program_2_sched_number = value;
    else if ("prog_2_sched_1_begin" === name)
        selected_program_2_sched_1_begin = value;
    else if ("prog_2_sched_1_end" === name)
        selected_program_2_sched_1_end = value;
    else if ("prog_2_sched_2_begin" === name)
        selected_program_2_sched_2_begin = value;
    else if ("prog_2_sched_2_end" === name)
        selected_program_2_sched_2_end = value;
    else if ("prog_2_sched_3_begin" === name)
        selected_program_2_sched_3_begin = value;
    else if ("prog_2_sched_3_end" === name)
        selected_program_2_sched_3_end = value;
    else if ("prog_3_off_on_and_days" === name)
        selected_program_3_off_on_and_days = value;
    else if ("prog_3_bright" === name)
        selected_program_3_bright = value;
    else if ("prog_3_speed" === name)
        selected_program_3_speed = value;
    else if ("prog_3_sched_number" === name)
        selected_program_3_sched_number = value;
    else if ("prog_3_sched_1_begin" === name)
        selected_program_3_sched_1_begin = value;
    else if ("prog_3_sched_1_end" === name)
        selected_program_3_sched_1_end = value;
    else if ("prog_3_sched_2_begin" === name)
        selected_program_3_sched_2_begin = value;
    else if ("prog_3_sched_2_end" === name)
        selected_program_3_sched_2_end = value;
    else if ("prog_3_sched_3_begin" === name)
        selected_program_3_sched_3_begin = value;
    else if ("prog_3_sched_3_end" === name)
        selected_program_3_sched_3_end = value;

    // fix sched number

    if (selected_program_1_sched_1_begin > 0 || selected_program_1_sched_1_end > 0)
        selected_program_1_sched_number = 1;
    if (selected_program_1_sched_2_begin > 0 || selected_program_1_sched_2_end > 0)
        selected_program_1_sched_number = 2;
    if (selected_program_1_sched_3_begin > 0 || selected_program_1_sched_3_end > 0)
        selected_program_1_sched_number = 3;

//    if (selected_program_1_sched_1_begin > 0) {
//        console.log("selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ") > 0");
//    }
//    if (selected_program_1_sched_1_end > 0) {
//        console.log("selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ") > 0");
//    }
//    if (selected_program_1_sched_2_begin > 0) {
//        console.log("selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ") > 0");
//    }
//    if (selected_program_1_sched_2_end > 0) {
//        console.log("selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ") > 0");
//    }
//    if (selected_program_1_sched_3_begin > 0) {
//        console.log("selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ") > 0");
//    }
//    if (selected_program_1_sched_3_end > 0) {
//        console.log("selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ") > 0");
//    }
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);

    if (selected_program_2_sched_1_begin > 0 || selected_program_2_sched_1_end > 0)
        selected_program_2_sched_number = 1;
    if (selected_program_2_sched_2_begin > 0 || selected_program_2_sched_2_end > 0)
        selected_program_2_sched_number = 2;
    if (selected_program_2_sched_3_begin > 0 || selected_program_2_sched_3_end > 0)
        selected_program_2_sched_number = 3;

    if (selected_program_2_sched_1_begin > 0) {
        console.log("selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ") > 0");
    }
    if (selected_program_2_sched_1_end > 0) {
        console.log("selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ") > 0");
    }
    if (selected_program_2_sched_2_begin > 0) {
        console.log("selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ") > 0");
    }
    if (selected_program_2_sched_2_end > 0) {
        console.log("selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ") > 0");
    }
    if (selected_program_2_sched_3_begin > 0) {
        console.log("selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ") > 0");
    }
    if (selected_program_2_sched_3_end > 0) {
        console.log("selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ") > 0");
    }
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);

    // Convertion

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    selected_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    selected_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    selected_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    selected_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    selected_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    selected_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    selected_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    selected_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    selected_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    selected_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    selected_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    selected_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    selected_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    selected_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    selected_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    selected_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    selected_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    selected_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    selected_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    selected_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    selected_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    selected_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    selected_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    selected_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    selected_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    selected_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    selected_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    selected_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    selected_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";
    if (selected_program_1_bright === undefined)
        selected_program_1_bright = "";
    if (selected_program_1_speed === undefined)
        selected_program_1_speed = "";
    if (selected_program_1_sched_number === undefined)
        selected_program_1_sched_number = "";
    if (selected_program_1_sched_1_begin === undefined)
        selected_program_1_sched_1_begin = "";
    if (selected_program_1_sched_1_end === undefined)
        selected_program_1_sched_1_end = "";
    if (selected_program_1_sched_2_begin === undefined)
        selected_program_1_sched_2_begin = "";
    if (selected_program_1_sched_2_end === undefined)
        selected_program_1_sched_2_end = "";
    if (selected_program_1_sched_3_begin === undefined)
        selected_program_1_sched_3_begin = "";
    if (selected_program_1_sched_3_end === undefined)
        selected_program_1_sched_3_end = "";
    if (selected_program_2_off_on_and_days === undefined)
        selected_program_2_off_on_and_days = "";
    if (selected_program_2_bright === undefined)
        selected_program_2_bright = "";
    if (selected_program_2_speed === undefined)
        selected_program_2_speed = "";
    if (selected_program_2_sched_number === undefined)
        selected_program_2_sched_number = "";
    if (selected_program_2_sched_1_begin === undefined)
        selected_program_2_sched_1_begin = "";
    if (selected_program_2_sched_1_end === undefined)
        selected_program_2_sched_1_end = "";
    if (selected_program_2_sched_2_begin === undefined)
        selected_program_2_sched_2_begin = "";
    if (selected_program_2_sched_2_end === undefined)
        selected_program_2_sched_2_end = "";
    if (selected_program_2_sched_3_begin === undefined)
        selected_program_2_sched_3_begin = "";
    if (selected_program_2_sched_3_end === undefined)
        selected_program_2_sched_3_end = "";
    if (selected_program_3_off_on_and_days === undefined)
        selected_program_3_off_on_and_days = "";
    if (selected_program_3_bright === undefined)
        selected_program_3_bright = "";
    if (selected_program_3_speed === undefined)
        selected_program_3_speed = "";
    if (selected_program_3_sched_number === undefined)
        selected_program_3_sched_number = "";
    if (selected_program_3_sched_1_begin === undefined)
        selected_program_3_sched_1_begin = "";
    if (selected_program_3_sched_1_end === undefined)
        selected_program_3_sched_1_end = "";
    if (selected_program_3_sched_2_begin === undefined)
        selected_program_3_sched_2_begin = "";
    if (selected_program_3_sched_2_end === undefined)
        selected_program_3_sched_2_end = "";
    if (selected_program_3_sched_3_begin === undefined)
        selected_program_3_sched_3_begin = "";
    if (selected_program_3_sched_3_end === undefined)
        selected_program_3_sched_3_end = "";

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    // Fill Blank

    if (is_void(selected_program_1_sched_2_begin) && !is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_begin = "00";
    if (!is_void(selected_program_1_sched_2_begin) && is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_end = "00";
    if (is_void(selected_program_1_sched_3_begin) && !is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_begin = "00";
    if (!is_void(selected_program_1_sched_3_begin) && is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_end = "00";

    // Delete Void Sched

    if (selected_program_1_sched_2_begin === "00" && selected_program_1_sched_2_end === "00") {
        selected_program_1_sched_2_begin = "";
        selected_program_1_sched_2_end = "";
    }
    if (selected_program_1_sched_3_begin === "00" && selected_program_1_sched_3_end === "00") {
        selected_program_1_sched_3_begin = "";
        selected_program_1_sched_3_end = "";
    }

    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);

    // Final

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(selected_program_1_off_on_and_days + "     " + selected_program_1_bright + "     " + selected_program_1_speed + "     " + selected_program_1_sched_number + "     " + selected_program_1_sched_1_begin + "     " + selected_program_1_sched_1_end + "     " + selected_program_1_sched_2_begin + "     " + selected_program_1_sched_2_end + "     " + selected_program_1_sched_3_begin + "     " + selected_program_1_sched_3_end + "     ");
    console.log(selected_program_2_off_on_and_days + "     " + selected_program_2_bright + "     " + selected_program_2_speed + "     " + selected_program_2_sched_number + "     " + selected_program_2_sched_1_begin + "     " + selected_program_2_sched_1_end + "     " + selected_program_2_sched_2_begin + "     " + selected_program_2_sched_2_end + "     " + selected_program_2_sched_3_begin + "     " + selected_program_2_sched_3_end + "     ");
    console.log(selected_program_3_off_on_and_days + "     " + selected_program_3_bright + "     " + selected_program_3_speed + "     " + selected_program_3_sched_number + "     " + selected_program_3_sched_1_begin + "     " + selected_program_3_sched_1_end + "     " + selected_program_3_sched_2_begin + "     " + selected_program_3_sched_2_end + "     " + selected_program_3_sched_3_begin + "     " + selected_program_3_sched_3_end + "     ");

    if (old_programs_number !== selected_programs_number) {
        console.log("old_programs_number (" + old_programs_number + ") -----> selected_programs_number (" + selected_programs_number + ")");
    }
    if (old_program_1_off_on_and_days !== selected_program_1_off_on_and_days) {
        console.log("old_program_1_off_on_and_days (" + old_program_1_off_on_and_days + ") -----> selected_program_1_off_on_and_days (" + selected_program_1_off_on_and_days + ")");
    }
    if (old_program_1_bright !== selected_program_1_bright) {
        console.log("old_program_1_bright (" + old_program_1_bright + ") -----> selected_program_1_bright (" + selected_program_1_bright + ")");
    }
    if (old_program_1_speed !== selected_program_1_speed) {
        console.log("old_program_1_speed (" + old_program_1_speed + ") -----> selected_program_1_speed (" + selected_program_1_speed + ")");
    }
    if (old_program_1_sched_number !== selected_program_1_sched_number) {
        console.log("old_program_1_sched_number (" + old_program_1_sched_number + ") -----> selected_program_1_sched_number (" + selected_program_1_sched_number + ")");
    }
    if (old_program_1_sched_1_begin !== selected_program_1_sched_1_begin) {
        console.log("old_program_1_sched_1_begin (" + old_program_1_sched_1_begin + ") -----> selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ")");
    }
    if (old_program_1_sched_1_end !== selected_program_1_sched_1_end) {
        console.log("old_program_1_sched_1_end (" + old_program_1_sched_1_end + ") -----> selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ")");
    }
    if (old_program_1_sched_2_begin !== selected_program_1_sched_2_begin) {
        console.log("old_program_1_sched_2_begin (" + old_program_1_sched_2_begin + ") -----> selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ")");
    }
    if (old_program_1_sched_2_end !== selected_program_1_sched_2_end) {
        console.log("old_program_1_sched_2_end (" + old_program_1_sched_2_end + ") -----> selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ")");
    }
    if (old_program_1_sched_3_begin !== selected_program_1_sched_3_begin) {
        console.log("old_program_1_sched_3_begin (" + old_program_1_sched_3_begin + ") -----> selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ")");
    }
    if (old_program_1_sched_3_end !== selected_program_1_sched_3_end) {
        console.log("old_program_1_sched_3_end (" + old_program_1_sched_3_end + ") -----> selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ")");
    }
    if (old_program_2_off_on_and_days !== selected_program_2_off_on_and_days) {
        console.log("old_program_2_off_on_and_days (" + old_program_2_off_on_and_days + ") -----> selected_program_2_off_on_and_days (" + selected_program_2_off_on_and_days + ")");
    }
    if (old_program_2_bright !== selected_program_2_bright) {
        console.log("old_program_2_bright (" + old_program_2_bright + ") -----> selected_program_2_bright (" + selected_program_2_bright + ")");
    }
    if (old_program_2_speed !== selected_program_2_speed) {
        console.log("old_program_2_speed (" + old_program_2_speed + ") -----> selected_program_2_speed (" + selected_program_2_speed + ")");
    }
    if (old_program_2_sched_number !== selected_program_2_sched_number) {
        console.log("old_program_2_sched_number (" + old_program_2_sched_number + ") -----> selected_program_2_sched_number (" + selected_program_2_sched_number + ")");
    }
    if (old_program_2_sched_1_begin !== selected_program_2_sched_1_begin) {
        console.log("old_program_2_sched_1_begin (" + old_program_2_sched_1_begin + ") -----> selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ")");
    }
    if (old_program_2_sched_1_end !== selected_program_2_sched_1_end) {
        console.log("old_program_2_sched_1_end (" + old_program_2_sched_1_end + ") -----> selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ")");
    }
    if (old_program_2_sched_2_begin !== selected_program_2_sched_2_begin) {
        console.log("old_program_2_sched_2_begin (" + old_program_2_sched_2_begin + ") -----> selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ")");
    }
    if (old_program_2_sched_2_end !== selected_program_2_sched_2_end) {
        console.log("old_program_2_sched_2_end (" + old_program_2_sched_2_end + ") -----> selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ")");
    }
    if (old_program_2_sched_3_begin !== selected_program_2_sched_3_begin) {
        console.log("old_program_2_sched_3_begin (" + old_program_2_sched_3_begin + ") -----> selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ")");
    }
    if (old_program_2_sched_3_end !== selected_program_2_sched_3_end) {
        console.log("old_program_2_sched_3_end (" + old_program_2_sched_3_end + ") -----> selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ")");
    }
    if (old_program_3_off_on_and_days !== selected_program_3_off_on_and_days) {
        console.log("old_program_3_off_on_and_days (" + old_program_3_off_on_and_days + ") -----> selected_program_3_off_on_and_days (" + selected_program_3_off_on_and_days + ")");
    }
    if (old_program_3_bright !== selected_program_3_bright) {
        console.log("old_program_3_bright (" + old_program_3_bright + ") -----> selected_program_3_bright (" + selected_program_3_bright + ")");
    }
    if (old_program_3_speed !== selected_program_3_speed) {
        console.log("old_program_3_speed (" + old_program_3_speed + ") -----> selected_program_3_speed (" + selected_program_3_speed + ")");
    }
    if (old_program_3_sched_number !== selected_program_3_sched_number) {
        console.log("old_program_3_sched_number (" + old_program_3_sched_number + ") -----> selected_program_3_sched_number (" + selected_program_3_sched_number + ")");
    }
    if (old_program_3_sched_1_begin !== selected_program_3_sched_1_begin) {
        console.log("old_program_3_sched_1_begin (" + old_program_3_sched_1_begin + ") -----> selected_program_3_sched_1_begin (" + selected_program_3_sched_1_begin + ")");
    }
    if (old_program_3_sched_1_end !== selected_program_3_sched_1_end) {
        console.log("old_program_3_sched_1_end (" + old_program_3_sched_1_end + ") -----> selected_program_3_sched_1_end (" + selected_program_3_sched_1_end + ")");
    }
    if (old_program_3_sched_2_begin !== selected_program_3_sched_2_begin) {
        console.log("old_program_3_sched_2_begin (" + old_program_3_sched_2_begin + ") -----> selected_program_3_sched_2_begin (" + selected_program_3_sched_2_begin + ")");
    }
    if (old_program_3_sched_2_end !== selected_program_3_sched_2_end) {
        console.log("old_program_3_sched_2_end (" + old_program_3_sched_2_end + ") -----> selected_program_3_sched_2_end (" + selected_program_3_sched_2_end + ")");
    }
    if (old_program_3_sched_3_begin !== selected_program_3_sched_3_begin) {
        console.log("old_program_3_sched_3_begin (" + old_program_3_sched_3_begin + ") -----> selected_program_3_sched_3_begin (" + selected_program_3_sched_3_begin + ")");
    }
    if (old_program_3_sched_3_end !== selected_program_3_sched_3_end) {
        console.log("old_program_3_sched_3_end (" + old_program_3_sched_3_end + ") -----> selected_program_3_sched_3_end (" + selected_program_3_sched_3_end + ")");
    }

    var new_auxiliary_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}${selected_program_1_bright}${selected_program_1_speed}${selected_program_1_sched_number}${selected_program_1_sched_1_begin}${selected_program_1_sched_1_end}${selected_program_1_sched_2_begin}${selected_program_1_sched_2_end}${selected_program_1_sched_3_begin}${selected_program_1_sched_3_end}${selected_program_2_off_on_and_days}${selected_program_2_bright}${selected_program_2_speed}${selected_program_2_sched_number}${selected_program_2_sched_1_begin}${selected_program_2_sched_1_end}${selected_program_2_sched_2_begin}${selected_program_2_sched_2_end}${selected_program_2_sched_3_begin}${selected_program_2_sched_3_end}${selected_program_3_off_on_and_days}${selected_program_3_bright}${selected_program_3_speed}${selected_program_3_sched_number}${selected_program_3_sched_1_begin}${selected_program_3_sched_1_end}${selected_program_3_sched_2_begin}${selected_program_3_sched_2_end}${selected_program_3_sched_3_begin}${selected_program_3_sched_3_end}`;
    console.log("new_auxiliary_sched = " + new_auxiliary_sched);

    var ok = check_sched_for_errors(selected_programs_number, selected_program_1_off_on_and_days, selected_program_1_bright, selected_program_1_speed, selected_program_1_sched_number, selected_program_1_sched_1_begin, selected_program_1_sched_1_end, selected_program_1_sched_2_begin, selected_program_1_sched_2_end, selected_program_1_sched_3_begin, selected_program_1_sched_3_end, selected_program_2_off_on_and_days, selected_program_2_bright, selected_program_2_speed, selected_program_2_sched_number, selected_program_2_sched_1_begin, selected_program_2_sched_1_end, selected_program_2_sched_2_begin, selected_program_2_sched_2_end, selected_program_2_sched_3_begin, selected_program_2_sched_3_end, selected_program_3_off_on_and_days, selected_program_3_bright, selected_program_3_speed, selected_program_3_sched_number, selected_program_3_sched_1_begin, selected_program_3_sched_1_end, selected_program_3_sched_2_begin, selected_program_3_sched_2_end, selected_program_3_sched_3_begin, selected_program_3_sched_3_end);

    set_auxiliary_sched_value_save = new_auxiliary_sched;
    return new_auxiliary_sched;
//    if (ok)
//        quick_send("s44_w", "auxiliary_sched", "info", "desired", new_auxiliary_sched);

    // quick_send("s44_w", "auxiliary_sched", "info", "desired", new_auxiliary_sched);
    // quick_send("s44_w", "auxiliary_sched", "info", "desired", "02 FE 64 64 03 04 08 7E 64 64 03 04 08 03");
    // hard reset : quick_send("s44_w", "auxiliary_sched", "info", "desired", "027E64640104887E6464010488");
    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88
    // 02 7E 64 64 01 04 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 0F 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 10 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0C 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0C 17 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0A 0D 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 0A 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 08 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 08 0C 00 00 00 7E 64 64 01
}

var set_sched_value_save = "";

function set_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_sched_value_save === "") {
        var x3_sched = get_value_from_position(eq_modal, "x3_sched");
    } else {
        var x3_sched = set_sched_value_save;
    }
    console.log("x3_sched = " + x3_sched);


    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88

    var selected_programs_number = get_sched_value(x3_sched, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(x3_sched, "program_1_off_on_and_days");
    var selected_program_1_bright = get_sched_value(x3_sched, "program_1_bright");
    var selected_program_1_speed = get_sched_value(x3_sched, "program_1_speed");
    var selected_program_1_sched_number = get_sched_value(x3_sched, "program_1_sched_number");
    var selected_program_1_sched_1_begin = get_sched_value(x3_sched, "program_1_sched_1_begin");
    var selected_program_1_sched_1_end = get_sched_value(x3_sched, "program_1_sched_1_end");
    var selected_program_1_sched_2_begin = get_sched_value(x3_sched, "program_1_sched_2_begin");
    var selected_program_1_sched_2_end = get_sched_value(x3_sched, "program_1_sched_2_end");
    var selected_program_1_sched_3_begin = get_sched_value(x3_sched, "program_1_sched_3_begin");
    var selected_program_1_sched_3_end = get_sched_value(x3_sched, "program_1_sched_3_end");
    var selected_program_2_off_on_and_days = get_sched_value(x3_sched, "program_2_off_on_and_days");
    var selected_program_2_bright = get_sched_value(x3_sched, "program_2_bright");
    var selected_program_2_speed = get_sched_value(x3_sched, "program_2_speed");
    var selected_program_2_sched_number = get_sched_value(x3_sched, "program_2_sched_number");
    var selected_program_2_sched_1_begin = get_sched_value(x3_sched, "program_2_sched_1_begin");
    var selected_program_2_sched_1_end = get_sched_value(x3_sched, "program_2_sched_1_end");
    var selected_program_2_sched_2_begin = get_sched_value(x3_sched, "program_2_sched_2_begin");
    var selected_program_2_sched_2_end = get_sched_value(x3_sched, "program_2_sched_2_end");
    var selected_program_2_sched_3_begin = get_sched_value(x3_sched, "program_2_sched_3_begin");
    var selected_program_2_sched_3_end = get_sched_value(x3_sched, "program_2_sched_3_end");
    var selected_program_3_off_on_and_days = get_sched_value(x3_sched, "program_3_off_on_and_days");
    var selected_program_3_bright = get_sched_value(x3_sched, "program_3_bright");
    var selected_program_3_speed = get_sched_value(x3_sched, "program_3_speed");
    var selected_program_3_sched_number = get_sched_value(x3_sched, "program_3_sched_number");
    var selected_program_3_sched_1_begin = get_sched_value(x3_sched, "program_3_sched_1_begin");
    var selected_program_3_sched_1_end = get_sched_value(x3_sched, "program_3_sched_1_end");
    var selected_program_3_sched_2_begin = get_sched_value(x3_sched, "program_3_sched_2_begin");
    var selected_program_3_sched_2_end = get_sched_value(x3_sched, "program_3_sched_2_end");
    var selected_program_3_sched_3_begin = get_sched_value(x3_sched, "program_3_sched_3_begin");
    var selected_program_3_sched_3_end = get_sched_value(x3_sched, "program_3_sched_3_end");


    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    selected_program_1_sched_1_end = fix_end_dec(selected_program_1_sched_1_end);
    selected_program_1_sched_2_end = fix_end_dec(selected_program_1_sched_2_end);
    selected_program_1_sched_3_end = fix_end_dec(selected_program_1_sched_3_end);
    selected_program_2_sched_1_end = fix_end_dec(selected_program_2_sched_1_end);
    selected_program_2_sched_2_end = fix_end_dec(selected_program_2_sched_2_end);
    selected_program_2_sched_3_end = fix_end_dec(selected_program_2_sched_3_end);
    selected_program_3_sched_1_end = fix_end_dec(selected_program_3_sched_1_end);
    selected_program_3_sched_2_end = fix_end_dec(selected_program_3_sched_2_end);
    selected_program_3_sched_3_end = fix_end_dec(selected_program_3_sched_3_end);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    var old_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    var old_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    var old_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    var old_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    var old_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    var old_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    var old_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    var old_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    var old_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    var old_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    var old_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    var old_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    var old_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    var old_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    var old_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    var old_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    var old_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    var old_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    var old_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    var old_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    var old_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    var old_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    var old_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    var old_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    var old_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    var old_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    var old_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    var old_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    var old_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";
    if (old_program_1_bright === undefined)
        old_program_1_bright = "";
    if (old_program_1_speed === undefined)
        old_program_1_speed = "";
    if (old_program_1_sched_number === undefined)
        old_program_1_sched_number = "";
    if (old_program_1_sched_1_begin === undefined)
        old_program_1_sched_1_begin = "";
    if (old_program_1_sched_1_end === undefined)
        old_program_1_sched_1_end = "";
    if (old_program_1_sched_2_begin === undefined)
        old_program_1_sched_2_begin = "";
    if (old_program_1_sched_2_end === undefined)
        old_program_1_sched_2_end = "";
    if (old_program_1_sched_3_begin === undefined)
        old_program_1_sched_3_begin = "";
    if (old_program_1_sched_3_end === undefined)
        old_program_1_sched_3_end = "";
    if (old_program_2_off_on_and_days === undefined)
        old_program_2_off_on_and_days = "";
    if (old_program_2_bright === undefined)
        old_program_2_bright = "";
    if (old_program_2_speed === undefined)
        old_program_2_speed = "";
    if (old_program_2_sched_number === undefined)
        old_program_2_sched_number = "";
    if (old_program_2_sched_1_begin === undefined)
        old_program_2_sched_1_begin = "";
    if (old_program_2_sched_1_end === undefined)
        old_program_2_sched_1_end = "";
    if (old_program_2_sched_2_begin === undefined)
        old_program_2_sched_2_begin = "";
    if (old_program_2_sched_2_end === undefined)
        old_program_2_sched_2_end = "";
    if (old_program_2_sched_3_begin === undefined)
        old_program_2_sched_3_begin = "";
    if (old_program_2_sched_3_end === undefined)
        old_program_2_sched_3_end = "";
    if (old_program_3_off_on_and_days === undefined)
        old_program_3_off_on_and_days = "";
    if (old_program_3_bright === undefined)
        old_program_3_bright = "";
    if (old_program_3_speed === undefined)
        old_program_3_speed = "";
    if (old_program_3_sched_number === undefined)
        old_program_3_sched_number = "";
    if (old_program_3_sched_1_begin === undefined)
        old_program_3_sched_1_begin = "";
    if (old_program_3_sched_1_end === undefined)
        old_program_3_sched_1_end = "";
    if (old_program_3_sched_2_begin === undefined)
        old_program_3_sched_2_begin = "";
    if (old_program_3_sched_2_end === undefined)
        old_program_3_sched_2_end = "";
    if (old_program_3_sched_3_begin === undefined)
        old_program_3_sched_3_begin = "";
    if (old_program_3_sched_3_end === undefined)
        old_program_3_sched_3_end = "";

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(old_program_1_off_on_and_days + "     " + old_program_1_bright + "     " + old_program_1_speed + "     " + old_program_1_sched_number + "     " + old_program_1_sched_1_begin + "     " + old_program_1_sched_1_end + "     " + old_program_1_sched_2_begin + "     " + old_program_1_sched_2_end + "     " + old_program_1_sched_3_begin + "     " + old_program_1_sched_3_end + "     ");
    console.log(old_program_2_off_on_and_days + "     " + old_program_2_bright + "     " + old_program_2_speed + "     " + old_program_2_sched_number + "     " + old_program_2_sched_1_begin + "     " + old_program_2_sched_1_end + "     " + old_program_2_sched_2_begin + "     " + old_program_2_sched_2_end + "     " + old_program_2_sched_3_begin + "     " + old_program_2_sched_3_end + "     ");
    console.log(old_program_3_off_on_and_days + "     " + old_program_3_bright + "     " + old_program_3_speed + "     " + old_program_3_sched_number + "     " + old_program_3_sched_1_begin + "     " + old_program_3_sched_1_end + "     " + old_program_3_sched_2_begin + "     " + old_program_3_sched_2_end + "     " + old_program_3_sched_3_begin + "     " + old_program_3_sched_3_end + "     ");


    // Ajout des nouvelles valeurs

    if ("progs_number" === name)
        selected_programs_number = value;
    else if ("prog_1_off_on_and_days" === name)
        selected_program_1_off_on_and_days = value;
    else if ("prog_1_bright" === name)
        selected_program_1_bright = value;
    else if ("prog_1_speed" === name)
        selected_program_1_speed = value;
    else if ("prog_1_sched_number" === name)
        selected_program_1_sched_number = value;
    else if ("prog_1_sched_1_begin" === name)
        selected_program_1_sched_1_begin = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_sched_1_end = value;
    else if ("prog_1_sched_2_begin" === name)
        selected_program_1_sched_2_begin = value;
    else if ("prog_1_sched_2_end" === name)
        selected_program_1_sched_2_end = value;
    else if ("prog_1_sched_3_begin" === name)
        selected_program_1_sched_3_begin = value;
    else if ("prog_1_sched_3_end" === name)
        selected_program_1_sched_3_end = value;
    else if ("prog_2_off_on_and_days" === name)
        selected_program_2_off_on_and_days = value;
    else if ("prog_2_bright" === name)
        selected_program_2_bright = value;
    else if ("prog_2_speed" === name)
        selected_program_2_speed = value;
    else if ("prog_2_sched_number" === name)
        selected_program_2_sched_number = value;
    else if ("prog_2_sched_1_begin" === name)
        selected_program_2_sched_1_begin = value;
    else if ("prog_2_sched_1_end" === name)
        selected_program_2_sched_1_end = value;
    else if ("prog_2_sched_2_begin" === name)
        selected_program_2_sched_2_begin = value;
    else if ("prog_2_sched_2_end" === name)
        selected_program_2_sched_2_end = value;
    else if ("prog_2_sched_3_begin" === name)
        selected_program_2_sched_3_begin = value;
    else if ("prog_2_sched_3_end" === name)
        selected_program_2_sched_3_end = value;
    else if ("prog_3_off_on_and_days" === name)
        selected_program_3_off_on_and_days = value;
    else if ("prog_3_bright" === name)
        selected_program_3_bright = value;
    else if ("prog_3_speed" === name)
        selected_program_3_speed = value;
    else if ("prog_3_sched_number" === name)
        selected_program_3_sched_number = value;
    else if ("prog_3_sched_1_begin" === name)
        selected_program_3_sched_1_begin = value;
    else if ("prog_3_sched_1_end" === name)
        selected_program_3_sched_1_end = value;
    else if ("prog_3_sched_2_begin" === name)
        selected_program_3_sched_2_begin = value;
    else if ("prog_3_sched_2_end" === name)
        selected_program_3_sched_2_end = value;
    else if ("prog_3_sched_3_begin" === name)
        selected_program_3_sched_3_begin = value;
    else if ("prog_3_sched_3_end" === name)
        selected_program_3_sched_3_end = value;

    // fix sched number

    if (selected_program_1_sched_1_begin > 0 || selected_program_1_sched_1_end > 0)
        selected_program_1_sched_number = 1;
    if (selected_program_1_sched_2_begin > 0 || selected_program_1_sched_2_end > 0)
        selected_program_1_sched_number = 2;
    if (selected_program_1_sched_3_begin > 0 || selected_program_1_sched_3_end > 0)
        selected_program_1_sched_number = 3;

//    if (selected_program_1_sched_1_begin > 0) {
//        console.log("selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ") > 0");
//    }
//    if (selected_program_1_sched_1_end > 0) {
//        console.log("selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ") > 0");
//    }
//    if (selected_program_1_sched_2_begin > 0) {
//        console.log("selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ") > 0");
//    }
//    if (selected_program_1_sched_2_end > 0) {
//        console.log("selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ") > 0");
//    }
//    if (selected_program_1_sched_3_begin > 0) {
//        console.log("selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ") > 0");
//    }
//    if (selected_program_1_sched_3_end > 0) {
//        console.log("selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ") > 0");
//    }
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);

    if (selected_program_2_sched_1_begin > 0 || selected_program_2_sched_1_end > 0)
        selected_program_2_sched_number = 1;
    if (selected_program_2_sched_2_begin > 0 || selected_program_2_sched_2_end > 0)
        selected_program_2_sched_number = 2;
    if (selected_program_2_sched_3_begin > 0 || selected_program_2_sched_3_end > 0)
        selected_program_2_sched_number = 3;

    if (selected_program_2_sched_1_begin > 0) {
        console.log("selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ") > 0");
    }
    if (selected_program_2_sched_1_end > 0) {
        console.log("selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ") > 0");
    }
    if (selected_program_2_sched_2_begin > 0) {
        console.log("selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ") > 0");
    }
    if (selected_program_2_sched_2_end > 0) {
        console.log("selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ") > 0");
    }
    if (selected_program_2_sched_3_begin > 0) {
        console.log("selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ") > 0");
    }
    if (selected_program_2_sched_3_end > 0) {
        console.log("selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ") > 0");
    }
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);

    // Convertion

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);
    selected_program_1_bright = converter("dec", "hex", selected_program_1_bright);
    selected_program_1_speed = converter("dec", "hex", selected_program_1_speed);
    selected_program_1_sched_number = converter("dec", "hex", selected_program_1_sched_number);
    selected_program_1_sched_1_begin = converter("dec", "hex", selected_program_1_sched_1_begin);
    selected_program_1_sched_1_end = converter("dec", "hex", selected_program_1_sched_1_end);
    selected_program_1_sched_2_begin = converter("dec", "hex", selected_program_1_sched_2_begin);
    selected_program_1_sched_2_end = converter("dec", "hex", selected_program_1_sched_2_end);
    selected_program_1_sched_3_begin = converter("dec", "hex", selected_program_1_sched_3_begin);
    selected_program_1_sched_3_end = converter("dec", "hex", selected_program_1_sched_3_end);
    selected_program_2_off_on_and_days = converter("dec", "hex", selected_program_2_off_on_and_days);
    selected_program_2_bright = converter("dec", "hex", selected_program_2_bright);
    selected_program_2_speed = converter("dec", "hex", selected_program_2_speed);
    selected_program_2_sched_number = converter("dec", "hex", selected_program_2_sched_number);
    selected_program_2_sched_1_begin = converter("dec", "hex", selected_program_2_sched_1_begin);
    selected_program_2_sched_1_end = converter("dec", "hex", selected_program_2_sched_1_end);
    selected_program_2_sched_2_begin = converter("dec", "hex", selected_program_2_sched_2_begin);
    selected_program_2_sched_2_end = converter("dec", "hex", selected_program_2_sched_2_end);
    selected_program_2_sched_3_begin = converter("dec", "hex", selected_program_2_sched_3_begin);
    selected_program_2_sched_3_end = converter("dec", "hex", selected_program_2_sched_3_end);
    selected_program_3_off_on_and_days = converter("dec", "hex", selected_program_3_off_on_and_days);
    selected_program_3_bright = converter("dec", "hex", selected_program_3_bright);
    selected_program_3_speed = converter("dec", "hex", selected_program_3_speed);
    selected_program_3_sched_number = converter("dec", "hex", selected_program_3_sched_number);
    selected_program_3_sched_1_begin = converter("dec", "hex", selected_program_3_sched_1_begin);
    selected_program_3_sched_1_end = converter("dec", "hex", selected_program_3_sched_1_end);
    selected_program_3_sched_2_begin = converter("dec", "hex", selected_program_3_sched_2_begin);
    selected_program_3_sched_2_end = converter("dec", "hex", selected_program_3_sched_2_end);
    selected_program_3_sched_3_begin = converter("dec", "hex", selected_program_3_sched_3_begin);
    selected_program_3_sched_3_end = converter("dec", "hex", selected_program_3_sched_3_end);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";
    if (selected_program_1_bright === undefined)
        selected_program_1_bright = "";
    if (selected_program_1_speed === undefined)
        selected_program_1_speed = "";
    if (selected_program_1_sched_number === undefined)
        selected_program_1_sched_number = "";
    if (selected_program_1_sched_1_begin === undefined)
        selected_program_1_sched_1_begin = "";
    if (selected_program_1_sched_1_end === undefined)
        selected_program_1_sched_1_end = "";
    if (selected_program_1_sched_2_begin === undefined)
        selected_program_1_sched_2_begin = "";
    if (selected_program_1_sched_2_end === undefined)
        selected_program_1_sched_2_end = "";
    if (selected_program_1_sched_3_begin === undefined)
        selected_program_1_sched_3_begin = "";
    if (selected_program_1_sched_3_end === undefined)
        selected_program_1_sched_3_end = "";
    if (selected_program_2_off_on_and_days === undefined)
        selected_program_2_off_on_and_days = "";
    if (selected_program_2_bright === undefined)
        selected_program_2_bright = "";
    if (selected_program_2_speed === undefined)
        selected_program_2_speed = "";
    if (selected_program_2_sched_number === undefined)
        selected_program_2_sched_number = "";
    if (selected_program_2_sched_1_begin === undefined)
        selected_program_2_sched_1_begin = "";
    if (selected_program_2_sched_1_end === undefined)
        selected_program_2_sched_1_end = "";
    if (selected_program_2_sched_2_begin === undefined)
        selected_program_2_sched_2_begin = "";
    if (selected_program_2_sched_2_end === undefined)
        selected_program_2_sched_2_end = "";
    if (selected_program_2_sched_3_begin === undefined)
        selected_program_2_sched_3_begin = "";
    if (selected_program_2_sched_3_end === undefined)
        selected_program_2_sched_3_end = "";
    if (selected_program_3_off_on_and_days === undefined)
        selected_program_3_off_on_and_days = "";
    if (selected_program_3_bright === undefined)
        selected_program_3_bright = "";
    if (selected_program_3_speed === undefined)
        selected_program_3_speed = "";
    if (selected_program_3_sched_number === undefined)
        selected_program_3_sched_number = "";
    if (selected_program_3_sched_1_begin === undefined)
        selected_program_3_sched_1_begin = "";
    if (selected_program_3_sched_1_end === undefined)
        selected_program_3_sched_1_end = "";
    if (selected_program_3_sched_2_begin === undefined)
        selected_program_3_sched_2_begin = "";
    if (selected_program_3_sched_2_end === undefined)
        selected_program_3_sched_2_end = "";
    if (selected_program_3_sched_3_begin === undefined)
        selected_program_3_sched_3_begin = "";
    if (selected_program_3_sched_3_end === undefined)
        selected_program_3_sched_3_end = "";

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
    // console.log("selected_program_1_bright = " + selected_program_1_bright);
    // console.log("selected_program_1_speed = " + selected_program_1_speed);
    // console.log("selected_program_1_sched_number = " + selected_program_1_sched_number);
    // console.log("selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
    // console.log("selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
    // console.log("selected_program_2_bright = " + selected_program_2_bright);
    // console.log("selected_program_2_speed = " + selected_program_2_speed);
    // console.log("selected_program_2_sched_number = " + selected_program_2_sched_number);
    // console.log("selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
    // console.log("selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
    // console.log("selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
    // console.log("selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
    // console.log("selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
    // console.log("selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
    // console.log("selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
    // console.log("selected_program_3_bright = " + selected_program_3_bright);
    // console.log("selected_program_3_speed = " + selected_program_3_speed);
    // console.log("selected_program_3_sched_number = " + selected_program_3_sched_number);
    // console.log("selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
    // console.log("selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
    // console.log("selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
    // console.log("selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
    // console.log("selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
    // console.log("selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);

    // Fill Blank

    if (is_void(selected_program_1_sched_2_begin) && !is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_begin = "00";
    if (!is_void(selected_program_1_sched_2_begin) && is_void(selected_program_1_sched_2_end))
        selected_program_1_sched_2_end = "00";
    if (is_void(selected_program_1_sched_3_begin) && !is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_begin = "00";
    if (!is_void(selected_program_1_sched_3_begin) && is_void(selected_program_1_sched_3_end))
        selected_program_1_sched_3_end = "00";

    // Delete Void Sched

    if (selected_program_1_sched_2_begin === "00" && selected_program_1_sched_2_end === "00") {
        selected_program_1_sched_2_begin = "";
        selected_program_1_sched_2_end = "";
    }
    if (selected_program_1_sched_3_begin === "00" && selected_program_1_sched_3_end === "00") {
        selected_program_1_sched_3_begin = "";
        selected_program_1_sched_3_end = "";
    }

    // console.log("selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
    // console.log("selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
    // console.log("selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);

    // Final

    console.log("off_on bright speeds scheds begin1 endin1 begin2 endin2 begin3 endin3");
    console.log(selected_program_1_off_on_and_days + "     " + selected_program_1_bright + "     " + selected_program_1_speed + "     " + selected_program_1_sched_number + "     " + selected_program_1_sched_1_begin + "     " + selected_program_1_sched_1_end + "     " + selected_program_1_sched_2_begin + "     " + selected_program_1_sched_2_end + "     " + selected_program_1_sched_3_begin + "     " + selected_program_1_sched_3_end + "     ");
    console.log(selected_program_2_off_on_and_days + "     " + selected_program_2_bright + "     " + selected_program_2_speed + "     " + selected_program_2_sched_number + "     " + selected_program_2_sched_1_begin + "     " + selected_program_2_sched_1_end + "     " + selected_program_2_sched_2_begin + "     " + selected_program_2_sched_2_end + "     " + selected_program_2_sched_3_begin + "     " + selected_program_2_sched_3_end + "     ");
    console.log(selected_program_3_off_on_and_days + "     " + selected_program_3_bright + "     " + selected_program_3_speed + "     " + selected_program_3_sched_number + "     " + selected_program_3_sched_1_begin + "     " + selected_program_3_sched_1_end + "     " + selected_program_3_sched_2_begin + "     " + selected_program_3_sched_2_end + "     " + selected_program_3_sched_3_begin + "     " + selected_program_3_sched_3_end + "     ");

    if (old_programs_number !== selected_programs_number) {
        console.log("old_programs_number (" + old_programs_number + ") -----> selected_programs_number (" + selected_programs_number + ")");
    }
    if (old_program_1_off_on_and_days !== selected_program_1_off_on_and_days) {
        console.log("old_program_1_off_on_and_days (" + old_program_1_off_on_and_days + ") -----> selected_program_1_off_on_and_days (" + selected_program_1_off_on_and_days + ")");
    }
    if (old_program_1_bright !== selected_program_1_bright) {
        console.log("old_program_1_bright (" + old_program_1_bright + ") -----> selected_program_1_bright (" + selected_program_1_bright + ")");
    }
    if (old_program_1_speed !== selected_program_1_speed) {
        console.log("old_program_1_speed (" + old_program_1_speed + ") -----> selected_program_1_speed (" + selected_program_1_speed + ")");
    }
    if (old_program_1_sched_number !== selected_program_1_sched_number) {
        console.log("old_program_1_sched_number (" + old_program_1_sched_number + ") -----> selected_program_1_sched_number (" + selected_program_1_sched_number + ")");
    }
    if (old_program_1_sched_1_begin !== selected_program_1_sched_1_begin) {
        console.log("old_program_1_sched_1_begin (" + old_program_1_sched_1_begin + ") -----> selected_program_1_sched_1_begin (" + selected_program_1_sched_1_begin + ")");
    }
    if (old_program_1_sched_1_end !== selected_program_1_sched_1_end) {
        console.log("old_program_1_sched_1_end (" + old_program_1_sched_1_end + ") -----> selected_program_1_sched_1_end (" + selected_program_1_sched_1_end + ")");
    }
    if (old_program_1_sched_2_begin !== selected_program_1_sched_2_begin) {
        console.log("old_program_1_sched_2_begin (" + old_program_1_sched_2_begin + ") -----> selected_program_1_sched_2_begin (" + selected_program_1_sched_2_begin + ")");
    }
    if (old_program_1_sched_2_end !== selected_program_1_sched_2_end) {
        console.log("old_program_1_sched_2_end (" + old_program_1_sched_2_end + ") -----> selected_program_1_sched_2_end (" + selected_program_1_sched_2_end + ")");
    }
    if (old_program_1_sched_3_begin !== selected_program_1_sched_3_begin) {
        console.log("old_program_1_sched_3_begin (" + old_program_1_sched_3_begin + ") -----> selected_program_1_sched_3_begin (" + selected_program_1_sched_3_begin + ")");
    }
    if (old_program_1_sched_3_end !== selected_program_1_sched_3_end) {
        console.log("old_program_1_sched_3_end (" + old_program_1_sched_3_end + ") -----> selected_program_1_sched_3_end (" + selected_program_1_sched_3_end + ")");
    }
    if (old_program_2_off_on_and_days !== selected_program_2_off_on_and_days) {
        console.log("old_program_2_off_on_and_days (" + old_program_2_off_on_and_days + ") -----> selected_program_2_off_on_and_days (" + selected_program_2_off_on_and_days + ")");
    }
    if (old_program_2_bright !== selected_program_2_bright) {
        console.log("old_program_2_bright (" + old_program_2_bright + ") -----> selected_program_2_bright (" + selected_program_2_bright + ")");
    }
    if (old_program_2_speed !== selected_program_2_speed) {
        console.log("old_program_2_speed (" + old_program_2_speed + ") -----> selected_program_2_speed (" + selected_program_2_speed + ")");
    }
    if (old_program_2_sched_number !== selected_program_2_sched_number) {
        console.log("old_program_2_sched_number (" + old_program_2_sched_number + ") -----> selected_program_2_sched_number (" + selected_program_2_sched_number + ")");
    }
    if (old_program_2_sched_1_begin !== selected_program_2_sched_1_begin) {
        console.log("old_program_2_sched_1_begin (" + old_program_2_sched_1_begin + ") -----> selected_program_2_sched_1_begin (" + selected_program_2_sched_1_begin + ")");
    }
    if (old_program_2_sched_1_end !== selected_program_2_sched_1_end) {
        console.log("old_program_2_sched_1_end (" + old_program_2_sched_1_end + ") -----> selected_program_2_sched_1_end (" + selected_program_2_sched_1_end + ")");
    }
    if (old_program_2_sched_2_begin !== selected_program_2_sched_2_begin) {
        console.log("old_program_2_sched_2_begin (" + old_program_2_sched_2_begin + ") -----> selected_program_2_sched_2_begin (" + selected_program_2_sched_2_begin + ")");
    }
    if (old_program_2_sched_2_end !== selected_program_2_sched_2_end) {
        console.log("old_program_2_sched_2_end (" + old_program_2_sched_2_end + ") -----> selected_program_2_sched_2_end (" + selected_program_2_sched_2_end + ")");
    }
    if (old_program_2_sched_3_begin !== selected_program_2_sched_3_begin) {
        console.log("old_program_2_sched_3_begin (" + old_program_2_sched_3_begin + ") -----> selected_program_2_sched_3_begin (" + selected_program_2_sched_3_begin + ")");
    }
    if (old_program_2_sched_3_end !== selected_program_2_sched_3_end) {
        console.log("old_program_2_sched_3_end (" + old_program_2_sched_3_end + ") -----> selected_program_2_sched_3_end (" + selected_program_2_sched_3_end + ")");
    }
    if (old_program_3_off_on_and_days !== selected_program_3_off_on_and_days) {
        console.log("old_program_3_off_on_and_days (" + old_program_3_off_on_and_days + ") -----> selected_program_3_off_on_and_days (" + selected_program_3_off_on_and_days + ")");
    }
    if (old_program_3_bright !== selected_program_3_bright) {
        console.log("old_program_3_bright (" + old_program_3_bright + ") -----> selected_program_3_bright (" + selected_program_3_bright + ")");
    }
    if (old_program_3_speed !== selected_program_3_speed) {
        console.log("old_program_3_speed (" + old_program_3_speed + ") -----> selected_program_3_speed (" + selected_program_3_speed + ")");
    }
    if (old_program_3_sched_number !== selected_program_3_sched_number) {
        console.log("old_program_3_sched_number (" + old_program_3_sched_number + ") -----> selected_program_3_sched_number (" + selected_program_3_sched_number + ")");
    }
    if (old_program_3_sched_1_begin !== selected_program_3_sched_1_begin) {
        console.log("old_program_3_sched_1_begin (" + old_program_3_sched_1_begin + ") -----> selected_program_3_sched_1_begin (" + selected_program_3_sched_1_begin + ")");
    }
    if (old_program_3_sched_1_end !== selected_program_3_sched_1_end) {
        console.log("old_program_3_sched_1_end (" + old_program_3_sched_1_end + ") -----> selected_program_3_sched_1_end (" + selected_program_3_sched_1_end + ")");
    }
    if (old_program_3_sched_2_begin !== selected_program_3_sched_2_begin) {
        console.log("old_program_3_sched_2_begin (" + old_program_3_sched_2_begin + ") -----> selected_program_3_sched_2_begin (" + selected_program_3_sched_2_begin + ")");
    }
    if (old_program_3_sched_2_end !== selected_program_3_sched_2_end) {
        console.log("old_program_3_sched_2_end (" + old_program_3_sched_2_end + ") -----> selected_program_3_sched_2_end (" + selected_program_3_sched_2_end + ")");
    }
    if (old_program_3_sched_3_begin !== selected_program_3_sched_3_begin) {
        console.log("old_program_3_sched_3_begin (" + old_program_3_sched_3_begin + ") -----> selected_program_3_sched_3_begin (" + selected_program_3_sched_3_begin + ")");
    }
    if (old_program_3_sched_3_end !== selected_program_3_sched_3_end) {
        console.log("old_program_3_sched_3_end (" + old_program_3_sched_3_end + ") -----> selected_program_3_sched_3_end (" + selected_program_3_sched_3_end + ")");
    }

    var new_x3_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}${selected_program_1_bright}${selected_program_1_speed}${selected_program_1_sched_number}${selected_program_1_sched_1_begin}${selected_program_1_sched_1_end}${selected_program_1_sched_2_begin}${selected_program_1_sched_2_end}${selected_program_1_sched_3_begin}${selected_program_1_sched_3_end}${selected_program_2_off_on_and_days}${selected_program_2_bright}${selected_program_2_speed}${selected_program_2_sched_number}${selected_program_2_sched_1_begin}${selected_program_2_sched_1_end}${selected_program_2_sched_2_begin}${selected_program_2_sched_2_end}${selected_program_2_sched_3_begin}${selected_program_2_sched_3_end}${selected_program_3_off_on_and_days}${selected_program_3_bright}${selected_program_3_speed}${selected_program_3_sched_number}${selected_program_3_sched_1_begin}${selected_program_3_sched_1_end}${selected_program_3_sched_2_begin}${selected_program_3_sched_2_end}${selected_program_3_sched_3_begin}${selected_program_3_sched_3_end}`;
    console.log("new_x3_sched = " + new_x3_sched);

    var ok = check_sched_for_errors(selected_programs_number, selected_program_1_off_on_and_days, selected_program_1_bright, selected_program_1_speed, selected_program_1_sched_number, selected_program_1_sched_1_begin, selected_program_1_sched_1_end, selected_program_1_sched_2_begin, selected_program_1_sched_2_end, selected_program_1_sched_3_begin, selected_program_1_sched_3_end, selected_program_2_off_on_and_days, selected_program_2_bright, selected_program_2_speed, selected_program_2_sched_number, selected_program_2_sched_1_begin, selected_program_2_sched_1_end, selected_program_2_sched_2_begin, selected_program_2_sched_2_end, selected_program_2_sched_3_begin, selected_program_2_sched_3_end, selected_program_3_off_on_and_days, selected_program_3_bright, selected_program_3_speed, selected_program_3_sched_number, selected_program_3_sched_1_begin, selected_program_3_sched_1_end, selected_program_3_sched_2_begin, selected_program_3_sched_2_end, selected_program_3_sched_3_begin, selected_program_3_sched_3_end);

    set_sched_value_save = new_x3_sched;
    return new_x3_sched;
//    if (ok)
//        quick_send("s44_w", "x3_sched", "info", "desired", new_x3_sched);

    // quick_send("s44_w", "x3_sched", "info", "desired", new_x3_sched);
    // quick_send("s44_w", "x3_sched", "info", "desired", "02 FE 64 64 03 04 08 7E 64 64 03 04 08 03");
    // hard reset : quick_send("s44_w", "x3_sched", "info", "desired", "027E64640104887E6464010488");
    // 02 7E 64 64 01 04 10 7E 64 64 01 04 88
    // 02 7E 64 64 01 04 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 0F 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 09 10 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0F 7E 64 64 01 04
    // 02 7E 64 64 03 04 08 0C 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0C 17 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 0A 0D 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 0A 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 01 04 08 00 00 7E 64 64 01 04 08
    // 02 7E 64 64 02 04 08 0C 00 00 00 7E 64 64 01
}

var set_light_m_sched_value_save = "";

function set_light_m_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_light_m_sched_value_save === "") {
        var light_sched_m = get_value_from_position(eq_modal, "light_sched_m");
    } else {
        var light_sched_m = set_light_m_sched_value_save;
    }
    console.log("light_sched_m = " + light_sched_m);

    var selected_programs_number = get_sched_value(light_sched_m, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(light_sched_m, "program_1_off_on_and_days");

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);

    selected_programs_number = fix_end_dec(selected_programs_number);
    selected_program_1_off_on_and_days = fix_end_dec(selected_program_1_off_on_and_days);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";

    if ("prog_1_sched_1_begin" === name)
        selected_programs_number = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_off_on_and_days = value;

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";

    // Final

    var new_x3_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}`;
    console.log("new_x3_sched = " + new_x3_sched);

    set_light_m_sched_value_save = new_x3_sched;
    console.log("set_light_m_sched_value_save = " + set_light_m_sched_value_save);

    return new_x3_sched;
}

var set_filtration_m_sched_value_save = "";

function set_filtration_m_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_filtration_m_sched_value_save === "") {
        var filtration_sched_m = get_value_from_position(eq_modal, "filt_sched_m");
    } else {
        var filtration_sched_m = set_filtration_m_sched_value_save;
    }
    console.log("filtration_sched_m = " + filtration_sched_m);

    var selected_begin_1 = get_sched_value(filtration_sched_m, "programs_number");
    var selected_end_1 = get_sched_value(filtration_sched_m, "program_1_off_on_and_days");
    var selected_begin_2 = get_sched_value(filtration_sched_m, "program_1_bright");
    var selected_end_2 = get_sched_value(filtration_sched_m, "program_1_speed");
    var selected_begin_3 = get_sched_value(filtration_sched_m, "program_1_sched_number");
    var selected_end_3 = get_sched_value(filtration_sched_m, "program_1_sched_1_begin");

    console.log("selected_begin_1 = " + selected_begin_1);
    console.log("selected_end_1 = " + selected_end_1);
    console.log("selected_begin_2 = " + selected_begin_2);
    console.log("selected_end_2 = " + selected_end_2);
    console.log("selected_begin_3 = " + selected_begin_3);
    console.log("selected_end_3 = " + selected_end_3);

    selected_begin_1 = fix_end_dec(selected_begin_1);
    selected_end_1 = fix_end_dec(selected_end_1);
    selected_begin_2 = fix_end_dec(selected_begin_2);
    selected_end_2 = fix_end_dec(selected_end_2);
    selected_begin_3 = fix_end_dec(selected_begin_3);
    selected_end_3 = fix_end_dec(selected_end_3);

    console.log("selected_begin_1 = " + selected_begin_1);
    console.log("selected_end_1 = " + selected_end_1);
    console.log("selected_begin_2 = " + selected_begin_2);
    console.log("selected_end_2 = " + selected_end_2);
    console.log("selected_begin_3 = " + selected_begin_3);
    console.log("selected_end_3 = " + selected_end_3);

    var old_begin_1 = converter("dec", "hex", selected_begin_1);
    var old_end_1 = converter("dec", "hex", selected_end_1);
    var old_begin_2 = converter("dec", "hex", selected_begin_2);
    var old_end_2 = converter("dec", "hex", selected_end_2);
    var old_begin_3 = converter("dec", "hex", selected_begin_3);
    var old_end_3 = converter("dec", "hex", selected_end_3);

    if (old_begin_1 === undefined || old_begin_1 === "FF")
        old_begin_1 = "FF";
    if (old_end_1 === undefined || old_end_1 === "FF")
        old_end_1 = "FF";
    if (old_begin_2 === undefined || old_begin_2 === "FF")
        old_begin_2 = "FF";
    if (old_end_2 === undefined || old_end_2 === "FF")
        old_end_2 = "FF";
    if (old_begin_3 === undefined || old_begin_3 === "FF")
        old_begin_3 = "FF";
    if (old_end_3 === undefined || old_end_3 === "FF")
        old_end_3 = "FF";

    if ("prog_1_sched_1_begin" === name)
        selected_begin_1 = value;
    else if ("prog_1_sched_1_end" === name)
        selected_end_1 = value;
    if ("prog_1_sched_2_begin" === name)
        selected_begin_2 = value;
    else if ("prog_1_sched_2_end" === name)
        selected_end_2 = value;
    if ("prog_1_sched_3_begin" === name)
        selected_begin_3 = value;
    else if ("prog_1_sched_3_end" === name)
        selected_end_3 = value;

    selected_begin_1 = converter("dec", "hex", selected_begin_1);
    selected_end_1 = converter("dec", "hex", selected_end_1);
    selected_begin_2 = converter("dec", "hex", selected_begin_2);
    selected_end_2 = converter("dec", "hex", selected_end_2);
    selected_begin_3 = converter("dec", "hex", selected_begin_3);
    selected_end_3 = converter("dec", "hex", selected_end_3);

    if (selected_begin_1 === undefined || selected_begin_1 === "FF")
        selected_begin_1 = "";
    if (selected_end_1 === undefined || selected_end_1 === "FF")
        selected_end_1 = "";
    if (selected_begin_2 === undefined || selected_begin_2 === "FF")
        selected_begin_2 = "";
    if (selected_end_2 === undefined || selected_end_2 === "FF")
        selected_end_2 = "";
    if (selected_begin_3 === undefined || selected_begin_3 === "FF")
        selected_begin_3 = "";
    if (selected_end_3 === undefined || selected_end_3 === "FF")
        selected_end_3 = "";

    // Final

    var new_x3_sched = `${selected_begin_1}${selected_end_1}${selected_begin_2}${selected_end_2}${selected_begin_3}${selected_end_3}`;
    console.log("new_x3_sched = " + new_x3_sched);

    set_filtration_m_sched_value_save = new_x3_sched;
    console.log("set_filtration_m_sched_value_save = " + set_filtration_m_sched_value_save);

    return new_x3_sched;
}

var set_auxiliary_1_sched_value_save = "";

function set_auxiliary_1_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_auxiliary_1_sched_value_save === "") {
        var light_sched_m = get_value_from_position(eq_modal, "light_sched_m");
    } else {
        var light_sched_m = set_auxiliary_1_sched_value_save;
    }
    console.log("light_sched_m = " + light_sched_m);

    var selected_programs_number = get_sched_value(light_sched_m, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(light_sched_m, "program_1_off_on_and_days");

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);

    selected_programs_number = fix_end_dec(selected_programs_number);
    selected_program_1_off_on_and_days = fix_end_dec(selected_program_1_off_on_and_days);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";

    if ("prog_1_sched_1_begin" === name)
        selected_programs_number = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_off_on_and_days = value;

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";

    // Final

    var new_x3_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}`;
    console.log("new_x3_sched = " + new_x3_sched);

    set_auxiliary_1_sched_value_save = new_x3_sched;
    console.log("set_auxiliary_1_sched_value_save = " + set_auxiliary_1_sched_value_save);

    return new_x3_sched;
}

var set_auxiliary_2_sched_value_save = "";

function set_auxiliary_2_sched_value(name, value) {

    // Récupération des valeurs de basesselected_program_1_sched_2_begin

    if (set_auxiliary_2_sched_value_save === "") {
        var light_sched_m = get_value_from_position(eq_modal, "light_sched_m");
    } else {
        var light_sched_m = set_auxiliary_2_sched_value_save;
    }
    console.log("light_sched_m = " + light_sched_m);

    var selected_programs_number = get_sched_value(light_sched_m, "programs_number");
    var selected_program_1_off_on_and_days = get_sched_value(light_sched_m, "program_1_off_on_and_days");

    // console.log("selected_programs_number = " + selected_programs_number);
    // console.log("selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);

    selected_programs_number = fix_end_dec(selected_programs_number);
    selected_program_1_off_on_and_days = fix_end_dec(selected_program_1_off_on_and_days);

    // console.log("selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
    // console.log("selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);

    var old_programs_number = converter("dec", "hex", selected_programs_number);
    var old_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);

    if (old_programs_number === undefined)
        old_programs_number = "";
    if (old_program_1_off_on_and_days === undefined)
        old_program_1_off_on_and_days = "";

    if ("prog_1_sched_1_begin" === name)
        selected_programs_number = value;
    else if ("prog_1_sched_1_end" === name)
        selected_program_1_off_on_and_days = value;

    selected_programs_number = converter("dec", "hex", selected_programs_number);
    selected_program_1_off_on_and_days = converter("dec", "hex", selected_program_1_off_on_and_days);

    if (selected_programs_number === undefined)
        selected_programs_number = "";
    if (selected_program_1_off_on_and_days === undefined)
        selected_program_1_off_on_and_days = "";

    // Final

    var new_x3_sched = `${selected_programs_number}${selected_program_1_off_on_and_days}`;
    console.log("new_x3_sched = " + new_x3_sched);

    set_auxiliary_2_sched_value_save = new_x3_sched;
    console.log("set_auxiliary_2_sched_value_save = " + set_auxiliary_2_sched_value_save);

    return new_x3_sched;
}

function fix_end_dec(value) {
    value = parseInt(value);
    if (value < 0)
        return value + 128;
    return value;
}

function check_sched_for_errors(selected_programs_number, selected_program_1_off_on_and_days, selected_program_1_bright, selected_program_1_speed, selected_program_1_sched_number, selected_program_1_sched_1_begin, selected_program_1_sched_1_end, selected_program_1_sched_2_begin, selected_program_1_sched_2_end, selected_program_1_sched_3_begin, selected_program_1_sched_3_end, selected_program_2_off_on_and_days, selected_program_2_bright, selected_program_2_speed, selected_program_2_sched_number, selected_program_2_sched_1_begin, selected_program_2_sched_1_end, selected_program_2_sched_2_begin, selected_program_2_sched_2_end, selected_program_2_sched_3_begin, selected_program_2_sched_3_end, selected_program_3_off_on_and_days, selected_program_3_bright, selected_program_3_speed, selected_program_3_sched_number, selected_program_3_sched_1_begin, selected_program_3_sched_1_end, selected_program_3_sched_2_begin, selected_program_3_sched_2_end, selected_program_3_sched_3_begin, selected_program_3_sched_3_end) {

    if (selected_programs_number !== "01" && selected_programs_number !== "02" && selected_programs_number !== "03") {
        console.log("ERROR SCHED : selected_programs_number = " + selected_programs_number);
        return false;
    }
    if (is_void(selected_program_1_off_on_and_days)) {
        console.log("ERROR SCHED : selected_program_1_off_on_and_days = " + selected_program_1_off_on_and_days);
        return false;
    }
    if (converter("hex", "dec", selected_program_1_bright) > 100) {
        console.log("ERROR SCHED : selected_program_1_bright = " + selected_program_1_bright);
        return false;
    }
    if (converter("hex", "dec", selected_program_1_speed) > 150) {
        console.log("ERROR SCHED : selected_program_1_speed = " + selected_program_1_speed);
        return false;
    }
    if (selected_program_1_sched_number !== "01" && selected_program_1_sched_number !== "02" && selected_program_1_sched_number !== "03") {
        console.log("ERROR SCHED : selected_program_1_sched_number = " + selected_program_1_sched_number);
        return false;
    }
    if (is_void(selected_program_1_sched_1_begin)) {
        console.log("ERROR SCHED : selected_program_1_sched_1_begin = " + selected_program_1_sched_1_begin);
        return false;
    }
    if (is_void(selected_program_1_sched_1_end)) {
        console.log("ERROR SCHED : selected_program_1_sched_1_end = " + selected_program_1_sched_1_end);
        return false;
    }
    if (is_void(selected_program_1_sched_2_begin) && selected_program_1_sched_number === "02" || selected_program_1_sched_number === "03") {
        console.log("ERROR SCHED : selected_program_1_sched_2_begin = " + selected_program_1_sched_2_begin);
        return false;
    }
    if (is_void(selected_program_1_sched_2_end) && !is_void(selected_program_1_sched_2_begin)) {
        console.log("ERROR SCHED : selected_program_1_sched_2_end = " + selected_program_1_sched_2_end);
        return false;
    }
    if (selected_program_1_sched_3_begin && selected_program_1_sched_number !== "03") {
        console.log("ERROR SCHED : selected_program_1_sched_3_begin = " + selected_program_1_sched_3_begin);
        return false;
    }
    if (is_void(selected_program_1_sched_3_end) && !is_void(selected_program_1_sched_3_begin)) {
        console.log("ERROR SCHED : selected_program_1_sched_3_end = " + selected_program_1_sched_3_end);
        return false;
    }
    if (selected_programs_number === "02" || selected_programs_number === "03") {
        if (is_void(selected_program_2_off_on_and_days)) {
            console.log("ERROR SCHED : selected_program_2_off_on_and_days = " + selected_program_2_off_on_and_days);
            return false;
        }
        if (converter("hex", "dec", selected_program_2_bright) > 100) {
            console.log("ERROR SCHED : selected_program_2_bright = " + selected_program_2_bright);
            return false;
        }
        if (converter("hex", "dec", selected_program_2_speed) > 150) {
            console.log("ERROR SCHED : selected_program_2_speed = " + selected_program_2_speed);
            return false;
        }
        if (selected_program_2_sched_number !== "01" && selected_program_2_sched_number !== "02" && selected_program_2_sched_number !== "03") {
            console.log("ERROR SCHED : selected_program_2_sched_number = " + selected_program_2_sched_number);
            console.log("ERROR SCHED : selected_program_2_sched_number = " + selected_program_2_sched_number);
            return false;
        }
        if (is_void(selected_program_2_sched_1_begin)) {
            console.log("ERROR SCHED : selected_program_2_sched_1_begin = " + selected_program_2_sched_1_begin);
            return false;
        }
        if (is_void(selected_program_2_sched_1_end)) {
            console.log("ERROR SCHED : selected_program_2_sched_1_end = " + selected_program_2_sched_1_end);
            return false;
        }
        if (is_void(selected_program_2_sched_2_begin) && selected_program_2_sched_number === "02" || selected_program_2_sched_number === "03") {
            console.log("ERROR SCHED : selected_program_2_sched_2_begin = " + selected_program_2_sched_2_begin);
            return false;
        }
        if (is_void(selected_program_2_sched_2_end) && !is_void(selected_program_2_sched_2_begin)) {
            console.log("ERROR SCHED : selected_program_2_sched_2_end = " + selected_program_2_sched_2_end);
            return false;
        }
        if (selected_program_2_sched_3_begin && selected_program_2_sched_number !== "03") {
            console.log("ERROR SCHED : selected_program_2_sched_3_begin = " + selected_program_2_sched_3_begin);
            return false;
        }
        if (is_void(selected_program_2_sched_3_end) && !is_void(selected_program_2_sched_3_begin)) {
            console.log("ERROR SCHED : selected_program_2_sched_3_end = " + selected_program_2_sched_3_end);
            return false;
        }
    }
    if (selected_programs_number === "03") {
        if (is_void(selected_program_3_off_on_and_days)) {
            console.log("ERROR SCHED : selected_program_3_off_on_and_days = " + selected_program_3_off_on_and_days);
            return false;
        }
        if (converter("hex", "dec", selected_program_3_bright) > 100) {
            console.log("ERROR SCHED : selected_program_3_bright = " + selected_program_3_bright);
            return false;
        }
        if (converter("hex", "dec", selected_program_3_speed) > 150) {
            console.log("ERROR SCHED : selected_program_3_speed = " + selected_program_3_speed);
            return false;
        }
        if (selected_program_3_sched_number !== "01" && selected_program_3_sched_number !== "02" && selected_program_3_sched_number !== "03") {
            console.log("ERROR SCHED : selected_program_3_sched_number = " + selected_program_3_sched_number);
            return false;
        }
        if (is_void(selected_program_3_sched_1_begin)) {
            console.log("ERROR SCHED : selected_program_3_sched_1_begin = " + selected_program_3_sched_1_begin);
            return false;
        }
        if (is_void(selected_program_3_sched_1_end)) {
            console.log("ERROR SCHED : selected_program_3_sched_1_end = " + selected_program_3_sched_1_end);
            return false;
        }
        if (is_void(selected_program_3_sched_2_begin) && selected_program_3_sched_number === "02" || selected_program_3_sched_number === "03") {
            console.log("ERROR SCHED : selected_program_3_sched_2_begin = " + selected_program_3_sched_2_begin);
            return false;
        }
        if (is_void(selected_program_3_sched_2_end) && !is_void(selected_program_3_sched_2_begin)) {
            console.log("ERROR SCHED : selected_program_3_sched_2_end = " + selected_program_3_sched_2_end);
            return false;
        }
        if (selected_program_3_sched_3_begin && selected_program_3_sched_number !== "03") {
            console.log("ERROR SCHED : selected_program_3_sched_3_begin = " + selected_program_3_sched_3_begin);
            return false;
        }
        if (is_void(selected_program_3_sched_3_end) && !is_void(selected_program_3_sched_3_begin)) {
            console.log("ERROR SCHED : selected_program_3_sched_3_end = " + selected_program_3_sched_3_end);
            return false;
        }
    }
    return true;
}

function is_void(value) {
    if (value === 0)
        return true;
    if (value === "0")
        return true;
    if (value === "")
        return true;
    if (value === undefined)
        return true;
}

function reverse_bool(bool) {
    if (bool === false)
        return true;
    if (bool === true)
        return false;
    if (bool === 0)
        return 1;
    if (bool === 1)
        return 0;
    if (bool === "0")
        return "1";
    if (bool === "1")
        return "0";
}

function test_input(slider) {
    slider.onabort = function () {
        console.log("onabort");
    };
    slider.onafterprint = function () {
        console.log("onafterprint");
    };
    slider.onanimationend = function () {
        console.log("onanimationend");
    };
    slider.onanimationiteration = function () {
        console.log("onanimationiteration");
    };
    slider.onanimationstart = function () {
        console.log("onanimationstart");
    };
    slider.onbeforeprint = function () {
        console.log("onbeforeprint");
    };
    slider.onbeforeunload = function () {
        console.log("onbeforeunload");
    };
    slider.onblur = function () {
        console.log("onblur");
    };
    slider.oncanplay = function () {
        console.log("oncanplay");
    };
    slider.oncanplaythrough = function () {
        console.log("oncanplaythrough");
    };
    slider.onchange = function () {
        console.log("onchange");
    };
    slider.onclick = function () {
        console.log("onclick");
    };
    slider.oncontextmenu = function () {
        console.log("oncontextmenu");
    };
    slider.oncopy = function () {
        console.log("oncopy");
    };
    slider.oncut = function () {
        console.log("oncut");
    };
    slider.ondblclick = function () {
        console.log("ondblclick");
    };
    slider.ondrag = function () {
        console.log("ondrag");
    };
    slider.ondragend = function () {
        console.log("ondragend");
    };
    slider.ondragenter = function () {
        console.log("ondragenter");
    };
    slider.ondragleave = function () {
        console.log("ondragleave");
    };
    slider.ondragover = function () {
        console.log("ondragover");
    };
    slider.ondragstart = function () {
        console.log("ondragstart");
    };
    slider.ondrop = function () {
        console.log("ondrop");
    };
    slider.ondurationchange = function () {
        console.log("ondurationchange");
    };
    slider.onended = function () {
        console.log("onended");
    };
    slider.onerror = function () {
        console.log("onerror");
    };
    slider.onfocus = function () {
        console.log("onfocus");
    };
    slider.onfocusin = function () {
        console.log("onfocusin");
    };
    slider.onfocusout = function () {
        console.log("onfocusout");
    };
    slider.onfullscreenchange = function () {
        console.log("onfullscreenchange");
    };
    slider.onfullscreenerror = function () {
        console.log("onfullscreenerror");
    };
    slider.onhashchange = function () {
        console.log("onhashchange");
    };
    slider.oninput = function () {
        console.log("oninput");
    };
    slider.oninvalid = function () {
        console.log("oninvalid");
    };
    slider.onkeydown = function () {
        console.log("onkeydown");
    };
    slider.onkeypress = function () {
        console.log("onkeypress");
    };
    slider.onkeyup = function () {
        console.log("onkeyup");
    };
    slider.onload = function () {
        console.log("onload");
    };
    slider.onloadeddata = function () {
        console.log("onloadeddata");
    };
    slider.onloadedmetadata = function () {
        console.log("onloadedmetadata");
    };
    slider.onloadstart = function () {
        console.log("onloadstart");
    };
    slider.onmessage = function () {
        console.log("onmessage");
    };
    slider.onmousedown = function () {
        console.log("onmousedown");
    };
    slider.onmouseenter = function () {
        console.log("onmouseenter");
    };
    slider.onmouseleave = function () {
        console.log("onmouseleave");
    };
    slider.onmousemove = function () {
        console.log("onmousemove");
    };
    slider.onmouseover = function () {
        console.log("onmouseover");
    };
    slider.onmouseout = function () {
        console.log("onmouseout");
    };
    slider.onmouseup = function () {
        console.log("onmouseup");
    };
    slider.onoffline = function () {
        console.log("onoffline");
    };
    slider.ononline = function () {
        console.log("ononline");
    };
    slider.onopen = function () {
        console.log("onopen");
    };
    slider.onpagehide = function () {
        console.log("onpagehide");
    };
    slider.onpageshow = function () {
        console.log("onpageshow");
    };
    slider.onpaste = function () {
        console.log("onpaste");
    };
    slider.onpause = function () {
        console.log("onpause");
    };
    slider.onplay = function () {
        console.log("onplay");
    };
    slider.onplaying = function () {
        console.log("onplaying");
    };
    slider.onprogress = function () {
        console.log("onprogress");
    };
    slider.onratechange = function () {
        console.log("onratechange");
    };
    slider.onresize = function () {
        console.log("onresize");
    };
    slider.onreset = function () {
        console.log("onreset");
    };
    slider.onscroll = function () {
        console.log("onscroll");
    };
    slider.onsearch = function () {
        console.log("onsearch");
    };
    slider.onseeked = function () {
        console.log("onseeked");
    };
    slider.onseeking = function () {
        console.log("onseeking");
    };
    slider.onselect = function () {
        console.log("onselect");
    };
    slider.onshow = function () {
        console.log("onshow");
    };
    slider.onstalled = function () {
        console.log("onstalled");
    };
    slider.onsubmit = function () {
        console.log("onsubmit");
    };
    slider.onsuspend = function () {
        console.log("onsuspend");
    };
    slider.ontimeupdate = function () {
        console.log("ontimeupdate");
    };
    slider.ontoggle = function () {
        console.log("ontoggle");
    };
    slider.ontouchcancel = function () {
        console.log("ontouchcancel");
    };
    slider.ontouchend = function () {
        console.log("ontouchend");
    };
    slider.ontouchmove = function () {
        console.log("ontouchmove");
    };
    slider.ontouchstart = function () {
        console.log("ontouchstart");
    };
    slider.ontransitionend = function () {
        console.log("ontransitionend");
    };
    slider.onunload = function () {
        console.log("onunload");
    };
    slider.onvolumechange = function () {
        console.log("onvolumechange");
    };
    slider.onwaiting = function () {
        console.log("onwaiting");
    };
    slider.onwheel = function () {
        console.log("onwheel");
    };
}function consolelog(text, current_file) {
    console.log(current_file + ".js" + " | " + text);
}var eq_modal = 0;

function parse_int_html(clas, eq_modal)
{
    var result_with_eq = parseInt($("." + clas).eq(eq_modal).html());
    if (!Number.isNaN(result_with_eq))
        return result_with_eq;

    var result_without_eq = parseInt($("." + clas).html());
    if (!Number.isNaN(result_without_eq))
        return result_without_eq;
}

function assign_element_to_value(element, value, unit, eq) {
    if (error_value_temp(eq)) {
        $(".vigipool_ui_water_temp").eq(eq).html("--");
    } else {
        $(".vigipool_ui_water_temp").eq(eq).html($(".vigipool_value_temp").eq(eq).html() + $(".vigipool_value_temp_unit").eq(eq).html());
    }
}



function get_value(element, eq) {
    $("." + element).eq(eq).html();
}

function quick_assign(button, type, variable, info, desired, value) {
    $(button).click(function () {
        var devices = get_master_and_slaves(eq_modal);
        // console.log("devices = " + devices);
        for (var i = 0, max = devices.length - 1; i < max; i++) {
            mosquitto_pub(devices[i], type, variable, info, desired, ip_selected, value);
        }
        actualize_data();
    });
}

function quick_assign_sched(button, type, variable, info, desired, value) {

    console.log("LAG TEST 3");

    $(button).click(function () {

        console.log("button = " + button);
        console.log("type = " + type);
        console.log("variable = " + variable);
        console.log("info = " + info);
        console.log("desired = " + desired);
        console.log("value = " + value);

        var final_value = "";

        if (variable === "x3_state") {
            // x3_state
            // 02020A64010488FE5464010C90
            // 020E6464010488715464010C90
            var x3_sched = get_value_from_position(eq_modal, "x3_sched"); // 02020A64010488FE5464010C90
            console.log("x3_sched = " + x3_sched);

            var off_on_day = converter("hex", "bin", x3_sched[2] + x3_sched[3]); // 00000010
            console.log("off_on_day = " + off_on_day);

            off_on_day = off_on_day.replaceAt(0, value); // 10000010
            console.log("off_on_day = " + off_on_day);

            off_on_day = converter("bin", "hex", off_on_day); // 82
            console.log("off_on_day = " + off_on_day);

            x3_sched = x3_sched.replaceAt(2, off_on_day); // 10000010
            console.log("x3_sched = " + x3_sched);

            final_value = x3_sched;
            console.log("off_on_day = " + off_on_day);
        } else if (variable === "x3_state_samedi") {
            final_value = replace_in_hex(1, value);
        } else if (variable === "x3_state_vendredi") {
            final_value = replace_in_hex(2, value);
        } else if (variable === "x3_state_jeudi") {
            final_value = replace_in_hex(3, value);
        } else if (variable === "x3_state_mercredi") {
            final_value = replace_in_hex(4, value);
        } else if (variable === "x3_state_mardi") {
            final_value = replace_in_hex(5, value);
        } else if (variable === "x3_state_lundi") {
            final_value = replace_in_hex(6, value);
        } else if (variable === "x3_state_dimanche") {
            final_value = replace_in_hex(7, value);
        } else if (variable === "x3_state_begin_1") {
            final_value = replace_in_hex(7, value);
        } else if (variable === "x3_state_end_1") {
            final_value = replace_in_hex(7, value);
        } else {
            console.log("ERROR variable = " + variable);
        }

        var devices = get_master_and_slaves(eq_modal);
        console.log("devices = " + devices);

        for (var i = 0, max = devices.length - 1; i < max; i++) {
            mosquitto_pub(devices[i], "s44_w", "x3_sched", "info", "desired", ip_selected, final_value);
        }
        actualize_data();
    });
}

function replace_in_hex(position, value) {

    console.log("position = " + position);
    console.log("value = " + value);

    // x3_state
    // 02020A64010488FE5464010C90
    // 020E6464010488715464010C90
    var x3_sched = get_value_from_position(eq_modal, "x3_sched"); // 02020A64010488FE5464010C90
    console.log("x3_sched = " + x3_sched + " (02020A64010488FE5464010C90)");

    var off_on_day = converter("hex", "bin", x3_sched[2] + x3_sched[3]); // 00000010
    console.log("off_on_day = " + off_on_day + " (00000010)");

    var bit_0 = off_on_day[0];
    var bit_1 = off_on_day[1];
    var bit_2 = off_on_day[2];
    var bit_3 = off_on_day[3];
    var bit_4 = off_on_day[4];
    var bit_5 = off_on_day[5];
    var bit_6 = off_on_day[6];
    var bit_7 = off_on_day[7];

    if (position === 0)
        bit_0 = value;
    if (position === 1)
        bit_1 = value;
    if (position === 2)
        bit_2 = value;
    if (position === 3)
        bit_3 = value;
    if (position === 4)
        bit_4 = value;
    if (position === 5)
        bit_5 = value;
    if (position === 6)
        bit_6 = value;
    if (position === 7)
        bit_7 = value;

    var off_on_day = bit_0 + bit_1 + bit_2 + bit_3 + bit_4 + bit_5 + bit_6 + bit_7;
    console.log("off_on_day = " + off_on_day + " (10000010)");

    off_on_day = converter("bin", "hex", off_on_day); // 82
    console.log("off_on_day = " + off_on_day + " (82)");

    x3_sched = x3_sched.replaceAt(2, off_on_day); // 10000010
    console.log("x3_sched = " + x3_sched + " (02820A64010488FE5464010C90)");

    final_value = x3_sched;
    console.log("off_on_day = " + off_on_day + " (02820A64010488FE5464010C90)");

    return final_value;
}

function quick_send(type, variable, info, desired, value) {
    var devices = get_master_and_slaves(eq_modal);
    for (var i = 0, max = devices.length - 1; i < max; i++) {
        mosquitto_pub(devices[i], type, variable, info, desired, ip_selected, value);
    }
    actualize_data();
}

function insert_value_in_sched(position, value) {
    var x3_sched = get_value_from_position(eq_modal, "x3_sched"); // 02020A64010488FE5464010C90
    console.log("x3_sched = " + x3_sched);

    var value = converter("dec", "hex", value); // 82
    console.log("value = " + value);

    x3_sched = x3_sched.replaceAt(position, value); // 10000010
    console.log("x3_sched = " + x3_sched);

    return final_value = x3_sched;
}

function actualize_data() {
    setTimeout(function () {
        $('[data-eqtype=\'vigipool\'] > center > span.cmd.refresh.pull-right.cursor > i').click();
    }, 2222);
    setTimeout(function () {
        $('[data-eqtype=\'vigipool\'] > center > span.cmd.refresh.pull-right.cursor > i').click();
    }, 4444);
    setTimeout(function () {
        $('[data-eqtype=\'vigipool\'] > center > span.cmd.refresh.pull-right.cursor > i').click();
    }, 6666);
    setTimeout(function () {
        $('[data-eqtype=\'vigipool\'] > center > span.cmd.refresh.pull-right.cursor > i').click();
    }, 8888);
}

function check_variable_device(device, type, variable) {

    get_all_mqtt_data();

    var eq_mqtt_data = all_mqtt_data[eq_modal];
    // console.log("eq_mqtt_data = " + eq_mqtt_data);

    for (var i = 0, max = eq_mqtt_data.length; i < max; i++) {

        var eq_mqtt_line = eq_mqtt_data[i];
        // console.log("eq_mqtt_line = " + eq_mqtt_line);

        if (eq_mqtt_line.includes(device + "/")) {
            if (eq_mqtt_line.includes("/" + type + "/")) {
                if (eq_mqtt_line.includes("/" + variable + "/")) {
                    console.log("check_variable_device return true");
                    return true;
                }
            }
        }
    }

    console.log("check_variable_device return false");
    return false;
}

function mosquitto_pub($device, $type, $variable, $info, $desired, $ip, $value) {
    var check = check_variable_device($device, $type, $variable);
    if (check) {
        $.ajax({
            url: '/plugins/vigipool/core/ajax/mosquitto_pub.php',
            type: "post",
            data: {device: $device, type: $type, variable: $variable, info: $info, desired: $desired, ip: $ip, value: $value},
            success: function (data) {
                console.log('mosquitto_pub = ' + data);
            }
        });
    }
}

var all_mqtt_data = Array();

function get_all_mqtt_data()
{
    if (arrayIsEmpty(all_mqtt_data)) {

        var vigipool_ipaddr_length = $(".vigipool_ipaddr").length;
        // console.log("vigipool_ipaddr_length = " + vigipool_ipaddr_length);

        for (var i = 0, max = vigipool_ipaddr_length; i < max; i++) {

            var vigipool_ipaddr_i = $(".vigipool_ipaddr").eq(i).html();
            // console.log("vigipool_ipaddr_i = " + vigipool_ipaddr_i);

            $.ajax({
                url: '/plugins/vigipool/core/ajax/mosquitto_sub_all.php',
                type: "post",
                async: false,
                cache: false,
                data: {ip: vigipool_ipaddr_i},
                success: function (data) {
                    // console.log("data = " + data);
                    all_mqtt_data.push(data);
                }
            });
        }

        for (var i = 0, max = vigipool_ipaddr_length; i < max; i++) {
            all_mqtt_data[i] = all_mqtt_data[i].split("\n");
        }

        // console.log("all_mqtt_data = ");
        // console.log(all_mqtt_data);
    }

    return all_mqtt_data;
}

var last_master_and_slaves = Array();

function get_master_and_slaves(eq_position) {

    var devices = Array();

    if (isNaN(eq_position)) {
        return last_master_and_slaves;
    } else {
        last_master_and_slaves = Array();
    }

    // console.log("eq_position = " + eq_position);

    get_all_mqtt_data();

    var eq_mqtt_data = all_mqtt_data[eq_position];
    // console.log("eq_mqtt_data = ");
    // console.log(eq_mqtt_data);

    for (var i = 0, max = eq_mqtt_data.length; i < max; i++) {

        var data = eq_mqtt_data[i];
        // console.log("data = " + data);

        var data_split = data.split("/");
        // console.log("data_split = " + data_split);

        var device = data_split[0];
        // console.log("device = " + device);

        if (devices.includes(device)) {

        } else {
            devices.push(device);
        }
    }

    // console.log("devices = " + devices);

    last_master_and_slaves = devices;

    return devices;
}

function arrayIsEmpty(array) {
    //If it's not an array, return FALSE.
    if (!Array.isArray(array)) {
        return false;
    }
    //If it is an array, check its length property
    if (array.length === 0) {
        //Return TRUE if the array is empty
        return true;
    }
    //Otherwise, return FALSE.
    return false;
}

function is_variable_available(eq_position, variable) {

    // console.log("eq_position = " + eq_position);

    get_all_mqtt_data();

    var eq_mqtt_data = all_mqtt_data[eq_position];
    // console.log("eq_mqtt_data = ");
    // console.log(eq_mqtt_data);

    for (var i = 0, max = eq_mqtt_data.length; i < max; i++) {
        var eq_mqtt_line = eq_mqtt_data[i];
        if (eq_mqtt_line.includes("/" + variable + "/")) {
            return true;
        }
    }

    return false;
}

function error_value_temp(eq_position) {
    get_all_mqtt_data();

    var eq_mqtt_data = all_mqtt_data[eq_position];
    // console.log("eq_mqtt_data = ");
    // console.log(eq_mqtt_data);

    for (var i = 0, max = eq_mqtt_data.length; i < max; i++) {
        var eq_mqtt_line = eq_mqtt_data[i];
        if (eq_mqtt_line.includes("/value_temp/")) {
            if (eq_mqtt_line.includes("65535")) {
                return true;
            }
        }
    }

    return false;
}

String.prototype.replaceAt = function (index, replacement) {
    return this.substring(0, index) + replacement + this.substring(index + replacement.length);
}


var language_en = {};

language_en["language"] = "English";
language_en["sign_in"] = "Sign In";
language_en["email"] = "Email";
language_en["password"] = "Password";
language_en["show_password"] = "Show password";
language_en["remember_me"] = "Remember Me";
language_en["login"] = "Login";
language_en["particular"] = "Particular";
language_en["professional"] = "Professional";
language_en["free"] = "Free";
language_en["prenium"] = "Prenium";
language_en["dont_have_an_account"] = "Don't have an account?";
language_en["sign_up"] = "Sign Up";
language_en["create_supervision_account"] = "Create a Supervision account";
language_en["forgot_your_password"] = "Forgot your password";
language_en["resend_email_verification"] = "I did not receive the confirmation email";
language_en["wrong_id"] = "Your login details are incorrect";
language_en["perso_pro_error"] = "Personal/professional account error";
language_en["email_used"] = "This email is already in use";
language_en["password_rule_title"] = "Password must contain:";
language_en["password_rule_0"] = "A lowercase letter";
language_en["password_rule_1"] = "An uppercase letter";
language_en["password_rule_2"] = "A number";
language_en["password_rule_3"] = "Minimum 6 characters";
language_en["password_rule_conform"] = "Your passwords must be identical";
language_en["account_specify"] = "Please specify which account you would like to use";
language_en["email_not_verified"] = "Please validate your email before logging in.";
language_en["univers_vp"] = "Discover the Vigipool universe";
language_en["demo_text"] = "A visit before you start?";
language_en["demo_button"] = "Access demo mode";
language_en["name_of_the_brand"] = "Name of the brand";
language_en["professional_s_name"] = "Professional's name";
language_en["address"] = "Address";
language_en["postal_code"] = "Postal code";
language_en["city"] = "City";
language_en["country"] = "Country";
language_en["phone"] = "Phone";
language_en["ccei_customer_number"] = "CCEI Customer Number";
language_en["siret"] = "SIRET";
language_en["vigipool_product_supplier"] = "Vigipool Product supplier";
language_en["register_info_1"] = "A Supervision account:";
language_en["register_info_2"] = "- allows you to supervise shared swimming pools using the Vigipool application.";
language_en["register_info_3"] = "- but does not allow you to use the Vigipool application (a Vigipool account will have to be created in the application)";
language_en["register_info_4"] = "If you already have a Vigipool Application account, you can directly connect to Supervision using your identifiers to display the information associated with your pool!";
language_en["create_an_account"] = "Create an account";
language_en["password_confirmation"] = "Password (confirmation)";
language_en["first_name"] = "First name";
language_en["last_name"] = "Last name";
language_en["already_have_an_account_connect"] = "Already have an account?";
language_en["login_btn"] = "Log in";
language_en["reset_password"] = "Reset password";
language_en["send_confirmation_email"] = "Send confirmation email";
language_en["reset_password_error"] = "This email address is not used";
language_en["email_verification"] = "Resend validation email";
language_en["email_verification_footer"] = "Is your email already verified?";
language_en["email_sent"] = "Email sent";
language_en["email_has_been_sent"] = "An email has been sent so that you can reset your account password.";
language_en["password_reset_link"] = "This password reset link will expire in 60 minutes.";
language_en["return"] = "Return";
language_en["reset_success_title"] = "Password reset successful";
language_en["reset_success_text"] = "You can try logging in again.";
language_en["mail_template_text_1"] = "You are receiving this email because we received a password reset request for your account.";
language_en["mail_template_text_2"] = "If you did not request a password reset, no further action is required.";
language_en["mail_template_signature"] = "Regards";
language_en["account_created_title"] = "Your account has been created, before logging in, please validate your registration via the email that has just been sent to you.";
language_en["email_verify_title"] = "Verification of your Vigipool Supervision email";
language_en["email_verify_text_1"] = "You are receiving this email because you have just created your Vigipool Supervision account.";
language_en["email_verify_text_2"] = "Please confirm the creation of your account by clicking on the button below";
language_en["email_verify_text_3"] = "If you have not created an account, no further action is required.";
language_en["email_already_verified"] = "Email already verified.";
language_en["email_verified"] = "Email verified successfully.";
language_en["administrator"] = "Administrator";
language_en["manager"] = "Manager";
language_en["pool_tech"] = "Pool Tech";
language_en["new_user"] = "New User";
language_en["btn_sign_out"] = "Sign out";
language_en["dashboard"] = "Dashboard";
language_en["my_account"] = "My account";
language_en["users_management"] = "Users";
language_en["pool_management"] = "Pool Management";
language_en["interventions"] = "Service book";
language_en["event_history"] = "Event History";
language_en["force_refresh"] = "Refresh";
language_en["overview"] = "supervised swimming pools";
language_en["overview_single"] = "supervised swimming pool";
language_en["swimming_pool_list"] = "Swimming Pool List";
language_en["swimming_pools_accepted"] = "Your supervised pools";
language_en["awaiting_delegation_acceptance"] = "Awaiting delegation acceptance";
language_en["search_here"] = "Search here...";
language_en["see_details"] = "See details";
language_en["accept_pool"] = "Accept pool";
language_en["refuse_pool"] = "Refuse pool";
language_en["swimming_pool_locations"] = "Swimming Pool Locations";
language_en["legal_notice"] = "Legal Notice";
language_en["terms_of_service"] = "Terms of Service";
language_en["user_devices_graph"] = "Hardware installed";
language_en["table_pool_name"] = "Pool name";
language_en["table_ownername"] = "Ownername";
language_en["table_temperature"] = "T°";
language_en["table_wifi"] = "Wifi";
language_en["table_pool_status"] = "Pool Status";
language_en["table_rdv"] = "RDV";
language_en["total"] = "Total";
language_en["ok"] = "Ok";
language_en["warning"] = "Warning(s)";
language_en["error"] = "Error(s)";
language_en["disconnected"] = "Disconnected";
language_en["ok_devices_only"] = "OK devices only";
language_en["devices_to_be_monitored_only"] = "Devices to be monitored only";
language_en["devices_in_error_only"] = "Devices in error only";
language_en["devices_disconnected_only"] = "Devices disconnected only";
language_en["error_multiple"] = "Several errors";
language_en["error_orp_high"] = "Orp too high";
language_en["error_orp_low"] = "Orp too low";
language_en["error_orp_none"] = "No Orp";
language_en["error_ph_high"] = "pH too high";
language_en["error_ph_low"] = "pH too low";
language_en["error_ph_none"] = "No pH";
language_en["error_temp_high"] = "Temperature too high";
language_en["error_temp_low"] = "Temperature too low";
language_en["error_temp_none"] = "No temperature";
language_en["warning_multiple"] = "Warning";
language_en["warning_no_wifi"] = "Disconnected swimming pool";
language_en["warning_orp_high"] = "Orp slightly high";
language_en["warning_orp_low"] = "Slightly low Orp";
language_en["warning_ph_high"] = "Slightly high pH";
language_en["warning_ph_low"] = "Slightly low pH";
language_en["warning_temp_high"] = "Slightly high temperature";
language_en["warning_temp_low"] = "Slightly low temperature";
language_en["app_account_fail_pool"] = ":nb_pool pool(s) are not entered in the Vigipool application (\"My pool\" in the left menu of the application) and cannot be displayed in Vigipool Supervision.";
language_en["CGU"] = "Legal Notice | CGU";
language_en["remove_pool_tracking"] = "Remove Pool Tracking";
language_en["see_map"] = "See Map";
language_en["see_more"] = "See More";
language_en["remove_picture"] = "Remove this picture";
language_en["file_too_heavy"] = "File too heavy";
language_en["picture_tooltip"] = "Click the button to add a picture, max file size 4MB";
language_en["deviceType"] = "Main Device";
language_en["cover"] = "Cover";
language_en["volume"] = "Volume";
language_en["deviceId"] = "Device Id";
language_en["structure"] = "Structure";
language_en["treatment"] = "Treatment";
language_en["past"] = "Done";
language_en["planned"] = "Planned";
language_en["vigipool_devices"] = "Vigipool devices";
language_en["electrolyse"] = "Electrolysis";
language_en["shadow"] = "Detailed information";
language_en["device"] = "Device";
language_en["function"] = "Function";
language_en["serial_number"] = "Serial Number";
language_en["normal_behaviour"] = "Normal behaviour";
language_en["calibration_in_progress"] = "Calibration in progress";
language_en["winter_mode"] = "Winter Mode";
language_en["sync_flow"] = "Sync Flow";
language_en["update_available"] = "Update available";
language_en["update_in_progress"] = "Update in progress";
language_en["update_error"] = "Update error";
language_en["restart_in_progress"] = "Restart in progress";
language_en["stable_calibration"] = "Stable Calibration";
language_en["gateway_mode"] = "Gateway mode";
language_en["gateway_mode_0"] = "Client";
language_en["gateway_mode_1"] = "Gateway";
language_en["fast_slow_ble"] = "Bluetooth fast mod";
language_en["state"] = "State";
language_en["ap_bcast_duration"] = "App broadcast duration";
language_en["update_ota"] = "Update Ota";
language_en["server_on"] = "Master";
language_en["flow_on"] = "Filtration";
language_en["prod_on"] = "Chlorine production";
language_en["mqtt_connected"] = "Connected";
language_en["model_id"] = "Model Id";
language_en["hw_vers"] = "Hardware Version";
language_en["date_mes"] = "Last measurement";
language_en["date_mes_ph"] = "Last pH measurement";
language_en["date_mes_orp"] = "Last Orp measurement";
language_en["value_orp"] = "Orp value";
language_en["value_temp"] = "Temperature value";
language_en["sw_vers"] = "Software value";
language_en["ph_adjust"] = "pH adjustment";
language_en["temp_adjust"] = "Temperature adjustement";
language_en["orp_adjust"] = "Orp adjustment";
language_en["ph_calibration_target"] = "pH Calibration Target";
language_en["orp_calibration_target"] = "Orp Calibration Target";
language_en["jeedom_interval"] = "Jeedom Interval";
language_en["rssi"] = "RSSI";
language_en["inject_on"] = "Injection in progress";
language_en["vol_tot_inject"] = "Total injected volume (L)";
language_en["vol_bac"] = "Product tank volume";
language_en["vol_max_24h"] = "Max volume in 24 hours";
language_en["consigne_ph"] = "pH setpoint";
language_en["source_ph"] = "pH source";
language_en["priority"] = "pH priority";
language_en["consigne_orp"] = "Orp setpoint";
language_en["source_orp"] = "Orp source";
language_en["mode_ely"] = "Mode";
language_en["power_ely"] = "Power";
language_en["ely_duration_in_minut"] = "Current electrolysis time";
language_en["couv_on"] = "Pool Cover";
language_en["couv_on_2"] = "Cover &gt; 12h";
language_en["consigne_temp"] = "Temperature setpoint";
language_en["value_temp_in"] = "Incoming temperature";
language_en["value_temp_out"] = "Outgoing temperature";
language_en["value_temp_int"] = "Internal temperature";
language_en["value_cond"] = "Conductivity";
language_en["ely_duration_compensated"] = "Programmed duration of electrolysis";
language_en["mode_choc"] = "Shock mode";
language_en["choc_duration"] = "Shock mode duration";
language_en["water_hardness"] = "Water Hardness";
language_en["temp_min_off_ely"] = "Minimal temperature";
language_en["off"] = "OFF";
language_en["on"] = "ON";
language_en["continuous"] = "Continuous";
language_en["thermo_regulated"] = "Thermo Regulated";
language_en["orp_regulated"] = "Orp Regulated";
language_en["open"] = "Open";
language_en["closed"] = "Closed";
language_en["meteor_mode_1"] = "Forced march";
language_en["meteor_mode_2"] = "Programmed";
language_en["meteor_mode_3"] = "Automatic";
language_en["tild_no_program"] = "No program is available";
language_en["tild_hors_gel"] = "Freeze mode activated, your filtration will be launched automatically to prevent the water from freezing in the pipe";
language_en["tild_aux_type_6"] = "Orp regulation";
language_en["light_type_m"] = "Lighting type";
language_en["light_type_m_0"] = "Monochromatic";
language_en["light_type_m_1"] = "T.Switch";
language_en["light_type_m_2"] = "Brio RC+";
language_en["aux1_type_2"] = "Heater";
language_en["aux1_type_3"] = "Booster";
language_en["aux1_type_4"] = "Orp treatment";
language_en["froze_mode"] = "Frost free mode";
language_en["froze_mode_0"] = "Activated if &lt; 0°C";
language_en["froze_mode_1"] = "Activated if &lt; 1°C";
language_en["froze_mode_2"] = "Activated if &lt; 2°C";
language_en["tild_light_state_4"] = "Timer";
language_en["tild_filt_state_2"] = "Forced by lighting";
language_en["tild_filt_state_3"] = "Forced by auxiliary";
language_en["tild_filt_state_5"] = "Forced by frost mode";
language_en["tild_filt_state_6"] = "Forced by heating";
language_en["aux_state_1"] = "Controlled by filtration";
language_en["aux_state_2"] = "Temperature setpoint reached";
language_en["aux_state_3"] = "Below min temperature";
language_en["aux_state_4"] = "Will start soon";
language_en["aux_state_5"] = "Incorrect orp measurement";
language_en["device_not_online"] = "Device disconnected or turned off ";
language_en["description_ofix"] = "T °, pH, Orp analyzer";
language_en["description_daisyph"] = "pH dosing pump";
language_en["description_daisyox"] = "Orp metering pump";
language_en["description_zelia"] = "Electrolyser";
language_en["description_zelix"] = "Electrolyser";
language_en["description_lynx"] = "Wifi gateway - Remote screen";
language_en["description_ziphox"] = "T °, pH, Orp analyzer";
language_en["description_phileox"] = "pH regulator";
language_en["description_oxeox"] = "Orp regulator";
language_en["description_tild"] = "Pool electrical box";
language_en["description_limpidoez"] = "Electrolyser";
language_en["description_vigipac"] = "Heat pump";
language_en["description_anteam"] = "Smart multifunction box";
language_en["description_wix"] = "X3 lighting controller";
language_en["no"] = "No";
language_en["yes"] = "Yes";
language_en["disabled"] = "Disabled";
language_en["enabled"] = "Enabled";
language_en["manual"] = "Manual";
language_en["repetition"] = "Repetition";
language_en["operating_hour"] = "Operating Hour";
language_en["mod"] = "Mode";
language_en["duration"] = "Duration";
language_en["light"] = "Lighting";
language_en["everyday"] = "Everyday";
language_en["monday"] = "Mon";
language_en["tuesday"] = "Tue";
language_en["wednesday"] = "Wed";
language_en["thursday"] = "Thu";
language_en["friday"] = "Fri";
language_en["saturday"] = "Sat";
language_en["sunday"] = "Sun";
language_en["from"] = "From";
language_en["during"] = "during";
language_en["to"] = "to";
language_en["sunset_mode"] = "Sunset mode";
language_en["auxiliary"] = "Auxiliary";
language_en["electrolysis_mode"] = "Electrolysis mode";
language_en["chlorine_production_status"] = "Chlorine production status";
language_en["power"] = "Power";
language_en["cell_flow"] = "Cell Flow";
language_en["cell_water_t"] = "Cell water temperature";
language_en["cell_internal_temperature"] = "Cell internal temperature";
language_en["powerful"] = "Powerful";
language_en["minimum_temperature"] = "Minimum temperature";
language_en["electrolysis_current"] = "Electrolysis current (in A)";
language_en["voltage"] = "Voltage (in V)";
language_en["today_details"] = "Today's details";
language_en["tooltip_1"] = "To zoom, press the left button of your mouse, select the zone in question then release the button.";
language_en["tooltip_2"] = "You can zoom horizontally and vertically.";
language_en["tooltip_3"] = "To zoom out double left-click anywhere in the graphic.";
language_en["tooltip_4"] = "Click on a particular day to see its details.";
language_en["connected"] = "Connected ";
language_en["value_ph"] = "pH measurement";
language_en["mode_ph"] = "pH regulation mode";
language_en["vol_24h_inject"] = "Injected volume in 24 hours";
language_en["mode_orp"] = "Orp regulation mode";
language_en["more_info"] = "More info";
language_en["export_historique"] = "Export your history";
language_en["export_historique_modal_msg"] = "Select the type of history you want to export";
language_en["export_historique_year"] = "Choose the year of export";
language_en["pool_note_title"] = "Pool note";
language_en["pool_note_delete"] = "Delete the note";
language_en["pool_note_writer"] = "Last modification by :writer_name, the :date";
language_en["society"] = "Society";
language_en["cp"] = "Zip code";
language_en["new_password"] = "New Password";
language_en["conf_password"] = "Password confirmation";
language_en["actual_password"] = "Actual password";
language_en["password_change_success"] = "Change successful";
language_en["password_change_fail"] = "Incorrect current password";
language_en["change_password"] = "Change Password";
language_en["users_managed"] = "Managed users";
language_en["add_user"] = "Add User";
language_en["user_list"] = "User List";
language_en["user_email"] = "User Email";
language_en["add_now"] = "Add Now";
language_en["role"] = "Role";
language_en["member_since"] = "Member since";
language_en["action"] = "Action";
language_en["modify_or_delete"] = "Modify or delete";
language_en["edit_user"] = "Edit User";
language_en["delete_user"] = "Delete user";
language_en["warning_!"] = "Warning!";
language_en["to_delete_the_user"] = "Are you sure you want to delete the user?";
language_en["from_vigipool"] = "from Vigipool?";
language_en["action_irreversible."] = "This action is irreversible.";
language_en["go_back"] = "Go back";
language_en["user_update_success"] = "Information update successful";
language_en["user_delete_success"] = "User deletion successful";
language_en["temperature"] = "Temperature";
language_en["ph"] = "pH";
language_en["orp"] = "Orp";
language_en["devices"] = "Devices";
language_en["status"] = "Status";
language_en["interventions_planned"] = "Interventions planned";
language_en["interventions_done"] = "Interventions finished";
language_en["interventions_graph"] = "Breakdown of interventions";
language_en["date"] = "Date";
language_en["type"] = "Type";
language_en["ownername"] = "Owner name";
language_en["map"] = "Map";
language_en["create_new_intervention"] = "Create new intervention";
language_en["last_intervention"] = "Last Intervention";
language_en["new_intervention"] = "New Intervention";
language_en["technician_in_charge"] = "Technician In Charge";
language_en["no_interventions"] = "No interventions";
language_en["intervention"] = "Intervention";
language_en["intervention_type"] = "Intervention Type";
language_en["intervention_type_0"] = "List of interventions";
language_en["intervention_type_1"] = "Backwash";
language_en["intervention_type_2"] = "Entering winter mode";
language_en["intervention_type_3"] = "Exiting winter mode";
language_en["intervention_type_4"] = "Routine maintenance";
language_en["intervention_type_5"] = "Maintenance";
language_en["intervention_button"] = "Plan the intervention";
language_en["intervention_realized"] = "Is the intervention carried out?";
language_en["select_pool"] = "Select a pool";
language_en["select_date"] = "Date of completion";
language_en["date_intervention"] = "Intervention date";
language_en["select_tech"] = "Name of the technician";
language_en["select_comment"] = "Comment";
language_en["comment_placeholder"] = "Describe the intervention in a few lines...";
language_en["edit_intervention_title"] = "Intervention details";
language_en["pool"] = "Pool";
language_en["detail"] = "Swimming Pool Information";
language_en["intervention_report"] = "Intervention Report";
language_en["intervention_cost"] = "Intervention Cost";
language_en["delete_intervention"] = "Delete Intervention";
language_en["messages"] = "Messages";
language_en["list_event_history"] = "Events history";
language_en["data_did_not_change"] = "Your device data has not changed since:␣";
language_en["notification_bloc"] = "Alerts";
language_en["notifcation_ok_two_weeks"] = "No notification in past two weeks";
language_en["SURCHAUFFE_ELECTROLYSEUR"] = "Electrolyser internal temperature too high";
language_en["TEMP_HIGH"] = "High Temperature measurement error on :deviceType";
language_en["TEMP_LOW"] = "Low Temperature measurement error on :deviceType , Thermoregulated mode is disabled";
language_en["CELLULE_CURRENT_LOW"] = "The electrolysis cell no longer produces - Contact your installer";
language_en["SALT_MISSING"] = "Low production - Refer to the :deviceType manual";
language_en["SALT_TOO_MUCH"] = "Salt level too high. Electrolyser stopped";
language_en["TEMP_MIN"] = "Minimum water temperature reached. Electrolysis stopped";
language_en["TEMP_MIN_SWITCHED_BACK"] = "Water temperature back to normal - Restarting electrolysis";
language_en["PH_NO_VALUE"] = "Your :deviceType no longer receives pH measurements";
language_en["PH_NO_VALUE_SWITCHED_BACK"] = "pH measurements are back";
language_en["ORP_NO_VALUE"] = "Your :deviceType no longer receives ORP measurements";
language_en["ORP_ERROR_MESURE_22_SWITCHED_BACK"] = "ORP measurements are back";
language_en["TUB_ALMOST_EMPTY"] = ":deviceType product tank low level";
language_en["TUB_EMPTY"] = ":deviceType Empty product tank - Pump stopped";
language_en["V_MAX_INJECTED"] = "Max volume of injected product in 24h reached";
language_en["PH_ERROR_MESURE_29"] = "pH measurement errors detected: injection is stopped. Please check your installation and probes";
language_en["PH_ERROR_MESURE_29_SWITCHED_BACK"] = "pH measurements are back to normal";
language_en["ORP_ERROR_MESURE_27"] = "ORP measurement errors detected: injection is stopped. Please check your installation and probes";
language_en["ORP_ERROR_MESURE_27_SWITCHED_BACK"] = "ORP measurments are back to normal";
language_en["WIFI_CONNECTION_ERROR"] = "Your :deviceType device is no longer connected, please check that it is powered correctly and that your WiFi network is working";
language_en["WIFI_CONNECTION_ERROR_SWITCHED_BACK"] = "Your :deviceType Device is connected anew";
language_en["ELECTROLYSEUR_OVERLOAD_ERROR"] = "Electrolyser power supply overload";
language_en["MODE_HORS_GEL"] = "Caution, the water temperature is at risk of frost! Your filtration switched to Frost Free Mode level 3 (permanent operation)";
language_en["RS485_ERROR"] = "Communication error (RS485) detected on your :deviceType";
language_en["share_pool_ts"] = "Sharing end date";
language_en["cancel_modal"] = "Cancel";
language_en["delete_modal"] = "Delete";
language_en["delete_sharing_pool_msg"] = "You are about to delete ':poolName ' pool tracker, are you sure you want to perform this action?";
language_en["pac_mode"] = "Production mode";
language_en["pac_speed"] = "Operating speed";
language_en["pac_sched"] = "Programming ranges";
language_en["two_weeks"] = "2 weeks";
language_en["one_month"] = "1 month";
language_en["two_month"] = "2 months";
language_en["confirm_button"] = "Confirm";
language_en["submit_button"] = "Submit";
language_en["file_button"] = "Choose a file";
language_en["pool_expire_msg"] = "This email informs you that the list of pools below is about to expire in less than two weeks, think about relaunching the sharing with your client or you will lose the monitoring of this pool on your supervision account.";

// Perso

language_en["title"] = "General management of ";
language_en["display"] = "Management of displays and historical";
language_en["deletion"] = "Automatic search and addition of new features";

language_en["settings"] = "Settings";

language_en["frost_protection_mode"] = "Frost Protection Mode";

language_en["projector"] = "Projector";

language_en["color_rc"] = "Color RC+";
language_en["monochrome"] = "Monochrome";
language_en["monochrome_dimmable"] = "Monochrome dimmable";
language_en["color_micro_cuts"] = "Color micro-cuts";

language_en["auxiliary"] = "Auxiliary";

language_en["none"] = "None";
language_en["heater"] = "Heater";
language_en["treatment"] = "Treatment";
language_en["booster"] = "Booster";
language_en["auxiliary"] = "Auxiliary";

language_en["title"] = "Auxiliary management for";

language_en["modes"] = "Modes";

language_en["off"] = "Turn off";
language_en["on"] = "Turn on";
language_en["prog"] = "Programming";
language_en["auto"] = "Automatique";

language_en["program"] = "Program";
language_en["day"] = "day";

language_en["history_title"] = "Data history";
language_en["history"] = "See history";

language_en["title"] = "light management for";

language_en["state"] = "State";

language_en["off"] = "Turn off";
language_en["on"] = "Turn on";

language_en["colors"] = "Colors";

language_en["warm"] = "Warm";
language_en["cold"] = "Cold";
language_en["blue"] = "Blue";
language_en["lagoon"] = "Lagoon";
language_en["cyan"] = "Cyan";
language_en["green"] = "Green";
language_en["purple"] = "Purple";
language_en["magenta"] = "Magenta";
language_en["pink"] = "Pink";
language_en["red"] = "Red";
language_en["orange"] = "Orange";

language_en["favorite"] = "Favorite";

language_en["sequences"] = "Sequences";

language_en["gradiant"] = "Gradiant";
language_en["rainbow"] = "Rainbow";
language_en["parade"] = "Parade";
language_en["techno"] = "Techno";
language_en["horizon"] = "Horizon";
language_en["random"] = "Random";
language_en["magical"] = "Magical";

language_en["programming"] = "Programming";
language_en["program"] = "Program";

language_en["bright"] = "Brightness";
language_en["speed"] = "Speed";

language_en["low"] = "Low";
language_en["medium"] = "Medium";
language_en["high"] = "High";
language_en["max"] = "Max";

language_en["slow"] = "Slow";
language_en["normal"] = "Normal";
language_en["fast"] = "Fast";

language_en["history_title"] = "Data history";
language_en["history"] = "See history";

language_en["monday"] = "Monday";
language_en["tuesday"] = "Tuesday";
language_en["wednesday"] = "Wednesday";
language_en["thursday"] = "Thursday";
language_en["friday"] = "Friday";
language_en["saturday"] = "Saturday";
language_en["sunday"] = "Sunday";

language_en["color"] = "Color";

language_en["duration"] = "Duration";
language_en["hours"] = "hours per day";

language_en["wintermode"] = "Winter mode";
language_en["type_of_product_injected"] = "Type of product injected";
language_en["maximum_volume_injected"] = "Maximum volume injected";
language_en["product_volume_available"] = "Product volume available";
language_en["setpoint"] = "Setpoint";

language_en["aux_state"] = "Auxiliary state";
language_en["aux_min_temp"] = "Minimum auxiliary temperature";

language_en["init_fail_1"] = "The initialization was not done correctly";
language_en["init_fail_2"] = "Please try to refresh the page";
language_en["init_fail_3"] = "And if it doesn't work, please reset the plugin by clicking on the following button:";

language_en["aux_state"] = "Auxiliary state";
language_en["aux_min_temp"] = "Minimum auxiliary temperature";

language_en["vigipool_modal_all"] = "Settings";
language_en["vigipool_modal_light"] = "Light";
language_en["vigipool_modal_filtration"] = "Filtration";
language_en["vigipool_modal_auxiliary"] = "Auxiliary";
language_en["vigipool_modal_ph"] = "PH management";
language_en["vigipool_modal_orp"] = "ORP management";
language_en["vigipool_modal_light_m"] = "Light";
language_en["tild_modal_filt_m"] = "Filtration";
language_en["vigipool_modal_auxiliary_1"] = "Auxiliary 1";
language_en["vigipool_modal_auxiliary_2"] = "Auxiliary 2";
language_en["vigipool_modal_ely"] = "Electrolysis";

language_en["mode"] = "Mode";
language_en["daily_production_duration"] = "Daily Production Time";
language_en["programmed"] = "Programmed";
language_en["regulated"] = "Regulated";
language_en["shock"] = "Shock";

language_en["instant_chlorine_prod"] = "Instant Chlorine Prod";
language_en["min_temperature"] = "Min Temperature";
language_en["chlorine_prod"] = "Chlorine Prod";
language_en["amperage"] = "Amperage";
language_en["internal_temperature"] = "Internal Temperature";

language_en["very_soft"] = "Very soft";
language_en["soft"] = "Soft";
language_en["slightly_soft"] = "Slightly soft";
language_en["slightly_hard"] = "Slightly hard";
language_en["hard"] = "Hard";
language_en["very_hard"] = "Very hard";

language_en["window_size_error"] = "The Vigipool plugin window is too small, please enlarge it using the pencil icon at the top right.";
language_en["no_mqtt_data"] = "No MQTT data could be retrieved";

language_en["no_parameters"] = "This device has no parameters";

language_en["warning_power"] = "A power greater than 100% may shorten the lifespan of the electrolysis cell and thus should not be used on a daily basis.";

language_en["water"] = "Water";

language_en["ph_regulation"] = "pH Regulation";
language_en["orp_regulation"] = "ORP Regulation";

language_en["injection_in_progress"] = "Injection in progress";

language_en["volume_injected_in_24h"] = "Volume injected in 24H";

language_en["chlorine_prod"] = "Chlorine Prod.";

language_en["stopped"] = "Stopped";

language_en["color_picker"] = "Color picker";
language_en["white"] = "White";

language_en["saved_colors"] = "Saved colors";

language_en["rainbow"] = "Rainbow";
language_en["fun"] = "Fun";
language_en["ocean"] = "Ocean";
language_en["flamme"] = "Flamme";
language_en["parade"] = "Parade";
language_en["elegant"] = "Elegant";
language_en["horizon"] = "Horizon";
language_en["psyche"] = "Psyche";

language_en["vigipool_modal_x3_state"] = "X3 Light";
language_en["vigipool_modal_x3_state_prog_1"] = "Updating program 1 of the x3 light";
language_en["vigipool_modal_x3_state_prog_2"] = "Updating program 2 of the x3 light";

language_en["scheduling"] = "Scheduling";

language_en["save"] = "Save";

language_en["select_the_start_time_and_duration_of_the_program"] = "Select the start time and duration of the program";
language_en["schedule"] = "Schedule";
language_en["at"] = "At";
language_en["during"] = "During";

language_en["add"] = "Add";
language_en["back"] = "Go back";
language_en["thermoregulated_mode"] = "Thermoregulated Mode";

language_en["see_advanced_options"] = "See advanced options";

language_en["enslaved_to_filtration"] = "Dependent on filtration";

language_en["force_filtration_during_aux"] = "Forcing filtering";

language_en["CGUWebURL"] = "https://eu.ccei-pool.com/en/content/3-conditions-utilisation";
language_en["FAQWebURL"] = "https://eu.ccei-pool.com/en/module/faqs/display";
language_en["account_not_verified_btn_resend_email"] = "Resend email";
language_en["alert_action_impossible_no_internet"] = "Unable to perform this action at this time, please verify your phone's internet connection and try again.";
language_en["alert_button_connect_aws"] = "Connect remotely";
language_en["alert_button_create_contact"] = "Fill in my contact information";
language_en["alert_button_create_pool"] = "Fill in my pool information";
language_en["alert_button_stay_bluetooth"] = "Stay in Bluetooth";
language_en["alert_choc_from_off"] = "It is impossible to activate the Shock mode from the Off mode because once the shock treatment time has elapsed, the device will return to its previous operating mode.\n\nTo enable Shock mode, please select another operating mode first.";
language_en["alert_configure_aux_description"] = "Please select the type of auxiliary connected to your tild VP.\n\nYou can still update it from the configuration screen of your devices.";
language_en["alert_configure_aux_title"] = "Configuration required";
language_en["alert_contact_deleted"] = "Your contact information has been deleted.";
language_en["alert_contact_deleted_failed"] = "We were not able to delete your contact information.\n\nPlease check your internet connection or try again later.";
language_en["alert_contact_saved"] = "Your contact information has been saved.";
language_en["alert_contact_saved_failed"] = "We were not able to save your contact information.\n\nPlease check your internet connection or try again later.";
language_en["alert_contact_warning_delete"] = "Deleting contact information will also delete your pool shares.";
language_en["alert_description_geoloc_crep_needed"] = "You have declined the use of geolocation, but it is necessary to use the twilight mode of the light programming and retrieve the weather information.\n\nWould you like to open the application settings to change this setting?";
language_en["alert_dialog_aws_timeout_error"] = "Your device is unable to connect to the internet.";
language_en["alert_dialog_calibration_in_progress_orp_value_message"] = "Calibration in progress, current ORP value: %1$s";
language_en["alert_dialog_calibration_in_progress_ph_value_message"] = "Calibration in progress, current pH value: %1$s";
language_en["alert_dialog_calibration_in_progress_title"] = "Please wait";
language_en["alert_dialog_config_change_device_added_message"] = "It seems that a device has just been added to your configuration.\n\nPlease log in again.";
language_en["alert_dialog_config_change_device_removed_message"] = "It seems that a device has just been removed from your configuration.\n\nPlease log in again.";
language_en["alert_dialog_delete_device_message"] = "Are you sure you want to remove the device \"%1$s\" from your Vigipool devices?";
language_en["alert_dialog_delete_device_title"] = "Delete a device";
language_en["alert_dialog_factory_reset_message"] = "Are you sure you want to proceed with the factory reset?";
language_en["alert_dialog_lost_ble_connection_message"] = "The Bluetooth connection with the device has been lost.";
language_en["alert_dialog_message_bluetooth_error"] = "A Bluetooth error has occurred, please try again.";
language_en["alert_dialog_message_loading_timeout"] = "Loading timeout, please try again.";
language_en["alert_dialog_message_remote_error"] = "An error occurred during the remote connection, please try again.";
language_en["alert_dialog_no_internet_message"] = "Please check your internet connection status.";
language_en["alert_dialog_no_internet_title"] = "Network error";
language_en["alert_dialog_orp_calibration_in_progress_message"] = "ORP calibration in progress.";
language_en["alert_dialog_ph_calibration_in_progress_message"] = "pH calibration in progress.";
language_en["alert_dialog_title_bluetooth_error"] = "Bluetooth error";
language_en["alert_dialog_title_loading_timeout"] = "Timeout";
language_en["alert_dialog_token_expired_message"] = "Session expired.\n\nPlease log in again.";
language_en["alert_edit_last_backwash_error"] = "A problem occurred when saving the date of the last backwash, please verify the internet connection of your phone and re-save the date of the last backwash manually via the backwash settings screen.";
language_en["alert_electrolyse_power"] = "A power greater than 100% may shorten the lifespan of the electrolysis cell and thus should not be used on a daily basis.";
language_en["alert_empty_shadow_description"] = "Impossible to recover information from your device.\n\nPlease verify that your network coverage is sufficient and that your device is connected to the internet.\nIf necessary, you can configure the connection of your device by connecting to it via Bluetooth.\n\nIf the problem persists, you can try to restart the device.";
language_en["alert_factory_reset_description"] = "Would you like to do a factory reset of your device?\nPlease note that this change is irreversible.";
language_en["alert_factory_reset_title"] = "Factory reset";
language_en["alert_incomplete_shadow_description"] = "Impossible to recover information from your device.\n\nPlease verify that your network coverage is sufficient and that your device is connected to the internet.\nIf necessary, you can configure the connection of your device by connecting to it via Bluetooth.\n\nIf the problem persists, you can try to restart the device via the button below.";
language_en["alert_navigate_to_configure_wifi_description"] = "You can now configure the Wifi connection of your installation to control your swimming pool remotely.";
language_en["alert_navigate_to_sign_in_vigipool_description"] = "You can now sign up and/or sign in to your Vigipool account to control your swimming pool remotely.";
language_en["alert_pool_deleted"] = "Your swimming pool information has been deleted.";
language_en["alert_pool_deleted_failed"] = "Your pool information could not be deleted.\n\nPlease check your internet connection or try again later.";
language_en["alert_pool_saved"] = "Your swimming pool information has been saved.";
language_en["alert_pool_saved_failed"] = "Your pool information could not be saved.\n\nPlease check your internet connection or try again later.";
language_en["alert_pool_warning_delete"] = "Deleting your pool information will also delete your saved contact information, as well as your pool shares.";
language_en["alert_power_electrolyse_choice_prog"] = "Scheduled";
language_en["alert_power_electrolyse_description"] = "Which mode do you want for your electrolysis?";
language_en["alert_reboot_description"] = "Are you sure you want to restart your device?";
language_en["alert_reboot_title"] = "Restart";
language_en["alert_reconnect_in_ble_for_crep"] = "Your device needs to know your geolocation to use the twilight mode of the light scheduling.\n\nIf you want to use this feature, please reconnect via Bluetooth to share your coordinates with the device.";
language_en["alert_reconnect_in_ble_for_music_mode"] = "Music mode is not available in a \"remote\" connection.\n\nTo use this feature, a Bluetooth connection to the device is required.\n\nTo achieve that, you must open the lateral menu, click on \"Sign out\"  and connect to your device from the Bluetooth tab.";
language_en["alert_reconnecting_cancel"] = "Cancel reconnection";
language_en["alert_reconnecting_description"] = "Trying to reconnect…";
language_en["alert_reconnecting_title"] = "Connection lost";
language_en["alert_reg_warning_description"] = "No ORP measurement device has been found.\nIf no measure is detected in the next 15 minutes, the electrolysis will go into an automatic mode (scheduled + thermoregulated).";
language_en["alert_regulation_available_volume_edit_mode_on"] = "The amount of available products is in edit mode, do you wish to save the change?";
language_en["alert_schedule_modified_but_not_saved"] = "You edited your schedule but didn't save your modifications";
language_en["alert_schedule_modified_but_not_saved_action_do_not_save"] = "Do not save";
language_en["alert_schedule_modified_but_not_saved_action_save"] = "Save your modifications";
language_en["alert_service_modified"] = "A modification of your device's network (e.g. a connection of a new device) has been detected. We'll proceed to reconnection to take into account the necessary changes.";
language_en["alert_shared_pool_deleted"] = "Your pool is no longer shared.";
language_en["alert_shared_pool_deleted_failed"] = "Your share couldn't be cancelled.\n\nPlease check your internet connection or try again later.";
language_en["alert_shared_pool_edited"] = "Your pool-sharing end date has been updated.";
language_en["alert_shared_pool_edited_failed"] = "Your pool-sharing end date could not be updated.\n\nPlease check your internet connection or try again later.";
language_en["alert_shared_pool_email_already_exist"] = "You are already sharing your pool with this pro (email address already used).\n\nPlease use a different email address or edit the limit date of your share in the list at the bottom of this screen.";
language_en["alert_shared_pool_need_contact"] = "You need to fill in your contact information to share your pool.";
language_en["alert_shared_pool_need_pool"] = "You need to fill in your swimming pool information before sharing it.";
language_en["alert_shared_pool_saved"] = "Your pool has been successfully shared.";
language_en["alert_shared_pool_saved_failed"] = "The sharing of your swimming pool has failed.\n\nPlease check your internet connection or try again later.";
language_en["alert_warning_delete_vigipool_device"] = "Once this device is removed from your account, you will have to re-pair with it via Bluetooth (through the app) if you want to add it again.\n\nAre you sure you want to remove it?";
language_en["alert_warning_reset_sensor_date"] = "You are about to reset the latest replacement date of your sensor.\n\nThis change is not reversible, are you sure you want to proceed?";
language_en["alert_warning_winter_mode"] = "The winterization mode will deactivate the injection of your device";
language_en["alerts"] = "Alerts";
language_en["amplify_device_current"] = "(This device)";
language_en["amplify_error_add_device"] = "Error while adding a device";
language_en["amplify_error_delete_device"] = "Error while removing a device";
language_en["amplify_error_sign_out"] = "Error while signing out";
language_en["amplify_linked_devices"] = "Your devices linked to Vigipool";
language_en["android_output_nb_format"] = "%1$d output";
language_en["android_zone_nb_format"] = "%1$d zone";
language_en["app_restart_dialog_message"] = "You're all set to remotely keep an eye on your pool.\n\nDo you wish to switch to the remote connection mode?";
language_en["ask_for_authorization"] = "Authorization request";
language_en["ask_for_authorization_description"] = "We need authorization from Spotify to synchronize with the music.";
language_en["ask_user_configure_lynx_wifi"] = "Your installation is connected to your Lynx, but you have no internet. To connect your installation to the Wifi, configure it on your Lynx";
language_en["aux2name"] = "Auxiliary 2";
language_en["aux_forced_off_no_filtration"] = "Auxiliary paused because it can only work when the filtration is also working.\nAuxiliary will turn on when the filtration starts.";
language_en["aux_forced_off_no_filtration_title"] = "Waiting for filtration";
language_en["aux_forced_off_orp_measurement_error"] = "Auxiliary paused because the measured ORP value is less than 400 mV; or because the measuring device is disconnected.";
language_en["aux_forced_off_orp_measurement_error_title"] = "ORP measurement error";
language_en["aux_forced_off_orperror_description"] = "There is an issue with the ORP measurement, you need to fix this issue or disable the ORP setpoint in the auxiliary settings to start your electrolysis device.";
language_en["aux_forced_off_orperror_title"] = "Invalid ORP measurement";
language_en["aux_forced_off_orpreached"] = "Auxiliary paused because the ORP setpoint has been reached.";
language_en["aux_forced_off_orpreached_title"] = "ORP setpoint reached";
language_en["aux_forced_off_starter_description"] = "Filtration just started, and the auxiliary will start in a few minutes.";
language_en["aux_forced_off_starter_title"] = "Waiting for filtration to start";
language_en["aux_forced_off_temp_too_high"] = "Auxiliary paused because the temperature setpoint has been reached.";
language_en["aux_forced_off_temp_too_high_title"] = "Temp. setpoint reached";
language_en["aux_forced_off_temp_too_low"] = "Auxiliary paused because the minimum temperature setpoint isn't reached.";
language_en["aux_forced_off_temp_too_low_title"] = "Min. temp. not reached";
language_en["aux_min_temp_picker_dialog_title"] = "Set the min temperature";
language_en["aux_paused"] = "%1$s paused";
language_en["aux_starting"] = "starting soon";
language_en["aux_type_booster"] = "Booster";
language_en["aux_type_heater"] = "Heater";
language_en["aux_type_none"] = "None";
language_en["auxiliary"] = "Auxiliary";
language_en["auxiliary_mode"] = "Auxiliary mode";
language_en["auxiliary_overlay_aux_min_temp"] = "Treatment starting temperature threshold";
language_en["auxiliary_paused"] = "Auxiliary paused";
language_en["auxiliary_settings_dialog_filtration_dependant_tooltip"] = "If the auxiliary is enslaved to filtration, it won't be able to work when filtration is turned off.";
language_en["auxiliary_treatment_orp_value"] = "Measured ORP value: %1$d mV";
language_en["auxiliary_type_deactivated"] = "Deactivated";
language_en["auxiliary_type_orp_treatment"] = "ORP treatment";
language_en["auxiliary_type_undefined"] = "Undefined";
language_en["backwash"] = "Backwash";
language_en["backwash_close_sewer_valve"] = "Then close the drain valve";
language_en["backwash_completed"] = "Backwash completed";
language_en["backwash_help"] = "Regular backwashing of your filtration system is recommended to ensure clear water.\nVigipool can guide you through this process.\nWarning: your filtration will be paused when you start the backwash";
language_en["backwash_impossible"] = "Backwash not possible";
language_en["backwash_impossible_filt_prohibited_message"] = "Please remove the pump prohibition from your filter (directly on the switch button of your cabinet) before starting a backwash";
language_en["backwash_impossible_forced_march_message"] = "Please remove the forced march of your filtration (directly on the switch button of your box) before starting a backwash";
language_en["backwash_in_progress"] = "Backwash in progress";
language_en["backwash_in_progress_description"] = "It appears that a backwash is in progress.\n\nIf you think that this is an error and you want to return the device to its normal operating state, please click on \"Stop backwash\".\nOtherwise, please exit the application and restart it when the backwash operation is completed.";
language_en["backwash_mode_welcome"] = "Welcome to backwash mode";
language_en["backwash_mode_welcome_description"] = "This mode allows you to efficiently clean your filter\n\nCaution: this mode requires you to be physically in your technical room for a period of 5 to 15 minutes";
language_en["backwash_modify_rinse_duration"] = "Modify rinse duration";
language_en["backwash_modify_wash_duration"] = "Modify wash duration";
language_en["backwash_need_vigipool_account"] = "Being logged in to a Vigipool account is required to take advantage of the guided backwash and backwash reminder.\n\nYou can create a Vigipool account or login from the main menu of the application.";
language_en["backwash_next_water_clear"] = "My water is clear, next";
language_en["backwash_open_sewer_and_turn_valve_to_wash"] = "Open the drain valve, then turn the valve to the WASH position";
language_en["backwash_reminder"] = "Backwash reminder";
language_en["backwash_rinse_completed"] = "Rinse completed";
language_en["backwash_rinse_in_progress"] = "Rinse in progress, please wait";
language_en["backwash_settings"] = "Backwash settings";
language_en["backwash_valve_turn_to_filtration"] = "Turn the valve back to FILTRATION";
language_en["backwash_valve_turn_to_rinse"] = "Turn the valve to RINSE";
language_en["backwash_wash_completed"] = "Washing completed";
language_en["backwash_wash_in_progress"] = "Washing in progress, please wait";
language_en["banner_music_mode_need_one_zone_title"] = "Music mode needs to have at least one zone selected to work";
language_en["bar"] = "bar";
language_en["ble_needed"] = "Bluetooth required";
language_en["ble_permission_needed"] = "Bluetooth permission required";
language_en["blue"] = "Blue";
language_en["bluetooth_disabled_error_message"] = "Bluetooth is not available. Please check that Bluetooth is activated on your phone and that the %1$s application is authorized to use Bluetooth (can be changed in the Settings application).";
language_en["bluetooth_not_available_error_message"] = "The Bluetooth feature is not available on your Android device.";
language_en["bluetooth_permission_rationale_message"] = "Bluetooth permission is required to connect to your device via Bluetooth.";
language_en["bluetooth_permission_rationale_title"] = "Enable Bluetooth";
language_en["bonding_cancel"] = "Cancel pairing";
language_en["bonding_check_title"] = "Retrieving data";
language_en["bonding_error"] = "Pairing error";
language_en["bonding_help_rssi"] = "Put your phone close to your %1$s to pair them.";
language_en["bonding_help_rssi_and_btn"] = "Put your phone close to your %1$s or press its button once to pair them.";
language_en["bonding_location_unavailable"] = "Unable to get the current location to complete the pairing process.";
language_en["bonding_message"] = "Please press once the button on your %1$s (shown below) to pair it with your phone";
language_en["bonding_required_title"] = "Pairing required";
language_en["bonding_timeout"] = "Pairing timeout.";
language_en["brightness"] = "Brightness";
language_en["button_cancel_calibration"] = "Cancel calibration";
language_en["button_cancel_connection"] = "Cancel connection";
language_en["button_cancel_scan"] = "Cancel search";
language_en["button_update_app_store"] = "Update on AppStore";
language_en["bypass"] = "Bypass";
language_en["calibrate"] = "Calibrate";
language_en["calibration_adjustment_information"] = "The %1$s value will be adjusted during the next measurement, i.e. in about 10 seconds if the filtration is on, or the next time the filtration is started.";
language_en["calibration_choose_type_title"] = "Calibration type";
language_en["calibration_debit"] = "Flow calibration";
language_en["calibration_debit_flow_warning"] = "Flow calibration can only be performed when filtration is on.";
language_en["calibration_debit_warning"] = "The flow rate will be adjusted at the next measurement, i.e. within ten seconds if the filtration is on, or at the next start of the filtration.";
language_en["calibration_failed"] = "Calibration failed, please check your sensor";
language_en["calibration_first_point_title"] = "1st point calibration";
language_en["calibration_in_progress"] = "Calibration in progress…";
language_en["calibration_information"] = "The calibration can last between 30 seconds and 3 minutes, please stay close to your device and keep the app open during this process";
language_en["calibration_manual"] = "Manual adjustment";
language_en["calibration_one_point"] = "One point calibration";
language_en["calibration_orp"] = "ORP calibration";
language_en["calibration_orpimpossible"] = "We currently do not have an ORP measurement, please turn on your filtration to get one before adjusting it.";
language_en["calibration_orpsensor"] = "ORP sensor calibration";
language_en["calibration_orpwarning"] = "The ORP value will be adjusted at the next measurement, i.e. in about 10 seconds if the filtration is on, or the next time the filtration is started.";
language_en["calibration_ph"] = "pH calibration";
language_en["calibration_phimpossible"] = "We currently do not have a pH measurement, please turn on your filtration to get one before adjusting it.";
language_en["calibration_phsensor"] = "pH sensor calibration";
language_en["calibration_phwarning"] = "The pH value will be adjusted at the next measurement, i.e. in about 10 seconds if the filtration is on, or the next time the filtration is started.";
language_en["calibration_pressure"] = "Pressure calibration";
language_en["calibration_pressure_warning"] = "The pressure value will be adjusted at the next measurement, i.e. in about 10 seconds if the filtration is on, or the next time the filtration is started.";
language_en["calibration_second_point_title"] = "2nd point calibration";
language_en["calibration_start"] = "Start calibration";
language_en["calibration_start_second_point"] = "Calibrate 2nd point";
language_en["calibration_success"] = "Calibration successful";
language_en["calibration_temp"] = "Temperature calibration";
language_en["calibration_temp_impossible"] = "We currently do not have a temperature measurement, please turn on your filtration to get one before adjusting it.";
language_en["calibration_temp_warning"] = "The temperature will be adjusted the next time we measure it, i.e. in about 10 seconds if the filtration is on, or the next time the filtration is started.";
language_en["calibration_two_points"] = "Two points calibration";
language_en["cgu_accept_warning"] = "You must check the box to accept the Terms of Use.";
language_en["cgu_bt_accept"] = "Accept";
language_en["cgu_bt_accept_label"] = "I have read and accept the Terms of Use";
language_en["cgu_read_warning"] = "You must read the Terms of Use before accepting.";
language_en["channels"] = "Channels";
language_en["color"] = "Color";
language_en["color_eyedropper_title"] = "Color picker";
language_en["come_closer_to_your_device"] = "Get closer to your device";
language_en["common_accept_cgu"] = "I accept the Terms of Use";
language_en["common_address"] = "Address";
language_en["common_bluetooth"] = "Bluetooth";
language_en["common_calibration"] = "Calibration";
language_en["common_cancel"] = "Cancel";
language_en["common_city"] = "City";
language_en["common_closed"] = "Closed";
language_en["common_congratulations"] = "Congratulations!";
language_en["common_connect"] = "Connect";
language_en["common_connecting"] = "Connecting";
language_en["common_country"] = "Country";
language_en["common_cover"] = "Cover";
language_en["common_danger"] = "Danger";
language_en["common_debit"] = "Flow";
language_en["common_delete_anyway"] = "Delete anyway";
language_en["common_disable"] = "Disable";
language_en["common_dismiss"] = "Dismiss";
language_en["common_electrolyse"] = "Electrolysis";
language_en["common_email"] = "Email address";
language_en["common_enable"] = "Enable";
language_en["common_error"] = "Error";
language_en["common_filtration_type"] = "Filtration";
language_en["common_gateway"] = "Gateway";
language_en["common_ignore"] = "Dismiss";
language_en["common_information"] = "Information";
language_en["common_light"] = "Light";
language_en["common_loading"] = "Loading…";
language_en["common_min_temp"] = "Min. Temp.";
language_en["common_mode"] = "Mode";
language_en["common_mode_choc"] = "Shock";
language_en["common_mode_prog"] = "Programmed";
language_en["common_new_password"] = "New password";
language_en["common_no"] = "No";
language_en["common_off"] = "Off";
language_en["common_ok"] = "OK";
language_en["common_on"] = "On";
language_en["common_open"] = "Open";
language_en["common_orp"] = "ORP";
language_en["common_owner_name"] = "Owner's name";
language_en["common_password"] = "Password";
language_en["common_password_confirmation"] = "New password confirmation";
language_en["common_ph"] = "pH";
language_en["common_phone_number"] = "Phone number";
language_en["common_pool_name"] = "Pool name";
language_en["common_pool_type"] = "Type";
language_en["common_post_code"] = "Postal code";
language_en["common_pressure"] = "Pressure";
language_en["common_remotely"] = "Remotely";
language_en["common_reset"] = "Reset";
language_en["common_retry"] = "Retry";
language_en["common_save"] = "Save";
language_en["common_scheduling"] = "Scheduling";
language_en["common_set_point"] = "Setpoint";
language_en["common_sign_in"] = "Sign in";
language_en["common_sign_up"] = "Sign up";
language_en["common_stop"] = "Stopped";
language_en["common_structure"] = "Structure";
language_en["common_success"] = "Success";
language_en["common_temperature"] = "Temperature";
language_en["common_temperature_unit"] = "°C";
language_en["common_temperature_unit_us"] = "°F";
language_en["common_thermoregulated"] = "Thermoregulated";
language_en["common_thermoregulation_mode"] = "Thermoregulated mode";
language_en["common_timer"] = "Timer";
language_en["common_unknown_device"] = "Unknown device";
language_en["common_validate"] = "Confirm";
language_en["common_volume_eu"] = "Volume (m3)";
language_en["common_volume_na"] = "Volume (US gal)";
language_en["common_warning"] = "Warning";
language_en["common_water"] = "Water";
language_en["common_wifi_state"] = "Connection status:";
language_en["common_working"] = "On";
language_en["common_yes"] = "Yes";
language_en["configure_dmxchannels"] = "Configure DMX channels";
language_en["configure_price_kwh"] = "Set kWh price";
language_en["configure_unit_temperature_help"] = "The temperature unit (Celsius or Fahrenheit) used in the application comes from your phone settings and will not depend on this choice.";
language_en["configure_wifi_connection"] = "Setup Wifi connection";
language_en["configure_zones"] = "Zone configuration";
language_en["confirm"] = "Confirm";
language_en["confirm_force_filtration_alert"] = "The filtration must be on for the auxiliary to work.\n\nIf you turn off this setting, the auxiliary won't be able to force the filtration on (if needed) and therefore won't be able to turn on when the filtration is off.";
language_en["confirm_force_filtration_pac_alert"] = "Filtration needs to be on for the heat pump to work.\n\nIf you turn off this setting, the heat pump won't be able to force the filtration on (if needed) and therefore won't be able to turn on when the filtration is off.";
language_en["confirm_password"] = "Confirm password";
language_en["connect"] = "Connect";
language_en["connect_setup_to_wifi"] = "Connect your device to Wifi?";
language_en["connected"] = "Connected";
language_en["connected_to_wifi"] = "Connected to Wifi";
language_en["connecting_to_phileo"] = "Connecting to\n%1$s";
language_en["connection_destination_internet"] = "to Wifi";
language_en["connection_log_out"] = "Disconnect";
language_en["connection_looking_for_device_title"] = "Searching device…";
language_en["connection_to_internet_none"] = "No internet connection";
language_en["consumption"] = "Consumption";
language_en["contact_informations"] = "My contact information";
language_en["contact_informations_needed"] = "Contact information required";
language_en["context_text_view_configure_your_wifi_connection"] = "Configure your Wifi connection";
language_en["controlled_dmx"] = "Controlled by DMX";
language_en["controlled_micro"] = "Controlled by microphone";
language_en["cover_detected_details"] = "It can affect the operating time of some devices.";
language_en["cover_detected_title"] = "Cover detected";
language_en["cs4z_overload"] = "Projector overloaded, check your installation and restart your CS4Z.";
language_en["cs4z_reconfigure_output"] = "Reconfigure outputs";
language_en["cs4z_rename_zone"] = "Rename zone";
language_en["cs4z_rename_zone_instructions"] = "Enter the new zone name.";
language_en["cs4z_rename_zone_placeholder"] = "New name (e.g.: Pool, Spa...)";
language_en["cs4z_settings"] = "Zone settings";
language_en["cs4z_use_other_zones"] = "Simultaneously control:";
language_en["cs4z_zone_name"] = "Zone name:";
language_en["date_hour_ampmformatter"] = "h:mm a";
language_en["date_hour_formatter"] = "H:mm";
language_en["day"] = "day";
language_en["day_caps"] = "Day";
language_en["days"] = "days";
language_en["debit_current"] = "Current flow";
language_en["debit_desired"] = "Rectified flow";
language_en["debit_history"] = "Flow rate history";
language_en["delete"] = "Delete";
language_en["delete_all_registered_colors_message"] = "Are you sure you want to delete your registered colors?";
language_en["delete_all_registered_colors_title"] = "Delete all colors";
language_en["delete_contact_informations"] = "Remove contact information";
language_en["delete_pool"] = "Delete my pool";
language_en["demo_mode"] = "Demo mode";
language_en["device_name_phileo"] = "Phileo";
language_en["device_not_connected"] = "Your %1$s device is not connected.";
language_en["device_shadow_error"] = "Unable to connect to %1$s.\n\nReason: no connected object found.";
language_en["devices_remote_dialog_device_not_attached"] = "We were unable to link this device to your Vigipool account.";
language_en["devices_remote_dialog_device_not_found"] = "We were unable to find this device in your Vigipool account.";
language_en["devices_remote_dialog_invalid_things"] = "We were unable to get the data associated to your Vigipool account.";
language_en["devices_remote_dialog_login_failed_message"] = "Incorrect username and/or password.";
language_en["devices_remote_dialog_login_failed_network_error_message"] = "Please check that you are connected to internet.";
language_en["devices_remote_dialog_login_failed_network_error_title"] = "Network error";
language_en["devices_remote_dialog_no_devices_found"] = "We were unable to find the devices related to your Vigipool account.";
language_en["devices_remote_dialog_sign_in_not_complete"] = "We are unable to sign you in at the moment.";
language_en["devices_remote_dialog_user_not_confirmed_message"] = "Your account is not yet verified.\n\nPlease check your mailbox and click the confirmation link.";
language_en["devices_remote_error_email_required"] = "Email address is required";
language_en["devices_remote_error_password_required"] = "Password is required";
language_en["devices_selection_select_a_device_message"] = "Please select a device";
language_en["devices_selection_text"] = "We found several devices linked to your account, please choose the one you wish to connect to.";
language_en["devices_tab_bluetooth_bluetooth_throttle_error_message"] = "Please try to start another Bluetooth scan a bit later.";
language_en["devices_tab_bluetooth_no_device_found_message"] = "No PhileoX devices were found nearby. Please check that it is switched on and that you are close enough.";
language_en["devices_tab_bluetooth_start_scan"] = "Start scan";
language_en["devices_tab_bluetooth_stop_scan"] = "Stop scan";
language_en["devices_title"] = "Devices";
language_en["dialog_missing_timezone_message"] = "Your device %1$s does not have any set timezone, which is mandatory for scheduling.\n\nPlease connect via Bluetooth to set the timezone automatically.";
language_en["direct"] = "Direct";
language_en["disabled"] = "Disabled";
language_en["divergence_flow_error_notification"] = "Water flow is missing in a part of your installation.";
language_en["dmxmode"] = "DMX mode";
language_en["dmxmode_help"] = "Refer to the documentation of the DMX projectors";
language_en["duration_picker_dialog_title"] = "Set the duration";
language_en["edit"] = "Edit";
language_en["edit_device_name_instructions"] = "Enter your new device name.\n\nBeware that if you are using Bluetooth you might need to reconnect to the device to see the changes (this is due to some phones caching device details in Bluetooth).";
language_en["edit_device_name_placeholder"] = "New device name (e.g. My swimming pool)";
language_en["edit_device_name_title"] = "Edit device name";
language_en["edit_last_manual_backwash"] = "Enter a manual backwash";
language_en["edit_program_name_instructions"] = "Enter your new program name and validate with the button down the screen.\n\nIf you wish to use the default name, delete the name and save it.";
language_en["edit_program_name_placeholder"] = "Program name (e.g. Week-end)";
language_en["edit_program_name_title"] = "Edit program name";
language_en["electrolyse_chlore_production_state"] = "Chlorine production state";
language_en["electrolyse_choc_duration"] = "Shock treatment duration";
language_en["electrolyse_current"] = "Electrolysis current";
language_en["electrolyse_daily_prod"] = "Daily production duration";
language_en["electrolyse_filtration_state"] = "Cell flow";
language_en["electrolyse_internal_temp"] = "Internal Temperature";
language_en["electrolyse_power"] = "Power";
language_en["electrolyse_prod_chlore"] = "Chlorine Prod.";
language_en["electrolyse_prod_chlore_instant"] = "Instant. Chlorine Prod.";
language_en["electrolyse_stopped"] = "Electrolysis stopped";
language_en["electrolyse_stopped_details_format"] = "Minimum water temperature reached, the electrolysis of the device {{STRING}} is stopped.";
language_en["electrolyse_temp_min"] = "Min. Temperature";
language_en["electrolyse_temperature"] = "Cell water temp.";
language_en["electrolyse_tension"] = "Voltage";
language_en["electrolyse_thermoregulated_help"] = "Electrolysis duration will be automatically adjusted depending on water temperature";
language_en["electrolyse_water_hardness"] = "Water hardness";
language_en["electrolysis_amperage"] = "Amperage";
language_en["electrolysis_cover_off"] = "Opened";
language_en["electrolysis_daily_production_duration_auto"] = "Thermoregulated production duration: %1$s";
language_en["electrolysis_dialog_no_orp_device_message"] = "No ORP measuring device was found.\n\nIf no measurement is detected within the next hour, the electrolysis will switch back to Programmed mode.";
language_en["electrolysis_dialog_title"] = "Mode confirmation";
language_en["electrolysis_shock_treatment_duration_elapsed"] = "Shock treatment started %1$s ago.";
language_en["electrolysis_stop_dialog_message"] = "Are you sure you want to stop the electrolysis?";
language_en["electrolysis_thermoregulation"] = "Thermoregulation";
language_en["energy"] = "Energy";
language_en["enslaved_to_filtration"] = "Enslaved to filtration";
language_en["enslaved_to_filtration_help"] = "If enslaved to filtration, the auxiliary won't be able to work if filtration is turned off.";
language_en["enslaved_to_filtration_pac_help"] = "If enslaved to filtration, the heat pump won't be able to work if filtration is turned off.";
language_en["error"] = "Error";
language_en["error_amplify_get_devices"] = "An error happened while retrieving your devices, please check your internet connection and try again.";
language_en["error_confirmation_sign_up_unknown"] = "An error occurred, please verify the code and try again.";
language_en["error_connection"] = "Unable to connect, please try again. If the error repeats, try closing the app and relaunching it.";
language_en["error_ntpmessage"] = "Your device must be connected to the internet to use the scheduling.";
language_en["error_scan"] = "An error occurred while searching for a device, please try again. If the error repeats, try closing the app and relaunching it, or changing the connection mode.";
language_en["error_sign_in_no_device_linked"] = "We couldn't find any compatible device linked to your account. Please connect in Bluetooth first to link your device to your account (settings screen).";
language_en["error_sign_in_unknown"] = "Connection failed, please check your internet connection and try again. If the error repeats, make sure your credentials are correct.";
language_en["error_sign_up_mail_exists"] = "An account is already associated with this email.";
language_en["error_sign_up_no_internet"] = "No internet connection. Please turn on your mobile data or connect to a WiFi network and try again.";
language_en["error_sign_up_timeout"] = "The request could not be completed. Please check your internet connection and try again.";
language_en["error_sign_up_unknown"] = "An error occurred during sign-up.";
language_en["expired"] = "expired";
language_en["face_id_authenticate_password_get"] = "Authenticate yourself to retrieve your password";
language_en["face_id_authenticate_password_set"] = "Authenticate yourself to save your password";
language_en["fill"] = "Fill";
language_en["filt_light_force_help"] = "Filtration will turn on while lighting is on.";
language_en["filt_meteor_intensity_error"] = "Intensity error detected - Turn off filtration to fix the issue";
language_en["filtration_forced_by_frost_free_mode"] = "Forced by frost free mode";
language_en["filtration_forced_by_user"] = "Forced by user";
language_en["filtration_forced_off_by_box_help"] = "To turn it on, please make sure that the tild box switch is in \"managed by tild\" position.\nIf you own a level regulator, this behaviour may be normal.";
language_en["filtration_forced_on_by_box_help"] = "To turn it off, please make sure that the tild box switch is in \"managed by tild\" position.\nIf you own a level regulator, this behaviour may be normal.";
language_en["filtration_m_fragment_help_over_under_current"] = "Intensity default detected: the filtration needs to be turned off to fix the problem.";
language_en["filtration_mode"] = "Filtration mode";
language_en["filtration_paused"] = "Filtration paused";
language_en["filtration_start_forced_march"] = "Turn on continuous march";
language_en["filtration_stop_forced_march"] = "Turn off continuous march";
language_en["flow_calibration"] = "Flow rate calibration";
language_en["flow_current"] = "Current flow rate";
language_en["flow_desired"] = "Flow rate desired";
language_en["flow_measurement_history"] = "Flow rate values history";
language_en["flow_not_determined"] = "Unknown filtration state";
language_en["flow_not_working"] = "No flow detected";
language_en["flow_probe_calibration_error_dialog_message"] = "Calibration error, please check your flow sensor.";
language_en["flow_sensor_calibration"] = "Flow sensor calibration";
language_en["flow_switch_diverging"] = "We detected that some flows are in different states.\nThis can be normal if there's a bypass in your installation, but it can also come from a malfunctioning flow switch or a weak water flow.";
language_en["flow_view_flow_off"] = "Filtration is off";
language_en["flow_working"] = "Filtration is on";
language_en["force_filtration_during_aux"] = "Force filtration";
language_en["force_filtration_during_aux_help"] = "Filtration will automatically turn on when the auxiliary turns on.";
language_en["force_filtration_during_lighting"] = "Force filtration during lighting";
language_en["force_filtration_during_pac_help"] = "Filtration will automatically turn on when the heat pump turns on.";
language_en["forced_by_aux"] = "Forced by auxiliary";
language_en["forced_by_box"] = "Forced by box";
language_en["forced_by_lighting"] = "Forced by lighting";
language_en["forced_by_pac"] = "Forced by heat pump";
language_en["forced_march"] = "Continuous march";
language_en["forced_off_by_aux_help"] = "To turn it off, you should turn off the auxiliary or uncheck the \"Force filtration\" auxiliary option.";
language_en["forced_off_by_frost_protection_help"] = "Filtration is working in order to protect your pool against the frost.";
language_en["forced_off_by_light_help"] = "To turn it off, you should turn off the light or uncheck the \"Force filtration during lighting\" option.";
language_en["forced_off_by_pac_help"] = "To turn it off, you should turn off the heat pump or uncheck its \"Force filtration\" option.";
language_en["forced_off_by_water_renewal_help"] = "Filtration started to have accurate temperature measurements, it will stop automatically after a few minutes.";
language_en["forced_on_by_box_help"] = "To turn it off, please make sure that the tild box is in position 1.@IMAGE(message_coffret_tild,26,26,8,0,10)\nIf you own a level regulator, this behaviour may be normal.";
language_en["forgotten_password"] = "Forgotten password?";
language_en["forgotten_password_f2_hint_code_required"] = "Reset code is required";
language_en["forgotten_password_f2_hint_password_strength"] = "Enter the new password for your account.\nThe new password must follow these rules: at least 8 characters including lowercase and uppercase, a digit and a special character";
language_en["forgotten_password_success_dialog_message"] = "Your password has been changed.";
language_en["form_error_character_limit15"] = "The length of characters shouldn't be greater than 15.";
language_en["form_error_character_limit17"] = "The number of characters must not exceed 17.";
language_en["form_error_character_limit2"] = "The number of characters must be greater than or equal to 2.";
language_en["form_error_character_limit3"] = "The length of name should be greater than 2 characters.";
language_en["form_error_character_limit43"] = "The length of name shouldn't be greater than 43 characters.";
language_en["form_error_empty"] = "Field is empty";
language_en["form_error_empty_fields"] = "It is required to fill in all the fields to save your swimming pool details.";
language_en["form_error_invalid_email"] = "Invalid email";
language_en["form_error_password_length"] = "Minimum length is 8 characters";
language_en["form_error_password_lower_case"] = "Needs at least one lowercase character";
language_en["form_error_password_number"] = "Needs at least one number";
language_en["form_error_password_special_char"] = "Needs at least one special character";
language_en["form_error_passwords_dont_match"] = "Passwords are differents";
language_en["form_invalid_field"] = "Some fields are empty or incorrect.";
language_en["form_shared_pool_limit_date_placeholder"] = "Share end date";
language_en["form_shared_pool_pro_mail_placeholder"] = "Email address of the professional";
language_en["format_weight_hour"] = "g/h";
language_en["format_weight_hour_us"] = "oz/h";
language_en["frequency"] = "Frequency";
language_en["friday_short"] = "Fri";
language_en["frost_protection_help"] = "Frost protection mode allows to start the filtration automatically if the water temperature gets too cold to prevent the water from freezing.";
language_en["frost_protection_home_help"] = "Frost protection mode turned on, filtration will start automatically in order to avoid frost in your pipes";
language_en["ft3h"] = "ft³/hour";
language_en["ft3h_short"] = "ft³/h";
language_en["general_connecting_to_aws"] = "Fetching data";
language_en["general_copied_to_clipboard"] = "Copied to clipboard!";
language_en["general_do_update"] = "Download & install update";
language_en["general_duration_choc_electrolyse_unknown"] = "Shock mode has been enabled for -- hour";
language_en["general_duration_thermoregulation_unknown"] = "Daily thermoregulated production: --h";
language_en["general_forgotten_password"] = "Forgotten password?";
language_en["general_iunderstand"] = "I understand";
language_en["general_postpone_update"] = "Update later";
language_en["general_select_device"] = "Device selection";
language_en["general_select_device_description"] = "We found several Vigipool devices linked to your account, please choose the one you wish to connect to";
language_en["general_unknown_device"] = "Unnamed device";
language_en["general_unknown_error"] = "An unknown error has occurred. If this happens again, you may try to close and restart the application.";
language_en["general_update"] = "Update";
language_en["general_update_available"] = "Update available";
language_en["get_closer_to_devices"] = "Get closer to your device";
language_en["gpm"] = "US Gal/min";
language_en["gpm_short"] = "gpm";
language_en["great"] = "Great!";
language_en["green"] = "Green";
language_en["has_min_temp_setpoint"] = "Enable min. temp setpoint";
language_en["has_min_temp_setpoint_help"] = "Enable/disable the choice of a minimum temperature under which the auxiliary won't turn on.";
language_en["has_orpsetpoint"] = "Enable ORP setpoint";
language_en["has_orpsetpoint_help"] = "Enable/disable the choice of an ORP value over which the electrolysis won't start.\nThis option is disabled if you don't have a Vigipool device that registers ORP measures.";
language_en["heat_pump"] = "Heat Pump";
language_en["help_measure_unknown"] = "Measures will be displayed a few minutes after filtration starts.";
language_en["help_priority_ph"] = "ORP regulation will be enabled only when the pH value is correct";
language_en["history"] = "History";
language_en["history_impossible_to_display"] = "Unable to display the graph";
language_en["history_no_data"] = "No data available";
language_en["home_cover_on_hint"] = "This may change the behaviour of some devices.";
language_en["home_dialog_factory_reset_message"] = "Are you sure you want to reset your device \"%1$s\" to factory settings?";
language_en["home_dialog_restart_message"] = "Are you sure you want to restart your \"%1$s\" device?";
language_en["home_latest_filtration"] = "Latest filtration";
language_en["home_no_auxiliary"] = "No auxiliary found";
language_en["home_no_program"] = "No schedule";
language_en["home_ph_consigne"] = "Setpoint: %1$s";
language_en["home_volume_injected_24_hours"] = "Volume injected in 24H";
language_en["hour"] = "Hour";
language_en["impossible_demo_mode"] = "Impossible to do this in Demo mode";
language_en["impossible_to_use_spotify"] = "Impossible to use Spotify";
language_en["impossible_to_use_spotify_description"] = "The Spotify application must be installed on your phone.";
language_en["info_winter_mode"] = "Your device is in winter mode";
language_en["information_setup_wifi"] = "You need to be connected to your device using Bluetooth to edit your Wifi settings";
language_en["informations"] = "Information";
language_en["injection_mode"] = "Injection mode";
language_en["input"] = "Input";
language_en["instant_consumption"] = "Instant consumption";
language_en["instant_current"] = "Instant current";
language_en["internal_notification_information_new_device"] = "A new device has been detected";
language_en["invalid_format"] = "Invalid format";
language_en["ios_bonding_help_rssi"] = "Put your phone close to your {{STRING}} to pair them.";
language_en["ios_bonding_help_rssi_and_btn"] = "Put your phone close to your {{STRING}} or press its button once to pair them.";
language_en["ios_bonding_message"] = "Please press the button on your {{STRING}} (shown below) to pair it with your phone.";
language_en["ios_error_ble_lost_connection"] = "We have lost connection with the device. The most likely cause is that you have strayed too far from your {{APP_NAME}} device.";
language_en["ios_fill_price_kwh_format"] = "Enter price per kWh in {{STRING}}.";
language_en["ios_format_alert_timezone_not_set"] = "Your device {{STRING}} does not have any timezone set, which is mandatory for scheduling.\n\nPlease connect via Bluetooth to set the timezone automatically.";
language_en["ios_format_amplify_add_device"] = "Add this device ({{STRING}})";
language_en["ios_format_bac_empty_error_notification"] = "{{STRING}} product tank is empty - Pump is paused";
language_en["ios_format_common_temperature"] = "%d°C";
language_en["ios_format_common_temperature_us"] = "%d°F";
language_en["ios_format_confirm_timezone"] = "Confirm timezone ({{STRING}})";
language_en["ios_format_connection_connected"] = "Connected {{STRING}}";
language_en["ios_format_connection_destination_device"] = "to {{STRING}}";
language_en["ios_format_connection_looking_for_device"] = "Looking for {{STRING}}";
language_en["ios_format_connection_not_connected"] = "Not connected {{STRING}}";
language_en["ios_format_crepuscular_mode_help"] = "Start lights at sunset ({{STRING}}h{{STRING}} today)";
language_en["ios_format_electrolyse_choc_duration"] = "Shock mode has been enabled for %dh%02d";
language_en["ios_format_error_cell_error_notification"] = "Electrolysis cell ({{STRING}}) doesn't produce anymore - contact your installer.";
language_en["ios_format_error_modbus_message"] = "We detected a communication error (RS485) on your {{STRING}} - code_E9";
language_en["ios_format_firmware_version_too_low_winter_mode"] = "Winter mode is disabled on version {{STRING}}.\n\nConnect your Vigipool setup to the internet to benefit from the latest updates and enable this feature.";
language_en["ios_format_general_duration_thermoregulation"] = "Daily thermoregulated production: %dh%02d";
language_en["ios_format_last_measure"] = "{{STRING}} latest measurement";
language_en["ios_format_meteor_alarm_low_flow"] = "{{STRING}}: Undercurrent detected - Check that the pump is not running empty.";
language_en["ios_format_meteor_alarm_over_flow"] = "{{STRING}}: Overcurrent detected - Check that the pump is not faulty or blocked.";
language_en["ios_format_meteor_alarm_warning_gel"] = "{{STRING}}: The water temperature is close to 0°C, the filtration will be activated to avoid the risk of frost.";
language_en["ios_format_meteor_alarm_water_level_low"] = "{{STRING}}: Check the pool water level.";
language_en["ios_format_missing_filt_error_notification"] = "Filtration duration is too short, electrolysis ({{STRING}}) cannot produce in the scheduled time.";
language_en["ios_format_no_value_orperror_notification"] = "Your {{STRING}} doesn't receive ORP measurement";
language_en["ios_format_no_value_pherror_notification"] = "Your {{STRING}} doesn't receive pH measurement";
language_en["ios_format_not_enough_salt_error_notification"] = "Low production - Please refer to the {{STRING}} user guide.";
language_en["ios_format_notification_device_disconnected"] = "Connection to your {{STRING}} device {{STRING}} has been lost.";
language_en["ios_format_overdose_injection_notification"] = "Maximum volume of {{STRING}} regulation product injected in 24h has been reached";
language_en["ios_format_overheat_elec_error_notification"] = "{{STRING}} Internal electrolysis temperature is too high.";
language_en["ios_format_pairing_to"] = "Pairing to %@";
language_en["ios_format_reconnect_to_device_message"] = "Do you want to connect to {{STRING}} ({{STRING}})?";
language_en["ios_format_schedule_hour"] = "%d hour";
language_en["ios_format_schedule_hours"] = "%d hours";
language_en["ios_format_schedule_minute"] = "%02d min";
language_en["ios_format_schedule_on_time_aux"] = "%@/day";
language_en["ios_format_schedule_on_time_booster"] = "%@/day";
language_en["ios_format_schedule_on_time_filtration"] = "%@/day";
language_en["ios_format_schedule_on_time_heater"] = "max %@/day";
language_en["ios_format_schedule_on_time_light"] = "%@/day";
language_en["ios_format_schedule_on_time_treatment"] = "max %@/day";
language_en["ios_format_schedule_time"] = "%dh%02d";
language_en["ios_format_settings_button_date_sensor"] = "Last sensor replacement date:\n{{STRING}}";
language_en["ios_format_sunrise_mode_help"] = "End lighting at sunrise ({{STRING}}{{STRING}}).";
language_en["ios_format_temp_too_high_error_notification"] = "Temperature measurement from {{STRING}} is too high.";
language_en["ios_format_temp_too_low_error_notification"] = "Temperature measurement from {{STRING}} is too low.";
language_en["ios_format_too_much_salt_error_notification"] = "Too much salt. Electrolysis stopped ({{STRING}}).";
language_en["ios_format_update_description_mandatory"] = "{{APP_NAME}} {{STRING}} is available.\nKeeping your app up-to-date gives you access to the latest functionalities and bug fixes.\n\nSince a major update is available, it is required for you to do it (on the AppStore page) to use the app.";
language_en["ios_format_update_description_not_mandatory"] = "{{APP_NAME}} {{STRING}} is available.\nKeeping your app up-to-date gives you access to the latest functionalities and bug fixes.\n\nYou can choose to do it later but you might run into issues or miss out on new functionalities.";
language_en["ios_format_update_failed_alert_message"] = "An error occured during {{STRING}} update, please try again later.";
language_en["ios_format_update_firmware_ask_state_title"] = "An update is available for {{STRING}} ({{STRING}}).";
language_en["ios_format_update_firmware_progress_complement_description"] = "Once the download end, the update will install and your {{STRING}} will restart.";
language_en["ios_format_update_firmware_progress_complement_description_ble_server"] = "Once the download ends, the update will install, and your {{STRING}} will restart, which will disconnect the app.";
language_en["ios_format_update_succeed_alert_message"] = "{{STRING}} update was successfully downloaded and installed!";
language_en["ios_format_water_orp"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Current ORP measure: {{STRING}} mV";
language_en["ios_format_water_temperature"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Water temperature: {{STRING}}";
language_en["ios_last_format"] = "Last on {{STRING}}";
language_en["ios_link_device_message_format"] = "Would you like to link the {{STRING}} device \"{{STRING}}\" to your Vigipool account?";
language_en["ios_link_device_title"] = "Link device";
language_en["ios_new_device_message"] = "You have just added a new {{STRING}} to your Vigipool system.\n\nYou must now configure it.";
language_en["ios_new_device_title"] = "New {{STRING}} detected";
language_en["ios_output_nb_format"] = "Output %d";
language_en["ios_price_in_currency_format"] = "Price in {{STRING}}";
language_en["ios_vspump_speed_details_format"] = "%d speed pump";
language_en["ios_warning_pairing_iosble_off"] = "Bluetooth is not available. Please check that Bluetooth is activated on your phone and that the {{APP_NAME}} application has the authorization to use Bluetooth (can be changed in the Settings application).";
language_en["ios_warning_pairing_no_results_ble"] = "No {{APP_NAME}} devices were found nearby. Please check that it is on and that you are not too far away.";
language_en["ios_warning_pairing_timeout_ble"] = "The connection timeout has expired, please try again. If the error repeats, move closer to your {{APP_NAME}} device.";
language_en["ios_zone_nb_format"] = "Zone %d";
language_en["it_is_done"] = "It's done";
language_en["just_now"] = "just now";
language_en["l"] = "L";
language_en["last_backwash"] = "Last backwash";
language_en["last_backwash_fill_date"] = "Did you perform a backwash manually?\nFill in the date below to get a reminder";
language_en["last_measure_now"] = "Latest measurement just now";
language_en["later"] = "Later";
language_en["latest_measurement_ago"] = "Latest measurement %1$s";
language_en["latest_measurement_not_co"] = "Measurement device not connected";
language_en["latest_probe_replacement"] = "Latest sensor replacement: %1$s";
language_en["leave"] = "Leave";
language_en["light_banner_cover_on_description"] = "The light cannot be turned on while the cover of the pool is closed.";
language_en["light_banner_cover_on_title"] = "Open the cover";
language_en["light_banner_register_color_already_registered_description"] = "This color has already been saved.";
language_en["light_banner_register_color_light_off_description"] = "Please turn on the light before saving a color.";
language_en["light_banner_timer_on_light_off_description"] = "Please turn on the light before scheduling a timer.";
language_en["light_color_cyan"] = "Cyan";
language_en["light_color_lagoon"] = "Lagoon";
language_en["light_color_magenta"] = "Magenta";
language_en["light_color_orange"] = "Orange";
language_en["light_color_pink"] = "Pink";
language_en["light_color_purple"] = "Purple";
language_en["light_color_white"] = "Cold";
language_en["light_color_white_warm"] = "Warm";
language_en["light_colors_title"] = "Colors";
language_en["light_command_favorite_color"] = "Favorite color";
language_en["light_crepuscular_mode"] = "Twilight mode";
language_en["light_crepuscular_short"] = "Twil.";
language_en["light_sequence_gradient"] = "Gradient";
language_en["light_sequence_horizon"] = "Horizon";
language_en["light_sequence_magic"] = "Magical";
language_en["light_sequence_parade"] = "Parade";
language_en["light_sequence_rainbow"] = "Rainbow";
language_en["light_sequence_random"] = "Random";
language_en["light_sequence_speed_fast"] = "Fast";
language_en["light_sequence_speed_normal"] = "Normal";
language_en["light_sequence_speed_slow"] = "Slow";
language_en["light_sequence_techno"] = "Techno";
language_en["light_sequence_title"] = "Sequence";
language_en["light_sequences_title"] = "Sequences";
language_en["light_sunrise_mode"] = "Sunrise mode";
language_en["light_sunrise_short"] = "Sunr.";
language_en["lighting"] = "Lighting";
language_en["lighting_color_fav"] = "Favourite";
language_en["lighting_mode"] = "Lighting mode";
language_en["lighting_overlay_couv_error_message"] = "The light cannot be switched on while the pool cover is on.";
language_en["lighting_overlay_paused"] = "Lighting paused";
language_en["lighting_overlay_switched_on"] = "Switched on";
language_en["lighting_overlay_timer_info_title"] = "Switch the light on";
language_en["lighting_settings_dialog_forced_filtration_hint"] = "The filtration will start as soon as the lighting is switched on and will last for the whole lighting duration.";
language_en["lighting_settings_dialog_forced_filtration_text"] = "Force filtration during lighting.";
language_en["link_device_btn_link"] = "Link";
language_en["link_device_message"] = "Would you like to link the %1$s %2$s device to your Vigipool account?";
language_en["link_device_title"] = "Link the device";
language_en["link_device_to_account"] = "Link this device to your account?";
language_en["loader_connecting_attempt"] = "Connection in progress";
language_en["loading_error_dialog_message_device_not_found"] = "The device was not found in your Vigipool account.";
language_en["loading_error_dialog_message_no_devices_found"] = "No devices were found in your Vigipool account.";
language_en["loading_failed"] = "Loading failed, please check your internet connection";
language_en["loading_page"] = "Loading page";
language_en["location_permission_rationale_message"] = "Location permission is required to use this feature.";
language_en["location_permission_rationale_title"] = "Enable location";
language_en["log_out"] = "Log out";
language_en["login"] = "Login";
language_en["login_failed"] = "Login failed";
language_en["logout_progress_dialog_title"] = "Logout";
language_en["m3h"] = "m³/hour";
language_en["m3h_short"] = "m³/h";
language_en["measurement_history_ble_hint"] = "Historical values are only available in remote connection mode:\n\n- your Vigipool device must be connected to WiFi\n- you must create and confirm your Vigipool account\n- you must connect \"remotely\"";
language_en["measurement_units_debit_unit"] = "Flow rate unit";
language_en["measurement_units_debit_unit_cubic_feet_per_hour"] = "Cubic feet per hour (ft³/h)";
language_en["measurement_units_debit_unit_cubic_meter_per_hour"] = "Cubic meter per hour (m³/h)";
language_en["measurement_units_debit_unit_gallon_per_minute"] = "US gallons per minute (gpm)";
language_en["measurement_units_measurement_system"] = "Measurement system";
language_en["measurement_units_pressure_unit"] = "Pressure unit";
language_en["measurement_units_pressure_unit_bar"] = "Bar (bar)";
language_en["measurement_units_pressure_unit_psi"] = "PSI (psi)";
language_en["measurement_units_temperature_celcius"] = "Celsius (°C)";
language_en["measurement_units_temperature_fahrenheit"] = "Fahrenheit (°F)";
language_en["measurement_units_temperature_unit"] = "Temperature unit";
language_en["merge_lighting_zone"] = "Merge lighting zones";
language_en["merge_lighting_zone_help"] = "Merging zones propagate commands sent to a Wix to all other Wix in your setup.\nIt lets you control multiple Wix easily if you don't wish to differentiate them.";
language_en["meteor_mode_auto"] = "Auto";
language_en["meteor_mode_help_aux"] = "On: auxiliary is in forced operation, 24 hours per day.\n\nProg: auxiliary will turn on during the scheduled timeslot (P1).";
language_en["meteor_mode_help_aux_heater"] = "On: heater is in forced operation, 24 hours per day, until the water temperature reaches the setpoint, it will then maintain the temperature.\n\nProg: heater will turn on during the scheduled timeslot (P1). If the water temperature reaches the setpoint, it will maintain the temperature until the end of the timeslot.";
language_en["meteor_mode_help_aux_orp_treatment"] = "On: the treatment is in continuous operation 24 hours per day.\n\nProg: treatment will turn on during the scheduled timeslot (P1).\n\nAuto: treatment is regulated with an ORP setpoint, and will turn on until the ORP measurement reaches the setpoint. It will then maintain the ORP value.";
language_en["meteor_mode_help_aux_treatment"] = "On: treatment is in forced operation, 24 hours per day.\n\nProg: treatment will turn on during the scheduled timeslot (P1).\n\nAuto: treatment will turn on during the scheduled timeslot (P1), but its duration will be modulated based on the water temperature.";
language_en["meteor_mode_help_aux_treatment_orp"] = "On: treatment is in forced operation, 24 hours per day.\n\nProg: treatment will turn on during the scheduled timeslot (P1).\n\nAuto: treatment is regulated with an ORP setpoint, and will turn on until ORP measurement reaches the setpoint. It will then maintain the ORP value.";
language_en["meteor_mode_help_filt"] = "On: filtration is in forced operation, 24 hours per day.\n\nProg: filtration will turn on during the scheduled timeslots (P1 to P3).\n\nAuto: filtration will start at the starting time of the first timeslot (P1), for an automatically computed duration, based on the water temperature.";
language_en["meteor_mode_help_light"] = "On: lighting is turned on, 24 hours per day.\n\nProg: lighting will be turned on during the scheduled timeslot.\n\nAuto: lighting will be turned on at dusk for 4 hours.";
language_en["meteor_mode_prog"] = "Prog";
language_en["mic_permission_message"] = "Vigipool needs access to the microphone for the music mode.";
language_en["mic_permission_title"] = "Enable microphone";
language_en["minute"] = "minute";
language_en["minutes"] = "minutes";
language_en["mode_music"] = "Music mode";
language_en["mode_music_choice_audio_micro_device"] = "Microphone supplied with your Vigipool device";
language_en["mode_music_choice_audio_micro_phone"] = "Your phone's microphone";
language_en["mode_music_choose_audio"] = "What type of audio input would you like to use?";
language_en["mode_music_choose_zone"] = "On which zone(s) do you wish to activate the music mode?";
language_en["mode_music_place_micro_next_to_sound_title"] = "Connect the microphone to the Vigipool device, then place your microphone next to your speaker or another sound source.";
language_en["mode_music_place_phone_next_to_sound_title"] = "Place your phone next to your speaker or another sound source";
language_en["mode_music_welcome_modal_text"] = "This mode allows you to synchronize your projectors to the rhythm of the music.\nFor unforgettable moments!";
language_en["mode_music_welcome_modal_title"] = "Welcome to music mode!";
language_en["mode_pac_silence"] = "Silence";
language_en["mode_pac_smart"] = "Smart";
language_en["mode_pac_turbo"] = "Turbo";
language_en["modify_duration"] = "Modify the duration";
language_en["modify_settings"] = "Modify the parameters";
language_en["monday_short"] = "Mon";
language_en["month"] = "Month";
language_en["music_mode_input_app"] = "Association with a music application";
language_en["music_mode_no_permission_description"] = "You denied the use of your phone's microphone, but we need it to use the music mode.\n\nDo you wish to open the app settings to modify your choice?";
language_en["music_mode_no_permission_title"] = "Microphone permission denied";
language_en["music_mode_unavailable"] = "Music mode unavailable";
language_en["music_mode_welcome_hint"] = "This mode allows you to synchronize your projectors to the rhythm of the music.\nFor unforgettable moments.";
language_en["music_mode_welcome_start"] = "Let's go!";
language_en["music_mode_zone_one"] = "Zone 1";
language_en["music_mode_zone_three"] = "Zone 3";
language_en["music_mode_zone_two"] = "Zone 2";
language_en["my_account"] = "My account";
language_en["my_account_aws_hello_user"] = "Hello %1$s";
language_en["my_account_signup_dialog_signup_success_bt_mailbox"] = "Open your mailbox to verify your email address";
language_en["my_account_signup_dialog_signup_success_message"] = "You will soon receive an email at your address %1$s to confirm your account. Once activated, you will be able to log in to your Vigipool account.";
language_en["my_account_signup_error_username_already_exists"] = "This email address is already associated with a Vigipool account.";
language_en["my_contact_address_dialog_title"] = "Select your address";
language_en["my_contact_changes_dialog_bt_discard"] = "Cancel";
language_en["my_contact_changes_dialog_message"] = "You have unsaved changes.\n\nDo you want to Save or Cancel them?";
language_en["my_contact_dialog_confirm_delete_message"] = "Do you want to delete your contact information?\n\nPlease note that this will delete your shares as well.";
language_en["my_pool_dialog_confirm_delete_message"] = "Do you want to delete your pool?\n\nPlease note that this will delete your contact information and your shares as well.";
language_en["my_vp_devices_device_connection_state"] = "Connection to %1$s";
language_en["my_vp_devices_settings_auxiliary_type_tooltip"] = "Warning, auxiliary scheduling will be deactivated when changing the auxiliary type (time slots will be saved nevertheless).";
language_en["my_vp_devices_settings_frost_free_mode_tooltip"] = "The Frost Protection Mode activates the filtration automatically if the water temperature becomes too low, to prevent the water from freezing.";
language_en["my_vp_devices_settings_projector_type"] = "Projector";
language_en["my_vp_devices_settings_projector_type_tooltip"] = "Warning, lighting schedule will be reset when changing the projector type.";
language_en["my_vp_devices_wifi_connection_state_connection_error"] = "Connection error";
language_en["my_vp_devices_wifi_connection_state_no_wifi"] = "Not connected to Wifi";
language_en["my_vp_devices_wifi_connection_state_wifi_no_internet"] = "Connected to Wifi, no internet";
language_en["my_vp_devices_wifi_connection_state_wifi_with_internet"] = "Connected to Wifi and internet";
language_en["my_vp_devices_winter_mode_dialog_message"] = "Are you sure you want to put your %1$s device \"%2$s\" in Winterization Mode?";
language_en["name"] = "Name";
language_en["navigation_drawer_log_in"] = "Login/Register";
language_en["navigation_drawer_my_devices"] = "My devices";
language_en["navigation_drawer_probes_and_calibration"] = "Sensors &amp; Calibration";
language_en["never"] = "Never";
language_en["new_device_message"] = "You've just added a new %1$s to your Vigipool system.\n\nNow you need to configure it.";
language_en["new_device_title"] = "New %1$s detected";
language_en["next"] = "Next";
language_en["next_color"] = "Next color";
language_en["no_data"] = "No data";
language_en["no_measurement_tooltip"] = "Measurements will be displayed a few minutes after the filtration starts.";
language_en["no_sensor_data"] = "To retrieve the measurement's history, please connect your Vigipool device to the Wifi and link it to your Vigipool account";
language_en["no_temp_disconnected_help"] = "Temperature measurements are not displayed because your device is not connected to the internet";
language_en["no_temp_sensor"] = "No temperature sensor detected";
language_en["no_temp_sensor_tild"] = "Your tild does not have a temperature sensor - some features will be disabled (frost protection, auxiliary heat setpoint, treatment min. temp setpoint, etc.)";
language_en["no_temp_value_help"] = "Temperature measurements will be displayed soon after the filtration starts";
language_en["not_connected"] = "Not connected";
language_en["notification_awsconnected"] = "Your Vigipool device has reconnected to the Wifi!";
language_en["notification_awsnot_connected"] = "Your Vigipool device is not connected to the Wifi anymore… Please check your network connection, or connect to your device via Bluetooth";
language_en["notification_device_disconnected"] = "Warning, your %1$s device is not connected to Wifi.\nPlease check the network connection or use Bluetooth mode.";
language_en["notification_device_linked_vigipool"] = "You can now keep an eye on your swimming pool from wherever you are.";
language_en["notification_disconnected"] = "Warning, your Phileo device is not connected to Wifi.\nPlease check the network connection or use Bluetooth mode.";
language_en["notification_divergent_flow"] = "Your flow detectors are not all reporting the same state of filtration.";
language_en["notification_ely_cell_error"] = "The electrolysis cell does not produce anymore - please contact your installer.";
language_en["notification_ely_missed_filtration"] = "The current filtration duration is too short to allow the electrolysis to produce the whole scheduled time.";
language_en["notification_ely_over_salt"] = "Salt level too high - stopping electrolysis.";
language_en["notification_ely_overheat"] = "The internal temperature of your electrolysis device is too high.";
language_en["notification_ely_overload"] = "Electrolyser power supply in overload.";
language_en["notification_ely_temp_too_low"] = "Minimal water temperature reached. Electrolysis stopped.";
language_en["notification_ely_under_salt"] = "Low production - Please refer to the %1$s User Guide.";
language_en["notification_empty_tub"] = "Regulation product tank empty - Pump stopped";
language_en["notification_meteor_current_too_high_alarm"] = "Overcurrent detected - Check for pump failure or blockage.";
language_en["notification_meteor_current_too_low_alarm"] = "Undercurrent detected - Check that the pump is not running dry.";
language_en["notification_meteor_frost_warning_alarm"] = "The water temperature is almost down to 0°C, filtration will start to prevent frost.";
language_en["notification_meteor_water_level_too_low_alarm"] = "Water level very low: check your pool water level.";
language_en["notification_modbus_error"] = "A communication error was detected between the device and the Antenna module.";
language_en["notification_no_orp_value"] = "No ORP value was received for at least one hour.";
language_en["notification_no_ph_value"] = "No pH value was received for at least one hour.";
language_en["notification_orp"] = "Some ORP measurement errors have been detected, regulation is halted - please check your installation state";
language_en["notification_overdose"] = "The maximum volume of regulation product injected in 24h has been reached";
language_en["notification_overdose_orp"] = "The maximum volume of ORP regulation product injected in 24h has been reached";
language_en["notification_overdose_ph"] = "The maximum volume of pH regulation product injected in 24h has been reached";
language_en["notification_permission_rationale_message"] = "We need to send you notifications for abnormal behaviour of your Vigipool device(s).";
language_en["notification_permission_rationale_title"] = "Enable notifications";
language_en["notification_temp"] = "Some temperature measurement errors have been detected, regulation is halted - please check your installation state";
language_en["number_picker_dialog_title"] = "Pick a number";
language_en["number_too_big"] = "Number too high";
language_en["on"] = "On";
language_en["open_settings"] = "Open Settings app";
language_en["open_spotify"] = "Open Spotify";
language_en["operating_mode"] = "Operating mode";
language_en["options"] = "Options";
language_en["orp_measurement_orp_history"] = "ORP values history";
language_en["orp_probe_calibration_error_dialog_message"] = "Calibration error, please check the ORP sensor.";
language_en["orpcalibration_measured"] = "Measured ORP";
language_en["orpcalibration_solution"] = "Solution ORP";
language_en["orpcurrent"] = "Current ORP";
language_en["orpdesired"] = "Rectified ORP";
language_en["orperror_meteor_notification"] = "ORP measurement error, please check the sensor.";
language_en["orperror_notification"] = "ORP measurement issues have been detected, injection is paused, please check your sensors and installation.";
language_en["orphistoric"] = "ORP history";
language_en["orpmeasurement_title"] = "ORP Measurement";
language_en["orpsetpoint"] = "ORP setpoint";
language_en["orpsetpoint_help"] = "Electrolysis will turn on during the timeslots you chose.\nIf the ORP setpoint is reached, the ORP value will be maintained until the scheduled end.";
language_en["orpsetpoint_help_detailed"] = "The chosen ORP setpoint will be applied to all schedules.\nIf we reach the ORP setpoint and your electrolysis device is on, it will work just enough to maintain the water ORP to its setpoint value.";
language_en["orpsetpoint_help_detailed_meteor"] = "Electrolyser will stay turned on until ORP measures reach the setpoint.\n Once reached, it will work just enough to maintain the water ORP to its setpoint value.";
language_en["orptank_almost_empty_notification"] = "ORP regulation product tank is low";
language_en["orptank_empty_notification"] = "ORP regulation product tank empty - Pump stopped";
language_en["oups"] = "Oops!";
language_en["output"] = "Output";
language_en["output_not_plugged"] = "Not plugged in";
language_en["oz"] = "oz";
language_en["paused"] = "paused";
language_en["ph_measurement_dialog_aws_login_message"] = "Are you sure you want to reload the app in remote mode?";
language_en["ph_measurement_dialog_aws_login_title"] = "Reload app";
language_en["ph_measurement_orp_history_ble_hint"] = "The ORP data history is only available when using the Remote login:\n\n- your Vigipool device must be connected to Wifi\n- you must create and confirm your Vigipool account\n- you must use the Remote connection mode";
language_en["ph_measurement_ph_history"] = "pH values history";
language_en["ph_measurement_ph_history_aws_login"] = "Remote Login";
language_en["ph_measurement_ph_history_ble_hint"] = "The pH data history is only available when using the Remote login:\n\n- your Vigipool device must be connected to Wifi\n- you must create and confirm your Vigipool account\n- you must use the Remote connection mode";
language_en["ph_probe_calibration_btn_validation"] = "Validate calibration";
language_en["ph_probe_calibration_calibration_manual"] = "Manual calibration";
language_en["ph_probe_calibration_error_dialog_message"] = "Calibration error, please check the pH sensor.";
language_en["ph_regulation_injection_max_volume"] = "Injection max volume";
language_en["ph_regulation_injection_max_volume_value"] = "%1$,.2f %2$s/day";
language_en["ph_regulation_injection_max_volume_value_litre"] = "%1$,.2f L/day";
language_en["ph_regulation_injection_max_volume_value_oz"] = "%1$d oz/day";
language_en["phcalibration_measured"] = "Measured pH";
language_en["phcalibration_solution"] = "Solution pH";
language_en["phcurrent"] = "Current pH";
language_en["phdesired"] = "Rectified pH";
language_en["pherror_notification"] = "Some pH measurements errors have been observed, regulation is halted - please check your installation state";
language_en["phhistoric"] = "pH history";
language_en["phmeasurement_title"] = "pH Measurement";
language_en["phtank_almost_empty_notification"] = "pH regulation tank volume is low";
language_en["phtank_empty_notification"] = "pH regulation product tank empty - Pump stopped";
language_en["play_last_song"] = "Play last song";
language_en["please_wait"] = "Please wait…";
language_en["plurals_1_an"] = "%1$d year";
language_en["plurals_1_heure"] = "%1$d hour";
language_en["plurals_1_jour"] = "%1$d day";
language_en["plurals_1_minute"] = "|%1$d minute";
language_en["plurals_1_mois"] = "%1$d month";
language_en["plurals_1_seconde"] = "%1$d second";
language_en["plurals_1_semaine"] = "%1$d week";
language_en["plurals_x_an"] = "%1$d years";
language_en["plurals_x_heure"] = "%1$d hours";
language_en["plurals_x_jour"] = "%1$d days";
language_en["plurals_x_minute"] = "|%1$d minutes";
language_en["plurals_x_mois"] = "%1$d months";
language_en["plurals_x_seconde"] = "%1$d seconds";
language_en["plurals_x_semaine"] = "%1$d weeks";
language_en["pool_description"] = "Once you create your swimming pool, you'll be able to share it with a professional, which will let him monitor and adjust the settings of your installation remotely if needed.";
language_en["power_factor"] = "Power factor";
language_en["prepare_reconnection"] = "Preparing reconnection...";
language_en["pressure_current"] = "Current pressure";
language_en["pressure_desired"] = "Rectified pressure";
language_en["pressure_history"] = "Pressure history";
language_en["pressure_measurement_history"] = "Pressure values history";
language_en["price_kwh"] = "Price per kWh:";
language_en["priority_ph"] = "pH priority";
language_en["probe_replacement_dialog_message_orp"] = "You are about to reset the latest replacement date of your ORP sensor.\n\nThis change is not reversible, are you sure you want to proceed?";
language_en["probe_replacement_dialog_message_ph"] = "You are about to reset the latest replacement date of your pH sensor.\n\nThis change is not reversible, are you sure you want to proceed?";
language_en["program"] = "Program";
language_en["programming_heating_text"] = "max %1$s/day";
language_en["programming_lighting_text"] = "%1$s/day";
language_en["programming_overlay_average_temperature"] = "Average temperature: %1$d%2$s";
language_en["programming_program_1"] = "Program 1";
language_en["programming_program_2"] = "Program 2";
language_en["prohibited_by_box"] = "Prevented by electrical cabinet";
language_en["proj_type_microcut"] = "Color micro-cuts";
language_en["proj_type_mono"] = "Monochrome";
language_en["proj_type_mono_dim"] = "Monochrome dimmable";
language_en["proj_type_rc"] = "Color RC+";
language_en["proximity_search_ble_powered_off_description"] = "Your phone's Bluetooth is disabled, and we need it to verify your proximity to the device.\n\nPlease activate the Bluetooth on your phone before trying again.";
language_en["proximity_search_ble_unauthorized_description"] = "The application does not have permission to use your phone's Bluetooth, and we need it to verify your proximity to the device.\n\nPlease give Bluetooth permission to Vigipool from the Settings application before trying again.";
language_en["proximity_search_device_not_found_description"] = "We need to verify your proximity to your facility to backwash.\nPlease approach your installation and verify that your devices are turned on before trying again.";
language_en["psi"] = "psi";
language_en["quit_backwash_description"] = "Caution, remember to set the valve of the filtration pump to FILTRATION";
language_en["quit_backwash_title"] = "Are you sure you want to leave the backwash mode?";
language_en["real_time"] = "Real time";
language_en["reconnect_to_device_alert_title"] = "Switch device?";
language_en["reconnection_needed"] = "Reconnection required";
language_en["red"] = "Red";
language_en["regulated"] = "Regulated";
language_en["regulation_available_tank_volume"] = "Available tank volume";
language_en["regulation_available_tank_volume_help_lock"] = "Lock to save your changes";
language_en["regulation_available_tank_volume_help_unlock"] = "Unlock to edit this value";
language_en["regulation_filtration_state"] = "Filtration state";
language_en["regulation_injection_state"] = "Injection in progress";
language_en["regulation_max_injection_volume_adjustment"] = "Max injection volume";
language_en["regulation_orptitle"] = "ORP Regulation";
language_en["regulation_phminus"] = "pH-";
language_en["regulation_phminus_title"] = "pH- Regulation";
language_en["regulation_phplus"] = "pH+";
language_en["regulation_phplus_title"] = "pH+ Regulation";
language_en["regulation_phtitle"] = "pH Regulation";
language_en["regulation_product_type"] = "Type of injected product";
language_en["regulation_volume_product_injected_description"] = "Injection sequence: 1 minute out of 3";
language_en["remember_config"] = "Save this configuration";
language_en["rename"] = "Rename";
language_en["repeat_everyday"] = "Repeat every day";
language_en["resend_verification_code"] = "Resend the code by email";
language_en["reset_password_code_placeholder"] = "Reset code";
language_en["reset_password_enter_code"] = "Enter the code that you received at your email address (it could take a few minutes, please check your spam if you do not find it)";
language_en["reset_password_enter_email"] = "Enter your account email address to receive a confirmation code.";
language_en["reset_password_enter_new_password"] = "Enter the new password for your account.\nThe new password must follow these rules: at least 8 characters, including a lowercase and an uppercase, a digit and a special character.";
language_en["reset_password_error"] = "An error has occurred, check your internet connection and try again";
language_en["reset_password_error_code"] = "Password reset failed, please check that your reset code has been correctly typed";
language_en["reset_password_success"] = "Password updated successfully!";
language_en["restart"] = "Restart";
language_en["row_pool_sharing_timestamp_expire"] = "Expires on %1$s";
language_en["row_pool_sharing_timestamp_expired"] = "Expired on %1$s";
language_en["salt_level"] = "Salt level";
language_en["saturday_short"] = "Sat";
language_en["saved_colors"] = "Saved colors";
language_en["schedule_orpsetpoint_warning"] = "The chosen ORP setpoint will be applied to all programs.";
language_en["schedule_program_at"] = "At";
language_en["schedule_program_at2"] = "At";
language_en["schedule_program_during"] = "during";
language_en["schedule_program_from"] = "From";
language_en["schedule_program_from2"] = "From";
language_en["schedule_programto"] = "to";
language_en["schedule_programto2"] = "to";
language_en["schedule_temp_setpoint_warning"] = "The chosen temperature will be applied to all programs.";
language_en["scheduled_operation"] = "Scheduled operation";
language_en["scheduling_timeslot_description"] = "Select the start and end time of the program";
language_en["scheduling_timeslot_duration_description"] = "Select the start time and duration of the program";
language_en["seconds"] = "seconds";
language_en["see_debit_history"] = "View flow rate history";
language_en["see_pressure_history"] = "View pressure history";
language_en["select"] = "Select";
language_en["select_clients"] = "Select the associated devices that you want";
language_en["select_master"] = "Select a central device";
language_en["select_zone_for_output"] = "Choose which zone each output is assigned to";
language_en["sensor_debit"] = "Flow sensor";
language_en["sensor_flow"] = "Flow sensor";
language_en["sensor_orp"] = "ORP sensor";
language_en["sensor_ph"] = "pH sensor";
language_en["sensor_pressure"] = "Pressure sensor";
language_en["sensor_temp"] = "T° sensor";
language_en["set_brightness"] = "Select brightness";
language_en["set_speed"] = "Select speed";
language_en["setpoint_picker_dialog_title"] = "Define the setpoint";
language_en["settings_aws_state_connection_failure"] = "Connection failure";
language_en["settings_button_aux_type"] = "Configuration";
language_en["settings_button_aux_type_help"] = "Beware, scheduling will be disabled when the aux configuration is updated (timeslots will be kept).";
language_en["settings_button_frost_protection_mode"] = "Frost protection mode";
language_en["settings_button_projector_type_help"] = "Beware, scheduling will be reset when the projector type is updated.";
language_en["settings_button_winter_mode"] = "Winterization mode";
language_en["settings_dialog_aws_wifi_not_connected_message"] = "The Wifi connection of your device can be set up only when logged in using Bluetooth.\n\nWould you like to reload the app in Bluetooth mode?";
language_en["settings_dialog_connnection_in_progress_bt_cancel"] = "Abort";
language_en["settings_dialog_connnection_in_progress_message"] = "Your Phileo device is trying to connect to Wifi.\n\nYou can either let it try to connect or abort and set up a new connection.";
language_en["settings_flow_state"] = "Flow state:";
language_en["settings_hardware_version"] = "Hardware version: %1$s";
language_en["settings_software_version"] = "Firmware version: %1$s";
language_en["settings_wifi_connection_error"] = "Wifi connection error";
language_en["settings_wifi_connection_in_progress"] = "Connecting to Wifi";
language_en["setup"] = "Setup";
language_en["setup_lynx_failed"] = "Unable to connect to the Lynx";
language_en["setup_lynx_success"] = "Lynx connection successfull";
language_en["setup_new_device_button"] = "Set up";
language_en["setup_wifi_choice_credentials"] = "Manual";
language_en["setup_wifi_choice_lynx"] = "Lynx";
language_en["setup_wifi_choice_wps"] = "WPS";
language_en["setup_wifi_credentials_description"] = "Please fill in the credentials of the network you want to connect to.\nPlease mind that it's impossible to connect to 5GHz networks.";
language_en["setup_wifi_credentials_failed"] = "Connection failed.\n\nPlease check that the credentials provided are correct and that your Wifi coverage is good enough.";
language_en["setup_wifi_credentials_pass_placeholder"] = "Network password";
language_en["setup_wifi_credentials_ssid_placeholder"] = "Network name";
language_en["setup_wifi_credentials_wrong_password"] = "Connection failed.\n\nThe password is invalid.";
language_en["setup_wifi_lynx_description"] = "If you have a Lynx, you can use it as a gateway to connect to the Wifi.\n\nOnce your Lynx is in gateway mode, press the \"Connect\" button below and your installation will connect to it.\nThen, go to your Lynx and configure the Wifi: your installation now has access to the internet through your Lynx gateway!";
language_en["setup_wifi_success"] = "Wifi connection successfull";
language_en["setup_wifi_wps_description"] = "Wifi Protected Setup (WPS) is a feature supplied with many routers. It is designed to make the process of connecting to a secure wireless network from a computer or other device easier.\n\nTo proceed, simply press the WPS button on your router and then press the \"Connect\" button below.";
language_en["setup_wifi_wpsfailed"] = "Connection failed.\n\nPlease check that your Wifi coverage is good enough.";
language_en["shadow_incomplete_reboot_message"] = "Attempting to restart, please wait 30 seconds...";
language_en["share_my_pool_bt_share"] = "Share";
language_en["share_my_pool_date_picker_title"] = "Share until…";
language_en["share_my_pool_date_picker_validation"] = "Expiry date is required";
language_en["share_my_pool_delete_share_dialog_bt_remove"] = "Remove";
language_en["share_my_pool_delete_share_dialog_message"] = "Are you sure you want to remove the sharing of your pool from the account \"%1$s\"?";
language_en["share_my_pool_dialog_contact_not_found_message"] = "You need to fill in your contact information before you can share your swimming pool.";
language_en["share_my_pool_hint_date"] = "Until DD/MM/YYYY";
language_en["share_my_pool_no_shares"] = "No sharing found.";
language_en["share_pool_description"] = "Please fill in your contact and swimming pool information to be able to share it with a professional.";
language_en["share_pool_new_share"] = "New sharing";
language_en["share_pool_shared"] = "My shared pools";
language_en["share_pool_title"] = "How can I share my swimming pool?";
language_en["share_unavailable"] = "Unable to share";
language_en["short_ble_history_information"] = "Connect your device to the Wifi network to benefit from historical consumption data";
language_en["short_ble_history_information_return_line"] = "Connect your device to\nthe Wifi network to benefit\nfrom historical consumption data";
language_en["short_debit_history"] = "Flow rate history";
language_en["short_pressure_history"] = "Pressure history";
language_en["should_add_to_vigipool_account_alert_message"] = "We noticed that your device is connected to the internet and that you are connected to a Vigipool account, but both of them are not linked.\n\nDo you wish to link this device to your Vigipool account to be able to control it remotely?";
language_en["side_menu_configure"] = "Configure";
language_en["side_menu_configure_devices"] = "My devices";
language_en["side_menu_configure_measurements"] = "Sensors & calibration";
language_en["side_menu_configure_units"] = "Measurement units";
language_en["side_menu_others"] = "Misc.";
language_en["side_menu_others_cgu"] = "Terms of Use";
language_en["side_menu_others_faq"] = "FAQ";
language_en["side_menu_others_share_pool"] = "Share my pool";
language_en["side_menu_vigipool"] = "Vigipool account";
language_en["side_menu_vigipool_connected_devices"] = "Connected devices";
language_en["side_menu_vigipool_my_pool"] = "My swimming pool";
language_en["side_menu_vigipool_sign_in"] = "Sign in / Sign Up";
language_en["side_menu_vigipool_sign_out"] = "Sign out";
language_en["sign_in_success_title"] = "Sign in successful";
language_en["sign_in_up_vigipool"] = "Create an account or log in to Vigipool?";
language_en["sign_up_complete_success_title"] = "Your account is validated!\nYou can now sign in.\n";
language_en["sign_up_success_description"] = "You will quickly receive a verification code by email. Once received, fill in the code below to validate your account.";
language_en["sign_up_success_title"] = "Your account is created!";
language_en["skip_rinse"] = "Skip rinse step";
language_en["something_went_wrong"] = "Something went wrong.";
language_en["spotify_connection_lost"] = "Connection lost with Spotify";
language_en["spotify_connection_lost_description"] = "Please play music on Spotify and return to the Vigipool application so that we can restore the connection.";
language_en["spotify_unavailable"] = "Spotify unavailable";
language_en["spotify_unavailable_description"] = "We are unable to communicate with the Spotify servers.\nThis may be due to a temporary problem on their side or an internet connection problem on your phone.";
language_en["start"] = "Start";
language_en["start2"] = "Start";
language_en["start_timer"] = "Start timer";
language_en["status_accepted"] = "Accepted";
language_en["status_denied"] = "Denied";
language_en["status_pending"] = "Pending";
language_en["stop"] = "Stop";
language_en["stop_backwash"] = "Stop the backwash";
language_en["stop_calibration"] = "Stop calibration";
language_en["sunday_short"] = "Sun";
language_en["switch_device_device_type_not_supported"] = "The device type %s is not yet supported by the Vigipool app.";
language_en["switch_device_message"] = "Are you sure you want to connect to the device %1$s?";
language_en["temp_current"] = "Current Temp.";
language_en["temp_desired"] = "Rectified Temp.";
language_en["temp_error_meteor_notification"] = "Temperature measurement. Please check your temperature sensor connection.";
language_en["temp_measurement_temp_history"] = "Temp measurement history";
language_en["temp_measurement_temp_history_ble_hint"] = "The Temperature data history is only available when using the Remote Connection:\n\n- your Vigipool device must be connected to Wifi\n- you must create and confirm your Vigipool account\n- you must use the Remote connection mode";
language_en["temp_measurement_temp_probe_calibration"] = "Temp sensor calibration";
language_en["temp_measurement_title"] = "Temperature data history";
language_en["temp_min_start"] = "Minimum starting temperature";
language_en["temp_picker_dialog_title"] = "Set the temperature";
language_en["temp_probe_calibration_error_dialog_message"] = "Calibration error, please check the Temperature sensor.";
language_en["temp_setpoint"] = "Temperature setpoint";
language_en["temperature_min_start_help"] = "Treatment will turn on during the timeslots you chose, but only if the water temperature is higher than the minimum temperature.";
language_en["temperature_min_start_help_detailed"] = "The chosen temperature will also be applied to all programs.\nIf the water temperature is below the setpoint, treatment will not start.";
language_en["temperature_setpoint_help"] = "The heater will turn on during the timeslots you chose.\nIf the setpoint is reached, the temperature will be maintained until the schedule ends.";
language_en["temperature_setpoint_help_detailed"] = "The chosen temperature will also be applied to all programs.\nIf the water temperature has reached the setpoint and the heater is on, it will work just enough to maintain the temperature.";
language_en["tendency_week"] = "7-day trend";
language_en["tension"] = "Voltage";
language_en["terms_of_use"] = "Terms of Use";
language_en["text_copied_to_clipboard"] = "%1$s copied to clipboard.";
language_en["text_serial_number"] = "Serial Number";
language_en["text_watcher_invalid_email"] = "Please enter a valid email address";
language_en["text_watcher_lower_case_error"] = "Please enter at least one lowercase character.";
language_en["text_watcher_max_length_error"] = "Please enter at most %1$d characters.";
language_en["text_watcher_min_length_error"] = "Please enter at least %1$d characters.";
language_en["text_watcher_number_error"] = "Please enter at least one digit.";
language_en["text_watcher_password_confirm_error"] = "The passwords do not match.";
language_en["text_watcher_password_error"] = "The password is not secure enough.";
language_en["text_watcher_required"] = "This field is required";
language_en["text_watcher_special_char_error"] = "Please enter at least one special character.";
language_en["text_watcher_upper_case_error"] = "Please enter at least one uppercase character.";
language_en["theme"] = "Theme";
language_en["theme_black_and_white"] = "Black and white";
language_en["theme_disco"] = "Disco";
language_en["theme_disco2"] = "Disco 2";
language_en["theme_france"] = "France";
language_en["theme_jamaica"] = "Reggae";
language_en["theme_rainbow"] = "Rainbow";
language_en["theme_spotify_cold_colors"] = "Cool colors";
language_en["theme_spotify_hot_colors"] = "Warm colors";
language_en["theme_white"] = "White variations";
language_en["thermoregulated_mode_help"] = "Thermoregulated mode will adapt the duration of scheduled timeslots depending on water temperature.\nIf the temperature is high, the filtration will run a little longer than expected, and vice versa if the temperature is low.";
language_en["thursday_short"] = "Thu";
language_en["time_ago"] = "%1$s ago";
language_en["time_picker_dialog_sunset_mode_tooltip"] = "Start lighting at sunset";
language_en["time_picker_dialog_sunset_mode_tooltip_with_twilight"] = "Start lighting at sunset (%1$s today)";
language_en["time_picker_dialog_title_end_time"] = "Set the end time";
language_en["time_picker_dialog_title_start_time"] = "Set the start time";
language_en["title_activity_base_regulation"] = "Regulation";
language_en["title_activity_bonding"] = "Pairing";
language_en["title_activity_faq"] = "F.A.Q.";
language_en["title_activity_probes_and_calibration"] = "Sensors & calibration";
language_en["title_activity_settings"] = "Settings";
language_en["title_activity_temp_measurement"] = "Temp Measurement";
language_en["title_activity_temp_probe_calibration"] = "Temp Calibration";
language_en["title_activity_update_name"] = "Update name";
language_en["title_activity_wifi_setup"] = "Wifi connection setup";
language_en["toast_ble_auto_connect_error"] = "No device was found, unable to use the Bluetooth auto-connect.";
language_en["toast_serial_number_copied_to_clipboard"] = "Serial Number copied to clipboard.";
language_en["too_high"] = "Too high";
language_en["too_low"] = "Too low";
language_en["treatment"] = "Treatment";
language_en["tuesday_short"] = "Tue";
language_en["turbo_mode_tooltip_help"] = "Turbo mode is only available when the heat pump is running and will automatically return to Smart mode once the set temperature has been reached";
language_en["turn_off"] = "Turn off";
language_en["turn_off_auto"] = "Turn off automatically";
language_en["turn_off_filtration_forced"] = "Stop continuous march";
language_en["turn_on"] = "Turn on";
language_en["turn_on_filtration_forced"] = "Start continuous march";
language_en["turn_on_the_light"] = "Turn on the light";
language_en["turned_off"] = "Off";
language_en["twilight"] = "Twilight";
language_en["twilight_unavailable"] = "Twilight unavailable";
language_en["unable_to_read_device_data"] = "Unexpected: unable to read from the device data cache.";
language_en["units_measure_eu"] = "Metric (m, L, kg…)";
language_en["units_measure_na"] = "Imperial (ft, US Gal, lbs…)";
language_en["units_measure_title"] = "Measurement units";
language_en["unknown"] = "Unknown";
language_en["unpair"] = "Quit";
language_en["update_action"] = "Update";
language_en["update_device_for_backwash_description"] = "To take advantage of the guided backwash, it is necessary to connect your installation to the internet and update your devices.";
language_en["update_failed_alert_title"] = "Update failed";
language_en["update_firmware_ask_state_description"] = "Do you want to install it now? (If not, you can still do it at any time from the Settings screen)";
language_en["update_firmware_error_description"] = "An error occurred during the update.";
language_en["update_firmware_progress_description"] = "Update downloading…";
language_en["update_firmware_restart_description"] = "Restart in progress…";
language_en["update_firmware_success_description"] = "Update installed successfully!";
language_en["update_mandatory"] = "Mandatory Update";
language_en["update_name_validation_error"] = "Please enter at least three characters.";
language_en["update_necessary"] = "Device update required";
language_en["update_ota_f1_bt_download_and_install"] = "Download & Install";
language_en["update_ota_f1_text_top"] = "An update is available for %1$s (%2$s)";
language_en["update_ota_f2_text_top"] = "Please wait, your device is updating.";
language_en["update_ota_f2_text_top_restarting"] = "Please wait, your device is restarting.";
language_en["update_ota_f2_text_top_restarting_with_device_type"] = "Please wait, your %1$s device is restarting.";
language_en["update_ota_f2_text_top_with_device_type"] = "Please wait, your %1$s device is updating.";
language_en["update_ota_f2_update_progress"] = "%1$d %%";
language_en["update_succeed_alert_title"] = "Update successful";
language_en["validation_required"] = "This field is required.";
language_en["verification_code"] = "Code:";
language_en["version_firmware_prefix"] = "Firmware version: ";
language_en["version_hardware_prefix"] = "Hardware version: ";
language_en["vigipool_account_not_verified_message"] = "Your Vigipool account is not activated.\n\nPlease enter the code received in your email to validate your account.";
language_en["vigipool_device"] = "Vigipool device";
language_en["vigipool_device_added_success"] = "The device has been added successfully!";
language_en["volume_unit_litre"] = "Liter";
language_en["volume_unit_us_gallon"] = "US Gallon";
language_en["volume_unit_us_gallon_unit"] = "US gal";
language_en["vs_need_tild_or_meteor_alert"] = "Please link your Tild VP or Meteor VP to your Antea-VS to control the filtration.";
language_en["vspump_brand"] = "Brand:";
language_en["vspump_help"] = "Disable Automatic Selection if you wish to manually select the speed of the filter pump during forced operation";
language_en["vspump_model"] = "Model:";
language_en["vspump_new_device_button"] = "Set up";
language_en["vspump_onoff_details"] = "with controllable on/off function";
language_en["vspump_select"] = "Pump selection";
language_en["vspump_settings"] = "Pump settings";
language_en["vspump_settings_confirm_message"] = "Caution, these parameters have an impact on the correct functioning of the device";
language_en["vspump_settings_confirm_title"] = "Please verify the provided information";
language_en["vspump_settings_help"] = "Select your pump in the list below";
language_en["vspump_settings_title"] = "Pump settings";
language_en["vspump_speed"] = "Speed";
language_en["vspump_speed_auto"] = "Automatic speed";
language_en["vspump_speed_details"] = "%1$d speed pump";
language_en["vspump_speed_eco"] = "Eco";
language_en["vspump_speed_fast"] = "Turbo";
language_en["vspump_speed_normal"] = "Normal";
language_en["vspump_speed_off"] = "Off";
language_en["vspump_type"] = "Pump type:";
language_en["water_hardness_hard"] = "Hard";
language_en["water_hardness_slightly_hard"] = "Slightly hard";
language_en["water_hardness_slightly_soft"] = "Slightly soft";
language_en["water_hardness_soft"] = "Soft";
language_en["water_hardness_very_hard"] = "Very hard";
language_en["water_hardness_very_soft"] = "Very soft";
language_en["water_renewal"] = "Temperature monitoring mode";
language_en["water_temperature"] = "Water temperature";
language_en["water_temperature_error"] = "Temperature error: %1$s";
language_en["wednesday_short"] = "Wed";
language_en["white"] = "White";
language_en["wifi_lynx_fail_description"] = "Connection to the Lynx failed";
language_en["wifi_lynx_in_progress_description"] = "Looking for Lynx…";
language_en["wifi_lynx_success_description"] = "Connection to the Lynx successful";
language_en["wifi_setup_error_dialog_failure_message"] = "Wifi connection error, please check your SSID and Password.";
language_en["wifi_setup_error_dialog_failure_message_wps"] = "Wifi connection error, please check you are close enough to the router.";
language_en["wifi_setup_error_dialog_timeout_message"] = "Wifi connection timeout.";
language_en["wifi_setup_error_dialog_timeout_message_ssid"] = "Wifi connection timeout.\n\nPlease check your credentials and verify the Wifi coverage of your network setup.";
language_en["wifi_setup_error_dialog_timeout_message_wps"] = "Wifi connection timeout.\n\nPlease check the Wifi coverage of your network setup.";
language_en["wifi_setup_error_dialog_wrong_password"] = "Please check your Wifi password.";
language_en["wifi_setup_lynx_hint"] = "If you have a Lynx, you can use it as a gateway to connect to the Wifi.\n\nOnce your Lynx is in gateway mode, press the \"Connect\" button below and your installation will connect to it.\nThen, go to your Lynx and configure the Wifi: your installation now has access to the internet through your Lynx gateway!";
language_en["wifi_setup_ssid_5ghz_hint"] = "Please note that 5 GHz Wifi networks are not supported.";
language_en["wifi_setup_ssid_hint_ssid"] = "SSID";
language_en["wifi_setup_ssid_scan_qr_code"] = "Scan password QR Code";
language_en["wifi_setup_success_dialog_button_setup"] = "Manage my account";
language_en["wifi_setup_success_dialog_message"] = "Wifi connection was set up successfully.\n\nYou can now register or log in to your Vigipool account.";
language_en["wifi_setup_wps_hint"] = "Wifi Protected Setup (WPS) is a feature supplied with many routers. It is designed to make the process of connecting to a secure wireless network from a computer or other device easier.\n\nTo proceed, simply press the WPS button on your router, and press the \"Connect\" button below.";
language_en["wifi_state_connected_no_internet"] = "Wifi connected, no internet";
language_en["wifi_state_in_progress"] = "Wifi connection in progress";
language_en["wifi_state_internet"] = "Connected to internet";
language_en["wifi_state_no_internet"] = "No internet";
language_en["wifi_state_not_connected"] = "Not connected to Wifi";
language_en["wifi_wpsin_progress_description"] = "Please press the WPS button on your router to connect your device\n\nTrying to connect…";
language_en["winter_mode_disabled"] = "Winterizing mode is disabled on version %1$s.\n\nConnect your Vigipool setup to the internet to benefit from the latest updates and enable this feature.";
language_en["winter_mode_short"] = "Winterizing";
language_en["wix3z4_overload"] = "Projector overloaded, check your installation and restart your Wix3Z4.";
language_en["wix_settings_merge_zones"] = "Merge zones";
language_en["write_cancel_not_connected"] = "Communication issues with the device";
language_en["write_cancel_poor_connection"] = "Your phone has a bad internet connection";
language_en["zones"] = "Zones";
language_en["ios_with_thermoregulation"] = "With thermoregulation ≃ %@";

language_en["forced_for_temp"] = "Filtration is activated until the temperature is updated";


var language_fr = {};

language_fr["language"] = "Français";
language_fr["sign_in"] = "S'identifier";
language_fr["email"] = "E-mail";
language_fr["password"] = "Mot de passe";
language_fr["show_password"] = "Afficher le mot de passe";
language_fr["remember_me"] = "Se souvenir de moi";
language_fr["login"] = "Connexion";
language_fr["particular"] = "Particulier";
language_fr["professional"] = "Professionnel";
language_fr["free"] = "Gratuit";
language_fr["prenium"] = "Payant";
language_fr["dont_have_an_account"] = "Vous n'avez pas de compte ?";
language_fr["sign_up"] = "S'inscrire";
language_fr["create_supervision_account"] = "Créer un compte Supervision";
language_fr["forgot_your_password"] = "Mot de passe oublié";
language_fr["resend_email_verification"] = "Je n'ai pas reçu le mail de confirmation";
language_fr["wrong_id"] = "Vos identifiants sont incorrects";
language_fr["perso_pro_error"] = "Erreur compte particulier/professionnel";
language_fr["email_used"] = "Cet email est déjà utilisé";
language_fr["password_rule_title"] = "Le mot de passe doit contenir :";
language_fr["password_rule_0"] = "Une lettre minuscule";
language_fr["password_rule_1"] = "Une lettre majuscule";
language_fr["password_rule_2"] = "Un chiffre";
language_fr["password_rule_3"] = "Au moins 6 caractères";
language_fr["password_rule_conform"] = "Vos mots de passe doivent être identiques";
language_fr["account_specify"] = "Merci de spécifier quel compte vous souhaitez utiliser";
language_fr["email_not_verified"] = "Merci de valider votre email avant de vous connecter.";
language_fr["univers_vp"] = "Découvrir l'univers Vigipool";
language_fr["demo_text"] = "Une visite avant de vous lancer ?";
language_fr["demo_button"] = "Accéder au mode démo";
language_fr["name_of_the_brand"] = "Nom de l’enseigne";
language_fr["professional_s_name"] = "Nom du professionnel";
language_fr["address"] = "Adresse";
language_fr["postal_code"] = "Code Postal";
language_fr["city"] = "Ville";
language_fr["country"] = "Pays";
language_fr["phone"] = "Téléphone";
language_fr["ccei_customer_number"] = "Numéro Client CCEI";
language_fr["siret"] = "SIRET";
language_fr["vigipool_product_supplier"] = "Fournisseur des produits";
language_fr["register_info_1"] = "Un compte Supervision:";
language_fr["register_info_2"] = "- vous permet de superviser des piscines partagées à l'aide de l'application Vigipool.";
language_fr["register_info_3"] = "- mais ne vous permet pas d'utiliser l'application Vigipool (un compte Vigipool sera à créer dans l'application)";
language_fr["register_info_4"] = "Si vous avez déjà un compte Vigipool Application, vous pouvez directement vous connecter à Supervision à l'aide de vos identifiants pour afficher les informations associées à votre piscine !";
language_fr["create_an_account"] = "Créer un compte";
language_fr["password_confirmation"] = "Mot de passe (confirmation)";
language_fr["first_name"] = "Prénom";
language_fr["last_name"] = "Nom";
language_fr["already_have_an_account_connect"] = "Déjà un compte ?";
language_fr["login_btn"] = "Se connecter";
language_fr["reset_password"] = "Réinitialiser le mot de passe";
language_fr["send_confirmation_email"] = "Envoyer un e-mail de confirmation";
language_fr["reset_password_error"] = "Cette adresse mail n'est pas utilisée";
language_fr["email_verification"] = "Renvoyer l'email de validation";
language_fr["email_verification_footer"] = "Votre email déjà vérifié ?";
language_fr["email_sent"] = "Email envoyée";
language_fr["email_has_been_sent"] = "Un e-mail a été envoyée afin que vous puissiez réinitialiser le mot de passe de votre compte.";
language_fr["password_reset_link"] = "Ce lien de réinitialisation du mot de passe expirera dans 60 minutes.";
language_fr["return"] = "Retour";
language_fr["reset_success_title"] = "Mot de passe réinitialisé avec succès";
language_fr["reset_success_text"] = "Vous pouvez essayer de vous connecter à nouveau.";
language_fr["mail_template_text_1"] = "Vous recevez cet e-mail car nous avons reçu une demande de réinitialisation du mot de passe pour votre compte.";
language_fr["mail_template_text_2"] = "Si vous n'avez pas demandé de réinitialisation de mot de passe, aucune autre action n'est requise.";
language_fr["mail_template_signature"] = "Salutations";
language_fr["account_created_title"] = "Votre compte a bien été créé, avant de vous connecter merci de valider votre inscription via le mail qui vient de vous être envoyé";
language_fr["email_verify_title"] = "Vérification de votre email Vigipool Supervision";
language_fr["email_verify_text_1"] = "Vous recevez cet e-mail car vous venez de créer votre compte Vigipool Supervision.";
language_fr["email_verify_text_2"] = "Merci de confirmer la création de votre compte en cliquant sur le bouton ci-dessous";
language_fr["email_verify_text_3"] = "Si vous n'avez pas effectué de création de compte, aucune autre action n'est requise.";
language_fr["email_already_verified"] = "Email déjà vérifié.";
language_fr["email_verified"] = "Email vérifié avec succès.";
language_fr["administrator"] = "Administrateur";
language_fr["manager"] = "Responsable";
language_fr["pool_tech"] = "Piscinier";
language_fr["new_user"] = "Nouveau";
language_fr["btn_sign_out"] = "Se déconnecter";
language_fr["dashboard"] = "Tableau de bord";
language_fr["my_account"] = "Mon compte";
language_fr["users_management"] = "Utilisateurs";
language_fr["pool_management"] = "Gestion piscine";
language_fr["interventions"] = "Carnet d'entretien";
language_fr["event_history"] = "Historique";
language_fr["force_refresh"] = "Rafraîchir";
language_fr["overview"] = "piscines supervisées";
language_fr["overview_single"] = "piscine supervisée";
language_fr["swimming_pool_list"] = "Liste des piscines";
language_fr["swimming_pools_accepted"] = "Vos piscines supervisées";
language_fr["awaiting_delegation_acceptance"] = "En attente d’acceptation de délégation";
language_fr["search_here"] = "Cherchez ici ...";
language_fr["see_details"] = "Voir détails";
language_fr["accept_pool"] = "Accepter la piscine";
language_fr["refuse_pool"] = "Refuser la piscine";
language_fr["swimming_pool_locations"] = "Emplacements des piscines";
language_fr["legal_notice"] = "Mentions légales";
language_fr["terms_of_service"] = "Conditions d'utilisation";
language_fr["user_devices_graph"] = "Matériel installé";
language_fr["table_pool_name"] = "Nom piscine";
language_fr["table_ownername"] = "Propiétaire";
language_fr["table_temperature"] = "T°";
language_fr["table_wifi"] = "Wifi";
language_fr["table_pool_status"] = "Statut de la piscine";
language_fr["table_rdv"] = "RDV";
language_fr["total"] = "Total";
language_fr["ok"] = "Ok";
language_fr["warning"] = "Alerte(s)";
language_fr["error"] = "Erreur(s)";
language_fr["disconnected"] = "Déconnectée(s)";
language_fr["ok_devices_only"] = "Appareils OK uniquement";
language_fr["devices_to_be_monitored_only"] = "Appareils à surveiller uniquement";
language_fr["devices_in_error_only"] = "Appareils en erreur uniquement";
language_fr["devices_disconnected_only"] = "Appareils déconnectés seulement";
language_fr["error_multiple"] = "Plusieurs erreurs";
language_fr["error_orp_high"] = "Orp trop haut";
language_fr["error_orp_low"] = "Orp trop bas";
language_fr["error_orp_none"] = "Aucun Orp";
language_fr["error_ph_high"] = "pH trop haut";
language_fr["error_ph_low"] = "pH trop bas";
language_fr["error_ph_none"] = "Aucun pH";
language_fr["error_temp_high"] = "Température trop haute";
language_fr["error_temp_low"] = "Température trop basse";
language_fr["error_temp_none"] = "Aucune température";
language_fr["warning_multiple"] = "Attention";
language_fr["warning_no_wifi"] = "Piscine déconnectée";
language_fr["warning_orp_high"] = "Orp légèrement haut";
language_fr["warning_orp_low"] = "Orp légèrement bas";
language_fr["warning_ph_high"] = "pH légèrement haut";
language_fr["warning_ph_low"] = "pH légèrement bas";
language_fr["warning_temp_high"] = "Température légèrement haute";
language_fr["warning_temp_low"] = "Température légèrement basse";
language_fr["app_account_fail_pool"] = ":nb_pool piscine(s) ne sont pas renseignée(s) dans l'application Vigipool (\"Ma piscine\" dans le menu de gauche de l'application) et ne peu(ven)t pas etre affichée(s) dans Vigipool Supervision";
language_fr["CGU"] = "Mentions légales | CGU";
language_fr["remove_pool_tracking"] = "Supprimer le suivi de la piscine";
language_fr["see_map"] = "Voir Carte";
language_fr["see_more"] = "Voir Plus";
language_fr["remove_picture"] = "Supprimer cette photo";
language_fr["file_too_heavy"] = "Fichier trop volumineux";
language_fr["picture_tooltip"] = "Cliquez sur le bouton pour ajouter une photo, taille maximum 4Mo";
language_fr["deviceType"] = "Périphérique Principal";
language_fr["cover"] = "Couverture";
language_fr["volume"] = "Volume";
language_fr["deviceId"] = "Identifiant";
language_fr["structure"] = "Structure";
language_fr["treatment"] = "Traitement";
language_fr["past"] = "Passée(s)";
language_fr["planned"] = "A venir";
language_fr["vigipool_devices"] = "Périphériques de Vigipool";
language_fr["electrolyse"] = "Électrolyse";
language_fr["shadow"] = "Informations détaillées";
language_fr["device"] = "Périphérique";
language_fr["function"] = "Fonction";
language_fr["serial_number"] = "Numéro de série";
language_fr["normal_behaviour"] = "Comportement normal";
language_fr["calibration_in_progress"] = "Étalonnage en cours";
language_fr["winter_mode"] = "Mode hiver";
language_fr["sync_flow"] = "Synchronisation de la filtration";
language_fr["update_available"] = "Mise à jour disponible";
language_fr["update_in_progress"] = "Mise à jour en cours";
language_fr["update_error"] = "Erreur de mise à jour";
language_fr["restart_in_progress"] = "Redémarrage en cours";
language_fr["stable_calibration"] = "Étalonnage stable";
language_fr["gateway_mode"] = "Mode passerelle";
language_fr["gateway_mode_0"] = "Client";
language_fr["gateway_mode_1"] = "Passerelle";
language_fr["fast_slow_ble"] = "BLE mode rapide";
language_fr["state"] = "Etat";
language_fr["ap_bcast_duration"] = "durée de diffusion de l'appareil";
language_fr["update_ota"] = "Mise à jour par Wi-Fi";
language_fr["server_on"] = "Master";
language_fr["flow_on"] = "Filtration";
language_fr["prod_on"] = "Production de chlore";
language_fr["mqtt_connected"] = "Connecté";
language_fr["model_id"] = "identifiant du modèle";
language_fr["hw_vers"] = "Version du Hardware";
language_fr["date_mes"] = "Dernière mesure";
language_fr["date_mes_ph"] = "Dernière mesure pH";
language_fr["date_mes_orp"] = "Dernière mesure Orp";
language_fr["value_orp"] = "Valeur orp";
language_fr["value_temp"] = "Température";
language_fr["sw_vers"] = "Version du software";
language_fr["ph_adjust"] = "Ajustement du pH";
language_fr["temp_adjust"] = "Ajustement de la température";
language_fr["orp_adjust"] = "Ajustement de l'Orp";
language_fr["ph_calibration_target"] = "Cible d'étalonnage du pH";
language_fr["orp_calibration_target"] = "Cible d'étalonnage de l'Orp";
language_fr["jeedom_interval"] = "Intervalle de Jeedom";
language_fr["rssi"] = "RSSI";
language_fr["inject_on"] = "Injection en cours";
language_fr["vol_tot_inject"] = "Vol total injecté (L)";
language_fr["vol_bac"] = "Volume du bac";
language_fr["vol_max_24h"] = "Volume max 24h";
language_fr["consigne_ph"] = "Consigne pH";
language_fr["source_ph"] = "Source pH";
language_fr["priority"] = "Priorité pH";
language_fr["consigne_orp"] = "Consigne Orp";
language_fr["source_orp"] = "Source Orp";
language_fr["mode_ely"] = "Mode";
language_fr["power_ely"] = "Puissance";
language_fr["ely_duration_in_minut"] = "Temps d'électrolyse actuel";
language_fr["couv_on"] = "Couverture de piscine";
language_fr["couv_on_2"] = "Couverture &gt; 12h";
language_fr["consigne_temp"] = "Consigne de température";
language_fr["value_temp_in"] = "Température entrante";
language_fr["value_temp_out"] = "Température sortante";
language_fr["value_temp_int"] = "Température interne";
language_fr["value_cond"] = "Conductivité";
language_fr["ely_duration_compensated"] = "Durée programmée de l'électrolyse";
language_fr["mode_choc"] = "Mode Choc";
language_fr["choc_duration"] = "Durée mode choc";
language_fr["water_hardness"] = "Dureté de l'eau";
language_fr["temp_min_off_ely"] = "Température minimale";
language_fr["off"] = "OFF";
language_fr["on"] = "ON";
language_fr["continuous"] = "Continue";
language_fr["thermo_regulated"] = "Thermo régulé";
language_fr["orp_regulated"] = "Orp régulé";
language_fr["open"] = "Ouverte";
language_fr["closed"] = "Fermée";
language_fr["meteor_mode_1"] = "Marche forcée";
language_fr["meteor_mode_2"] = "Programmé";
language_fr["meteor_mode_3"] = "Automatique";
language_fr["tild_no_program"] = "Aucun programme n'est disponible";
language_fr["tild_hors_gel"] = "Mode hors gel activé, votre filtration sera lancée automatiquement afin d'éviter le gel de l'eau dans la canalisation";
language_fr["tild_aux_type_6"] = "Régulation Orp";
language_fr["light_type_m"] = "Type de lumière";
language_fr["light_type_m_0"] = "Mono";
language_fr["light_type_m_1"] = "T.Switch";
language_fr["light_type_m_2"] = "Brio RC+";
language_fr["aux1_type_2"] = "Chauffage";
language_fr["aux1_type_3"] = "Surpresseur";
language_fr["aux1_type_4"] = "Traitement Orp";
language_fr["froze_mode"] = "Mode hors gel";
language_fr["froze_mode_0"] = "Activé si &lt; 0°C";
language_fr["froze_mode_1"] = "Activé si &lt; 1°C";
language_fr["froze_mode_2"] = "Activé si &lt; 2°C";
language_fr["tild_light_state_4"] = "Minuteur";
language_fr["tild_filt_state_2"] = "Forcé par la lumière";
language_fr["tild_filt_state_3"] = "Forcé par l'auxiliaire";
language_fr["tild_filt_state_5"] = "Forcé par le mode hors-gel";
language_fr["tild_filt_state_6"] = "Forcé par le chauffage";
language_fr["aux_state_1"] = "Asservi a la filtration";
language_fr["aux_state_2"] = "Consigne température atteinte";
language_fr["aux_state_3"] = "Inférieur à la température mini";
language_fr["aux_state_4"] = "Va bientôt démarrer";
language_fr["aux_state_5"] = "Mesure d'orp incorrect";
language_fr["device_not_online"] = "Appareil déconnecté ou éteint ";
language_fr["description_ofix"] = "Analyseur T°, pH, Orp";
language_fr["description_daisyph"] = "Pompe doseuse pH";
language_fr["description_daisyox"] = "Pompe doseuse Orp";
language_fr["description_zelia"] = "Electrolyseur";
language_fr["description_zelix"] = "Electrolyseur";
language_fr["description_lynx"] = "Passerelle Wifi - Ecran déporté";
language_fr["description_ziphox"] = "Analyseur T°, pH, Orp";
language_fr["description_phileox"] = "Régulateur pH";
language_fr["description_oxeox"] = "Régulateur Orp";
language_fr["description_tild"] = "Coffret électrique piscine";
language_fr["description_limpidoez"] = "Electrolyseur";
language_fr["description_vigipac"] = "Pompe à chaleur";
language_fr["description_anteam"] = "Coffret multifonction intelligent";
language_fr["description_wix"] = "Controleur d'eclairage X3";
language_fr["no"] = "Non";
language_fr["yes"] = "Oui";
language_fr["disabled"] = "Désactivé";
language_fr["enabled"] = "Activé";
language_fr["manual"] = "Manuel";
language_fr["repetition"] = "Répétition";
language_fr["operating_hour"] = "Heure de fonctionnement";
language_fr["mod"] = "Mode";
language_fr["duration"] = "Durée";
language_fr["light"] = "Éclairage";
language_fr["everyday"] = "Tous les jours";
language_fr["monday"] = "Lundi";
language_fr["tuesday"] = "Mardi";
language_fr["wednesday"] = "Mercredi";
language_fr["thursday"] = "Jeudi";
language_fr["friday"] = "Vendredi";
language_fr["saturday"] = "Samedi";
language_fr["sunday"] = "Dimanche";
language_fr["from"] = "De";
language_fr["during"] = "durant";
language_fr["to"] = "à";
language_fr["sunset_mode"] = "Mode crépusculaire";
language_fr["auxiliary"] = "Auxiliaire";
language_fr["electrolysis_mode"] = "Mode électrolyse";
language_fr["chlorine_production_status"] = "Etat production chlore";
language_fr["power"] = "Puissance";
language_fr["cell_flow"] = "Flux cellule";
language_fr["cell_water_t"] = "T° eau cellule";
language_fr["cell_internal_temperature"] = "T° interne cellule";
language_fr["powerful"] = "Puissance";
language_fr["minimum_temperature"] = "T° minimum";
language_fr["electrolysis_current"] = "Courant électrolyse (en A)";
language_fr["voltage"] = "Tension (en V)";
language_fr["today_details"] = "Détails du jour";
language_fr["tooltip_1"] = "Pour zoomer, appuyer sur le bouton gauche de votre souris, sélectionner la zone en question puis relâcher le bouton.";
language_fr["tooltip_2"] = "Vous pouvez zoomer horizontalement et verticalement.";
language_fr["tooltip_3"] = "Pour dézoomer faites un double clic gauche n’importe ou dans le graphique.";
language_fr["tooltip_4"] = "Cliquez sur une journée en particulier pour voir son détail.";
language_fr["connected"] = "Connecté ";
language_fr["value_ph"] = "Mesure pH";
language_fr["mode_ph"] = "Mode de regulation pH";
language_fr["vol_24h_inject"] = "Volume injecté 24h";
language_fr["mode_orp"] = "Mode de regulation Orp";
language_fr["more_info"] = "Plus d'infos";
language_fr["export_historique"] = "Exporter votre historique";
language_fr["export_historique_modal_msg"] = "Sélectionnez le type d'historique que vous voulez exporter";
language_fr["export_historique_year"] = "Choisir l'année de l'export";
language_fr["pool_note_title"] = "Note de la piscine";
language_fr["pool_note_delete"] = "Supprimer la note";
language_fr["pool_note_writer"] = "Dernière modification par :writer_name, le :date";
language_fr["society"] = "Société";
language_fr["cp"] = "Code Postal";
language_fr["new_password"] = "Nouveau mot de passe";
language_fr["conf_password"] = "Confirmation mot de passe";
language_fr["actual_password"] = "Mot de passe actuel";
language_fr["password_change_success"] = "Changement effectué";
language_fr["password_change_fail"] = "Mot de passe actuel incorrect";
language_fr["change_password"] = "Changer le mot de passe";
language_fr["users_managed"] = "Utilisateurs gérés";
language_fr["add_user"] = "Ajouter un utilisateur";
language_fr["user_list"] = "Liste d'utilisateur";
language_fr["user_email"] = "E-mail de l'utilisateur";
language_fr["add_now"] = "Ajouter maintenant";
language_fr["role"] = "Rôle";
language_fr["member_since"] = "Membre depuis";
language_fr["action"] = "Action";
language_fr["modify_or_delete"] = "Modifier ou supprimer";
language_fr["edit_user"] = "Modifier l'utilisateur";
language_fr["delete_user"] = "Supprimer l'utilisateur";
language_fr["warning_!"] = "Attention !";
language_fr["to_delete_the_user"] = "Voulez-vous vraiment supprimer l'utilisateur ?";
language_fr["from_vigipool"] = "de Vigipool ?";
language_fr["action_irreversible."] = "L'action est irréversible.";
language_fr["go_back"] = "Retourner en arrière.";
language_fr["user_update_success"] = "Mise à jour des informations avec succès";
language_fr["user_delete_success"] = "Suppression de l'utilisateur avec succès";
language_fr["temperature"] = "Température";
language_fr["ph"] = "pH";
language_fr["orp"] = "Orp";
language_fr["devices"] = "Appareils";
language_fr["status"] = "Statut";
language_fr["interventions_planned"] = "Interventions prévues";
language_fr["interventions_done"] = "Interventions Terminées";
language_fr["interventions_graph"] = "Répartition des interventions";
language_fr["date"] = "Date";
language_fr["type"] = "Type";
language_fr["ownername"] = "Propriétaire";
language_fr["map"] = "Carte";
language_fr["create_new_intervention"] = "Créer une nouvelle intervention";
language_fr["last_intervention"] = "Dernière intervention";
language_fr["new_intervention"] = "Nouvelle intervention";
language_fr["technician_in_charge"] = "Technicien en charge";
language_fr["no_interventions"] = "Aucune interventions";
language_fr["intervention"] = "Intervention";
language_fr["intervention_type"] = "Type d’intervention";
language_fr["intervention_type_0"] = "Liste des interventions";
language_fr["intervention_type_1"] = "Contre-lavage";
language_fr["intervention_type_2"] = "Entrée en hivernage";
language_fr["intervention_type_3"] = "Sortie d'hivernage";
language_fr["intervention_type_4"] = "Entretien courant";
language_fr["intervention_type_5"] = "Maintenance";
language_fr["intervention_button"] = "Planifier l'intervention";
language_fr["intervention_realized"] = "Est ce que l'intervention est réalisée ?";
language_fr["select_pool"] = "Sélectionnez une piscine";
language_fr["select_date"] = "Date de réalisation";
language_fr["date_intervention"] = "Date de l'intervention";
language_fr["select_tech"] = "Nom de l'intervenant";
language_fr["select_comment"] = "Commentaire";
language_fr["comment_placeholder"] = "Décrivez l’intervention réalisée en quelques lignes...";
language_fr["edit_intervention_title"] = "Details de l'intervention";
language_fr["pool"] = "Piscine";
language_fr["detail"] = "Informations sur la piscine";
language_fr["intervention_report"] = "Rapport de l'intervention";
language_fr["intervention_cost"] = "Coût de l'intervention";
language_fr["delete_intervention"] = "Supprimer l'intervention";
language_fr["messages"] = "Messages";
language_fr["list_event_history"] = "Historique des événements";
language_fr["data_did_not_change"] = "Les données de votre appareil n'ont pas changé depuis : ";
language_fr["notification_bloc"] = "Alertes";
language_fr["notifcation_ok_two_weeks"] = "Aucune notification dans les deux dernières semaines";
language_fr["SURCHAUFFE_ELECTROLYSEUR"] = "Température interne de l'électrolyseur trop élevée";
language_fr["TEMP_HIGH"] = "Erreur de mesure de Température haute du :deviceType";
language_fr["TEMP_LOW"] = "Erreur de mesure de Température basse du :deviceType , le mode Thermorégulé est désactivé";
language_fr["CELLULE_CURRENT_LOW"] = "La cellule d'électrolyse ne produit plus - contactez votre installateur";
language_fr["SALT_MISSING"] = "Production faible - Reportez-vous à la notice de :deviceType";
language_fr["SALT_TOO_MUCH"] = "Taux de sel Trop élevé. Arrêt de l’électrolyseur";
language_fr["TEMP_MIN"] = "Température minimale de l’eau atteinte. Arrêt de l'électrolyse";
language_fr["TEMP_MIN_SWITCHED_BACK"] = "Température de l’eau retour à la normale - Remise en route de l'électrolyse";
language_fr["PH_NO_VALUE"] = "Votre :deviceType ne reçoit plus de mesure de pH";
language_fr["PH_NO_VALUE_SWITCHED_BACK"] = "Votre :deviceType reçoit à nouveau des mesures  pH";
language_fr["ORP_NO_VALUE"] = "Votre :deviceType ne reçoit plus de mesure d’Orp";
language_fr["ORP_ERROR_MESURE_22_SWITCHED_BACK"] = "Votre :deviceType reçoit à nouveau des mesures Orp";
language_fr["TUB_ALMOST_EMPTY"] = "Niveau Bac produit :deviceType Bas";
language_fr["TUB_EMPTY"] = "Bac produit :deviceType vide - Pompe stoppée";
language_fr["V_MAX_INJECTED"] = "Le volume Max de produit injecté a été atteint";
language_fr["PH_ERROR_MESURE_29"] = "Des erreurs de mesures pH sont constatées, l’injection est stoppée, veuillez vérifier votre installation et les sondes";
language_fr["PH_ERROR_MESURE_29_SWITCHED_BACK"] = "Les mesures de pH sont à nouveaux correctes";
language_fr["ORP_ERROR_MESURE_27"] = "Des erreurs de mesures Orp sont constatées, l’injection est stoppée, veuillez vérifier votre installation et les sondes";
language_fr["ORP_ERROR_MESURE_27_SWITCHED_BACK"] = "Les mesures d’Orp sont à nouveaux correctes";
language_fr["WIFI_CONNECTION_ERROR"] = "Votre Appareil :deviceType n’est plus connecté, veuillez vérifier qu’il est bien alimenté et que votre réseau wifi est fonctionnel";
language_fr["WIFI_CONNECTION_ERROR_SWITCHED_BACK"] = "Votre Appareil :deviceType est bien connecté";
language_fr["ELECTROLYSEUR_OVERLOAD_ERROR"] = "Alimentation Electrolyseur en surcharge";
language_fr["MODE_HORS_GEL"] = "Attention, la température de l'eau est de 0°C, risque de Gel ! Votre filtration passe en Mode Hors Gel niveau 3 (marche permanente)";
language_fr["RS485_ERROR"] = "Une erreur de communication (RS485) est détectée sur votre :deviceType";
language_fr["share_pool_ts"] = "Date de fin du partage";
language_fr["cancel_modal"] = "Annuler";
language_fr["delete_modal"] = "Supprimer";
language_fr["delete_sharing_pool_msg"] = "Vous êtes sur le point de supprimer le suivi de la piscine ':poolName ' êtes-vous sûr de vouloir effectuer cela ?";
language_fr["pac_mode"] = "Mode de production";
language_fr["pac_speed"] = "Vitesse de fonctionnement";
language_fr["pac_sched"] = "Plages de programmation";
language_fr["two_weeks"] = "2 semaines";
language_fr["one_month"] = "1 mois";
language_fr["two_month"] = "2 mois";
language_fr["confirm_button"] = "Confirmer";
language_fr["submit_button"] = "Valider";
language_fr["file_button"] = "Choisir un fichier";
language_fr["pool_expire_msg"] = "Ce mail vous informe que la liste des piscines ci-dessous est sur le point d'expirer dans moins de deux semaines, penser à relancer le partage auprès de votre client sans quoi vous perdrez le suivi de cette piscine sur votre compte Supervision.";

// Perso

language_fr["title"] = "Gestion général du ";
language_fr["display"] = "Gestion des affichages et historiques";
language_fr["deletion"] = "Recherche et ajout automatiques de nouvelles fonctionnalités";

language_fr["settings"] = "Options";

language_fr["frost_protection_mode"] = "Mode hors gel";

language_fr["projector"] = "Projecteur";

language_fr["color_rc"] = "Couleur RC+";
language_fr["monochrome"] = "Monochrome";
language_fr["monochrome_dimmable"] = "Monochrome dimmable";
language_fr["color_micro_cuts"] = "Couleur micro-coupures";

language_fr["auxiliary"] = "Auxiliaire";

language_fr["none"] = "Aucun";
language_fr["heater"] = "Chauffage";
language_fr["treatment"] = "Traitement";
language_fr["booster"] = "Surpresseur";
language_fr["auxiliary"] = "Auxilaire";

language_fr["title"] = "Gestion de l'auxilaire de";

language_fr["modes"] = "Modes";

language_fr["off"] = "Désactiver";
language_fr["on"] = "Allumer";
language_fr["prog"] = "Programmation";
language_fr["auto"] = "Automatique";

language_fr["program"] = "Programme";
language_fr["day"] = "jour";

language_fr["history_title"] = "Historique";
language_fr["history"] = "Voir l'historique";

language_fr["title"] = "Gestion de la lumiere de";

language_fr["state"] = "État";

language_fr["off"] = "Éteint";
language_fr["on"] = "Allumé";

language_fr["colors"] = "Couleurs";

language_fr["warm"] = "Chaud";
language_fr["cold"] = "Froid";
language_fr["blue"] = "Bleu";
language_fr["lagoon"] = "lagon";
language_fr["cyan"] = "Cyan";
language_fr["green"] = "Vert";
language_fr["purple"] = "Violet";
language_fr["magenta"] = "Magenta";
language_fr["pink"] = "Rose";
language_fr["red"] = "Rouge";
language_fr["orange"] = "Orange";

language_fr["favorite"] = "Favoris";

language_fr["sequences"] = "Séquences";

language_fr["gradiant"] = "Dégradé";
language_fr["rainbow"] = "Arc-En-Ciel";
language_fr["parade"] = "Défilé";
language_fr["techno"] = "Techno";
language_fr["horizon"] = "Horizon";
language_fr["random"] = "Hasard";
language_fr["magical"] = "Magique";

language_fr["programming"] = "Programmes";
language_fr["program"] = "Programme";

language_fr["bright"] = "Luminosité";
language_fr["speed"] = "Vitesse";

language_fr["low"] = "Faible";
language_fr["medium"] = "Moyen";
language_fr["high"] = "Élevé";
language_fr["max"] = "Maximum";

language_fr["slow"] = "Lent";
language_fr["normal"] = "Normal";
language_fr["fast"] = "Rapide";

language_fr["history_title"] = "Historique";
language_fr["history"] = "Voir l'historique";

language_fr["monday"] = "Lundi";
language_fr["tuesday"] = "Mardi";
language_fr["wednesday"] = "Mercredi";
language_fr["thursday"] = "Jeudi";
language_fr["friday"] = "Vendredi";
language_fr["saturday"] = "Samedi";
language_fr["sunday"] = "Dimanche";

language_fr["color"] = "Couleur";

language_fr["duration"] = "Durée";
language_fr["hours"] = "heures par jour";

language_fr["winter_mode"] = "Hivernage";
language_fr["type_of_product_injected"] = "Type de produit injecté";
language_fr["maximum_volume_injected"] = "Volume maximum injecté";
language_fr["product_volume_available"] = "Volume produit disponible";
language_fr["setpoint"] = "Consigne";

language_fr["aux_state"] = "État de l'auxiliaire";
language_fr["aux_min_temp"] = "Température minimale auxiliaire";

language_fr["init_fail_1"] = "L'initialisation ne s'est pas faite correctement";
language_fr["init_fail_2"] = "Veuillez essayer de rafraichir la page";
language_fr["init_fail_3"] = "Et si cela ne fonctionne pas, veuillez réinitialiser le plugin en cliquant sur le bouton suivant : ";

language_fr["aux_state"] = "État de l'auxiliaire";
language_fr["aux_min_temp"] = "Température minimale auxiliaire";

language_fr["vigipool_modal_all"] = "Options";
language_fr["vigipool_modal_light"] = "Éclairage";
language_fr["vigipool_modal_filtration"] = "Filtration";
language_fr["vigipool_modal_auxiliary"] = "Auxiliaire";
language_fr["vigipool_modal_ph"] = "Gestion PH";
language_fr["vigipool_modal_orp"] = "Gestion ORP";
language_fr["vigipool_modal_light_m"] = "Éclairage";
language_fr["tild_modal_filt_m"] = "Filtration";
language_fr["vigipool_modal_auxiliary_1"] = "Auxiliaire 1";
language_fr["vigipool_modal_auxiliary_2"] = "Auxiliaire 2";
language_fr["vigipool_modal_ely"] = "Électrolyse";

language_fr["mode"] = "Mode";
language_fr["daily_production_duration"] = "Durée De Production Quotidienne";
language_fr["programmed"] = "Programmé";
language_fr["regulated"] = "Régulé";
language_fr["shock"] = "Choc";

language_fr["instant_chlorine_prod"] = "Instant Chlorine Prod";
language_fr["min_temperature"] = "Min Temperature";
language_fr["chlorine_prod"] = "Chlorine Prod";
language_fr["amperage"] = "Amperage";
language_fr["internal_temperature"] = "Internal Temperature";

language_fr["very_soft"] = "Très douce";
language_fr["soft"] = "Douce";
language_fr["slightly_soft"] = "Plutôt douce";
language_fr["slightly_hard"] = "Plutôt dure";
language_fr["hard"] = "Dure";
language_fr["very_hard"] = "Très dure";

language_fr["window_size_error"] = "La fenêtre du plugin Vigipool est trop petite, veuillez l'agrandir en utilisant l'icône du crayon en haut à droite.";
language_fr["no_mqtt_data"] = "Aucune donnée MQTT n'a pu être récupéré";

language_fr["no_parameters"] = "Ce périphérique n'a pas de paramètres";

language_fr["warning_power"] = "Attention, cette puissance peut réduire la durée de vie de la cellule d'électrolyse et ne doit pas être utilisée de façon permanente.";

language_fr["water"] = "Eau";

language_fr["ph_regulation"] = "Régulation pH";
language_fr["orp_regulation"] = "Régulation ORP";

language_fr["injection_in_progress"] = "Injection en cours";

language_fr["volume_injected_in_24h"] = "Volume injectée en 24h";

language_fr["chlorine_prod"] = "Prod. Chlore";

language_fr["stopped"] = "Arrêté";

language_fr["color_picker"] = "Sélecteur de couleurs";
language_fr["white"] = "Blanc";

language_fr["saved_colors"] = "Couleurs enregistrées";

language_fr["rainbow"] = "Arc-en-ciel";
language_fr["fun"] = "Fun";
language_fr["ocean"] = "Océan";
language_fr["flamme"] = "Flamme";
language_fr["parade"] = "Parade";
language_fr["elegant"] = "Élégant";
language_fr["horizon"] = "Horizon";
language_fr["psyche"] = "Psyche";

language_fr["vigipool_modal_x3_state"] = "Éclairage X3";
language_fr["vigipool_modal_x3_state_prog_1"] = "Mise à jour du programme 1 de l'éclairage X3";
language_fr["vigipool_modal_x3_state_prog_2"] = "Mise à jour du programme 2 de l'éclairage X3";

language_fr["scheduling"] = "Planification";

language_fr["save"] = "Save";

language_fr["select_the_start_time_and_duration_of_the_program"] = "Sélectionnez l'heure de début et la durée du programme";
language_fr["schedule"] = "Programme";
language_fr["at"] = "À";
language_fr["during"] = "pendant";

language_fr["add"] = "Ajouter";
language_fr["back"] = "Retourner en arrière";
language_fr["thermoregulated_mode"] = "Mode thermorégulé";

language_fr["see_advanced_options"] = "Voir les options avancées";

language_fr["enslaved_to_filtration"] = "Asservi à la filtration";

language_fr["force_filtration_during_aux"] = "Forcer la filtration";

language_fr["CGUWebURL"] = "https://eu.ccei-pool.com/fr/content/3-politique-confidentialite";
language_fr["FAQWebURL"] = "https://eu.ccei-pool.com/fr/module/faqs/display";
language_fr["account_not_verified_btn_resend_email"] = "Renvoyer l'e-mail";
language_fr["alert_action_impossible_no_internet"] = "Impossible d’effectuer cette action pour le moment, veuillez vérifier la connexion internet de votre téléphone et réessayer.";
language_fr["alert_button_connect_aws"] = "Se connecter à distance";
language_fr["alert_button_create_contact"] = "Remplir mes coordonnées";
language_fr["alert_button_create_pool"] = "Remplir les informations de ma piscine";
language_fr["alert_button_stay_bluetooth"] = "Rester en Bluetooth";
language_fr["alert_choc_from_off"] = "Il est impossible d'activer le mode Choc depuis le mode Off car une fois la durée du traitement choc achevée, l'appareil revient ensuite à son mode de fonctionnement précedent.\n\nAfin de pouvoir activer le mode choc, vous devez donc d'abord choisir un autre mode de fonctionnement.";
language_fr["alert_configure_aux_description"] = "Veuillez choisir le type d'auxiliaire connecté à votre tild VP.\n\nVous pourrez toujours le mettre à jour depuis l'écran de configuration de vos appareils.";
language_fr["alert_configure_aux_title"] = "Configuration nécessaire";
language_fr["alert_contact_deleted"] = "Vos coordonnées ont été supprimées.";
language_fr["alert_contact_deleted_failed"] = "Vos coordonnées n'ont pas pu être supprimées.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_contact_saved"] = "Vos coordonnées ont été sauvegardées.";
language_fr["alert_contact_saved_failed"] = "Vos coordonnées n'ont pas pu être sauvegardées.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_contact_warning_delete"] = "Supprimer les informations de contacts supprimera également vos partages de piscine.";
language_fr["alert_description_geoloc_crep_needed"] = "Vous avez refusé la géolocalisation mais celle-ci est nécessaire afin d'utiliser le mode crépuscule de la programmation de la lumière, ainsi que pour récupérer la météo.\n\nSouhaitez-vous ouvrir les réglages de l'application afin de modifier ce paramètre ?";
language_fr["alert_dialog_aws_timeout_error"] = "Votre appareil ne semble pas être connecté à internet.";
language_fr["alert_dialog_calibration_in_progress_orp_value_message"] = "Calibration en cours, ORP actuel : %1$s";
language_fr["alert_dialog_calibration_in_progress_ph_value_message"] = "Calibration en cours, pH actuel : %1$s";
language_fr["alert_dialog_calibration_in_progress_title"] = "Veuillez patienter";
language_fr["alert_dialog_config_change_device_added_message"] = "Il semblerait qu'un appareil vienne d'être ajouté à votre configuration.\n\nConnectez-vous à nouveau.";
language_fr["alert_dialog_config_change_device_removed_message"] = "Il semblerait qu'un appareil vienne d'être enlevé de votre configuration.\n\nConnectez-vous à nouveau.";
language_fr["alert_dialog_delete_device_message"] = "Êtes-vous sûr de vouloir supprimer l'appareil \"%1$s\" de vos appareils Vigipool ?";
language_fr["alert_dialog_delete_device_title"] = "Supprimer un appareil";
language_fr["alert_dialog_factory_reset_message"] = "Êtes-vous sûr de vouloir procéder au reset usine ?";
language_fr["alert_dialog_lost_ble_connection_message"] = "La connexion Bluetooth avec l'appareil a été perdue.";
language_fr["alert_dialog_message_bluetooth_error"] = "Une erreur Bluetooth est survenue, merci de réessayer.";
language_fr["alert_dialog_message_loading_timeout"] = "Loading timeout, please try again.";
language_fr["alert_dialog_message_remote_error"] = "Une erreur est survenue lors de la connexion à distance, merci de réessayer.";
language_fr["alert_dialog_no_internet_message"] = "Veuillez vérifier l'état de votre connexion internet.";
language_fr["alert_dialog_no_internet_title"] = "Erreur réseau";
language_fr["alert_dialog_orp_calibration_in_progress_message"] = "Calibration ORP en cours.";
language_fr["alert_dialog_ph_calibration_in_progress_message"] = "Calibration pH en cours.";
language_fr["alert_dialog_title_bluetooth_error"] = "Erreur Bluetooth";
language_fr["alert_dialog_title_loading_timeout"] = "Timeout";
language_fr["alert_dialog_token_expired_message"] = "Session expirée.\n\nConnectez-vous à nouveau.";
language_fr["alert_edit_last_backwash_error"] = "Un problème est survenu lors de l’enregistrement de la date du dernier contre-lavage, veuillez vérifier la connexion internet de votre téléphone et ré-enregistrer la date du dernier contre-lavage manuellement via l’écran de paramétrages du contre-lavage.";
language_fr["alert_electrolyse_power"] = "Attention, cette puissance peut réduire la durée de vie de la cellule d'électrolyse et ne doit pas être utilisée de façon permanente.";
language_fr["alert_empty_shadow_description"] = "Il est impossible de récupérer les informations de votre appareil.\n\nVeuillez vérifier que la couverture de votre réseau est suffisante et que votre appareil est bien connecté à internet.\nVous pouvez si besoin configurer la connexion de votre appareil en vous y connectant en Bluetooth.\n\nSi le problème persiste, vous pouvez essayer de redémarrer l'appareil.";
language_fr["alert_factory_reset_description"] = "Souhaitez-vous faire une réinitialisation d'usine de votre appareil ?\nVeuillez noter que ce changement est irréversible.";
language_fr["alert_factory_reset_title"] = "Reset usine";
language_fr["alert_incomplete_shadow_description"] = "Il est impossible de récupérer les informations de votre appareil.\n\nVeuillez vérifier que la couverture de votre réseau est suffisante et que votre appareil est bien connecté à internet.\nVous pouvez si besoin configurer la connexion de votre appareil en vous y connectant en Bluetooth.\n\nSi le problème persiste, vous pouvez essayer de redémarrer l'appareil via le bouton ci-dessous.";
language_fr["alert_navigate_to_configure_wifi_description"] = "Vous pouvez à présent configurer la connexion internet de votre installation afin de pouvoir contrôler à distance votre piscine.";
language_fr["alert_navigate_to_sign_in_vigipool_description"] = "Vous pouvez à présent créer ou vous connecter à votre compte Vigipool pour contrôler à distance votre piscine.";
language_fr["alert_pool_deleted"] = "Les informations de votre piscine ont été supprimées.";
language_fr["alert_pool_deleted_failed"] = "Les informations de votre piscine n'ont pas pu être supprimées.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_pool_saved"] = "Les informations de votre piscine ont été sauvegardées.";
language_fr["alert_pool_saved_failed"] = "Les informations de votre piscine n'ont pas pu être sauvegardées.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_pool_warning_delete"] = "Supprimer les informations de votre piscine supprimera également les informations de contacts enregistrées, ainsi que vos partages de piscine si vous en avez.";
language_fr["alert_power_electrolyse_choice_prog"] = "Programmé";
language_fr["alert_power_electrolyse_description"] = "Quel mode souhaitez-vous pour votre électrolyse ?";
language_fr["alert_reboot_description"] = "Êtes-vous sûrs de vouloir redémarrer votre appareil ?";
language_fr["alert_reboot_title"] = "Redémarrer";
language_fr["alert_reconnect_in_ble_for_crep"] = "Votre appareil a besoin de connaître votre géolocalisation pour utiliser le mode crépusculaire de la programmation de la lumière.\n\nSi vous souhaitez profiter de cette option, veuillez vous reconnecter en Bluetooth afin de partager votre position.";
language_fr["alert_reconnect_in_ble_for_music_mode"] = "Mode musique non disponible en connexion \"à distance\".\n\nAfin de pouvoir utiliser cette fonctionalité, il est nécessaire de se connecter en mode Bluetooth à l'appareil.\n\nPour se faire, il faut ouvrir le menu latéral, cliquer sur \"Se déconnecter\" et se connecter à votre appareil depuis l'onglet Bluetooth.";
language_fr["alert_reconnecting_cancel"] = "Abandonner la reconnexion";
language_fr["alert_reconnecting_description"] = "Tentative de reconnexion…";
language_fr["alert_reconnecting_title"] = "Connexion perdue";
language_fr["alert_reg_warning_description"] = "Aucun appareil de mesure ORP n'a été trouvé.\nSi aucune mesure n'est détectée dans les 15 prochaines minutes, l'électrolyse passera en mode automatique (programmé + thermorégulé).";
language_fr["alert_regulation_available_volume_edit_mode_on"] = "La quantité de produit disponible est en mode édition, souhaitez-vous sauvegarder les changements ?";
language_fr["alert_schedule_modified_but_not_saved"] = "Vous avez édité votre programmation mais n'avez pas sauvegardé les modifications";
language_fr["alert_schedule_modified_but_not_saved_action_do_not_save"] = "Ne pas les\nconserver";
language_fr["alert_schedule_modified_but_not_saved_action_save"] = "Sauvegarder les modifications";
language_fr["alert_service_modified"] = "Une modification de votre réseau d'appareils (connexion d'un nouvel appareil par exemple) a été détecté. Nous allons procéder à une reconnexion pour que l'application puisse prendre en compte les changements nécessaires.";
language_fr["alert_shared_pool_deleted"] = "Le partage de votre piscine est maintenant supprimé.";
language_fr["alert_shared_pool_deleted_failed"] = "Le partage de votre piscine n'a pas pu être supprimé.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_shared_pool_edited"] = "La durée de partage de votre piscine a été mise à jour.";
language_fr["alert_shared_pool_edited_failed"] = "La modification de la durée de partage de votre piscine n'a pas pu aboutir.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_shared_pool_email_already_exist"] = "Vous partagez déjà votre piscine avec ce professionnel (adresse e-mail identique).\n\nVeuillez fournir une adresse e-mail différente ou éditer la date de fin de votre partage dans la liste des partages existants en bas de cet écran.";
language_fr["alert_shared_pool_need_contact"] = "Avant de partager votre piscine, vous devez obligatoirement renseigner vos coordonnées.";
language_fr["alert_shared_pool_need_pool"] = "Pour partager votre piscine, il est nécessaire de renseigner ses caractéristiques.";
language_fr["alert_shared_pool_saved"] = "Votre piscine a été partagée avec succès.";
language_fr["alert_shared_pool_saved_failed"] = "Le partage de votre piscine a échoué.\n\nVeuillez vérifier votre connexion internet ou bien réessayez plus tard.";
language_fr["alert_warning_delete_vigipool_device"] = "Une fois cet appareil supprimé de votre compte, vous serez obligé de vous y réappairer en Bluetooth (via l'application) si vous souhaitez l'ajouter à nouveau.\n\nÊtes vous sûr de vouloir le supprimer ?";
language_fr["alert_warning_reset_sensor_date"] = "Vous êtes sur le point de réinitialiser la date du dernier changement de votre sonde. Ce changement n'est pas réversible, êtes vous sûr de vouloir continuer ?";
language_fr["alert_warning_winter_mode"] = "Le mode Hivernage va désactiver l'injection de votre appareil";
language_fr["alerts"] = "Alertes";
language_fr["amplify_device_current"] = "(Cet appareil)";
language_fr["amplify_error_add_device"] = "Erreur lors de l'ajout de l'appareil";
language_fr["amplify_error_delete_device"] = "Erreur lors de la suppression de l'appareil";
language_fr["amplify_error_sign_out"] = "Erreur lors de la déconnexion";
language_fr["amplify_linked_devices"] = "Vos appareils liés à Vigipool";
language_fr["android_output_nb_format"] = "Sortie %1$d";
language_fr["android_zone_nb_format"] = "Zone %1$d";
language_fr["app_restart_dialog_message"] = "Vous pouvez désormais garder un œil sur votre piscine où que vous soyez en utilisant le mode de connexion \"À distance\"";
language_fr["ask_for_authorization"] = "Demande d'autorisation";
language_fr["ask_for_authorization_description"] = "Nous avons besoin de l'autorisation de Spotify afin de pouvoir nous synchroniser avec la musique.";
language_fr["ask_user_configure_lynx_wifi"] = "Votre installation est connecté à votre Lynx mais vous n'avez pas internet. Afin de connecter votre installation au Wifi, allez configurer celui-ci sur votre Lynx.";
language_fr["aux2name"] = "Auxiliaire 2";
language_fr["aux_forced_off_no_filtration"] = "L'auxiliaire est en pause car il ne peut fonctionner qu'avec une filtration en marche.\nL'auxiliaire démarrera dès que la filtration sera en marche.";
language_fr["aux_forced_off_no_filtration_title"] = "En attente de la filtration";
language_fr["aux_forced_off_orp_measurement_error"] = "L'auxiliaire est en pause car la valeur mesurée de l'ORP est inférieure à 400 mV ; ou parce que l'appareil de mesure est déconnecté.";
language_fr["aux_forced_off_orp_measurement_error_title"] = "Erreur de mesure ORP";
language_fr["aux_forced_off_orperror_description"] = "Il y a un problème de mesures ORP, vous devez corriger ce problème ou désactiver la consigne ORP dans les paramètres de l'auxiliaire afin de pouvoir démarrer votre électrolyseur.";
language_fr["aux_forced_off_orperror_title"] = "Mesure d'ORP invalide";
language_fr["aux_forced_off_orpreached"] = "L'auxiliaire est en pause car la consigne ORP a été atteinte.";
language_fr["aux_forced_off_orpreached_title"] = "Consigne ORP atteinte";
language_fr["aux_forced_off_starter_description"] = "La filtration vient de s'allumer et l'auxiliaire démarrera automatiquement dans quelques minutes.";
language_fr["aux_forced_off_starter_title"] = "En attente du démarrage de la filtration";
language_fr["aux_forced_off_temp_too_high"] = "L'auxiliaire est en pause car la consigne de température a été atteinte.";
language_fr["aux_forced_off_temp_too_high_title"] = "Consigne temp. atteinte";
language_fr["aux_forced_off_temp_too_low"] = "L'auxiliaire est en pause car la consigne de température minimum n'est pas atteinte.";
language_fr["aux_forced_off_temp_too_low_title"] = "Temp. min. non atteinte";
language_fr["aux_min_temp_picker_dialog_title"] = "Choisissez la température mini";
language_fr["aux_paused"] = "%1$s en pause";
language_fr["aux_starting"] = "en cours de démarrage";
language_fr["aux_type_booster"] = "Surpresseur";
language_fr["aux_type_heater"] = "Chauffage";
language_fr["aux_type_none"] = "Aucun";
language_fr["auxiliary"] = "Auxiliaire";
language_fr["auxiliary_mode"] = "Mode auxiliaire";
language_fr["auxiliary_overlay_aux_min_temp"] = "Température minimum de démarrage du traitement";
language_fr["auxiliary_paused"] = "Auxiliaire en pause";
language_fr["auxiliary_settings_dialog_filtration_dependant_tooltip"] = "Si l'auxiliaire est asservi à la filtration, il ne pourra pas démarrer lorsque la filtration est éteinte.";
language_fr["auxiliary_treatment_orp_value"] = "Valeur d'ORP mesurée : %1$d mV";
language_fr["auxiliary_type_deactivated"] = "Désactivé";
language_fr["auxiliary_type_orp_treatment"] = "Traitement ORP";
language_fr["auxiliary_type_undefined"] = "Inconnu";
language_fr["backwash"] = "Contre-lavage";
language_fr["backwash_close_sewer_valve"] = "Puis fermez la vanne égout";
language_fr["backwash_completed"] = "Contre-lavage terminé";
language_fr["backwash_help"] = "Un contre-lavage régulier de votre filtration est préconisé pour garantir une eau limpide.\nVigipool peut vous guider dans cette opération.\nAttention votre filtration va etre mise en pause au lancement du contre-lavage";
language_fr["backwash_impossible"] = "Contre-lavage impossible";
language_fr["backwash_impossible_filt_prohibited_message"] = "Veuillez enlever l'interdit pompe de votre filtration (directement sur bouton interrupteur de votre coffret) avant de démarrer un contre-lavage";
language_fr["backwash_impossible_forced_march_message"] = "Veuillez enlever la marche forcée de votre filtration (directement sur le bouton interrupteur de votre coffret) avant de démarrer un contre-lavage";
language_fr["backwash_in_progress"] = "Contre-lavage en cours";
language_fr["backwash_in_progress_description"] = "Il semblerait qu'un contre-lavage soit en cours.\n\nSi vous pensez qu'il s'agit d'une erreur et que vous souhaitez remettre l'appareil dans son état de fonctionnement normal, veuillez clicker sur \"Arrêter le contre-lavage\".\nSinon, veuillez quitter l'application et la relancer lorsque l'opération de contre-lavage sera achevée.";
language_fr["backwash_mode_welcome"] = "Bienvenue dans le mode contre-lavage";
language_fr["backwash_mode_welcome_description"] = "Ce mode vous permet de nettoyer efficacement votre filtre\n\nAttention ce mode nécessite d'être physiquement dans votre local technique pour une durée allant de 5 à 15min";
language_fr["backwash_modify_rinse_duration"] = "Modifier la durée de rinçage";
language_fr["backwash_modify_wash_duration"] = "Modifier la durée de lavage";
language_fr["backwash_need_vigipool_account"] = "Être connecté à un compte Vigipool est nécessaire pour pouvoir profiter du contre-lavage guidé et du rappel de contre-lavage.\n\nVous pouvez créer un compte Vigipool ou vous y connecter depuis le menu principal de l'application.";
language_fr["backwash_next_water_clear"] = "Mon eau est claire, suivant";
language_fr["backwash_open_sewer_and_turn_valve_to_wash"] = "Ouvrez la vanne égout, puis tournez la vanne sur la position LAVAGE";
language_fr["backwash_reminder"] = "Rappel de contre-lavage";
language_fr["backwash_rinse_completed"] = "Rinçage terminé";
language_fr["backwash_rinse_in_progress"] = "Le rinçage est en cours, veuillez patienter";
language_fr["backwash_settings"] = "Paramètres du contre-lavage";
language_fr["backwash_valve_turn_to_filtration"] = "Replacez la vanne sur FILTRATION";
language_fr["backwash_valve_turn_to_rinse"] = "Tournez la vanne sur RINÇAGE";
language_fr["backwash_wash_completed"] = "Lavage terminé";
language_fr["backwash_wash_in_progress"] = "Le lavage est en cours, veuillez patienter";
language_fr["banner_music_mode_need_one_zone_title"] = "Le mode musique a besoin d'avoir au moins une zone sélectionnée pour fonctionner";
language_fr["bar"] = "bar";
language_fr["ble_needed"] = "Bluetooth nécessaire";
language_fr["ble_permission_needed"] = "Permission bluetooth nécessaire";
language_fr["blue"] = "Bleu";
language_fr["bluetooth_disabled_error_message"] = "Le Bluetooth n'est pas disponible. Veuillez vérifier que le Bluetooth est activé sur votre téléphone, et que l'application %1$s a l'autorisation d'utiliser le Bluetooth (modifiable dans l'application Réglages du téléphone).";
language_fr["bluetooth_not_available_error_message"] = "La fonctionnalité Bluetooth n'est pas disponible sur votre appareil Android.";
language_fr["bluetooth_permission_rationale_message"] = "La permission Bluetooth est requise pour se connecter en Bluetooth à votre appareil.";
language_fr["bluetooth_permission_rationale_title"] = "Autoriser le Bluetooth";
language_fr["bonding_cancel"] = "Annuler l'appairage";
language_fr["bonding_check_title"] = "Récupération des données";
language_fr["bonding_error"] = "Erreur d'appairage";
language_fr["bonding_help_rssi"] = "Approchez simplement votre smartphone de votre %1$s pour les appairer.";
language_fr["bonding_help_rssi_and_btn"] = "Approchez simplement votre smartphone ou appuyez une fois sur le bouton de votre %1$s pour les appairer.";
language_fr["bonding_location_unavailable"] = "La localisation actuelle n'a pas pu être récupérée pour compléter l'appairage.";
language_fr["bonding_message"] = "Veuillez presser une fois sur le bouton de votre %1$s (illustré ci-dessus) pour l'appairer à votre téléphone";
language_fr["bonding_required_title"] = "Appairage nécessaire";
language_fr["bonding_timeout"] = "Délai d'attente dépassé pour l'appairage.";
language_fr["brightness"] = "Luminosité";
language_fr["button_cancel_calibration"] = "Annuler la calibration";
language_fr["button_cancel_connection"] = "Annuler la connexion";
language_fr["button_cancel_scan"] = "Annuler la recherche";
language_fr["button_update_app_store"] = "Mettre à jour sur l'AppStore";
language_fr["bypass"] = "Bypass";
language_fr["calibrate"] = "Calibrer";
language_fr["calibration_adjustment_information"] = "La valeur de %1$s sera ajustée lors de la prochaine mesure, donc d'ici une dizaine de secondes si la filtration est en marche, ou bien au prochain démarrage de la filtration.";
language_fr["calibration_choose_type_title"] = "Type de calibration";
language_fr["calibration_debit"] = "Calibration débit";
language_fr["calibration_debit_flow_warning"] = "La calibration du débit ne peut-être effectuée que lorsque la filtration est en fonction.";
language_fr["calibration_debit_warning"] = "Le débit sera ajustée à la prochaine mesure, donc d'ici une dizaine de secondes si la filtration est en marche, ou bien au prochain démarrage de la filtration.";
language_fr["calibration_failed"] = "La calibration n'a pas pu aboutir, veuillez vérifier votre sonde";
language_fr["calibration_first_point_title"] = "Calibration 1er point";
language_fr["calibration_in_progress"] = "Calibration en cours…";
language_fr["calibration_information"] = "La durée de la calibration est comprise entre 30 secondes et 3 minutes, veuillez rester à proximité de l'appareil et garder l'application ouverte durant cette opération";
language_fr["calibration_manual"] = "Ajustement manuel";
language_fr["calibration_one_point"] = "Calibration 1 point";
language_fr["calibration_orp"] = "Calibration ORP";
language_fr["calibration_orpimpossible"] = "Nous n'avons actuellement pas de mesure d'ORP, veuillez allumer la filtration afin de récupérer une mesure valide pour pouvoir l'ajuster.";
language_fr["calibration_orpsensor"] = "Calibration sonde ORP";
language_fr["calibration_orpwarning"] = "L'ORP sera ajusté à la prochaine mesure, donc d'ici une dizaine de secondes si la filtration est en marche, ou bien au prochain démarrage de la filtration.";
language_fr["calibration_ph"] = "Calibration pH";
language_fr["calibration_phimpossible"] = "Nous n'avons actuellement pas de mesure de pH, veuillez allumer la filtration afin de récupérer une mesure valide pour pouvoir l'ajuster.";
language_fr["calibration_phsensor"] = "Calibration sonde pH";
language_fr["calibration_phwarning"] = "Le pH sera ajusté à la prochaine mesure, donc d'ici une dizaine de secondes si la filtration est en marche, ou bien au prochain démarrage de la filtration.";
language_fr["calibration_pressure"] = "Calibration pression";
language_fr["calibration_pressure_warning"] = "La pression sera ajustée à la prochaine mesure, donc d'ici une dizaine de secondes si la filtration est en marche, ou bien au prochain démarrage de la filtration.";
language_fr["calibration_second_point_title"] = "Calibration 2ème point";
language_fr["calibration_start"] = "Commencer la calibration";
language_fr["calibration_start_second_point"] = "Calibrer le 2ème point";
language_fr["calibration_success"] = "Calibration terminée avec succès";
language_fr["calibration_temp"] = "Calibration température";
language_fr["calibration_temp_impossible"] = "Nous n'avons actuellement pas de mesure de température, veuillez allumer la filtration afin de récupérer une mesure valide pour pouvoir l'ajuster.";
language_fr["calibration_temp_warning"] = "La température sera ajustée à la prochaine mesure, donc d'ici une dizaine de secondes si la filtration est en marche, ou bien au prochain démarrage de la filtration.";
language_fr["calibration_two_points"] = "Calibration 2 points";
language_fr["cgu_accept_warning"] = "Vous devez cocher la case pour accepter les CGU.";
language_fr["cgu_bt_accept"] = "Accepter";
language_fr["cgu_bt_accept_label"] = "J'ai lu et j'accepte les conditions générales d'utilisation";
language_fr["cgu_read_warning"] = "Vous devez lire les CGU avant de les accepter.";
language_fr["channels"] = "Canaux";
language_fr["color"] = "Couleur";
language_fr["color_eyedropper_title"] = "Sélecteur de couleurs";
language_fr["come_closer_to_your_device"] = "Approchez-vous de votre appareil";
language_fr["common_accept_cgu"] = "J'accepte les conditions d'utilisation";
language_fr["common_address"] = "Adresse";
language_fr["common_bluetooth"] = "Bluetooth";
language_fr["common_calibration"] = "Calibration";
language_fr["common_cancel"] = "Annuler";
language_fr["common_city"] = "Ville";
language_fr["common_closed"] = "Fermée";
language_fr["common_congratulations"] = "Félicitations !";
language_fr["common_connect"] = "Se connecter";
language_fr["common_connecting"] = "Connexion en cours";
language_fr["common_country"] = "Pays";
language_fr["common_cover"] = "Couverture";
language_fr["common_danger"] = "Danger";
language_fr["common_debit"] = "Débit";
language_fr["common_delete_anyway"] = "Supprimer quand même";
language_fr["common_disable"] = "Désactiver";
language_fr["common_dismiss"] = "Fermer";
language_fr["common_electrolyse"] = "Électrolyse";
language_fr["common_email"] = "Adresse e-mail";
language_fr["common_enable"] = "Activer";
language_fr["common_error"] = "Erreur";
language_fr["common_filtration_type"] = "Filtration";
language_fr["common_gateway"] = "Point d'accès";
language_fr["common_ignore"] = "Ignorer";
language_fr["common_information"] = "Information";
language_fr["common_light"] = "Lumière";
language_fr["common_loading"] = "Chargement en cours…";
language_fr["common_min_temp"] = "Temp. Min.";
language_fr["common_mode"] = "Mode";
language_fr["common_mode_choc"] = "Choc";
language_fr["common_mode_prog"] = "Programmé";
language_fr["common_new_password"] = "Nouveau mot de passe";
language_fr["common_no"] = "Non";
language_fr["common_off"] = "Off";
language_fr["common_ok"] = "OK";
language_fr["common_on"] = "On";
language_fr["common_open"] = "Ouvert";
language_fr["common_orp"] = "ORP";
language_fr["common_owner_name"] = "Nom du propriétaire";
language_fr["common_password"] = "Mot de passe";
language_fr["common_password_confirmation"] = "Confirmation du mot de passe";
language_fr["common_ph"] = "pH";
language_fr["common_phone_number"] = "Téléphone";
language_fr["common_pool_name"] = "Nom de la piscine";
language_fr["common_pool_type"] = "Type";
language_fr["common_post_code"] = "Code postal";
language_fr["common_pressure"] = "Pression";
language_fr["common_remotely"] = "À distance";
language_fr["common_reset"] = "Réinitialiser";
language_fr["common_retry"] = "Réessayer";
language_fr["common_save"] = "Enregistrer";
language_fr["common_scheduling"] = "Programmation";
language_fr["common_set_point"] = "Consigne";
language_fr["common_sign_in"] = "Se connecter";
language_fr["common_sign_up"] = "Créer un compte";
language_fr["common_stop"] = "À l'arrêt";
language_fr["common_structure"] = "Structure";
language_fr["common_success"] = "Succès";
language_fr["common_temperature"] = "Température";
language_fr["common_temperature_unit"] = "°C";
language_fr["common_temperature_unit_us"] = "°F";
language_fr["common_thermoregulated"] = "Thermorégulé";
language_fr["common_thermoregulation_mode"] = "Mode thermorégulé";
language_fr["common_timer"] = "Minuterie";
language_fr["common_unknown_device"] = "Appareil inconnu";
language_fr["common_validate"] = "Valider";
language_fr["common_volume_eu"] = "Volume (m3)";
language_fr["common_volume_na"] = "Volume (US gal)";
language_fr["common_warning"] = "Attention";
language_fr["common_water"] = "Eau";
language_fr["common_wifi_state"] = "État connexion :";
language_fr["common_working"] = "En marche";
language_fr["common_yes"] = "Oui";
language_fr["configure_dmxchannels"] = "Réglages canaux DMX";
language_fr["configure_price_kwh"] = "Configurer le prix du kWh";
language_fr["configure_unit_temperature_help"] = "L'unité de température (Celsius ou Fahrenheit) utilisée dans l'application provient des réglages de votre téléphone et ne dépendra donc pas de ce choix.";
language_fr["configure_wifi_connection"] = "Configurer la connexion Wifi";
language_fr["configure_zones"] = "Configuration des zones";
language_fr["confirm"] = "Confirmation";
language_fr["confirm_force_filtration_alert"] = "La filtration doit être allumée pour que l'auxiliaire puisse fonctionner.\n\nSi vous décochez cette option, il ne pourra pas forcer l'allumage de la filtration (si nécessaire) et ne pourra donc pas s'allumer lorsque la filtration n'est pas en marche.";
language_fr["confirm_force_filtration_pac_alert"] = "La filtration doit être allumée pour que la pompe à chaleur puisse fonctionner.\n\nSi vous décochez cette option, elle ne pourra pas forcer l'allumage de la filtration (si nécessaire) et ne pourra donc pas s'allumer lorsque la filtration n'est pas en marche.";
language_fr["confirm_password"] = "Confirmation";
language_fr["connect"] = "Connexion";
language_fr["connect_setup_to_wifi"] = "Connecter votre local au Wifi ?";
language_fr["connected"] = "Connecté";
language_fr["connected_to_wifi"] = "Connecté au Wifi";
language_fr["connecting_to_phileo"] = "Connexion à\n%1$s";
language_fr["connection_destination_internet"] = "au Wifi";
language_fr["connection_log_out"] = "Se déconnecter";
language_fr["connection_looking_for_device_title"] = "Recherche d'appareils…";
language_fr["connection_to_internet_none"] = "Pas de connexion internet";
language_fr["consumption"] = "Consommation";
language_fr["contact_informations"] = "Mes coordonnées";
language_fr["contact_informations_needed"] = "Informations de contact nécessaires";
language_fr["context_text_view_configure_your_wifi_connection"] = "Configurez votre connexion Wifi";
language_fr["controlled_dmx"] = "Controllé en DMX";
language_fr["controlled_micro"] = "Controllé par microphone";
language_fr["cover_detected_details"] = "Cela peut affecter la durée de fonctionnement de certains appareils.";
language_fr["cover_detected_title"] = "Couverture détectée";
language_fr["cs4z_overload"] = "Projecteur en surcharge, vérifier votre installation et redémarrer votre CS4Z.";
language_fr["cs4z_reconfigure_output"] = "Reconfigurer les sorties";
language_fr["cs4z_rename_zone"] = "Renommer la zone";
language_fr["cs4z_rename_zone_instructions"] = "Entrez le nouveau nom de la zone.";
language_fr["cs4z_rename_zone_placeholder"] = "Nouveau nom (ex : Piscine, Spa...)";
language_fr["cs4z_settings"] = "Paramétrage des zones";
language_fr["cs4z_use_other_zones"] = "Piloter simultanément :";
language_fr["cs4z_zone_name"] = "Nom de la zone :";
language_fr["date_hour_ampmformatter"] = "h:mm a";
language_fr["date_hour_formatter"] = "H:mm";
language_fr["day"] = "jour";
language_fr["day_caps"] = "Jour";
language_fr["days"] = "jours";
language_fr["debit_current"] = "Débit actuel";
language_fr["debit_desired"] = "Débit rectifié";
language_fr["debit_history"] = "Historique du débit";
language_fr["delete"] = "Supprimer";
language_fr["delete_all_registered_colors_message"] = "Êtes-vous sûr de vouloir supprimer les couleurs enregistrées ?";
language_fr["delete_all_registered_colors_title"] = "Suppression des couleurs";
language_fr["delete_contact_informations"] = "Supprimer les informations de contact";
language_fr["delete_pool"] = "Supprimer mes informations";
language_fr["demo_mode"] = "Mode Démo";
language_fr["device_name_phileo"] = "Phileo";
language_fr["device_not_connected"] = "Votre appareil %1$s n'est pas connecté.";
language_fr["device_shadow_error"] = "Impossible de se connecter à %1$s.\n\nRaison : aucun objet connecté trouvé.";
language_fr["devices_remote_dialog_device_not_attached"] = "Nous ne sommes pas en mesure de rattacher cet appareil à votre compte Vigipool.";
language_fr["devices_remote_dialog_device_not_found"] = "Nous ne sommes pas en mesure de trouver cet appareil dans votre compte Vigipool.";
language_fr["devices_remote_dialog_invalid_things"] = "Nous ne sommes pas en mesure de récupérer les informations liées à votre compte Vigipool.";
language_fr["devices_remote_dialog_login_failed_message"] = "Adresse e-mail et/ou mot de passe invalides";
language_fr["devices_remote_dialog_login_failed_network_error_message"] = "Vérifiez que vous êtes connectês à internet.";
language_fr["devices_remote_dialog_login_failed_network_error_title"] = "Erreur réseau";
language_fr["devices_remote_dialog_no_devices_found"] = "Nous ne sommes pas en mesure de récupérer les appareils liés à votre compte Vigipool.";
language_fr["devices_remote_dialog_sign_in_not_complete"] = "Nous ne sommes pas en mesure de vous connnecter actuellement.";
language_fr["devices_remote_dialog_user_not_confirmed_message"] = "Votre compte n'est pas encore vérifié.\n\nVeuillez consulter votre boite mail pour cliquer sur le lien de confirmation.";
language_fr["devices_remote_error_email_required"] = "L'adresse e-mail est requise";
language_fr["devices_remote_error_password_required"] = "Le mot de passe est requis";
language_fr["devices_selection_select_a_device_message"] = "Veuillez sélectionner un appareil";
language_fr["devices_selection_text"] = "Nous avons trouvé plusieurs appareils liés à votre compte, veuillez choisir celui auquel vous souhaitez vous connecter";
language_fr["devices_tab_bluetooth_bluetooth_throttle_error_message"] = "Merci de réessayer un nouveau scan Bluetooth dans quelques instants.";
language_fr["devices_tab_bluetooth_no_device_found_message"] = "Aucun appareil PhileoX n'a été trouvé à proximité. Veuillez vérifier que celui-ci est bien en marche et que vous êtes assez près de l'appareil.";
language_fr["devices_tab_bluetooth_start_scan"] = "Démarrer le scan";
language_fr["devices_tab_bluetooth_stop_scan"] = "Arrêter le scan";
language_fr["devices_title"] = "Appareils";
language_fr["dialog_missing_timezone_message"] = "Votre appareil %1$s n'a pas de fuseau horaire, ce qui est indispensable pour pouvoir le programmer.\n\nVeuillez vous reconnecter en Bluetooth pour mettre le fuseau horaire à jour automatiquement.";
language_fr["direct"] = "Direct";
language_fr["disabled"] = "Désactivé";
language_fr["divergence_flow_error_notification"] = "Absence de débit d'eau sur une partie de votre installation.";
language_fr["dmxmode"] = "Mode DMX";
language_fr["dmxmode_help"] = "Référez-vous à la documentation des projecteurs DMX.";
language_fr["duration_picker_dialog_title"] = "Réglez la durée";
language_fr["edit"] = "Editer";
language_fr["edit_device_name_instructions"] = "Entrez le nouveau nom de votre appareil.\n\nAttention cependant, il est possible si vous utilisez le Bluetooth comme mode de connexion que vous ayiez besoin de vous reconnecter à l'appareil afin de voir le changement (car certains téléphones sauvegardent des informations sur les périphériques Bluetooth en local).";
language_fr["edit_device_name_placeholder"] = "Nouveau nom (ex : Ma piscine)";
language_fr["edit_device_name_title"] = "Modifier le nom de l'appareil";
language_fr["edit_last_manual_backwash"] = "Renseigner un contre-lavage manuel";
language_fr["edit_program_name_instructions"] = "Entrez le nouveau nom de votre programme et validez-le avec le boutton en bas de l'écran.\n\nSi vous souhaitez utiliser le nom par défaut, vous pouvez supprimer le texte et valider.";
language_fr["edit_program_name_placeholder"] = "Nom du programme (ex : Week-end)";
language_fr["edit_program_name_title"] = "Modifier le nom du programme";
language_fr["electrolyse_chlore_production_state"] = "État production Chlore";
language_fr["electrolyse_choc_duration"] = "Durée traitement choc";
language_fr["electrolyse_current"] = "Courant d'électrolyse";
language_fr["electrolyse_daily_prod"] = "Durée production journalière";
language_fr["electrolyse_filtration_state"] = "Flux cellule";
language_fr["electrolyse_internal_temp"] = "Température interne";
language_fr["electrolyse_power"] = "Puissance";
language_fr["electrolyse_prod_chlore"] = "Prod. Chlore";
language_fr["electrolyse_prod_chlore_instant"] = "Prod. Instant. Chlore";
language_fr["electrolyse_stopped"] = "Electrolyse arrêté";
language_fr["electrolyse_stopped_details_format"] = "Température minimale de l'eau atteinte, l'electrolyse de l'appareil {{STRING}} est arrêté.";
language_fr["electrolyse_temp_min"] = "Température Mini";
language_fr["electrolyse_temperature"] = "Temp. eau cellule";
language_fr["electrolyse_tension"] = "Tension";
language_fr["electrolyse_thermoregulated_help"] = "La durée d'électrolyse sera automatiquement adaptée en fonction de la température de l'eau";
language_fr["electrolyse_water_hardness"] = "Dureté de l'eau";
language_fr["electrolysis_amperage"] = "Courant";
language_fr["electrolysis_cover_off"] = "Ouverte";
language_fr["electrolysis_daily_production_duration_auto"] = "Durée de production thermorégulée : %1$s";
language_fr["electrolysis_dialog_no_orp_device_message"] = "Aucun appareil de mesure d'ORP n'a été trouvé.\n\nSi aucune mesure n'est détectée dans une heure,l'électrolyse repassera en mode Programmé.";
language_fr["electrolysis_dialog_title"] = "Confirmation du mode";
language_fr["electrolysis_shock_treatment_duration_elapsed"] = "Traitement choc démarré il y a %1$s.";
language_fr["electrolysis_stop_dialog_message"] = "Voulez-vous vraiment arrêter l'électrolyse ?";
language_fr["electrolysis_thermoregulation"] = "Thermorégulation";
language_fr["energy"] = "Énergie";
language_fr["enslaved_to_filtration"] = "Asservi à la filtration";
language_fr["enslaved_to_filtration_help"] = "Si asservi à la filtration, l'auxiliaire ne pourra pas démarrer lorsque la filtration est éteinte.";
language_fr["enslaved_to_filtration_pac_help"] = "Si asservi à la filtration, la pompe à chaleur ne pourra pas démarrer lorsque la filtration est éteinte.";
language_fr["error"] = "Erreur";
language_fr["error_amplify_get_devices"] = "Une erreur est survenue pendant la récupération des appareils, veuillez vérifier votre connexion internet et réessayer.";
language_fr["error_confirmation_sign_up_unknown"] = "Une erreur s'est produite, veuillez vérifier le code et réessayer.";
language_fr["error_connection"] = "Impossible de se connecter, veuillez réessayer. Si l'erreur se répète, essayez de fermer l'application et de la relancer.";
language_fr["error_ntpmessage"] = "Votre appareil doit être connecté à internet pour pouvoir être programmé.";
language_fr["error_scan"] = "Une erreur s'est produite pendant la recherche d'appareil, veuillez réessayer. Si l'erreur se répète, essayez de fermer l'application et de la relancer, ou de changer le mode de connexion.";
language_fr["error_sign_in_no_device_linked"] = "Nous n'avons pas trouvé d'appareils compatible lié à votre compte. Veuillez d'abord vous connecter en Bluetooth afin de pouvoir associer votre appareil à votre compte (écran de paramètres).";
language_fr["error_sign_in_unknown"] = "La connexion a échoué, veuillez vérifier votre connexion Internet et réessayer. Si l'erreur se reproduit, assurez-vous que vos informations d'identification sont correctes.";
language_fr["error_sign_up_mail_exists"] = "Un compte est déjà associé à ce mail.";
language_fr["error_sign_up_no_internet"] = "Aucune connexion internet. Veuillez activer vos données mobile ou vous connecter à un réseau Wifi et réessayer.";
language_fr["error_sign_up_timeout"] = "La requête n'a pas pu aboutir. Veuillez vérifier votre connexion internet et réessayer.";
language_fr["error_sign_up_unknown"] = "Une erreur est survenue lors de la création de compte.";
language_fr["expired"] = "expiré";
language_fr["face_id_authenticate_password_get"] = "Authentifiez-vous pour récupérer votre mot de passe";
language_fr["face_id_authenticate_password_set"] = "Authentifiez-vous pour sauvegarder votre mot de passe";
language_fr["fill"] = "Remplir";
language_fr["filt_light_force_help"] = "La filtration se mettra en marche pendant toute la durée de l'éclairage.";
language_fr["filt_meteor_intensity_error"] = "Défaut d'intensité détecté - Éteindre la filtration pour annuler le défaut";
language_fr["filtration_forced_by_frost_free_mode"] = "Forcée par le mode hors gel";
language_fr["filtration_forced_by_user"] = "Forcée par l'utilisateur";
language_fr["filtration_forced_off_by_box_help"] = "Pour allumer, veuillez vérifier que l'interrupteur du coffret tild soit en position \"géré par le tild\".\nSi vous disposez d'un régulateur de niveau, ce comportement peut être normal.";
language_fr["filtration_forced_on_by_box_help"] = "Pour éteindre, veuillez vérifier que l'interrupteur du coffret tild soit en position \"géré par le tild\".\nSi vous disposez d'un régulateur de niveau, ce comportement peut être normal.";
language_fr["filtration_m_fragment_help_over_under_current"] = "Défaut d'intensité détecté : la filtration doit être éteinte pour corriger le problème.";
language_fr["filtration_mode"] = "Mode de filtration";
language_fr["filtration_paused"] = "Filtration en pause";
language_fr["filtration_start_forced_march"] = "Passer en marche continue";
language_fr["filtration_stop_forced_march"] = "Désactiver la marche continue";
language_fr["flow_calibration"] = "Calibration débit";
language_fr["flow_current"] = "Débit actuel";
language_fr["flow_desired"] = "Débit désiré";
language_fr["flow_measurement_history"] = "Historique de valeurs de débit";
language_fr["flow_not_determined"] = "État filtration inconnu";
language_fr["flow_not_working"] = "Aucun débit détecté";
language_fr["flow_probe_calibration_error_dialog_message"] = "Erreur de calibration, vérifiez votre sonde de débit.";
language_fr["flow_sensor_calibration"] = "Calibration sonde débit";
language_fr["flow_switch_diverging"] = "Nous avons détecté que certains flux sont dans des états différents.\nCela peut simplement être dû à la présence d'un bypass dans votre installation, mais peut aussi provenir d'un détecteur de flux endommagé ou d'un flux d'eau trop faible.";
language_fr["flow_view_flow_off"] = "Filtration à l'arrêt";
language_fr["flow_working"] = "Filtration en marche";
language_fr["force_filtration_during_aux"] = "Forcer la filtration";
language_fr["force_filtration_during_aux_help"] = "La filtration se mettra en marche automatiquement lorsque l'auxiliaire démarrera.";
language_fr["force_filtration_during_lighting"] = "Forcer la filtration lors de l'éclairage";
language_fr["force_filtration_during_pac_help"] = "La filtration se mettra en marche automatiquement lorsque la pompe à chaleur démarrera.";
language_fr["forced_by_aux"] = "Forcée par l'auxiliaire";
language_fr["forced_by_box"] = "Forcée par le coffret";
language_fr["forced_by_lighting"] = "Forcée par l'éclairage";
language_fr["forced_by_pac"] = "Forcée par la pompe à chaleur";
language_fr["forced_march"] = "Marche continue";
language_fr["forced_off_by_aux_help"] = "Pour éteindre, veuillez éteindre l'auxiliaire ou décocher l'option « Forcer la filtration » de l'auxiliaire.";
language_fr["forced_off_by_frost_protection_help"] = "La filtration a été mise en marche afin de lutter contre le gel.";
language_fr["forced_off_by_light_help"] = "Pour éteindre, veuillez éteindre la lumière ou décocher l'option « Forcer la filtration lors de l'éclairage ».";
language_fr["forced_off_by_pac_help"] = "Pour éteindre, veuillez éteindre la pompe à chaleur ou décocher l'option « Forcer la filtration » de celle-ci.";
language_fr["forced_off_by_water_renewal_help"] = "La filtration s'est mise en marche afin d'avoir des mesures de température à jour, elle s'arrêtera automatiquement après quelques minutes.";
language_fr["forced_on_by_box_help"] = "Pour éteindre, veuillez vérifier que le coffret tild soit en position 1.@IMAGE(message_coffret_tild,26,26,8,0,10)\nSi vous disposez d'un régulateur de niveau, ce comportement peut être normal.";
language_fr["forgotten_password"] = "Mot de passe oublié ?";
language_fr["forgotten_password_f2_hint_code_required"] = "Le code de réinitialisation est requis";
language_fr["forgotten_password_f2_hint_password_strength"] = "Entrez le nouveau mot de passe de votre compte.\nLe nouveau mot de passe devra respecter ces règles : au moins 8 caractères avec majuscule(s) et minuscule(s), un chiffre et un caractère spécial";
language_fr["forgotten_password_success_dialog_message"] = "Le mot de passe a été mis à jour.";
language_fr["form_error_character_limit15"] = "Le nombre de caractères ne doit pas dépasser 15";
language_fr["form_error_character_limit17"] = "Le nombre de caractères ne doit pas dépasser 17.";
language_fr["form_error_character_limit2"] = "Le nombre de caractères doit être supérieur ou égal à 2.";
language_fr["form_error_character_limit3"] = "Le nombre de caractères doit être supérieur ou égal à 3.";
language_fr["form_error_character_limit43"] = "Le nombre de caractères ne doit pas dépasser 43.";
language_fr["form_error_empty"] = "Le champ est vide";
language_fr["form_error_empty_fields"] = "Il est nécessaire de remplir tous les champs pour sauvegarder votre piscine";
language_fr["form_error_invalid_email"] = "Adresse e-mail invalide";
language_fr["form_error_password_length"] = "Doit faire plus de 8 caractères";
language_fr["form_error_password_lower_case"] = "Nécessite au moins une minuscule";
language_fr["form_error_password_number"] = "Nécessite au moins un chiffre";
language_fr["form_error_password_special_char"] = "Nécessite au moins un caractère spécial";
language_fr["form_error_passwords_dont_match"] = "Les mots de passe sont différents";
language_fr["form_invalid_field"] = "Certains champs sont vides ou incorrects";
language_fr["form_shared_pool_limit_date_placeholder"] = "Date de fin du partage";
language_fr["form_shared_pool_pro_mail_placeholder"] = "Adresse e-mail du professionnel";
language_fr["format_weight_hour"] = "g/h";
language_fr["format_weight_hour_us"] = "oz/h";
language_fr["frequency"] = "Fréquence";
language_fr["friday_short"] = "Ven";
language_fr["frost_protection_help"] = "Le mode hors gel permet d'activer la filtration automatiquement si la température de l'eau devient trop basse, afin d'éviter que l'eau ne gèle.";
language_fr["frost_protection_home_help"] = "Mode hors gel activé, votre filtration sera lancée automatiquement afin d'éviter le gel de l'eau dans la canalisation";
language_fr["ft3h"] = "ft³/heure";
language_fr["ft3h_short"] = "ft³/h";
language_fr["general_connecting_to_aws"] = "Récupération des données";
language_fr["general_copied_to_clipboard"] = "Copié dans le presse-papiers !";
language_fr["general_do_update"] = "Télécharger & installer la mise à jour";
language_fr["general_duration_choc_electrolyse_unknown"] = "Le mode choc est actif depuis -- heure";
language_fr["general_duration_thermoregulation_unknown"] = "Durée de production thermorégulée : --h";
language_fr["general_forgotten_password"] = "Mot de passe oublié ?";
language_fr["general_iunderstand"] = "J'ai compris";
language_fr["general_postpone_update"] = "Mettre à jour plus tard";
language_fr["general_select_device"] = "Sélection de l'appareil";
language_fr["general_select_device_description"] = "Nous avons trouvé plusieurs appareils liés à votre compte, veuillez choisir celui sur lequel vous souhaitez vous connecter";
language_fr["general_unknown_device"] = "Appareil sans nom";
language_fr["general_unknown_error"] = "Une erreur inconnue est arrivée. Si cela se reproduit, vous pourriez essayer de fermer et relancer l'application.";
language_fr["general_update"] = "Mise à jour";
language_fr["general_update_available"] = "Mise à jour disponible";
language_fr["get_closer_to_devices"] = "Rapprochez-vous de votre installation";
language_fr["gpm"] = "US Gal/min";
language_fr["gpm_short"] = "gpm";
language_fr["great"] = "Super !";
language_fr["green"] = "Vert";
language_fr["has_min_temp_setpoint"] = "Activer consigne de température min.";
language_fr["has_min_temp_setpoint_help"] = "Permet d'activer ou non le choix d'une température minimum en dessous de laquelle l'auxiliaire de démarrera pas.";
language_fr["has_orpsetpoint"] = "Activer consigne d'ORP";
language_fr["has_orpsetpoint_help"] = "Permet d'activer ou non le choix d'une valeur d'ORP au dessus de laquelle l'électrolyseur ne démarrera pas.\nCette option est désactivé si vous n'avez pas d'appareil Vigipool qui enregistre des mesures d'ORP.";
language_fr["heat_pump"] = "Pompe à chaleur";
language_fr["help_measure_unknown"] = "Les mesures ne s'afficheront que quelques minutes après la mise en route de la filtration.";
language_fr["help_priority_ph"] = "La régulation ORP sera active uniquement si le pH est correct";
language_fr["history"] = "Historique";
language_fr["history_impossible_to_display"] = "Impossible d'afficher le graphique";
language_fr["history_no_data"] = "Aucune donnée disponible";
language_fr["home_cover_on_hint"] = "Cela peut affecter le fonctionnement de certains appareils.";
language_fr["home_dialog_factory_reset_message"] = "Êtes-vous sûrs de vouloir réinitialiser votre appareil \"%1$s\" aux réglages usine ?";
language_fr["home_dialog_restart_message"] = "Êtes-vous sûrs de vouloir redémarrer votre appareil \"%1$s\" ?";
language_fr["home_latest_filtration"] = "Dernière filtration";
language_fr["home_no_auxiliary"] = "Aucun auxiliaire détecté";
language_fr["home_no_program"] = "Aucune programmation";
language_fr["home_ph_consigne"] = "Consigne : %1$s";
language_fr["home_volume_injected_24_hours"] = "Volume injecté 24H";
language_fr["hour"] = "Heure";
language_fr["impossible_demo_mode"] = "Impossible de faire ça en mode Démo";
language_fr["impossible_to_use_spotify"] = "Impossible d'utiliser Spotify";
language_fr["impossible_to_use_spotify_description"] = "Il est nécessaire que l'application Spotify soit installée sur votre téléphone.";
language_fr["info_winter_mode"] = "Votre appareil est en mode hivernage";
language_fr["information_setup_wifi"] = "Pour modifier les paramètres wifi, vous devez vous connecter en Bluetooth à votre appareil";
language_fr["informations"] = "Informations";
language_fr["injection_mode"] = "Mode d'injection";
language_fr["input"] = "Entrée";
language_fr["instant_consumption"] = "Consommation instantanée";
language_fr["instant_current"] = "Courant instantané";
language_fr["internal_notification_information_new_device"] = "Un nouvel appareil a été détecté";
language_fr["invalid_format"] = "Format invalide";
language_fr["ios_bonding_help_rssi"] = "Approchez simplement votre smartphone de votre {{STRING}} pour les appairer.";
language_fr["ios_bonding_help_rssi_and_btn"] = "Approchez simplement votre smartphone ou appuyez une fois sur le bouton de votre {{STRING}} pour les appairer.";
language_fr["ios_bonding_message"] = "Veuillez presser une fois sur le bouton de votre {{STRING}} pour l'appairer à votre téléphone.";
language_fr["ios_error_ble_lost_connection"] = "Nous avons perdu la connexion avec l'appareil. La cause la plus probable est que vous vous êtes trop éloignés de votre appareil {{APP_NAME}}.";
language_fr["ios_fill_price_kwh_format"] = "Renseignez le prix du kWh en {{STRING}}.";
language_fr["ios_format_alert_timezone_not_set"] = "Votre appareil {{STRING}} n'a pas de fuseau horaire, ce qui est indispensable pour pouvoir le programmer.\n\nVeuillez vous reconnecter en Bluetooth pour mettre le fuseau horaire à jour automatiquement.";
language_fr["ios_format_amplify_add_device"] = "Ajouter cet appareil ({{STRING}})";
language_fr["ios_format_bac_empty_error_notification"] = "Bac produit {{STRING}} vide - Pompe stoppée";
language_fr["ios_format_common_temperature"] = "%d°C";
language_fr["ios_format_common_temperature_us"] = "%d°F";
language_fr["ios_format_confirm_timezone"] = "Confirmer le fuseau horaire ({{STRING}})";
language_fr["ios_format_connection_connected"] = "Connecté {{STRING}}";
language_fr["ios_format_connection_destination_device"] = "à {{STRING}}";
language_fr["ios_format_connection_looking_for_device"] = "Recherche du {{STRING}}";
language_fr["ios_format_connection_not_connected"] = "Non connecté {{STRING}}";
language_fr["ios_format_crepuscular_mode_help"] = "Démarre l'éclairage lorsque le soleil se couche ({{STRING}}h{{STRING}} aujourd'hui)";
language_fr["ios_format_electrolyse_choc_duration"] = "Le mode Choc est actif depuis %dh%02d";
language_fr["ios_format_error_cell_error_notification"] = "La cellule d'électrolyse ({{STRING}}) ne produit plus - contactez votre installateur.";
language_fr["ios_format_error_modbus_message"] = "Une erreur de communication (RS485) est detectée sur votre {{STRING}} - code_E9";
language_fr["ios_format_firmware_version_too_low_winter_mode"] = "Le mode hivernage est désactivé dans la version {{STRING}}.\n\nConnectez votre installation Vigipool à internet pour bénéficier des dernières mises à jour et activer cette fonctionnalité.";
language_fr["ios_format_general_duration_thermoregulation"] = "Durée de production thermorégulée : %dh%02d";
language_fr["ios_format_last_measure"] = "Dernière mesure {{STRING}}";
language_fr["ios_format_meteor_alarm_low_flow"] = "{{STRING}} : Sous-intensité détectée - Vérifiez que la pompe ne fonctionne pas à vide.";
language_fr["ios_format_meteor_alarm_over_flow"] = "{{STRING}} : Sur-intensité détectée - Vérifiez que la pompe ne soit pas défectueuse ou bloquée.";
language_fr["ios_format_meteor_alarm_warning_gel"] = "{{STRING}} : La température de l'eau est proche de 0°C, la filtration s'activera pour éviter le risque de gel.";
language_fr["ios_format_meteor_alarm_water_level_low"] = "{{STRING}} : Vérifiez Le niveau d'eau de la piscine.";
language_fr["ios_format_missing_filt_error_notification"] = "La durée de filtration actuelle est trop courte pour permettre à l'électrolyseur ({{STRING}}) de produire le temps programmé.";
language_fr["ios_format_no_value_orperror_notification"] = "Votre {{STRING}} ne reçoit plus de mesure d'Orp";
language_fr["ios_format_no_value_pherror_notification"] = "Votre {{STRING}} ne reçoit plus de mesure de pH";
language_fr["ios_format_not_enough_salt_error_notification"] = "Production faible - Reportez-vous à la notice de {{STRING}}.";
language_fr["ios_format_notification_device_disconnected"] = "La connexion à votre {{STRING}} {{STRING}} a été perdue.";
language_fr["ios_format_overdose_injection_notification"] = "Le volume maximum de produit de régulation {{STRING}} injecté en 24h a été atteint";
language_fr["ios_format_overheat_elec_error_notification"] = "Température interne de l'électrolyseur ({{STRING}}) trop élevée.";
language_fr["ios_format_pairing_to"] = "Connexion à {{STRING}}";
language_fr["ios_format_reconnect_to_device_message"] = "Souhaitez-vous vous connecter à {{STRING}} ({{STRING}}) ?";
language_fr["ios_format_schedule_hour"] = "%d heure";
language_fr["ios_format_schedule_hours"] = "%d heures";
language_fr["ios_format_schedule_minute"] = "%02d min";
language_fr["ios_format_schedule_on_time_aux"] = "%@/jour";
language_fr["ios_format_schedule_on_time_booster"] = "%@/jour";
language_fr["ios_format_schedule_on_time_filtration"] = "%@/jour";
language_fr["ios_format_schedule_on_time_heater"] = "max %@/jour";
language_fr["ios_format_schedule_on_time_light"] = "%@/jour";
language_fr["ios_format_schedule_on_time_treatment"] = "max %@/jour";
language_fr["ios_format_schedule_time"] = "%dh%02d";
language_fr["ios_format_settings_button_date_sensor"] = "Date du dernier remplacement de la sonde : {{STRING}}";
language_fr["ios_format_sunrise_mode_help"] = "Stop l'éclairage lorsque le soleil se lève ({{STRING}}h{{STRING}}).";
language_fr["ios_format_temp_too_high_error_notification"] = "Erreur de mesure de Température haute du {{STRING}}.";
language_fr["ios_format_temp_too_low_error_notification"] = "Erreur de mesure de Température basse du {{STRING}}.";
language_fr["ios_format_too_much_salt_error_notification"] = "Taux de sel trop élevé. Arrêt de l'électrolyseur ({{STRING}}).";
language_fr["ios_format_update_description_mandatory"] = "{{APP_NAME}} {{STRING}} est disponible.\nMaintenir votre application à jour vous donne accès aux dernières fonctionnalités et corrections de bugs.\n\nÉtant donné que la mise à jour disponible est nécessaire au bon fonctionnement de l'application, vous devez la mettre à jour afin de pouvoir l'utiliser.";
language_fr["ios_format_update_description_not_mandatory"] = "{{APP_NAME}} {{STRING}} est disponible.\nMaintenir votre application à jour vous donne accès aux dernières fonctionnalités et corrections de bugs.\n\nVous pouvez continuer à utiliser cette version pour le moment, mais nous vous conseillons de faire la mise à jour afin d'avoir les dernières fonctionnalités et corrections.";
language_fr["ios_format_update_failed_alert_message"] = "Une erreur est survenue durant la mise à jour de {{STRING}}, veuillez réessayer plus tard.";
language_fr["ios_format_update_firmware_ask_state_title"] = "Une mise à jour est disponible pour {{STRING}} ({{STRING}}).";
language_fr["ios_format_update_firmware_progress_complement_description"] = "Une fois le téléchargement terminé, la mise à jour s'installera et votre {{STRING}} va redémarrer.";
language_fr["ios_format_update_firmware_progress_complement_description_ble_server"] = "Une fois le téléchargement terminé, la mise à jour s'installera et votre {{STRING}} va redémarrer, ce qui déconnectera l'application.";
language_fr["ios_format_update_succeed_alert_message"] = "La mise à jour de {{STRING}} a été téléchargée et installée avec succès !";
language_fr["ios_format_water_orp"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Mesure actuelle ORP : {{STRING}} mV";
language_fr["ios_format_water_temperature"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Température de l'eau : {{STRING}}";
language_fr["ios_last_format"] = "Dernier le {{STRING}}";
language_fr["ios_link_device_message"] = "Souhaitez-vous associer l'appareil {{STRING}} \"{{STRING}}\" à votre compte Vigipool ?";
language_fr["ios_link_device_title"] = "Associer l'appareil";
language_fr["ios_new_device_message"] = "Vous venez d'ajouter un nouveau {{STRING}} à votre système Vigipool.\n\nIl faut désormais le paramétrer.";
language_fr["ios_new_device_title"] = "Nouveau {{STRING}} détecté";
language_fr["ios_output_nb_format"] = "Sortie %d";
language_fr["ios_price_in_currency_format"] = "Prix en {{STRING}}";
language_fr["ios_vspump_speed_details_format"] = "Pompe %d vitesses";
language_fr["ios_warning_pairing_iosble_off"] = "Le Bluetooth n'est pas disponible. Veuillez vérifier que le Bluetooth est activé sur votre téléphone, et que l'application {{APP_NAME}} a l'autorisation d'utiliser le Bluetooth (modifiable dans l'application Réglages).";
language_fr["ios_warning_pairing_no_results_ble"] = "Aucun appareil {{APP_NAME}} n'a été trouvé à proximité. Veuillez vérifier que celui-ci est bien en marche et que vous n'êtes pas trop éloigné.";
language_fr["ios_warning_pairing_timeout_ble"] = "Le délai de connexion est dépassé, veuillez réessayer. Si l'erreur se répète, rapprochez-vous de votre appareil {{APP_NAME}}.";
language_fr["ios_zone_nb_format"] = "Zone %d";
language_fr["it_is_done"] = "C'est fait";
language_fr["just_now"] = "à l'instant";
language_fr["l"] = "L";
language_fr["last_backwash"] = "Dernier contre-lavage";
language_fr["last_backwash_fill_date"] = "Vous avez effectué un contre-lavage manuellement ?\nRenseignez la date ci-dessous afin d’avoir un rappel";
language_fr["last_measure_now"] = "Dernière mesure à l'instant";
language_fr["later"] = "Plus tard";
language_fr["latest_measurement_ago"] = "Dernière mesure %1$s";
language_fr["latest_measurement_not_co"] = "Appareil de mesure déconnecté";
language_fr["latest_probe_replacement"] = "Dernier remplacement de la sonde : %1$s";
language_fr["leave"] = "Quitter";
language_fr["light_banner_cover_on_description"] = "La lumière ne peut s'allumer lorsque le rideau de la piscine est fermé.";
language_fr["light_banner_cover_on_title"] = "Ouvrez le rideau";
language_fr["light_banner_register_color_already_registered_description"] = "Cette couleur a déjà été enregistrée.";
language_fr["light_banner_register_color_light_off_description"] = "Veuillez allumer la lumière avant de sauvegarder sa couleur.";
language_fr["light_banner_timer_on_light_off_description"] = "Veuillez allumer la lumière avant de programmer son extinction.";
language_fr["light_color_cyan"] = "Cyan";
language_fr["light_color_lagoon"] = "Lagon";
language_fr["light_color_magenta"] = "Magenta";
language_fr["light_color_orange"] = "Orange";
language_fr["light_color_pink"] = "Rose";
language_fr["light_color_purple"] = "Violet";
language_fr["light_color_white"] = "Froid";
language_fr["light_color_white_warm"] = "Chaud";
language_fr["light_colors_title"] = "Couleurs";
language_fr["light_command_favorite_color"] = "Couleur favorite";
language_fr["light_crepuscular_mode"] = "Mode crépusculaire";
language_fr["light_crepuscular_short"] = "Crép.";
language_fr["light_sequence_gradient"] = "Dégradé";
language_fr["light_sequence_horizon"] = "Horizon";
language_fr["light_sequence_magic"] = "Magique";
language_fr["light_sequence_parade"] = "Défilé";
language_fr["light_sequence_rainbow"] = "Arc-en-ciel";
language_fr["light_sequence_random"] = "Hasard";
language_fr["light_sequence_speed_fast"] = "Rapide";
language_fr["light_sequence_speed_normal"] = "Normal";
language_fr["light_sequence_speed_slow"] = "Lent";
language_fr["light_sequence_techno"] = "Techno";
language_fr["light_sequence_title"] = "Séquence";
language_fr["light_sequences_title"] = "Séquences";
language_fr["light_sunrise_mode"] = "Mode lever du soleil";
language_fr["light_sunrise_short"] = "Lever sol.";
language_fr["lighting"] = "Éclairage";
language_fr["lighting_color_fav"] = "Favorite";
language_fr["lighting_mode"] = "Mode d'éclairage";
language_fr["lighting_overlay_couv_error_message"] = "La lumière ne peut pas s'allumer lorsque le rideau de la piscine est fermé.";
language_fr["lighting_overlay_paused"] = "Éclairage en pause";
language_fr["lighting_overlay_switched_on"] = "Allumé";
language_fr["lighting_overlay_timer_info_title"] = "Allumez la lumière";
language_fr["lighting_settings_dialog_forced_filtration_hint"] = "L'appareil de filtration se mettra en marche à chaque fois que la lumière sera allumée et pendant toute la durée de l'éclairage.";
language_fr["lighting_settings_dialog_forced_filtration_text"] = "Forcer la filtration pendant l'éclairage.";
language_fr["link_device_btn_link"] = "Associer";
language_fr["link_device_message"] = "Souhaitez-vous associer l'appareil %1$s %2$s à votre compte Vigipool ?";
language_fr["link_device_title"] = "Associer l'appareil";
language_fr["link_device_to_account"] = "Lier cet appareil à votre compte ?";
language_fr["loader_connecting_attempt"] = "Connexion en cours";
language_fr["loading_error_dialog_message_device_not_found"] = "L'appareil n'a pas été trouvé dans votre compte Vigipool.";
language_fr["loading_error_dialog_message_no_devices_found"] = "Aucun appareil n'a été trouvé dans votre compte Vigipool.";
language_fr["loading_failed"] = "Chargement échoué, veuillez vérifier votre connexion internet";
language_fr["loading_page"] = "Chargement de la page";
language_fr["location_permission_rationale_message"] = "La permission de Localisation est requise pour utiliser cette fonctionnalité.";
language_fr["location_permission_rationale_title"] = "Autoriser la localisation";
language_fr["log_out"] = "Déconnexion";
language_fr["login"] = "Connexion";
language_fr["login_failed"] = "Échec de la connexion";
language_fr["logout_progress_dialog_title"] = "Déconnexion";
language_fr["m3h"] = "m³/heure";
language_fr["m3h_short"] = "m³/h";
language_fr["measurement_history_ble_hint"] = "L'historique des valeurs est disponible seulement en utilisant le mode de connexion à distance :\n\n- votre appareil Vigipool doit être connecté au Wifi\n- vous devez créer et confirmer votre compte Vigipool\n- vous devez vous connecter \"À distance\"";
language_fr["measurement_units_debit_unit"] = "Unité de débit";
language_fr["measurement_units_debit_unit_cubic_feet_per_hour"] = "Pied cube par heure (ft³/h)";
language_fr["measurement_units_debit_unit_cubic_meter_per_hour"] = "Mètre cube par heure (m³/h)";
language_fr["measurement_units_debit_unit_gallon_per_minute"] = "Gallon US par minute (gpm)";
language_fr["measurement_units_measurement_system"] = "Système de mesure";
language_fr["measurement_units_pressure_unit"] = "Unité de pression";
language_fr["measurement_units_pressure_unit_bar"] = "Bar (bar)";
language_fr["measurement_units_pressure_unit_psi"] = "PSI (psi)";
language_fr["measurement_units_temperature_celcius"] = "Celsius (°C)";
language_fr["measurement_units_temperature_fahrenheit"] = "Fahrenheit (°F)";
language_fr["measurement_units_temperature_unit"] = "Unité de température";
language_fr["merge_lighting_zone"] = "Fusionner les zones d'éclairages";
language_fr["merge_lighting_zone_help"] = "Fusionner les zones permet de propager les commandes envoyées à un Wix vers tous les autres de votre installation.\nCela permet donc de contrôler plusieurs Wix simplement lorsque vous ne souhaitez pas les différencier.";
language_fr["meteor_mode_auto"] = "Auto";
language_fr["meteor_mode_help_aux"] = "On: l'auxiliaire est en marche continue, 24h/24.\n\nProg: l'auxiliaire s'allumera selon les réglages de la plage horaire (P1).";
language_fr["meteor_mode_help_aux_heater"] = "On: le chauffage est en marche continue, 24h/24, jusqu'à ce que la température de l'eau atteigne la consigne. Il fonctionnera ensuite juste assez pour maintenir la température.\n\nProg: le chauffage fonctionnera pendant la plage horaire (P1) programmée. Si la température de l'eau atteint la consigne, il fonctionnera juste assez pour maintenir la température jusqu'à la fin de la plage horaire.";
language_fr["meteor_mode_help_aux_orp_treatment"] = "On :  le traitement est en marche continue 24h/24.\n\nProg :  le traitement s'allumera selon les réglages de la plage horaire (P1).\n\nAuto :  le traitement est régulé avec une consigne ORP, et restera allumé tant que la mesure d'ORP n'a pas atteint la consigne. Une fois la consigne atteinte, l'ORP sera ensuite maintenu à sa valeur.";
language_fr["meteor_mode_help_aux_treatment"] = "On: le traitement est en marche continue, 24h/24.\n\nProg: le traitement s'allumera selon les réglages de la plage horaire (P1).\n\nAuto: le traitement s'allumera selon les réglages de la plage horaire (P1), mais sa durée sera modulée en fonction de la température de l'eau.";
language_fr["meteor_mode_help_aux_treatment_orp"] = "On: le traitement est en marche continue, 24h/24.\n\nProg: le traitement s'allumera selon les réglages de la plage horaire (P1).\n\nAuto: le traitement est régulé avec une consigne ORP, et restera allumé tant que les mesures d'ORP n'ont pas atteint la consigne. Une fois atteinte, l'ORP sera ensuite maintenu à sa valeur.";
language_fr["meteor_mode_help_filt"] = "On: la filtration est en marche continue, 24h/24.\n\nProg: la filtration s'allumera selon les réglages des 3 plages horaires (P1 à P3).\n\nAuto: la filtration s'allumera à l'heure de démarrage renseignée pour la plage P1, pour une durée automatiquement calculée en fonction de la température de l'eau.";
language_fr["meteor_mode_help_light"] = "On: l'éclairage est allumé, 24h/24.\n\nProg: l'éclairage sera enclenché selon le réglage de la plage horaire.\n\nAuto: l'éclairage sera enclenché au crépuscule pour une durée de 4 heures.";
language_fr["meteor_mode_prog"] = "Prog";
language_fr["mic_permission_message"] = "Vigipool a besoin d'avoir accès au microphone pour le mode musique.";
language_fr["mic_permission_title"] = "Autoriser le microphone";
language_fr["minute"] = "minute";
language_fr["minutes"] = "minutes";
language_fr["mode_music"] = "Mode musique";
language_fr["mode_music_choice_audio_micro_device"] = "Microphone fourni avec votre appareil Vigipool";
language_fr["mode_music_choice_audio_micro_phone"] = "Microphone de votre téléphone";
language_fr["mode_music_choose_audio"] = "Quel type d'entrée audio voulez-vous utiliser ?";
language_fr["mode_music_choose_zone"] = "Sur quelle(s) zone(s) souhaitez-vous activer le mode musique ?";
language_fr["mode_music_place_micro_next_to_sound_title"] = "Branchez le micro à l'appareil Vigipool. Puis placez votre micro à côté de votre enceinte ou de tout autre source de son.";
language_fr["mode_music_place_phone_next_to_sound_title"] = "Placez votre téléphone à côté de votre enceinte ou de tout autre source de son";
language_fr["mode_music_welcome_modal_text"] = "Ce mode vous permet synchroniser vos projecteurs au rythme de la musique.\nPour des moments inoubliables !";
language_fr["mode_music_welcome_modal_title"] = "Bienvenue dans le mode musique !";
language_fr["mode_pac_silence"] = "Silence";
language_fr["mode_pac_smart"] = "Smart";
language_fr["mode_pac_turbo"] = "Turbo";
language_fr["modify_duration"] = "Modifier la durée";
language_fr["modify_settings"] = "Modifier les paramètres";
language_fr["monday_short"] = "Lun";
language_fr["month"] = "Mois";
language_fr["music_mode_input_app"] = "Association avec une application de musique";
language_fr["music_mode_no_permission_description"] = "Vous avez refusé l'accès au microphone du téléphone mais celui-ci est nécessaire afin d'utiliser le mode musique.\n\nSouhaitez-vous ouvrir les réglages de l'application afin de modifier ce paramètre ?";
language_fr["music_mode_no_permission_title"] = "Permission micro refusée";
language_fr["music_mode_unavailable"] = "Mode musique indisponible";
language_fr["music_mode_welcome_hint"] = "Ce mode vous permet de synchroniser vos projecteurs au rythme de la musique.\nPour des moments inoubliables !";
language_fr["music_mode_welcome_start"] = "Et c'est parti !";
language_fr["music_mode_zone_one"] = "Zone 1";
language_fr["music_mode_zone_three"] = "Zone 3";
language_fr["music_mode_zone_two"] = "Zone 2";
language_fr["my_account"] = "Mon compte";
language_fr["my_account_aws_hello_user"] = "Bonjour %1$s";
language_fr["my_account_signup_dialog_signup_success_bt_mailbox"] = "Ouvrez votre boîte mail pour vérifier votre adresse";
language_fr["my_account_signup_dialog_signup_success_message"] = "Vous allez bientôt recevoir un e-mail à votre addresse %1$s pour vérifier votre compte. une fois activé, vous serez en mesure de vous connecter à votre compte Vigipool.";
language_fr["my_account_signup_error_username_already_exists"] = "Cette adresse e-mail est déjà associée à un compte Vigipool.";
language_fr["my_contact_address_dialog_title"] = "Sélectionnez votre adresse";
language_fr["my_contact_changes_dialog_bt_discard"] = "Annuler";
language_fr["my_contact_changes_dialog_message"] = "Vous avez des modifications en cours.\n\nVoulez-vous les Enregistrer ou les Annuler ?";
language_fr["my_contact_dialog_confirm_delete_message"] = "Voulez-vous vraiment supprimer vos coordonnées ?\n\nVeuillez noter que cela supprimera également vos partages.";
language_fr["my_pool_dialog_confirm_delete_message"] = "Voulez-vous vraiment supprimer votre piscine ?\n\nVeuillez noter que cela supprimera également vos coordonnées et vos partages.";
language_fr["my_vp_devices_device_connection_state"] = "Connexion à %1$s";
language_fr["my_vp_devices_settings_auxiliary_type_tooltip"] = "Attention, les programmes de l'auxiliaire seront désactivés au changement de type d'auxilaire (les plages horaires seront néanmoins conservées).";
language_fr["my_vp_devices_settings_frost_free_mode_tooltip"] = "Le mode hors gel permet d'activer la filtration automatiquement si la température de l'eau devient trop basse, afin d'éviter que l'eau ne gèle.";
language_fr["my_vp_devices_settings_projector_type"] = "Projecteur";
language_fr["my_vp_devices_settings_projector_type_tooltip"] = "Attention, les programmes de l'éclairage seront réinitialisés au changement de type de projecteur.";
language_fr["my_vp_devices_wifi_connection_state_connection_error"] = "Erreur de connexion";
language_fr["my_vp_devices_wifi_connection_state_no_wifi"] = "Non connecté au Wifi";
language_fr["my_vp_devices_wifi_connection_state_wifi_no_internet"] = "Connecté au Wifi, pas d'internet";
language_fr["my_vp_devices_wifi_connection_state_wifi_with_internet"] = "Connecté au Wifi et à internet";
language_fr["my_vp_devices_winter_mode_dialog_message"] = "Êtes-vous sûr de vouloir mettre votre appareil %1$s \"%2$s\" en Mode Hivernage ?";
language_fr["name"] = "Nom";
language_fr["navigation_drawer_log_in"] = "Connexion / Inscription";
language_fr["navigation_drawer_my_devices"] = "Mes appareils";
language_fr["navigation_drawer_probes_and_calibration"] = "Sondes &amp; Calibration";
language_fr["never"] = "Jamais";
language_fr["new_device_message"] = "Vous venez d'ajouter un nouveau %1$s à votre système Vigipool.\n\nIl faut désormais le paramétrer.";
language_fr["new_device_title"] = "Nouveau %1$s détecté";
language_fr["next"] = "Suivant";
language_fr["next_color"] = "Couleur suivante";
language_fr["no_data"] = "Aucune donnée";
language_fr["no_measurement_tooltip"] = "Les mesures s'afficheront quelques minutes après la mise en route de la filtration.";
language_fr["no_sensor_data"] = "Pour obtenir les historiques de vos mesures, veuillez connecter votre appareil Vigipool à internet et le lier à votre espace Vigipool.";
language_fr["no_temp_disconnected_help"] = "Les mesures de température ne sont pas affichées car votre appareil n'est pas connecté à internet";
language_fr["no_temp_sensor"] = "Aucune sonde de température détectée";
language_fr["no_temp_sensor_tild"] = "Votre tild n'a pas de sonde de température - des fonctionnalités sont désactivées (hors-gel, consigne chauffage de l'auxiliaire, consigne température min. de traitement, etc.)";
language_fr["no_temp_value_help"] = "Les mesures s'afficheront quelques minutes après le demarrage de la filtration";
language_fr["not_connected"] = "Non connecté";
language_fr["notification_awsconnected"] = "Votre appareil Vigipool est de nouveau connecté au wifi !";
language_fr["notification_awsnot_connected"] = "Votre appareil Vigipool n'est plus connecté au wifi… Vérifiez la connexion réseau ou connectez vous en Bluetooth.";
language_fr["notification_device_disconnected"] = "Attention, votre appareil %1$s n'est pas connecté au Wifi.\nVeuillez vérifier la connexion réseau ou vous connecter en Bluetooth.";
language_fr["notification_device_linked_vigipool"] = "Vous pouvez désormais garder un œil sur votre piscine où que vous soyez en utilisant le mode de connexion \"À distance\".";
language_fr["notification_disconnected"] = "Attention, votre appareil Phileo n'est pas connecté au Wifi.\nVeuillez vérifier la connexion réseau ou vous connecter en Bluetooth.";
language_fr["notification_divergent_flow"] = "Vos détecteurs de flux n'indiquent pas tous le même statut de filtration.";
language_fr["notification_ely_cell_error"] = "La cellule d'électrolyse ne produit plus - contactez votre installateur.";
language_fr["notification_ely_missed_filtration"] = "La durée de filtration actuelle est trop courte pour permettre à l'électrolyse de produire le temps programmé.";
language_fr["notification_ely_over_salt"] = "Taux de sel trop élevé - arrêt de l'électrolyse.";
language_fr["notification_ely_overheat"] = "Température interne de l'électrolyseur trop élevée.";
language_fr["notification_ely_overload"] = "Alimentation électrolyseur en surchage.";
language_fr["notification_ely_temp_too_low"] = "Température minimale de l'eau atteinte. Arrêt de l'électrolyse";
language_fr["notification_ely_under_salt"] = "Production faible - reportez-vous à la notice de %1$s.";
language_fr["notification_empty_tub"] = "Le bac de produit de régulation est vide - La pompe est arrêtée";
language_fr["notification_meteor_current_too_high_alarm"] = "Sur-intensité détectée - Vérifiez que la pompe ne soit pas défectueuse ou bloquée.";
language_fr["notification_meteor_current_too_low_alarm"] = "Sous-intensité détectée - Vérifiez que la pompe ne fonctionne pas à vide.";
language_fr["notification_meteor_frost_warning_alarm"] = "La température de l'eau est proche de 0°C, la filtration s'activera pour éviter le risque de gel.";
language_fr["notification_meteor_water_level_too_low_alarm"] = "Niveau d'eau très bas : vérifiez le niveau d'eau de la piscine.";
language_fr["notification_modbus_error"] = "Une erreur de communication entre l'appareil et le module Antenne a été détectée.";
language_fr["notification_no_orp_value"] = "Aucune mesure d'ORP reçue depuis au moins une heure.";
language_fr["notification_no_ph_value"] = "Aucune mesure de pH reçue depuis au moins une heure.";
language_fr["notification_orp"] = "Des erreurs de mesures ORP ont été observées, veuillez vérifier l'état de votre installation";
language_fr["notification_overdose"] = "Le volume maximum de produit de régulation injecté en 24h a été atteint";
language_fr["notification_overdose_orp"] = "Le volume maximum de produit de régulation ORP injecté en 24h a été atteint";
language_fr["notification_overdose_ph"] = "Le volume maximum de produit de régulation pH injecté en 24h a été atteint";
language_fr["notification_permission_rationale_message"] = "Nous avons besoin de vous envoyer des notifications pour les comportements anormaux de vos appareils Vigipool.";
language_fr["notification_permission_rationale_title"] = "Autoriser les notifications";
language_fr["notification_temp"] = "Des erreurs de mesures de température ont été observées, veuillez vérifier l'état de votre installation";
language_fr["number_picker_dialog_title"] = "Choisissez un nombre";
language_fr["number_too_big"] = "Le nombre est trop grand";
language_fr["on"] = "Allumé";
language_fr["open_settings"] = "Ouvrir l'application Réglages";
language_fr["open_spotify"] = "Ouvrir Spotify";
language_fr["operating_mode"] = "Mode de fonctionnement";
language_fr["options"] = "Options";
language_fr["orp_measurement_orp_history"] = "Historique de valeurs ORP";
language_fr["orp_probe_calibration_error_dialog_message"] = "Erreur de calibration, vérifiez votre sonde ORP.";
language_fr["orpcalibration_measured"] = "ORP Mesuré";
language_fr["orpcalibration_solution"] = "ORP Solution";
language_fr["orpcurrent"] = "ORP actuel";
language_fr["orpdesired"] = "ORP rectifié";
language_fr["orperror_meteor_notification"] = "Erreur de mesure ORP, vérifiez la sonde.";
language_fr["orperror_notification"] = "Des erreurs de mesures ORP sont constatées, l'injection est stoppée, veuillez vérifier votre installation et les sondes.";
language_fr["orphistoric"] = "Historique ORP";
language_fr["orpmeasurement_title"] = "Mesure ORP";
language_fr["orpsetpoint"] = "Consigne d'ORP";
language_fr["orpsetpoint_help"] = "L'électrolyseur s'allumera durant les heures que vous avez indiqué.\nSi la consigne d'ORP est atteinte, l'ORP sera maintenu à sa consigne jusqu'à l'heure de fin du programme.";
language_fr["orpsetpoint_help_detailed"] = "La consigne d'ORP choisie sera aussi appliquée à tous les programmes.\nSi la mesure d'ORP atteint la consigne et que l'électrolyseur est allumé, il fonctionnera juste assez pour maintenir l'ORP a sa valeur de consigne.";
language_fr["orpsetpoint_help_detailed_meteor"] = "L'électrolyseur restera allumé jusqu'à ce que la mesure d'ORP atteint la consigne.\nUne fois la consigne atteinte, il fonctionnera juste assez pour maintenir l'ORP a son niveau.";
language_fr["orptank_almost_empty_notification"] = "Le bac de produit de régulation ORP est presque vide";
language_fr["orptank_empty_notification"] = "Le bac de produit de régulation ORP est vide - La pompe est arrêtée";
language_fr["oups"] = "Oups !";
language_fr["output"] = "Sortie";
language_fr["output_not_plugged"] = "Non branché";
language_fr["oz"] = "oz";
language_fr["paused"] = "en pause";
language_fr["ph_measurement_dialog_aws_login_message"] = "Êtes-vous sûr de vouloir redémarrer l'application en mode de connexion à distance ?";
language_fr["ph_measurement_dialog_aws_login_title"] = "Redémarrer";
language_fr["ph_measurement_orp_history_ble_hint"] = "L'historique des valeurs ORP est disponible seulement en utilisant le mode de connexion à distance :\n\n- votre appareil Vigipool doit être connecté au Wifi\n- vous devez créer et confirmer votre compte Vigipool\n- vous devez vous connecter \"À distance\"";
language_fr["ph_measurement_ph_history"] = "Historique de valeurs du pH";
language_fr["ph_measurement_ph_history_aws_login"] = "Connexion à distance";
language_fr["ph_measurement_ph_history_ble_hint"] = "L'historique des valeurs du pH est disponible seulement en utilisant le mode de connexion à distance :\n\n- votre appareil Vigipool doit être connecté au Wifi\n- vous devez créer et confirmer votre compte Vigipool\n- vous devez vous connecter \"À distance\"";
language_fr["ph_probe_calibration_btn_validation"] = "Valider la calibration";
language_fr["ph_probe_calibration_calibration_manual"] = "Calibration manuelle";
language_fr["ph_probe_calibration_error_dialog_message"] = "Erreur de calibration, vérifiez votre sonde pH.";
language_fr["ph_regulation_injection_max_volume"] = "Volume maximum injecté";
language_fr["ph_regulation_injection_max_volume_value"] = "%1$,.2f %2$s/jour";
language_fr["ph_regulation_injection_max_volume_value_litre"] = "%1$,.2f L/jour";
language_fr["ph_regulation_injection_max_volume_value_oz"] = "%1$d oz/jour";
language_fr["phcalibration_measured"] = "pH Mesuré";
language_fr["phcalibration_solution"] = "pH Solution";
language_fr["phcurrent"] = "pH actuel";
language_fr["phdesired"] = "pH rectifié";
language_fr["pherror_notification"] = "Des erreurs de mesures pH ont été observées, veuillez vérifier l'état de votre installation";
language_fr["phhistoric"] = "Historique pH";
language_fr["phmeasurement_title"] = "Mesure pH";
language_fr["phtank_almost_empty_notification"] = "Le bac de produit de régulation pH est presque vide";
language_fr["phtank_empty_notification"] = "Le bac de produit de régulation pH est vide - La pompe est arrêtée";
language_fr["play_last_song"] = "Jouer la dernière musique";
language_fr["please_wait"] = "Veuillez patienter…";
language_fr["plurals_1_an"] = "%1$d an";
language_fr["plurals_1_heure"] = "%1$d heure";
language_fr["plurals_1_jour"] = "%1$d jour";
language_fr["plurals_1_minute"] = "%1$d minute";
language_fr["plurals_1_mois"] = "%1$d mois";
language_fr["plurals_1_seconde"] = "%1$d seconde";
language_fr["plurals_1_semaine"] = "%1$d semaine";
language_fr["plurals_x_an"] = "%1$d ans";
language_fr["plurals_x_heure"] = "%1$d heures";
language_fr["plurals_x_jour"] = "%1$d jours";
language_fr["plurals_x_minute"] = "%1$d minutes";
language_fr["plurals_x_mois"] = "%1$d mois";
language_fr["plurals_x_seconde"] = "%1$d secondes";
language_fr["plurals_x_semaine"] = "%1$d semaines";
language_fr["pool_description"] = "Renseignez les caracteristiques de votre piscine afin de nous permettre d'optimiser le fonctionnement des appareils installés.";
language_fr["power_factor"] = "Facteur de puissance";
language_fr["prepare_reconnection"] = "Préparation de la reconnexion...";
language_fr["pressure_current"] = "Pression actuelle";
language_fr["pressure_desired"] = "Pression rectifiée";
language_fr["pressure_history"] = "Historique de la pression";
language_fr["pressure_measurement_history"] = "Historique de valeurs de pression";
language_fr["price_kwh"] = "Prix du kWh :";
language_fr["priority_ph"] = "Priorité pH";
language_fr["probe_replacement_dialog_message_orp"] = "Vous êtes sur le point de réinitialiser la date du dernier changement de votre sonde d'ORP.\n\nCe changement n'est pas réversible, êtes vous sûr de vouloir continuer ?";
language_fr["probe_replacement_dialog_message_ph"] = "Vous êtes sur le point de réinitialiser la date du dernier changement de votre sonde de pH.\n\nCe changement n'est pas réversible, êtes vous sûr de vouloir continuer ?";
language_fr["program"] = "Programme";
language_fr["programming_heating_text"] = "max %1$s/jour";
language_fr["programming_lighting_text"] = "%1$s/jour";
language_fr["programming_overlay_average_temperature"] = "Température moyenne : %1$d%2$s";
language_fr["programming_program_1"] = "Programme 1";
language_fr["programming_program_2"] = "Programme 2";
language_fr["prohibited_by_box"] = "Interdite par le coffret";
language_fr["proj_type_microcut"] = "Couleur micro-coupures";
language_fr["proj_type_mono"] = "Monochrome";
language_fr["proj_type_mono_dim"] = "Monochrome dimmable";
language_fr["proj_type_rc"] = "Couleur RC+";
language_fr["proximity_search_ble_powered_off_description"] = "Le bluetooth de votre téléphone est désactivé, et nous en avons besoin afin de vérifier votre proximité avec l'appareil.\n\nVeuillez activer le bluetooth sur votre téléphone avant de réessayer.";
language_fr["proximity_search_ble_unauthorized_description"] = "L'application n'a pas la permission d'utiliser le bluetooth de votre téléphone, et nous en avons besoin afin de vérifier votre proximité avec l'appareil.\n\nVeuillez donner la permission bluetooth à Vigipool depuis l'application Réglages avant de réessayer.";
language_fr["proximity_search_device_not_found_description"] = "Nous avons besoin de vérifier votre proximité à votre installation pour faire un contre-lavage.\nVeuillez vous approcher de votre installation et vérifier que vos appareils sont allumés avant de réessayer.";
language_fr["psi"] = "psi";
language_fr["quit_backwash_description"] = "Attention, pensez a remettre la vanne de la pompe de filtration sur FILTRATION";
language_fr["quit_backwash_title"] = "Etes-vous sûr de vouloir quitter le mode contre-lavage ?";
language_fr["real_time"] = "Temps réel";
language_fr["reconnect_to_device_alert_title"] = "Changer d'appareil ?";
language_fr["reconnection_needed"] = "Reconnexion nécessaire";
language_fr["red"] = "Rouge";
language_fr["regulated"] = "Régulé";
language_fr["regulation_available_tank_volume"] = "Volume produit disponible";
language_fr["regulation_available_tank_volume_help_lock"] = "Vérouillez pour sauvegarder les changements";
language_fr["regulation_available_tank_volume_help_unlock"] = "Déverouillez pour éditer le volume disponible";
language_fr["regulation_filtration_state"] = "État filtration";
language_fr["regulation_injection_state"] = "Injection en cours";
language_fr["regulation_max_injection_volume_adjustment"] = "Volume injection max";
language_fr["regulation_orptitle"] = "Régulation ORP";
language_fr["regulation_phminus"] = "pH-";
language_fr["regulation_phminus_title"] = "Régulation pH-";
language_fr["regulation_phplus"] = "pH+";
language_fr["regulation_phplus_title"] = "Régulation pH+";
language_fr["regulation_phtitle"] = "Régulation pH";
language_fr["regulation_product_type"] = "Type de produit injecté";
language_fr["regulation_volume_product_injected_description"] = "Séquence d'injection : 1 minute sur 3";
language_fr["remember_config"] = "Mémoriser cette configuration";
language_fr["rename"] = "Renommer";
language_fr["repeat_everyday"] = "Répéter tous les jours";
language_fr["resend_verification_code"] = "Renvoyez le code par mail";
language_fr["reset_password_code_placeholder"] = "Code de réinitialisation";
language_fr["reset_password_enter_code"] = "Entrez le code que vous recevrez à votre adresse e-mail (cela peut prendre quelques minutes, veuillez vérifier vos spams si vous ne le trouvez pas)";
language_fr["reset_password_enter_email"] = "Entrez l'adresse e-mail de votre compte pour recevoir un code de confirmation.";
language_fr["reset_password_enter_new_password"] = "Entrez le nouveau mot de passe de votre compte.\nLe nouveau mot de passe devra respecter ces règles : au moins 8 caractères avec majuscule(s) et minuscule(s), un chiffre et un caractère spécial.";
language_fr["reset_password_error"] = "Une erreur est survenue, veuillez vérifier votre connexion internet et réessayez";
language_fr["reset_password_error_code"] = "Impossible de réinitialiser le mot de passe, veuillez vérifier que votre code de réinitialisation a été correctement entré";
language_fr["reset_password_success"] = "Mot de passe mis à jour avec succès !";
language_fr["restart"] = "Redémarrer";
language_fr["row_pool_sharing_timestamp_expire"] = "Expire le %1$s";
language_fr["row_pool_sharing_timestamp_expired"] = "Expiré le %1$s";
language_fr["salt_level"] = "Taux de sel";
language_fr["saturday_short"] = "Sam";
language_fr["saved_colors"] = "Couleurs enregistrées";
language_fr["schedule_orpsetpoint_warning"] = "La consigne d'ORP choisie sera appliquée à tous les programmes.";
language_fr["schedule_program_at"] = "À";
language_fr["schedule_program_at2"] = "Au";
language_fr["schedule_program_during"] = "pendant";
language_fr["schedule_program_from"] = "De";
language_fr["schedule_program_from2"] = "Du";
language_fr["schedule_programto"] = "à";
language_fr["schedule_programto2"] = "au";
language_fr["schedule_temp_setpoint_warning"] = "La température choisie sera appliquée à tous les programmes.";
language_fr["scheduled_operation"] = "Marche programmée";
language_fr["scheduling_timeslot_description"] = "Sélectionnez l'heure de début et de fin du programme";
language_fr["scheduling_timeslot_duration_description"] = "Sélectionnez l'heure de début et la durée du programme";
language_fr["seconds"] = "secondes";
language_fr["see_debit_history"] = "Voir l'historique du débit";
language_fr["see_pressure_history"] = "Voir l'historique de la pression";
language_fr["select"] = "Sélectionner";
language_fr["select_clients"] = "Sélectionnez les appareils associés que vous souhaitez";
language_fr["select_master"] = "Sélectionnez l'appareil Centrale";
language_fr["select_zone_for_output"] = "Choisissez à quelle zone est attribuée chaque sortie";
language_fr["sensor_debit"] = "Sonde débit";
language_fr["sensor_flow"] = "Sonde débit";
language_fr["sensor_orp"] = "Sonde ORP";
language_fr["sensor_ph"] = "Sonde pH";
language_fr["sensor_pressure"] = "Capteur de pression";
language_fr["sensor_temp"] = "Sonde T°";
language_fr["set_brightness"] = "Régler l'intensité";
language_fr["set_speed"] = "Régler la vitesse";
language_fr["setpoint_picker_dialog_title"] = "Définissez la consigne";
language_fr["settings_aws_state_connection_failure"] = "Échec de la connexion";
language_fr["settings_button_aux_type"] = "Configuration";
language_fr["settings_button_aux_type_help"] = "Attention, les programmes seront désactivés au changement de type d'auxiliaire (les plages horaires seront néanmoins conservées).";
language_fr["settings_button_frost_protection_mode"] = "Mode hors gel";
language_fr["settings_button_projector_type_help"] = "Attention, les programmes seront réinitialisés au changement de type de projecteur.";
language_fr["settings_button_winter_mode"] = "Mode hivernage";
language_fr["settings_dialog_aws_wifi_not_connected_message"] = "La connexion Wifi de votre appareil ne peut être configurée qu'en Bluetooth .\n\nVoulez-vous redémarrer l'app en mode Bluetooth ?";
language_fr["settings_dialog_connnection_in_progress_bt_cancel"] = "Abandonner";
language_fr["settings_dialog_connnection_in_progress_message"] = "Votre appareil Phileo essaye de se connecter au Wifi.\n\nVous pouvez soit le laisser continuer, soit abandonner et configurer une nouvelle connexion.";
language_fr["settings_flow_state"] = "État du flow :";
language_fr["settings_hardware_version"] = "Version hardware : %1$s";
language_fr["settings_software_version"] = "Version firmware : %1$s";
language_fr["settings_wifi_connection_error"] = "Erreur de connexion Wifi";
language_fr["settings_wifi_connection_in_progress"] = "Connexion au Wifi";
language_fr["setup"] = "Installation";
language_fr["setup_lynx_failed"] = "Échec de la connexion au Lynx";
language_fr["setup_lynx_success"] = "Connexion au Lynx réussie";
language_fr["setup_new_device_button"] = "Paramétrer";
language_fr["setup_wifi_choice_credentials"] = "Manuel";
language_fr["setup_wifi_choice_lynx"] = "Lynx";
language_fr["setup_wifi_choice_wps"] = "WPS";
language_fr["setup_wifi_credentials_description"] = "Veuillez rentrer les identifiants du réseau wifi auquel vous souhaitez vous connecter.\nAttention, il est impossible de se connecter à des réseaux 5GHz.";
language_fr["setup_wifi_credentials_failed"] = "Connexion échouée.\n\nVérifiez les informations saisies et contrôlez que la couverture wifi de votre installation est suffisante.";
language_fr["setup_wifi_credentials_pass_placeholder"] = "Mot de passe du réseau";
language_fr["setup_wifi_credentials_ssid_placeholder"] = "Nom du réseau";
language_fr["setup_wifi_credentials_wrong_password"] = "Connexion échouée.\n\nLe mot de passe saisi est erroné.";
language_fr["setup_wifi_lynx_description"] = "Si vous possédez un Lynx, vous pouvez l'utiliser comme point d'accès afin de vous connecter au Wifi.\n\nUne fois que votre Lynx est en mode point d'accès, appuyez sur le bouton \"Se connecter\" ci-dessous et votre installation s'y connectera.\nEnsuite, allez voir votre Lynx et configurez le Wifi : votre installation a maintenant accès à internet à travers le point d'accès du Lynx !";
language_fr["setup_wifi_success"] = "Connexion au Wifi établie";
language_fr["setup_wifi_wps_description"] = "Wi-Fi Protected Setup (WPS) est une fonctionnalité fournie par de nombreux routeurs. Elle a été créée dans le but de simplifier le processus de connexion à un réseau Wifi sécurisé depuis un ordinateur ou autre appareil.\n\nPour continuer, appuyez simplement sur le bouton WPS de votre routeur, puis appuyez sur le bouton \"Connexion\" ci-dessous.";
language_fr["setup_wifi_wpsfailed"] = "Connexion échouée.\n\nVeuillez vérifier que la couverture wifi de votre installation est suffisante.";
language_fr["shadow_incomplete_reboot_message"] = "Tentative de redémarrage, veuillez patienter 30 secondes...";
language_fr["share_my_pool_bt_share"] = "Partager";
language_fr["share_my_pool_date_picker_title"] = "Partager jusqu'au…";
language_fr["share_my_pool_date_picker_validation"] = "Veuillez remplir la date d'expiration";
language_fr["share_my_pool_delete_share_dialog_bt_remove"] = "Supprimer";
language_fr["share_my_pool_delete_share_dialog_message"] = "Voulez-vous vraiment supprimer le partage de votre piscine avec le compte \"%1$s\" ?";
language_fr["share_my_pool_dialog_contact_not_found_message"] = "Vous devez remplir vos coordonnées avant de pouvoir partager votre piscine.";
language_fr["share_my_pool_hint_date"] = "Jusqu'au JJ/MM/AAAA";
language_fr["share_my_pool_no_shares"] = "Aucun partage à afficher.";
language_fr["share_pool_description"] = "Veuillez remplir vos coordonnées ainsi que les informations relatives à votre piscine pour pouvoir la partager avec un professionnel.";
language_fr["share_pool_new_share"] = "Nouveau partage";
language_fr["share_pool_shared"] = "Mes partages";
language_fr["share_pool_title"] = "Comment partager ma piscine ?";
language_fr["share_unavailable"] = "Partage impossible";
language_fr["short_ble_history_information"] = "Connectez votre appareil au Wifi pour bénéficier des historiques de consommation";
language_fr["short_ble_history_information_return_line"] = "Connectez votre appareil au\nWifi pour bénéficier des\nhistoriques de consommation";
language_fr["short_debit_history"] = "Historique débit";
language_fr["short_pressure_history"] = "Historique pression";
language_fr["should_add_to_vigipool_account_alert_message"] = "Nous avons remarqué que votre appareil est connecté à internet et que vous êtes connecté à un compte Vigipool, mais que les deux ne sont pas liés entre eux.\n\nSouhaitez-vous lier cet appareil à votre compte Vigipool pour pouvoir le piloter à distance ?";
language_fr["side_menu_configure"] = "Configurer";
language_fr["side_menu_configure_devices"] = "Mes appareils";
language_fr["side_menu_configure_measurements"] = "Sondes & calibration";
language_fr["side_menu_configure_units"] = "Unités de mesure";
language_fr["side_menu_others"] = "Autres";
language_fr["side_menu_others_cgu"] = "CGU";
language_fr["side_menu_others_faq"] = "FAQ";
language_fr["side_menu_others_share_pool"] = "Partager ma piscine";
language_fr["side_menu_vigipool"] = "Compte Vigipool";
language_fr["side_menu_vigipool_connected_devices"] = "Équipements connectés";
language_fr["side_menu_vigipool_my_pool"] = "Ma piscine";
language_fr["side_menu_vigipool_sign_in"] = "Connexion / Création";
language_fr["side_menu_vigipool_sign_out"] = "Se déconnecter";
language_fr["sign_in_success_title"] = "Connexion réussie";
language_fr["sign_in_up_vigipool"] = "Créer un compte ou se connecter à Vigipool ?";
language_fr["sign_up_complete_success_title"] = "Votre compte est validé !\nVous pouvez maintenant vous y connecter.\n";
language_fr["sign_up_success_description"] = "Vous allez rapidement recevoir un code de vérification par mail. Une fois reçu, renseignez-le ci-dessous afin de valider votre compte.";
language_fr["sign_up_success_title"] = "Votre compte est créé !";
language_fr["skip_rinse"] = "Ignorer l'étape de rinçage";
language_fr["something_went_wrong"] = "Une erreur est survenue.";
language_fr["spotify_connection_lost"] = "Connexion perdue avec Spotify";
language_fr["spotify_connection_lost_description"] = "Veuillez jouer de la musique sur Spotify et revenir sur l'application Vigipool afin que nous puissions restaurer la connexion.";
language_fr["spotify_unavailable"] = "Spotify indisponible";
language_fr["spotify_unavailable_description"] = "Nous n'arrivons pas à communiquer avec les serveurs de Spotify.\nCela peut être dû à un problème temporaire de leur côté ou à un problème de connexion internet sur votre téléphone.";
language_fr["start"] = "Commencer";
language_fr["start2"] = "Démarrer";
language_fr["start_timer"] = "Démarrer la minuterie";
language_fr["status_accepted"] = "Accepté";
language_fr["status_denied"] = "Refusé";
language_fr["status_pending"] = "En attente";
language_fr["stop"] = "Arrêter";
language_fr["stop_backwash"] = "Arrêter le contre-lavage";
language_fr["stop_calibration"] = "Arrêter la calibration";
language_fr["sunday_short"] = "Dim";
language_fr["switch_device_device_type_not_supported"] = "Le type d'appareil %s n'est pas encore supporté par l'application Vigipool.";
language_fr["switch_device_message"] = "Voulez-vous vraiment vous connecter à l'appareil %1$s ?";
language_fr["temp_current"] = "Temp. actuelle";
language_fr["temp_desired"] = "Temp. rectifiée";
language_fr["temp_error_meteor_notification"] = "Erreur de mesure de température de l'eau. Vérifiez la connexion de la sonde de température.";
language_fr["temp_measurement_temp_history"] = "Historique de valeurs de température";
language_fr["temp_measurement_temp_history_ble_hint"] = "L'historique des valeurs de température est disponible seulement en utilisant le mode de connexion à distance :\n\n- votre appareil Vigipool doit être connecté au Wifi\n- vous devez créer et confirmer votre compte Vigipool\n- vous devez vous connecter \"À distance\"";
language_fr["temp_measurement_temp_probe_calibration"] = "Calibration sonde température";
language_fr["temp_measurement_title"] = "Historique de température";
language_fr["temp_min_start"] = "Température minimum de démarrage";
language_fr["temp_picker_dialog_title"] = "Choisissez la température";
language_fr["temp_probe_calibration_error_dialog_message"] = "Erreur de calibration, veuillez vérifier la sonde de Température.";
language_fr["temp_setpoint"] = "Consigne de température";
language_fr["temperature_min_start_help"] = "Le traitement se mettra en marche durant les plages horaires choisies, mais seulement si la température de l'eau est supérieure à la température minimum de démarrage.";
language_fr["temperature_min_start_help_detailed"] = "La température choisie sera aussi appliquée à tous les programmes.\nSi la température de l'eau est en dessous de la consigne, le traitement ne démarrera pas.";
language_fr["temperature_setpoint_help"] = "Le chauffage s'allumera durant les heures que vous avez indiqué.\nSi la consigne est atteinte, la température sera maintenue jusqu'à l'heure de fin du programme.";
language_fr["temperature_setpoint_help_detailed"] = "La température choisie sera aussi appliquée à tous les programmes.\nSi la température de l'eau a atteint la consigne et le chauffage est allumé, il fonctionnera juste assez pour maintenir la température.";
language_fr["tendency_week"] = "Tendance 7 jours";
language_fr["tension"] = "Tension";
language_fr["terms_of_use"] = "Conditions générales d'utilisation";
language_fr["text_copied_to_clipboard"] = "%1$s copié dans le presse-papiers.";
language_fr["text_serial_number"] = "Numéro de série";
language_fr["text_watcher_invalid_email"] = "L'adresse e-mail doit être valide";
language_fr["text_watcher_lower_case_error"] = "Veuillez entrer au moins un caractère minuscule.";
language_fr["text_watcher_max_length_error"] = "Veuillez entrer moins de %1$d caractères.";
language_fr["text_watcher_min_length_error"] = "Veuillez entrer au moins %1$d caractères.";
language_fr["text_watcher_number_error"] = "Veuillez entrer au moins un chiffre.";
language_fr["text_watcher_password_confirm_error"] = "Les mots de passe ne correspondent pas.";
language_fr["text_watcher_password_error"] = "Le mot de passe n'est pas assez fort.";
language_fr["text_watcher_required"] = "Ce champs est requis";
language_fr["text_watcher_special_char_error"] = "Veuillez entrer au moins un caractère spécial.";
language_fr["text_watcher_upper_case_error"] = "Veuillez entrer au moins un caractère majuscule.";
language_fr["theme"] = "Thème";
language_fr["theme_black_and_white"] = "Noir et blanc";
language_fr["theme_disco"] = "Disco";
language_fr["theme_disco2"] = "Disco 2";
language_fr["theme_france"] = "France";
language_fr["theme_jamaica"] = "Reggae";
language_fr["theme_rainbow"] = "Arc-en-ciel";
language_fr["theme_spotify_cold_colors"] = "Couleurs froides";
language_fr["theme_spotify_hot_colors"] = "Couleurs chaudes";
language_fr["theme_white"] = "Variation de blanc";
language_fr["thermoregulated_mode_help"] = "Le mode thermorégulé adaptera la durée des plages de programmation en fonction de la température de l'eau.\nSi la température de l'eau est élevée, la filtration fonctionnera un peu plus longtemps que prévu, et inversement si la température est basse.";
language_fr["thursday_short"] = "Jeu";
language_fr["time_ago"] = "il y a %1$s";
language_fr["time_picker_dialog_sunset_mode_tooltip"] = "Démarre l'éclairage lorsque le soleil se couche";
language_fr["time_picker_dialog_sunset_mode_tooltip_with_twilight"] = "Démarre l'éclairage lorsque le soleil se couche (%1$s aujourd'hui)";
language_fr["time_picker_dialog_title_end_time"] = "Réglez l'heure de fin";
language_fr["time_picker_dialog_title_start_time"] = "Réglez l'heure de début";
language_fr["title_activity_base_regulation"] = "Régulation";
language_fr["title_activity_bonding"] = "Appairage";
language_fr["title_activity_faq"] = "F.A.Q.";
language_fr["title_activity_probes_and_calibration"] = "Sondes & calibration";
language_fr["title_activity_settings"] = "Paramètres";
language_fr["title_activity_temp_measurement"] = "Mesure Température";
language_fr["title_activity_temp_probe_calibration"] = "Calibration Temp";
language_fr["title_activity_update_name"] = "Mise à jour du nom";
language_fr["title_activity_wifi_setup"] = "Configuration Wifi";
language_fr["toast_ble_auto_connect_error"] = "Impossible de se reconnecter automatiquement au dernier appareil.";
language_fr["toast_serial_number_copied_to_clipboard"] = "Numéro de série copié dans le presse-papiers.";
language_fr["too_high"] = "Trop élevé";
language_fr["too_low"] = "Trop faible";
language_fr["treatment"] = "Traitement";
language_fr["tuesday_short"] = "Mar";
language_fr["turbo_mode_tooltip_help"] = "Le mode turbo est disponible uniquement lorsque la pompe à chaleur est en cours de fonctionnement, et reviendra automatiquement en mode Smart une fois la température de consigne atteinte";
language_fr["turn_off"] = "Éteindre";
language_fr["turn_off_auto"] = "Éteindre automatiquement";
language_fr["turn_off_filtration_forced"] = "Stopper marche continue";
language_fr["turn_on"] = "Allumer";
language_fr["turn_on_filtration_forced"] = "Activer marche continue";
language_fr["turn_on_the_light"] = "Allumer la lumière";
language_fr["turned_off"] = "Éteint";
language_fr["twilight"] = "Crépuscule";
language_fr["twilight_unavailable"] = "Crépuscule indisponible";
language_fr["unable_to_read_device_data"] = "Erreur inattendue : impossible de lire le cache des données de l'appareil.";
language_fr["units_measure_eu"] = "Métrique (m, L, kg…)";
language_fr["units_measure_na"] = "Impérial (ft, US Gal, lbs…)";
language_fr["units_measure_title"] = "Unités de mesure";
language_fr["unknown"] = "Inconnu";
language_fr["unpair"] = "Quitter";
language_fr["update_action"] = "Mettre à jour";
language_fr["update_device_for_backwash_description"] = "Afin de pouvoir profiter au contre-lavage guidé il est nécessaire de connecter votre installation à internet et de mettre à jour vos appareils.";
language_fr["update_failed_alert_title"] = "Mise à jour échouée";
language_fr["update_firmware_ask_state_description"] = "Souhaitez-vous l'installer maintenant ? (Si non, il est possible de faire la mise à jour à tout moment depuis l'écran de paramètres)";
language_fr["update_firmware_error_description"] = "Une erreur est survenue lors de la mise à jour.";
language_fr["update_firmware_progress_description"] = "Téléchargement de la mise à jour en cours…";
language_fr["update_firmware_restart_description"] = "Redémarrage en cours…";
language_fr["update_firmware_success_description"] = "Mise à jour installée avec succès !";
language_fr["update_mandatory"] = "Mise à jour obligatoire";
language_fr["update_name_validation_error"] = "Le nom doit contenir au moins trois caractères.";
language_fr["update_necessary"] = "Mise à jour de l'appareil requise";
language_fr["update_ota_f1_bt_download_and_install"] = "Télécharger & Installer";
language_fr["update_ota_f1_text_top"] = "Une mise à jour est disponible pour %1$s (%2$s)";
language_fr["update_ota_f2_text_top"] = "Veuillez patienter, votre appareil se met à jour.";
language_fr["update_ota_f2_text_top_restarting"] = "Veuillez patienter, votre appareil redémarre.";
language_fr["update_ota_f2_text_top_restarting_with_device_type"] = "Veuillez patienter, votre appareil %1$s redémarre.";
language_fr["update_ota_f2_text_top_with_device_type"] = "Veuillez patienter, votre appareil %1$s se met à jour.";
language_fr["update_ota_f2_update_progress"] = "%1$d %%";
language_fr["update_succeed_alert_title"] = "Mise à jour réussie";
language_fr["validation_required"] = "Ce champ est obligatoire.";
language_fr["verification_code"] = "Code :";
language_fr["version_firmware_prefix"] = "Version firmware : ";
language_fr["version_hardware_prefix"] = "Version hardware : ";
language_fr["vigipool_account_not_verified_message"] = "Votre compte Vigipool n'est pas activé.\n\nVeuillez renseigner le code reçu dans votre mail afin de valider votre compte.";
language_fr["vigipool_device"] = "appareil Vigipool";
language_fr["vigipool_device_added_success"] = "Ajout de l'appareil réussi !";
language_fr["volume_unit_litre"] = "Litre";
language_fr["volume_unit_us_gallon"] = "Gallon US";
language_fr["volume_unit_us_gallon_unit"] = "US gal";
language_fr["vs_need_tild_or_meteor_alert"] = "Merci d'associer votre tild VP ou votre Meteor VP à votre Antea-VS afin de permettre le pilotage de la filtration.";
language_fr["vspump_brand"] = "Marque :";
language_fr["vspump_help"] = "Désactivez la Sélection automatique si vous souhaitez choisir manuellement la vitesse de la pompe de filtration durant la marche forcée";
language_fr["vspump_model"] = "Modèle :";
language_fr["vspump_new_device_button"] = "Paramétrer";
language_fr["vspump_onoff_details"] = "avec marche/arrêt pilotable";
language_fr["vspump_select"] = "Choisir une autre pompe";
language_fr["vspump_settings"] = "Paramétrage de la pompe";
language_fr["vspump_settings_confirm_message"] = "Attention, ces paramètres ont un impact sur le bon fonctionnement de l’appareil";
language_fr["vspump_settings_confirm_title"] = "Veuillez vérifier les informations renseignées";
language_fr["vspump_settings_help"] = "Sélectionnez votre pompe dans la liste ci-dessous";
language_fr["vspump_settings_title"] = "Réglages de la pompe";
language_fr["vspump_speed"] = "Vitesse";
language_fr["vspump_speed_auto"] = "Vitesse automatique";
language_fr["vspump_speed_details"] = "Pompe %1$d vitesses";
language_fr["vspump_speed_eco"] = "Éco";
language_fr["vspump_speed_fast"] = "Turbo";
language_fr["vspump_speed_normal"] = "Normal";
language_fr["vspump_speed_off"] = "Éteint";
language_fr["vspump_type"] = "Type de pompe :";
language_fr["water_hardness_hard"] = "Dure";
language_fr["water_hardness_slightly_hard"] = "Plutôt dure";
language_fr["water_hardness_slightly_soft"] = "Plutôt douce";
language_fr["water_hardness_soft"] = "Douce";
language_fr["water_hardness_very_hard"] = "Très dure";
language_fr["water_hardness_very_soft"] = "Très douce";
language_fr["water_renewal"] = "Mode surveillance température";
language_fr["water_temperature"] = "Température de l'eau";
language_fr["water_temperature_error"] = "Erreur température : %1$s";
language_fr["wednesday_short"] = "Mer";
language_fr["white"] = "Blanc";
language_fr["wifi_lynx_fail_description"] = "Connexion au Lynx échouée";
language_fr["wifi_lynx_in_progress_description"] = "Recherche du Lynx pour s'y connecter…";
language_fr["wifi_lynx_success_description"] = "Connexion au Lynx réussi";
language_fr["wifi_setup_error_dialog_failure_message"] = "Erreur de connexion Wifi, merci de vérifier votre SSID et votre mot de passe.";
language_fr["wifi_setup_error_dialog_failure_message_wps"] = "Erreur de connexion Wifi, veuillez vérifier que vous êtes assez près du routeur.";
language_fr["wifi_setup_error_dialog_timeout_message"] = "Délai d'attente dépassé pour la connexion Wifi";
language_fr["wifi_setup_error_dialog_timeout_message_ssid"] = "Délai d'attente dépassé pour la connexion Wifi.\n\nVeuillez vérifier les informations saisies et contrôler que la couverture Wifi de votre installation est suffisante.";
language_fr["wifi_setup_error_dialog_timeout_message_wps"] = "Délai d'attente dépassé pour la connexion Wifi.\n\nVeuillez contrôler que la couverture Wifi de votre installation est suffisante.";
language_fr["wifi_setup_error_dialog_wrong_password"] = "Veuillez vérifier votre mot de passe.";
language_fr["wifi_setup_lynx_hint"] = "Si vous possédez un Lynx, vous pouvez l'utiliser comme point d'accès afin de vous connecter au Wifi.\n\nUne fois que votre Lynx est en mode point d'accès, appuyez sur le bouton \"Se connecter\" ci-dessous et votre installation s'y connectera.\nEnsuite, allez voir votre Lynx et configurez le Wifi : votre installation a maintenant accès à internet à travers le point d'accès du Lynx !";
language_fr["wifi_setup_ssid_5ghz_hint"] = "Attention, les réseaux Wifi 5GHz ne sont pas supportés.";
language_fr["wifi_setup_ssid_hint_ssid"] = "SSID";
language_fr["wifi_setup_ssid_scan_qr_code"] = "Scanner le QR Code du mot de passe";
language_fr["wifi_setup_success_dialog_button_setup"] = "Gérer mon compte";
language_fr["wifi_setup_success_dialog_message"] = "La connexion Wifi à été configurée avec succès.\n\nVous pouvez à présent créer ou vous connecter à votre compte Vigipool.";
language_fr["wifi_setup_wps_hint"] = "Wi-Fi Protected Setup (WPS) est une fonctionnalité fournie par de nombreux routeurs. Elle a été créée dans le but de simplifier le processus de connexion à un réseau Wifi sécurisé depuis un ordinateur ou autre appareil.\n\nPour continuer, appuyez simplement sur le bouton WPS de votre routeur, puis appuyez sur le bouton \"Connexion\" ci-dessous.";
language_fr["wifi_state_connected_no_internet"] = "Wifi connecté, pas d'internet";
language_fr["wifi_state_in_progress"] = "Connexion Wifi en cours";
language_fr["wifi_state_internet"] = "Connecté à internet";
language_fr["wifi_state_no_internet"] = "Pas d'internet";
language_fr["wifi_state_not_connected"] = "Wifi non connecté";
language_fr["wifi_wpsin_progress_description"] = "Veuillez appuyer sur le bouton WPS de votre routeur afin de connecter votre appareil Vigipool\n\nTentative de connexion en cours…";
language_fr["winter_mode_disabled"] = "Le mode hivernage est désactivé dans la version %1$s.\n\nConnectez votre installation Vigipool à internet pour bénéficier des dernières mises à jour et activer cette fonctionnalité.";
language_fr["winter_mode_short"] = "Hivernage";
language_fr["wix3z4_overload"] = "Projecteur en surcharge, vérifier votre installation et redémarrer votre Wix3Z4.";
language_fr["wix_settings_merge_zones"] = "Fusionner les zones";
language_fr["write_cancel_not_connected"] = "Problème de communication avec l'appareil";
language_fr["write_cancel_poor_connection"] = "Votre téléphone a une mauvaise connexion";
language_fr["zones"] = "Zones";
language_fr["ios_with_thermoregulation"] = "Avec thermorégulation ≃ %@";

language_fr["forced_for_temp"] = "La filtration est en route le temps d'actualiser la température";


var language_ge = {};

language_ge["language"] = "französich";
language_ge["sign_in"] = "sich anmelden";
language_ge["email"] = "Email";
language_ge["password"] = "Passwort";
language_ge["show_password"] = "Passwort anzeigen";
language_ge["remember_me"] = "Mich erinnern";
language_ge["login"] = "Anmelden";
language_ge["particular"] = "Endkunden";
language_ge["professional"] = "Profi";
language_ge["free"] = "kostenlos";
language_ge["prenium"] = "kostenpflichtig";
language_ge["dont_have_an_account"] = "Sie haben kein Konto?";
language_ge["sign_up"] = "registrieren";
language_ge["create_supervision_account"] = "Ein Supervision-Konto erstellen";
language_ge["forgot_your_password"] = "Passwort vergessen?";
language_ge["resend_email_verification"] = "Ich habe die Bestätigungsmail nicht erhalten.";
language_ge["wrong_id"] = "Ihre Zugangsdaten sind nicht korrekt.";
language_ge["perso_pro_error"] = "Fehler Privat-/Geschäftskonto";
language_ge["email_used"] = "Diese E-Mail wird bereits genutzt";
language_ge["password_rule_title"] = "Das Passwort muss enthalten:";
language_ge["password_rule_0"] = "Ein Kleinbuchstabe";
language_ge["password_rule_1"] = "Ein Großbuchstabe";
language_ge["password_rule_2"] = "Eine Zahl";
language_ge["password_rule_3"] = "Mindestens 6 Zeichen";
language_ge["password_rule_conform"] = "Ihre Passwörter müssen identisch sein";
language_ge["account_specify"] = "Bitte geben Sie an, welches Konto Sie verwenden möchten.";
language_ge["email_not_verified"] = "Bitte bestätigen Sie Ihre E-Mail-Adresse, bevor Sie sich anmelden.";
language_ge["univers_vp"] = "Vigipoolwelt entdecken";
language_ge["demo_text"] = "Ein Rundgang, bevor Sie loslegen?";
language_ge["demo_button"] = "Demomodus zugreifen";
language_ge["name_of_the_brand"] = "Name des Schildes";
language_ge["professional_s_name"] = "Profiname";
language_ge["address"] = "Anschrift";
language_ge["postal_code"] = "Postleitzahl";
language_ge["city"] = "Stadt";
language_ge["country"] = "Land";
language_ge["phone"] = "Telefon";
language_ge["ccei_customer_number"] = "CCEI-Kundennummer";
language_ge["siret"] = "Registrierungsnummer";
language_ge["vigipool_product_supplier"] = "Lieferant der Produkte";
language_ge["register_info_1"] = "Ein Supervision-Konto";
language_ge["register_info_2"] = "- ermöglicht es Ihnen, gemeinsam genutzte Pools mithilfe der Vigipool-App zu überwachen.";
language_ge["register_info_3"] = "- abererlaubt es Ihnen nicht , die App Vigipool zu verwenden (in der App muss ein Vigipool-Konto eingerichtet werden)";
language_ge["register_info_4"] = "Wenn Sie bereits ein Vigipool App-Konto haben, können Sie sich mit Ihren Zugangsdaten direkt in Supervision einloggen, um die mit Ihrem Pool verbundenen Informationen anzuzeigen!";
language_ge["create_an_account"] = "Konto erstellen";
language_ge["password_confirmation"] = "Passwort (Bestätigung)";
language_ge["first_name"] = "Vorname";
language_ge["last_name"] = "Nachname";
language_ge["already_have_an_account_connect"] = "Bereits ein Konto?";
language_ge["login_btn"] = "sich anmelden";
language_ge["reset_password"] = "Passwort zurücksetzen";
language_ge["send_confirmation_email"] = "Bestätigungs-E-Mail senden";
language_ge["reset_password_error"] = "Diese E-Mail-Adresse ist nicht bekannt";
language_ge["email_verification"] = "Bestätigungs-E-Mail neu senden";
language_ge["email_verification_footer"] = "Wurde Ihre E-Mail bereits bestätigt?";
language_ge["email_sent"] = "E-Mail gesendet";
language_ge["email_has_been_sent"] = "Es wurde eine E-Mail versendet, damit Sie das Passwort für Ihr Konto zurücksetzen können.";
language_ge["password_reset_link"] = "Dieser Link zum Zurücksetzen des Passworts wird in 60 Minuten ablaufen.";
language_ge["return"] = "Zurück";
language_ge["reset_success_title"] = "Passwort erfolgreich zurückgesetzt";
language_ge["reset_success_text"] = "Sie können versuchen, sich wieder anzumelden.";
language_ge["mail_template_text_1"] = "Sie erhalten diese E-Mail, weil wir einen Auftrag zum Zurücksetzen des Passworts für Ihr Konto erhalten haben.";
language_ge["mail_template_text_2"] = "Wenn Sie kein Zurücksetzen des Passworts beantragt haben, sind keine weiteren Maßnahmen erforderlich.";
language_ge["mail_template_signature"] = "Herzliche Grüße";
language_ge["account_created_title"] = "Ihr Konto wurde erstellt. Bevor Sie sich anmelden, bestätigen Sie bitte Ihre Anmeldung über die E-Mail, die Sie soeben erhalten haben.";
language_ge["email_verify_title"] = "Überprüfung Ihrer Vigipool Supervision-E-Mail";
language_ge["email_verify_text_1"] = "Sie erhalten diese E-Mail, weil Sie gerade Ihr Vigipool Supervision-Konto eingerichtet haben.";
language_ge["email_verify_text_2"] = "Bitte bestätigen Sie die Erstellung Ihres Kontos, indem Sie auf die untenstehende Taste drücken.";
language_ge["email_verify_text_3"] = "Wenn Sie keine Kontoerstellung vorgenommen haben, sind keine weiteren Maßnahmen erforderlich.";
language_ge["email_already_verified"] = "Email bereits überprüft.";
language_ge["email_verified"] = "Email erfolgreich überprüft.";
language_ge["administrator"] = "Verwalter";
language_ge["manager"] = "Verantwortlicher";
language_ge["pool_tech"] = "Poolbauer";
language_ge["new_user"] = "Neu";
language_ge["btn_sign_out"] = "sich abmelden";
language_ge["dashboard"] = "Dashboard";
language_ge["my_account"] = "Mein Konto";
language_ge["users_management"] = "Nutzer";
language_ge["pool_management"] = "Poolverwaltung";
language_ge["interventions"] = "Wartungsbuch";
language_ge["event_history"] = "Historie";
language_ge["force_refresh"] = "Refresh";
language_ge["overview"] = "überwachte Pools";
language_ge["overview_single"] = "überwachter Pool";
language_ge["swimming_pool_list"] = "Pool-Liste";
language_ge["swimming_pools_accepted"] = "Ihre überwachten Pools";
language_ge["awaiting_delegation_acceptance"] = "Warten auf Delegationsannahme";
language_ge["search_here"] = "Hier suchen ...";
language_ge["see_details"] = "Details anzeigen";
language_ge["accept_pool"] = "Pool annehmen";
language_ge["refuse_pool"] = "Pool ablehnen";
language_ge["swimming_pool_locations"] = "Pools Standorte";
language_ge["legal_notice"] = "Rechtliche Hinweise";
language_ge["terms_of_service"] = "Nutzungsbedingungen";
language_ge["user_devices_graph"] = "Installiertes Material";
language_ge["table_pool_name"] = "Poolname";
language_ge["table_ownername"] = "Besitzer";
language_ge["table_temperature"] = "T°";
language_ge["table_wifi"] = "WLAN";
language_ge["table_pool_status"] = "Pool-Status";
language_ge["table_rdv"] = "Termin";
language_ge["total"] = "Total";
language_ge["ok"] = "Ok";
language_ge["warning"] = "Warnung(en)";
language_ge["error"] = "Fehler(n)";
language_ge["disconnected"] = "Abgemeldet(e)";
language_ge["ok_devices_only"] = "Nur OK-Geräte";
language_ge["devices_to_be_monitored_only"] = "Nur zu überwachende Geräte";
language_ge["devices_in_error_only"] = "Nur Fehler-Geräte";
language_ge["devices_disconnected_only"] = "Nur abgemeldete Geräte";
language_ge["error_multiple"] = "Mehrere Fehler";
language_ge["error_orp_high"] = "Redox zu hoch ";
language_ge["error_orp_low"] = "Redox zu niedrig";
language_ge["error_orp_none"] = "Kein Redox";
language_ge["error_ph_high"] = "pH zu hoch";
language_ge["error_ph_low"] = "pH zu niedrig";
language_ge["error_ph_none"] = "Kein pH";
language_ge["error_temp_high"] = "Temperatur zu hoch ";
language_ge["error_temp_low"] = "Temperatur zu niedrig";
language_ge["error_temp_none"] = "Keine Temperatur";
language_ge["warning_multiple"] = "Achtung ";
language_ge["warning_no_wifi"] = "Pool abgemeldet";
language_ge["warning_orp_high"] = "Redox leicht zu hoch";
language_ge["warning_orp_low"] = "Redox leicht zu niedrig";
language_ge["warning_ph_high"] = "pH leicht zu hoch";
language_ge["warning_ph_low"] = "pH leicht zu niedrig";
language_ge["warning_temp_high"] = "Temperatur leicht zu hoch";
language_ge["warning_temp_low"] = "Temperatur leicht zu niedrig";
language_ge["app_account_fail_pool"] = ":nb_pool Pool(s) sind in der Vigipool-App (\"Mein Pool\" im linken Menü der App) nicht ausgefüllt und können in Vigipool Supervision nicht angezeigt werden.";
language_ge["CGU"] = "Impressum | AGB";
language_ge["remove_pool_tracking"] = "Poolverfolgung löschen";
language_ge["see_map"] = "Karte anzeigen ";
language_ge["see_more"] = "Mehr laden ";
language_ge["remove_picture"] = "Foto löschen";
language_ge["file_too_heavy"] = "Datei zu groß";
language_ge["picture_tooltip"] = "Klicken Sie auf die Taste, um ein Foto hinzuzufügen, maximale Größe 4MB";
language_ge["deviceType"] = "Hauptperipherie";
language_ge["cover"] = "Abdeckung";
language_ge["volume"] = "Volum";
language_ge["deviceId"] = "Benutzername";
language_ge["structure"] = "Struktur";
language_ge["treatment"] = "Bearbeitung";
language_ge["past"] = "Vorbei";
language_ge["planned"] = "Kommendes";
language_ge["vigipool_devices"] = "Vigipools-Geräte";
language_ge["electrolyse"] = "Elektrolyse";
language_ge["shadow"] = "Detaillierte Informationen";
language_ge["device"] = "Gerät ";
language_ge["function"] = "Funktion";
language_ge["serial_number"] = "Seriennummer";
language_ge["normal_behaviour"] = "Normalverhalten";
language_ge["calibration_in_progress"] = "Kalibrierung wird durchgeführt";
language_ge["winter_mode"] = "Wintermodus";
language_ge["sync_flow"] = "Messungen-Modus";
language_ge["update_available"] = "Update verfügbar";
language_ge["update_in_progress"] = "Update läuft";
language_ge["update_error"] = "Update Fehler";
language_ge["restart_in_progress"] = "Neustart läuft ";
language_ge["stable_calibration"] = "Stabile Kalibrierung";
language_ge["gateway_mode"] = "Gateway-Modus";
language_ge["gateway_mode_0"] = "Kunde";
language_ge["gateway_mode_1"] = "Gateway";
language_ge["fast_slow_ble"] = "BLE-Schnellmodus ";
language_ge["state"] = "Status ";
language_ge["ap_bcast_duration"] = "Verbreitungsdauer der App";
language_ge["update_ota"] = "WLAN Update";
language_ge["server_on"] = "Master";
language_ge["flow_on"] = "Filterung";
language_ge["prod_on"] = "Chlorproduktion";
language_ge["mqtt_connected"] = "Verbunden ";
language_ge["model_id"] = "Modellkennung";
language_ge["hw_vers"] = "Hardware-Version";
language_ge["date_mes"] = "Letzte Messung";
language_ge["date_mes_ph"] = "Letzte pH-Messung";
language_ge["date_mes_orp"] = "Letzte Redox-Messung";
language_ge["value_orp"] = "ORP-Messung";
language_ge["value_temp"] = "Temperatur";
language_ge["sw_vers"] = "Software-Version";
language_ge["ph_adjust"] = "pH-Anpassung";
language_ge["temp_adjust"] = "Temperatur-Anpassung";
language_ge["orp_adjust"] = "ORP-Anpassung";
language_ge["ph_calibration_target"] = "pH-Kalibrierungsziel";
language_ge["orp_calibration_target"] = "ORP-Kalibrierungsziel";
language_ge["jeedom_interval"] = "Jeedom-Intervall";
language_ge["rssi"] = "RSSI";
language_ge["inject_on"] = "Injektion läuft ";
language_ge["vol_tot_inject"] = "Gesamtes injiziertes Volumen (L)";
language_ge["vol_bac"] = "Behältersvolumen";
language_ge["vol_max_24h"] = "Max. Volumen 24 Stunden";
language_ge["consigne_ph"] = "pH-Sollwert";
language_ge["source_ph"] = "pH-Quelle";
language_ge["priority"] = "pH-Priorität ";
language_ge["consigne_orp"] = "ORP-Sollwert ";
language_ge["source_orp"] = "ORP-Quelle";
language_ge["mode_ely"] = "Modus";
language_ge["power_ely"] = "Leistung";
language_ge["ely_duration_in_minut"] = "Aktuelle Elektrolysezeit";
language_ge["couv_on"] = "Poolabdeckung";
language_ge["couv_on_2"] = "Abdeckung &gt; 12 Stunden";
language_ge["consigne_temp"] = "Temperatur-Sollwert";
language_ge["value_temp_in"] = "Eingehende Temperatur";
language_ge["value_temp_out"] = "Ausgehende Temperatur";
language_ge["value_temp_int"] = "Innere Temperatur";
language_ge["value_cond"] = "Leitfähigkeit";
language_ge["ely_duration_compensated"] = "Programmierte Elektrolysedauer";
language_ge["mode_choc"] = "Schockmodus";
language_ge["choc_duration"] = "Schockmodusdauer";
language_ge["water_hardness"] = "Wasserhärte";
language_ge["temp_min_off_ely"] = "minimale Temperaur";
language_ge["off"] = "OFF";
language_ge["on"] = "ON";
language_ge["continuous"] = "Fortlaufend";
language_ge["thermo_regulated"] = "Thermoreguliert";
language_ge["orp_regulated"] = "Regulierter ORP";
language_ge["open"] = "Geöffnet";
language_ge["closed"] = "Geschlossen";
language_ge["meteor_mode_1"] = "Erzwungener Lauf";
language_ge["meteor_mode_2"] = "programmiert";
language_ge["meteor_mode_3"] = "automatisch";
language_ge["tild_no_program"] = "Kein Programm verfügbar";
language_ge["tild_hors_gel"] = "Frostschutzmodus aktiviert, wird Ihre Filterung automatisch gestartet, um das Einfrieren des Wassers in der Rohrleitung zu verhindern.";
language_ge["tild_aux_type_6"] = "ORP-Regulierung";
language_ge["light_type_m"] = "Lichtart";
language_ge["light_type_m_0"] = "Mono";
language_ge["light_type_m_1"] = "T.Switch";
language_ge["light_type_m_2"] = "Brio RC+";
language_ge["aux1_type_2"] = "Heizung";
language_ge["aux1_type_3"] = "Verstärker";
language_ge["aux1_type_4"] = "ORP-Behandlung";
language_ge["froze_mode"] = "Frostschutzmodus";
language_ge["froze_mode_0"] = "Aktiviert, wenn &lt; 0°C";
language_ge["froze_mode_1"] = "Aktiviert, wenn &lt; 1°C";
language_ge["froze_mode_2"] = "Aktiviert, wenn &lt; 2°C";
language_ge["tild_light_state_4"] = "Timer";
language_ge["tild_filt_state_2"] = "Vom Licht gezwungen";
language_ge["tild_filt_state_3"] = "Von der Hilfskraft erzwungen";
language_ge["tild_filt_state_5"] = "Durch Frostschutzmodus erzwungen";
language_ge["tild_filt_state_6"] = "Von der Heizung erzwungen";
language_ge["aux_state_1"] = "Von der Filtration abhängig";
language_ge["aux_state_2"] = "Temperatursollwert erreicht";
language_ge["aux_state_3"] = "Niedriger als die Minustemperatur";
language_ge["aux_state_4"] = "Wird bald starten";
language_ge["aux_state_5"] = "Falsche ORP-Messung";
language_ge["device_not_online"] = "Gerät abgetrennt oder ausgeschaltet";
language_ge["description_ofix"] = "T°-, pH-, Orp-Analysator";
language_ge["description_daisyph"] = "pH-Dosierpumpe";
language_ge["description_daisyox"] = "ORP-Dosierpumpe";
language_ge["description_zelia"] = "Elektrolysegerät";
language_ge["description_zelix"] = "Elektrolysegerät";
language_ge["description_lynx"] = "WLAN-Gateway - Remote-Bildschirm";
language_ge["description_ziphox"] = "T°-, pH-, Orp-Analysator ";
language_ge["description_phileox"] = "pH-Regulierer";
language_ge["description_oxeox"] = "ORP-Regulierer";
language_ge["description_tild"] = "Pool-Schaltkasten";
language_ge["description_limpidoez"] = "Elektrolysegerät ";
language_ge["description_vigipac"] = "Wärmepumpe";
language_ge["description_anteam"] = "Intelligenter Multifunktionskasten";
language_ge["description_wix"] = "Lichtsteuerung x3";
language_ge["no"] = "Nein";
language_ge["yes"] = "Ja";
language_ge["disabled"] = "Deaktiviert";
language_ge["enabled"] = "Aktiviert";
language_ge["manual"] = "Manuel";
language_ge["repetition"] = "Wiederholung";
language_ge["operating_hour"] = "Betriebszeit";
language_ge["mod"] = "Modus";
language_ge["duration"] = "Dauer";
language_ge["light"] = "Beleuchtung";
language_ge["everyday"] = "jeden Tag";
language_ge["monday"] = "Montag";
language_ge["tuesday"] = "Dienstag";
language_ge["wednesday"] = "Mittwoch";
language_ge["thursday"] = "Donnerstag";
language_ge["friday"] = "Freitag";
language_ge["saturday"] = "Samstag";
language_ge["sunday"] = "Sonntag";
language_ge["from"] = "Von";
language_ge["during"] = "während";
language_ge["to"] = "bis";
language_ge["sunset_mode"] = "Dämmerungsmodus";
language_ge["auxiliary"] = "Zusätzlicher Ausgang";
language_ge["electrolysis_mode"] = "Elektrolyse-Modus";
language_ge["chlorine_production_status"] = "Produktionsstatus Chlor";
language_ge["power"] = "Leistung";
language_ge["cell_flow"] = "Zellfluss";
language_ge["cell_water_t"] = "Wasserzelltemperatur";
language_ge["cell_internal_temperature"] = "Innentemperatur der Zelle";
language_ge["powerful"] = "Leistung";
language_ge["minimum_temperature"] = "minimale Temperatur";
language_ge["electrolysis_current"] = "Elektrolyse-Strom (A)";
language_ge["voltage"] = "Spannung (V)";
language_ge["today_details"] = "Tagesdetails";
language_ge["tooltip_1"] = "Zum Vergrößern drücken Sie die linke Maustaste, wählen den entsprechenden Bereich aus und lassen die Maustaste los.";
language_ge["tooltip_2"] = "Sie können horizontal und vertikal zoomen.";
language_ge["tooltip_3"] = "Um die Ansicht zu vergrößern, doppelklicken Sie mit der linken Maustaste an einer beliebigen Stelle im Diagramm.";
language_ge["tooltip_4"] = "Klicken Sie auf einen bestimmten Tag, um seine Details zu sehen.";
language_ge["connected"] = "Verbunden";
language_ge["value_ph"] = "pH-Messung ";
language_ge["mode_ph"] = "pH-Regulierungsmodus";
language_ge["vol_24h_inject"] = "Injiziertes Volumen 24 Stunden";
language_ge["mode_orp"] = "ORP-Regulierungsmodus";
language_ge["more_info"] = "Mehr Infos ";
language_ge["export_historique"] = "Ihre Historie exportieren";
language_ge["export_historique_modal_msg"] = "Wählen Sie die Art die Historie, die Sie exportieren wollen";
language_ge["export_historique_year"] = "Exportsjahr wählen";
language_ge["pool_note_title"] = "Pool-Bewertung";
language_ge["pool_note_delete"] = "Berwertung löschen";
language_ge["pool_note_writer"] = "Zuletzt geändert von :writer_name, am :date";
language_ge["society"] = "Firma";
language_ge["cp"] = "Postleitzahl";
language_ge["new_password"] = "Neues Passwort ";
language_ge["conf_password"] = "Passwort bestätigen";
language_ge["actual_password"] = "aktuelles Passwort";
language_ge["password_change_success"] = "Änderung vorgenommen";
language_ge["password_change_fail"] = "ungültiges Passwort";
language_ge["change_password"] = "Passwort ändern";
language_ge["users_managed"] = "Verwaltete Benutzer";
language_ge["add_user"] = "Benutzer hinzufügen";
language_ge["user_list"] = "Benutzerliste";
language_ge["user_email"] = "Benutzter-Email";
language_ge["add_now"] = "Jetzt hinzufügen";
language_ge["role"] = "Rolle";
language_ge["member_since"] = "Mitglied seit ";
language_ge["action"] = "Maßnahme";
language_ge["modify_or_delete"] = "ändern oder löschen";
language_ge["edit_user"] = "Betnutzer ändern";
language_ge["delete_user"] = "Benutzer löschen";
language_ge["warning_!"] = "Achtung!";
language_ge["to_delete_the_user"] = "Möchten Sie den Benutzer wirklich löschen?";
language_ge["from_vigipool"] = "von Vigipool? ";
language_ge["action_irreversible."] = "Die Aktion ist unumkehrbar.";
language_ge["go_back"] = "Zurückgehen";
language_ge["user_update_success"] = "Informationen erfolgreich aktualisiert";
language_ge["user_delete_success"] = "Erfolgreiche Löschung des Nutzers";
language_ge["temperature"] = "Temperatur";
language_ge["ph"] = "pH";
language_ge["orp"] = "ORP";
language_ge["devices"] = "Geräte ";
language_ge["status"] = "Status";
language_ge["interventions_planned"] = "Geplante Einsätze";
language_ge["interventions_done"] = "Abgeschlossene Einsätze";
language_ge["interventions_graph"] = "Verteilung der Einsätze";
language_ge["date"] = "Datum ";
language_ge["type"] = "Art";
language_ge["ownername"] = "Besitzer";
language_ge["map"] = "Karte";
language_ge["create_new_intervention"] = "Neuer Einsatz erstellen";
language_ge["last_intervention"] = "Letzter Einsatz";
language_ge["new_intervention"] = "Neuer Einsatz";
language_ge["technician_in_charge"] = "Verantwortlicher Techniker";
language_ge["no_interventions"] = "Keine Einsätze";
language_ge["intervention"] = "Einsatz";
language_ge["intervention_type"] = "Einsatzart";
language_ge["intervention_type_0"] = "Einsätzeliste";
language_ge["intervention_type_1"] = "Rückspülung";
language_ge["intervention_type_2"] = "Einzug in die Überwinterung";
language_ge["intervention_type_3"] = "Auszug in die Überwinterung";
language_ge["intervention_type_4"] = "Laufende Pflege";
language_ge["intervention_type_5"] = "Wartung";
language_ge["intervention_button"] = "Einsatz planen ";
language_ge["intervention_realized"] = "Wird die Maßnahme durchgeführt?";
language_ge["select_pool"] = "Pool wählen";
language_ge["select_date"] = "Datum der Realisierung";
language_ge["date_intervention"] = "Datum des Eingriffs";
language_ge["select_tech"] = "Name des Technikers";
language_ge["select_comment"] = "Kommentar";
language_ge["comment_placeholder"] = "Beschreiben Sie die durchgeführte Aktion in wenigen Zeilen...";
language_ge["edit_intervention_title"] = "Details des Eingriffs";
language_ge["pool"] = "Pool";
language_ge["detail"] = "Pool-Infos";
language_ge["intervention_report"] = "Bericht";
language_ge["intervention_cost"] = "Kosten ";
language_ge["delete_intervention"] = "Einsatz löschen";
language_ge["messages"] = "Nachrichten";
language_ge["list_event_history"] = "Ereignisverlauf";
language_ge["data_did_not_change"] = "Die Daten auf Ihrem Gerät haben sich nicht geändert seit :";
language_ge["notification_bloc"] = "Warnungen";
language_ge["notifcation_ok_two_weeks"] = "Keine Benachrichtigung in den letzten zwei Wochen";
language_ge["SURCHAUFFE_ELECTROLYSEUR"] = "Interne Temperatur des Elektrolyseurs zu hoch";
language_ge["TEMP_HIGH"] = "Fehler bei der Messung von hohe Temperatur von :deviceType";
language_ge["TEMP_LOW"] = "Fehler bei der Messung der niedrigen Temperatur von :deviceType , der thermoregulierte Modus ist deaktiviert";
language_ge["CELLULE_CURRENT_LOW"] = "Die Elektrolysezelle produziert nicht mehr - wenden Sie sich an Ihren Installateur";
language_ge["SALT_MISSING"] = "Geringe Produktion - Siehe die Anleitung zu :deviceType";
language_ge["SALT_TOO_MUCH"] = "Salzgehalt Zu hoch. Elektrolyseur abgeschaltet";
language_ge["TEMP_MIN"] = "Minimale Wassertemperatur erreicht. Elektrolyse abgeschaltet";
language_ge["TEMP_MIN_SWITCHED_BACK"] = "Wassertemperatur wieder normal - Neustart der Elektrolyse";
language_ge["PH_NO_VALUE"] = "Ihr :deviceType empfängt keine pH-Messungen mehr";
language_ge["PH_NO_VALUE_SWITCHED_BACK"] = "Ihr :deviceType erhält wieder pH-Messungen";
language_ge["ORP_NO_VALUE"] = "Ihr :deviceType empfängt keine ORP-Messungen mehr ";
language_ge["ORP_ERROR_MESURE_22_SWITCHED_BACK"] = "Ihr :deviceType empfängt wieder ORP-Messungen";
language_ge["TUB_ALMOST_EMPTY"] = "Füllstand Produktbehälter :deviceType Bas";
language_ge["TUB_EMPTY"] = "Produktbehälter:deviceType vide- Pumpe gestoppt";
language_ge["V_MAX_INJECTED"] = "Das Maximalvolumen des injizierten Produkts wurde erreicht";
language_ge["PH_ERROR_MESURE_29"] = "Es werden Fehler bei den pH-Messungen festgestellt, die Injektion wird gestoppt, bitte überprüfen Sie Ihre Anlage und die Sonden.";
language_ge["PH_ERROR_MESURE_29_SWITCHED_BACK"] = "Die pH-Messungen sind wieder korrekt";
language_ge["ORP_ERROR_MESURE_27"] = "Es werden Fehler bei den ORP-Messungen festgestellt, die Injektion wird gestoppt, bitte überprüfen Sie Ihre Anlage und die Sonden.";
language_ge["ORP_ERROR_MESURE_27_SWITCHED_BACK"] = "Die ORP-Messungen sind wieder korrekt";
language_ge["WIFI_CONNECTION_ERROR"] = "Ihr Gerät :deviceType ist nicht mehr verbunden. Bitte überprüfen Sie, ob es mit Strom versorgt wird und ob Ihr WLAN-Netzwerk funktioniert.";
language_ge["WIFI_CONNECTION_ERROR_SWITCHED_BACK"] = "Ihr Gerät :deviceType ist verbunden";
language_ge["ELECTROLYSEUR_OVERLOAD_ERROR"] = "Stromversorgung Elektrolyseur überlastet";
language_ge["MODE_HORS_GEL"] = "Achtung, die Wassertemperatur beträgt 0°C, Frostgefahr! Ihre Filteranlage schaltet in den Frostschutzmodus Stufe 3 (Dauerbetrieb).";
language_ge["RS485_ERROR"] = "Auf Ihrem :deviceType wurde ein Kommunikationsfehler (RS485) festgestellt.";
language_ge["share_pool_ts"] = "Enddatum der Freigabe";
language_ge["cancel_modal"] = "Abbrechen";
language_ge["delete_modal"] = "Löschen";
language_ge["delete_sharing_pool_msg"] = "Sie sind dabei, die Verfolgung des Pools ':poolName ' zu löschen Sind Sie sicher, dass Sie dies durchführen möchten?";
language_ge["pac_mode"] = "Produktionsmodus";
language_ge["pac_speed"] = "Betriebgescchwindigkeit";
language_ge["pac_sched"] = "Programmierungsbereiche";
language_ge["two_weeks"] = "2 Wochen ";
language_ge["one_month"] = "1 Monat";
language_ge["two_month"] = "2 Monate ";
language_ge["confirm_button"] = "bestätigen";
language_ge["submit_button"] = "bestätigen";
language_ge["file_button"] = "Datei wählen";
language_ge["pool_expire_msg"] = "Diese E-Mail informiert Sie darüber, dass die Liste der unten aufgeführten Pools in weniger als zwei Wochen abläuft. Denken Sie daran, die Freigabe bei Ihrem Kunden erneut zu beantragen, da Sie sonst die Verfolgung dieses Pools in Ihrem Supervisionskonto verlieren.";

// Perso

language_ge["title"] = "Gesamtleitung von";
language_ge["display"] = "Anzeige- und Verlaufsverwaltung";
language_ge["deletion"] = "Automatische Suche und Hinzufügung neuer Funktionen";

language_ge["settings"] = "Optionen";

language_ge["frost_protection_mode"] = "Frostschutzmodus";

language_ge["projector"] = "Beamer";

language_ge["color_rc"] = "Farbe RC+";
language_ge["monochrome"] = "einfarbig";
language_ge["monochrome_dimmable"] = "Monochrom dimmbar";
language_ge["color_micro_cuts"] = "Farbige Mikroschnitte";

language_ge["auxiliary"] = "Hilfs";

language_ge["none"] = "Keiner";
language_ge["heater"] = "Heizung";
language_ge["treatment"] = "Behandlung";
language_ge["booster"] = "Booster";
language_ge["auxiliary"] = "Hilfs";

language_ge["title"] = "Hilfsmanagement";

language_ge["modes"] = "Mode";

language_ge["off"] = "Deaktivieren";
language_ge["on"] = "Zum Leuchten";
language_ge["prog"] = "Programmierung";
language_ge["auto"] = "Automatik";

language_ge["program"] = "Programm";
language_ge["day"] = "Tag";

language_ge["history_title"] = "Historisch";
language_ge["history"] = "Siehe Geschichte";

language_ge["title"] = "Lichtmanagement";

language_ge["state"] = "Zustand";

language_ge["off"] = "Ausgestorben";
language_ge["on"] = "Aussteigen";

language_ge["colors"] = "Farben";

language_ge["warm"] = "Heiß";
language_ge["cold"] = "Kalt";
language_ge["blue"] = "Blau";
language_ge["lagoon"] = "Lagune";
language_ge["cyan"] = "Cyan";
language_ge["green"] = "Grün";
language_ge["purple"] = "Lila";
language_ge["magenta"] = "Magenta";
language_ge["pink"] = "Rosa";
language_ge["red"] = "Rot";
language_ge["orange"] = "Orange";

language_ge["favorite"] = "Favoriten";

language_ge["sequences"] = "Sequenzen";

language_ge["gradiant"] = "Degradiert";
language_ge["rainbow"] = "Regenbogen";
language_ge["parade"] = "Parade";
language_ge["techno"] = "Technik";
language_ge["horizon"] = "Horizont";
language_ge["random"] = "Chance";
language_ge["magical"] = "Magie";

language_ge["programming"] = "Programme";
language_ge["program"] = "Programm";

language_ge["bright"] = "Helligkeit";
language_ge["speed"] = "Geschwindigkeit";

language_ge["low"] = "Schwach";
language_ge["medium"] = "DURCHSCHNITT";
language_ge["high"] = "Schüler";
language_ge["max"] = "Maximal";

language_ge["slow"] = "Langsam";
language_ge["normal"] = "Normal";
language_ge["fast"] = "Schnell";

language_ge["history_title"] = "Historisch";
language_ge["history"] = "Siehe Geschichte";

language_ge["monday"] = "Montag";
language_ge["tuesday"] = "Dienstag";
language_ge["wednesday"] = "Mittwoch";
language_ge["thursday"] = "DONNERSTAG";
language_ge["friday"] = "Freitag";
language_ge["saturday"] = "SAMSTAG";
language_ge["sunday"] = "Sonntag";

language_ge["color"] = "Farbe";

language_ge["duration"] = "Dauer";
language_ge["hours"] = "Stunden pro Tag";

language_ge["winter_mode"] = "Überwinterung";
language_ge["type_of_product_injected"] = "Art des eingespritzten Produkts";
language_ge["maximum_volume_injected"] = "Maximales injiziertes Volumen";
language_ge["product_volume_available"] = "Produktmenge verfügbar";
language_ge["setpoint"] = "Befehl";

language_ge["aux_state"] = "Hilfsstaat";
language_ge["aux_min_temp"] = "Minimale Zusatztemperatur";

language_ge["init_fail_1"] = "Die Initialisierung wurde nicht korrekt durchgeführt";
language_ge["init_fail_2"] = "Bitte versuchen Sie, die Seite zu aktualisieren";
language_ge["init_fail_3"] = "Und wenn es nicht funktioniert, setzen Sie das Plugin bitte zurück, indem Sie auf die folgende Schaltfläche klicken:";

language_ge["aux_state"] = "Hilfsstaat";
language_ge["aux_min_temp"] = "Minimale Zusatztemperatur";

language_ge["vigipool_modal_all"] = "Optionen";
language_ge["vigipool_modal_light"] = "Beleuchtung";
language_ge["vigipool_modal_filtration"] = "Filtration";
language_ge["vigipool_modal_auxiliary"] = "Hilfs";
language_ge["vigipool_modal_ph"] = "PH-Management";
language_ge["vigipool_modal_orp"] = "ORP-Management";
language_ge["vigipool_modal_light_m"] = "Beleuchtung";
language_ge["tild_modal_filt_m"] = "Filtration";
language_ge["vigipool_modal_auxiliary_1"] = "Hilfsgerät 1";
language_ge["vigipool_modal_auxiliary_2"] = "Hilfsgerät 2";
language_ge["vigipool_modal_ely"] = "Elektrolyse";

language_ge["mode"] = "Mode";
language_ge["daily_production_duration"] = "Tägliche Produktionszeit";
language_ge["programmed"] = "Programm";
language_ge["regulated"] = "Reguliert";
language_ge["shock"] = "Schock";

language_ge["instant_chlorine_prod"] = "Instant Chlor Prod";
language_ge["min_temperature"] = "Min. Temperatur";
language_ge["chlorine_prod"] = "Chlorprod";
language_ge["amperage"] = "Stromstärke";
language_ge["internal_temperature"] = "Innentemperatur";

language_ge["very_soft"] = "Sehr süß";
language_ge["soft"] = "Sanft";
language_ge["slightly_soft"] = "eher süß";
language_ge["slightly_hard"] = "Ziemlich hart";
language_ge["hard"] = "Hart";
language_ge["very_hard"] = "Sehr schwer";

language_ge["window_size_error"] = "Das Vigipool-Plugin-Fenster ist zu klein, bitte vergrößern Sie es mit dem Stiftsymbol oben rechts.";
language_ge["no_mqtt_data"] = "Es konnten keine MQTT-Daten abgerufen werden";

language_ge["no_parameters"] = "Dieses Gerät hat keine Parameter";

language_ge["warning_power"] = "Achtung, dieser Strom kann die Lebensdauer der Elektrolysezelle verkürzen und sollte nicht dauerhaft genutzt werden.";

language_ge["water"] = "Wasser";

language_ge["ph_regulation"] = "pH-Regulierung";
language_ge["orp_regulation"] = "ORP-Verordnung";

language_ge["injection_in_progress"] = "Injektion läuft";

language_ge["volume_injected_in_24h"] = "Injiziertes Volumen in 24 Stunden";

language_ge["chlorine_prod"] = "Produktion Chlor";

language_ge["stopped"] = "Gestoppt";

language_ge["color_picker"] = "Farbwähler";
language_ge["white"] = "Weiss";

language_ge["saved_colors"] = "Gespeicherte Farben";

language_ge["rainbow"] = "Regenbogen";
language_ge["fun"] = "Spaß";
language_ge["ocean"] = "Ozean";
language_ge["flamme"] = "Flamme";
language_ge["parade"] = "Parade";
language_ge["elegant"] = "Elegant";
language_ge["horizon"] = "Horizont";
language_ge["psyche"] = "Psyche";

language_ge["vigipool_modal_x3_state"] = "Beleuchtung X3";
language_ge["vigipool_modal_x3_state_prog_1"] = "Aktualisierung des X3-Beleuchtungsprogramms 1";
language_ge["vigipool_modal_x3_state_prog_2"] = "Aktualisierung des X3-Beleuchtungsprogramms 2";

language_ge["scheduling"] = "Planung";

language_ge["save"] = "Speichern";

language_ge["select_the_start_time_and_duration_of_the_program"] = "Wählen Sie Startzeit und Programmdauer";
language_ge["schedule"] = "Programm";
language_ge["at"] = "BEI";
language_ge["during"] = "während";

language_ge["add"] = "Hinzufügen";
language_ge["back"] = "Geh zurück";
language_ge["thermoregulated_mode"] = "Thermoregulierter Modus";

language_ge["see_advanced_options"] = "Siehe erweiterte Optionen";

language_ge["enslaved_to_filtration"] = "Vorbehaltlich der Filtration";

language_ge["force_filtration_during_aux"] = "Kraftfiltration";

language_ge["CGUWebURL"] = "https://eu.ccei-pool.com/de/content/3-datenschutzerklarung";
language_ge["FAQWebURL"] = "https://eu.ccei-pool.com/en/module/faqs/display";
language_ge["account_not_verified_btn_resend_email"] = "E-Mail erneut senden";
language_ge["alert_action_impossible_no_internet"] = "Diese Aktion kann momentan nicht ausgeführt werden. Bitte überprüfen Sie die Internetverbindung Ihres Smartphones und versuchen Sie es erneut.";
language_ge["alert_button_connect_aws"] = "Fernverbindung herstellen";
language_ge["alert_button_create_contact"] = "Meine Daten ausfüllen";
language_ge["alert_button_create_pool"] = "Informationen über meinen Pool ausfüllen";
language_ge["alert_button_stay_bluetooth"] = "In Bluetooth bleiben";
language_ge["alert_choc_from_off"] = "Es ist nicht möglich, den Shock-Mode aus dem Off-Modus heraus zu aktivieren, da das Gerät nach Ablauf der Dauer der Schockbehandlung anschließend wieder in den vorherigen Betriebsmodus zurückkehrt.\n\nUm den Shock-Mode aktivieren zu können, müssen Sie daher zunächst einen anderen Betriebsmodus wählen.";
language_ge["alert_configure_aux_description"] = "Bitte wählen Sie den Typ der an Ihr tild VP angeschlossenen Zusatzgeräte.\n\nSie können ihn jederzeit über den Bildschirm \"Geräteeinstellungen\" aktualisieren.";
language_ge["alert_configure_aux_title"] = "Erforderliche Einrichtung";
language_ge["alert_contact_deleted"] = "Ihre Kontaktdaten wurden gelöscht.";
language_ge["alert_contact_deleted_failed"] = "Ihre Kontaktdaten konnten nicht gelöscht werden.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal.";
language_ge["alert_contact_saved"] = "Ihre Kontaktdaten wurden gespeichert.";
language_ge["alert_contact_saved_failed"] = "Ihre Kontaktdaten konnten nicht gelöscht werden.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal. ";
language_ge["alert_contact_warning_delete"] = "Das Löschen der Kontaktinformationen wird auch Ihre Pool-Freigaben löschen.";
language_ge["alert_description_geoloc_crep_needed"] = "Sie haben die Geolokalisierung abgelehnt, aber sie ist notwendig, um den Dämmerungsmodus des Lichtprogramms zu nutzen und das Wetter abzurufen.\n\nMöchten Sie die Einstellungen der App öffnen, um diese Einstellung zu ändern?";
language_ge["alert_dialog_aws_timeout_error"] = "Ihr Gerät scheint nicht mit dem Internet verbunden zu sein.";
language_ge["alert_dialog_calibration_in_progress_orp_value_message"] = "Kalibrierung läuft, aktueller RedOx: %1$s";
language_ge["alert_dialog_calibration_in_progress_ph_value_message"] = "Kalibrierung läuft, aktueller pH: %1$s";
language_ge["alert_dialog_calibration_in_progress_title"] = "Bitte bleiben Sie dran";
language_ge["alert_dialog_config_change_device_added_message"] = "Ein Gerät wurde soeben zu Ihrer Konfiguration hinzugefügt.\n\nMelden Sie sich erneut an.";
language_ge["alert_dialog_config_change_device_removed_message"] = "Es scheint, dass ein Gerät gerade aus Ihrer Konfiguration entfernt wurde.\n\nMelden Sie sich erneut an.";
language_ge["alert_dialog_delete_device_message"] = "Sind Sie sicher, dass Sie das Gerät \"%1$s\" von Ihren Vigipool-Geräten entfernen wollen?";
language_ge["alert_dialog_delete_device_title"] = "Gerät löschen";
language_ge["alert_dialog_factory_reset_message"] = "Sind Sie sicher, dass Sie den Werksreset durchführen möchten?";
language_ge["alert_dialog_lost_ble_connection_message"] = "Die Bluetooth-Verbindung mit dem Gerät wurde verloren.";
language_ge["alert_dialog_message_bluetooth_error"] = "Es ist ein Bluetooth-Fehler aufgetreten, bitte versuchen Sie es erneut.";
language_ge["alert_dialog_message_loading_timeout"] = "Ladezeit überschritten, bitte versuchen Sie es erneut.";
language_ge["alert_dialog_message_remote_error"] = "Bei der Fernverbindung ist ein Fehler aufgetreten, bitte versuchen Sie es noch einmal.";
language_ge["alert_dialog_no_internet_message"] = "Bitte überprüfen Sie den Status Ihrer Internetverbindung.";
language_ge["alert_dialog_no_internet_title"] = "Netzwerkfehler";
language_ge["alert_dialog_orp_calibration_in_progress_message"] = "RedOx-Kalibrierung wird durchgeführt.";
language_ge["alert_dialog_ph_calibration_in_progress_message"] = "pH-Kalibrierung wird durchgeführt.";
language_ge["alert_dialog_title_bluetooth_error"] = "Bluetooth-Fehler";
language_ge["alert_dialog_title_loading_timeout"] = "Zeit überschritten";
language_ge["alert_dialog_token_expired_message"] = "Die Anmeldung ist abgelaufen.\n\nMelden Sie sich erneut an.";
language_ge["alert_edit_last_backwash_error"] = "Bitte überprüfen Sie die Internetverbindung Ihres Smartphones und speichern Sie das Datum des letzten Spülvorgangs manuell über den Bildschirm \"Einstellungen für den Spülvorgang\" neu.";
language_ge["alert_electrolyse_power"] = "Achtung, diese Leistung kann die Lebensdauer der Elektrolysezelle verkürzen und sollte nicht dauerhaft verwendet werden.";
language_ge["alert_empty_shadow_description"] = "Es ist nicht möglich, die Informationen von Ihrem Gerät abzurufen.\n\nBitte überprüfen Sie, ob Ihr Netz ausreichend abgedeckt ist und ob Ihr Gerät mit dem Internet verbunden ist.\nBei Bedarf können Sie die Verbindung Ihres Geräts konfigurieren, indem Sie eine Bluetooth-Verbindung herstellen.\n\nWenn das Problem weiterhin besteht, können Sie versuchen, das Gerät neu zu starten.";
language_ge["alert_factory_reset_description"] = "Möchten Sie Ihr Gerät auf die Werkseinstellungen zurücksetzen?\nBitte beachten Sie, dass diese Änderung nicht rückgängig gemacht werden kann.";
language_ge["alert_factory_reset_title"] = "Werkeinstellungen zurücksetzen ";
language_ge["alert_incomplete_shadow_description"] = "Es ist nicht möglich, die Informationen von Ihrem Gerät abzurufen.\n\nBitte überprüfen Sie, ob Ihr Netz ausreichend abgedeckt ist und ob Ihr Gerät mit dem Internet verbunden ist.\nBei Bedarf können Sie die Verbindung Ihres Geräts konfigurieren, indem Sie eine Bluetooth-Verbindung herstellen.\n\nWenn das Problem weiterhin besteht, können Sie versuchen, das Gerät über die Taste unten neu zu starten.";
language_ge["alert_navigate_to_configure_wifi_description"] = "Sie können nun die Internetverbindung Ihrer Anlage einrichten, damit Sie Ihren Pool fernsteuern können.";
language_ge["alert_navigate_to_sign_in_vigipool_description"] = "Sie können nun Ihr Vigipool-Konto erstellen oder sich in Ihr Konto einloggen, um Ihren Pool fernzusteuern.";
language_ge["alert_pool_deleted"] = "Die Informationen zu Ihrem Pool wurden gelöscht.";
language_ge["alert_pool_deleted_failed"] = "Ihre Poolinformationen konnten nicht gelöscht werden.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal.";
language_ge["alert_pool_saved"] = "Die Informationen zu Ihrem Pool wurden gespeichert.";
language_ge["alert_pool_saved_failed"] = "Ihre Poolinformationen konnten nicht gespeichert werden.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal.";
language_ge["alert_pool_warning_delete"] = "Das Löschen Ihrer Poolinformationen löscht auch Ihre gespeicherten Kontaktinformationen sowie Ihre Poolfreigaben, falls Sie welche haben.";
language_ge["alert_power_electrolyse_choice_prog"] = "Programmiert";
language_ge["alert_power_electrolyse_description"] = "Welchen Modus möchten Sie für Ihre Elektrolyse verwenden?";
language_ge["alert_reboot_description"] = "Sind Sie sicher, dass Sie Ihr Gerät neu starten möchten?";
language_ge["alert_reboot_title"] = "Neustart";
language_ge["alert_reconnect_in_ble_for_crep"] = "Ihr Gerät benötigt Ihre Geolokalisierung, um den Dämmerungsmodus der Lichtplanung zu verwenden.\n\nWenn Sie diese Option nutzen möchten, stellen Sie bitte erneut eine Bluetooth-Verbindung her, um Ihren Standort mitzuteilen.";
language_ge["alert_reconnect_in_ble_for_music_mode"] = "Musikmodus nicht verfügbar bei \"Remote\"-Verbindung.\n\nUm diese Funktion nutzen zu können, müssen Sie sich im Bluetooth-Modus mit dem Gerät verbinden.\n\nDazu öffnen Sie das Seitenmenü, klicken auf \"Verbindung trennen\" und stellen über die Registerkarte \"Bluetooth\" eine Verbindung zu Ihrem Gerät her.";
language_ge["alert_reconnecting_cancel"] = "Abbruch der Neuverbindung";
language_ge["alert_reconnecting_description"] = "Versuch einer Neuverbindung…";
language_ge["alert_reconnecting_title"] = "Verbindung verloren";
language_ge["alert_reg_warning_description"] = "Es wurden keine RedOx-Messgeräte gefunden.\nWenn innerhalb der nächsten 15 Minuten kein Messgerät gefunden wird, schaltet die Elektrolyse in den automatischen Modus (programmiert + temperaturgesteuert).";
language_ge["alert_regulation_available_volume_edit_mode_on"] = "Die verfügbare Produktmenge befindet sich im Bearbeitungsmodus. Möchten Sie die Änderungen speichern?";
language_ge["alert_schedule_modified_but_not_saved"] = "Sie haben Ihre Programmierung bearbeitet, aber die Änderungen nicht gespeichert";
language_ge["alert_schedule_modified_but_not_saved_action_do_not_save"] = "Sie nicht\nbehalten";
language_ge["alert_schedule_modified_but_not_saved_action_save"] = "Änderungen speichern";
language_ge["alert_service_modified"] = "Eine Änderung in Ihrem Gerätenetzwerk (z. B. Anschluss eines neuen Geräts) wurde erkannt. Wir werden eine erneute Verbindung herstellen, damit die App die notwendigen Änderungen berücksichtigt.";
language_ge["alert_shared_pool_deleted"] = "Die Freigabe Ihres Pools ist jetzt gelöscht.";
language_ge["alert_shared_pool_deleted_failed"] = "Die Freigabe Ihres Pools konnte nicht gelöscht werden.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal.";
language_ge["alert_shared_pool_edited"] = "Die Dauer der gemeinsamen Nutzung Ihres Pools wurde aktualisiert.";
language_ge["alert_shared_pool_edited_failed"] = "Die Änderung der Dauer der gemeinsamen Nutzung Ihres Pools konnte nicht erfolgreich durchgeführt werden.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal.";
language_ge["alert_shared_pool_email_already_exist"] = "Sie teilen Ihren Pool bereits mit diesem Profi (identische E-Mail-Adresse).\n\nBitte geben Sie eine andere E-Mail-Adresse an oder bearbeiten Sie das Enddatum Ihrer Freigabe in der Liste der bestehenden Freigaben unten auf diesem Bildschirm.";
language_ge["alert_shared_pool_need_contact"] = "Bevor Sie Ihren Pool mit anderen teilen, müssen Sie unbedingt Ihre Kontaktdaten angeben.";
language_ge["alert_shared_pool_need_pool"] = "Um Ihren Pool zu teilen, müssen Sie seine Eckdaten angeben.";
language_ge["alert_shared_pool_saved"] = "Ihr Pool wurde erfolgreich freigegeben.";
language_ge["alert_shared_pool_saved_failed"] = "Die Freigabe Ihres Pools ist nicht erfolgreich gewesen.\n\nBitte überprüfen Sie Ihre Internetverbindung oder versuchen Sie es später noch einmal.";
language_ge["alert_warning_delete_vigipool_device"] = "Sobald Sie dieses Gerät aus Ihrem Konto entfernt haben, müssen Sie es erneut per Bluetooth (über die App) koppeln, wenn Sie es wieder hinzufügen möchten.\n\nSind Sie sicher, dass Sie es löschen möchten?";
language_ge["alert_warning_reset_sensor_date"] = "Sie setzen das Datum der letzten Änderung Ihrer Sonde zurück. Diese Änderung kann nicht rückgängig gemacht werden. Sind Sie sicher, dass Sie fortfahren möchten?";
language_ge["alert_warning_winter_mode"] = "Der Überwinterungsmodus wird die Injektion Ihres Geräts deaktivieren.";
language_ge["alerts"] = "Warnungen";
language_ge["amplify_device_current"] = "(Dieses Gerät)";
language_ge["amplify_error_add_device"] = "Fehler beim Hinzufügen des Geräts";
language_ge["amplify_error_delete_device"] = "Fehler beim Löschen des Geräts";
language_ge["amplify_error_sign_out"] = "Fehler beim Abmelden";
language_ge["amplify_linked_devices"] = "Ihre mit Vigipool verbundenen Geräte";
language_ge["android_output_nb_format"] = "Ausgang %1$d";
language_ge["android_zone_nb_format"] = "Zone %1$d";
language_ge["app_restart_dialog_message"] = "Jetzt können Sie Ihren Pool von überall aus im Auge behalten, wenn Sie den Verbindungsmodus \"Aus der Ferne\" verwenden.";
language_ge["ask_for_authorization"] = "Genehmigung anfordern";
language_ge["ask_for_authorization_description"] = "Wir benötigen die Genehmigung von Spotify, damit wir uns mit der Musik synchronisieren können.";
language_ge["ask_user_configure_lynx_wifi"] = "Ihre Anlage ist mit Ihrem Lynx verbunden, aber Sie haben keinen Internetzugang. Um Ihre Anlage mit WLAN zu verbinden, konfigurieren Sie es auf Ihrem Lynx.";
language_ge["aux2name"] = "Zusatz 2";
language_ge["aux_forced_off_no_filtration"] = "Der Zusatz ist pausiert, da sie nur bei laufender Filterung funktionieren kann.\nDer Zusatz startet, sobald die Filterung eingeschaltet ist.";
language_ge["aux_forced_off_no_filtration_title"] = "Warten auf die Filterung";
language_ge["aux_forced_off_orp_measurement_error"] = "Der Zusatz ist pausiert, weil der RedOx-Messwert weniger als 400 mV beträgt; oder weil das Messgerät nicht angeschlossen ist.";
language_ge["aux_forced_off_orp_measurement_error_title"] = "RedOx-Messfehler";
language_ge["aux_forced_off_orperror_description"] = "s gibt ein Problem mit den RedOx-Messungen, Sie müssen dieses Problem beheben oder den RedOx-Sollwert in den Einstellungen des Zusatzes deaktivieren, damit Sie Ihr Elektrolysegerät starten können.";
language_ge["aux_forced_off_orperror_title"] = "Ungültige RedOx-Maßnahme";
language_ge["aux_forced_off_orpreached"] = "Der Zusatz ist pausiert, weil der RedOx-Sollwert erreicht wurde.";
language_ge["aux_forced_off_orpreached_title"] = "RedOx-Sollwert erreicht";
language_ge["aux_forced_off_starter_description"] = "Die Filterung wurde soeben eingeschaltet und der Zusatz wird in wenigen Minuten automatisch starten.";
language_ge["aux_forced_off_starter_title"] = "Warten auf den Start der Filterung.";
language_ge["aux_forced_off_temp_too_high"] = "Der Zusatz ist pausiert, weil der Temperatursollwert erreicht wurde.";
language_ge["aux_forced_off_temp_too_high_title"] = "Temperatursollwert erreicht";
language_ge["aux_forced_off_temp_too_low"] = "Der Zusatz ist pausiert, weil der Mindesttemperatur-Sollwert nicht erreicht wurde.";
language_ge["aux_forced_off_temp_too_low_title"] = "Min. Temp. nicht erreicht";
language_ge["aux_min_temp_picker_dialog_title"] = "Wählen Sie die Mindesttemperatur";
language_ge["aux_paused"] = "%1$s pausiert";
language_ge["aux_starting"] = "wird gestartet";
language_ge["aux_type_booster"] = "Vorverdichter";
language_ge["aux_type_heater"] = "Heizung";
language_ge["aux_type_none"] = "Keine";
language_ge["auxiliary"] = "Zusatz";
language_ge["auxiliary_mode"] = "Zusatzmodus";
language_ge["auxiliary_overlay_aux_min_temp"] = "Mindesttemperatur für den Beginn der Behandlung";
language_ge["auxiliary_paused"] = "Zusatz in Pause";
language_ge["auxiliary_settings_dialog_filtration_dependant_tooltip"] = "Wenn der Zusatz an die Filterung gekoppelt ist, kann er nicht starten, wenn die Filterung ausgeschaltet ist.";
language_ge["auxiliary_treatment_orp_value"] = "Gemessener RedOx-Wert: %1$d mV";
language_ge["auxiliary_type_deactivated"] = "Deaktiviert";
language_ge["auxiliary_type_orp_treatment"] = "RedOx-Behandlung";
language_ge["auxiliary_type_undefined"] = "Unbekannt";
language_ge["backwash"] = "Rückspülung";
language_ge["backwash_close_sewer_valve"] = "Schließen Sie dann das Abwasserventil";
language_ge["backwash_completed"] = "Rückspülung beendet";
language_ge["backwash_help"] = "Eine regelmäßige Rückspülung Ihrer Filteranlage ist zu empfehlen, um klares Wasser zu gewährleisten.\nVigipool kann Ihnen dabei behilflich sein.\nAchtung: Ihre Filteranlage wird beim Start der Rückspülung auf Pause geschaltet.";
language_ge["backwash_impossible"] = "Rückspülung nicht möglich";
language_ge["backwash_impossible_filt_prohibited_message"] = "Bitte nehmen Sie das Pumpenverbot Ihrer Filterung auf (direkt über den Schalter an Ihrem Gehäuse), bevor Sie eine Rückspülung starten.";
language_ge["backwash_impossible_forced_march_message"] = "Bitte nehmen Sie den Zwangslauf Ihrer Filterung auf (direkt auf den Schalterknopf Ihres Schaltkastens), bevor Sie eine Rückspülung starten.";
language_ge["backwash_in_progress"] = "Rückspülung läuft";
language_ge["backwash_in_progress_description"] = "Es scheint, dass eine Rückspülung läuft.\n\nWenn Sie glauben, dass es sich dabei um einen Fehler handelt und Sie das Gerät wieder in den normalen Betriebszustand versetzen möchten, klicken Sie bitte auf \"Rückspülen stoppen\".\nAndernfalls beenden Sie bitte die App und starten sie erneut, wenn der Rückspülvorgang abgeschlossen ist.";
language_ge["backwash_mode_welcome"] = "Willkommen im Rückspülmodus";
language_ge["backwash_mode_welcome_description"] = "Dieser Modus ermöglicht es Ihnen, Ihren Filter effizient zu reinigen.\n\nAchtung dieser Modus erfordert, dass Sie sich für eine Dauer von 5 bis 15 Minuten physisch in Ihrem Technikraum befinden.";
language_ge["backwash_need_vigipool_account"] = "Das Einloggen in ein Vigipool-Konto ist erforderlich, um die geführte Rückspülung und die Rückspülungserinnerung nutzen zu können.\n\nSie können ein Vigipool-Konto erstellen oder sich über das Hauptmenü der App anmelden.";
language_ge["backwash_next_water_clear"] = "Mein Wasser ist klar, weiter";
language_ge["backwash_open_sewer_and_turn_valve_to_wash"] = "Öffnen Sie das Abwasserventil und drehen Sie das Ventil auf die Position WASCHEN";
language_ge["backwash_reminder"] = "Erinnerung an Rückspülung";
language_ge["backwash_rinse_completed"] = "Spülung beendet";
language_ge["backwash_rinse_in_progress"] = "Die Spülung läuft, bitte warten Sie";
language_ge["backwash_valve_turn_to_filtration"] = "Setzen Sie das Ventil wieder auf FILTRATION";
language_ge["backwash_valve_turn_to_rinse"] = "Drehen Sie das Ventil auf SPÜLEN";
language_ge["backwash_wash_completed"] = "Waschen beendet";
language_ge["backwash_wash_in_progress"] = "Der Waschvorgang läuft, bitte warten";
language_ge["banner_music_mode_need_one_zone_title"] = "Der Musikmodus benötigt mindestens einen ausgewählten Bereich, um zu funktionieren.";
language_ge["bar"] = "bar";
language_ge["ble_needed"] = "Bluetooth notwendig";
language_ge["ble_permission_needed"] = "Bluetooth-Erlaubnis erforderlich";
language_ge["blue"] = "Blau";
language_ge["bluetooth_disabled_error_message"] = "Bluetooth ist nicht verfügbar. Bitte überprüfen Sie, ob Bluetooth auf Ihrem Smartphone aktiviert ist und ob die App %1$s die Erlaubnis hat, Bluetooth zu verwenden (kann in der App \"Einstellungen\" des Telefons geändert werden).";
language_ge["bluetooth_not_available_error_message"] = "Die Bluetooth-Funktionalität ist auf Ihrem Android-Gerät nicht verfügbar.";
language_ge["bluetooth_permission_rationale_message"] = "Die Bluetooth-Erlaubnis ist erforderlich, um eine Bluetooth-Verbindung mit Ihrem Gerät herzustellen.";
language_ge["bluetooth_permission_rationale_title"] = "Bluetooth erlauben";
language_ge["bonding_cancel"] = "Abbrechen des Pairings";
language_ge["bonding_check_title"] = "Abrufen von Daten";
language_ge["bonding_error"] = "Pairing-Fehler";
language_ge["bonding_help_rssi"] = "Halten Sie Ihr Smartphone einfach in die Nähe Ihrer %1$s, um sie zu koppeln.";
language_ge["bonding_help_rssi_and_btn"] = "Halten Sie einfach Ihr Smartphone in die Nähe oder drücken Sie einmal auf die Taste Ihres %1$s, um sie zu koppeln.";
language_ge["bonding_location_unavailable"] = "Der aktuelle Standort konnte nicht abgerufen werden, um das Pairing abzuschließen.";
language_ge["bonding_message"] = "Bitte drücken Sie einmal auf die Taste Ihres %1$s (oben abgebildet), um ein Pairing mit Ihrem Telefon durchzuführen.";
language_ge["bonding_required_title"] = "Pairing erforderlich";
language_ge["bonding_timeout"] = "Wartezeit für das Pairing überschritten.";
language_ge["brightness"] = "Helligkeit";
language_ge["button_cancel_calibration"] = "Kalibrierung abbrechen";
language_ge["button_cancel_connection"] = "Verbindung abbrechen";
language_ge["button_cancel_scan"] = "Suche abbrechen";
language_ge["button_update_app_store"] = "Im AppStore aktualisieren";
language_ge["bypass"] = "Bypass";
language_ge["calibrate"] = "Kalibrieren";
language_ge["calibration_adjustment_information"] = "Der Wert von %1$s wird bei der nächsten Messung angepasst, also in etwa zehn Sekunden, wenn die Filterung eingeschaltet ist, oder beim nächsten Start der Filterung.";
language_ge["calibration_choose_type_title"] = "Art der Kalibrierung";
language_ge["calibration_debit"] = "Durchflusskalibration";
language_ge["calibration_debit_flow_warning"] = "Die Kalibrierung des Durchflusses kann nur bei eingeschalteter Filterung durchgeführt werden.";
language_ge["calibration_debit_warning"] = "Die Durchflussmenge wird bei der nächsten Messung angepasst, also in etwa zehn Sekunden, wenn die Filterung eingeschaltet ist, oder beim nächsten Start der Filterung.";
language_ge["calibration_failed"] = "Die Kalibrierung konnte nicht erfolgreich durchgeführt werden, bitte überprüfen Sie Ihre Sonde.";
language_ge["calibration_first_point_title"] = "Kalibrierung 1. Punkt";
language_ge["calibration_in_progress"] = "Kalibrierung wird durchgeführt…";
language_ge["calibration_information"] = "Die Kalibrierung dauert zwischen 30 Sekunden und 3 Minuten. Bitte bleiben Sie während dieses Vorgangs in der Nähe des Geräts und lassen Sie die App geöffnet.";
language_ge["calibration_manual"] = "Manuelle Anpassung";
language_ge["calibration_one_point"] = "Kalibrierung 1. Punkt ";
language_ge["calibration_orp"] = "RedOx-Kalibrierung";
language_ge["calibration_orpimpossible"] = "Wir haben derzeit keine RedOx-Messung. Bitte schalten Sie die Filterung ein, um eine gültige Messung abzurufen, damit Sie sie anpassen können.";
language_ge["calibration_orpsensor"] = "RedOx-Sonde-Kalibrierung";
language_ge["calibration_orpwarning"] = "RedOx wird bei der nächsten Messung angepasst, also in etwa zehn Sekunden, wenn dieFilterung eingeschaltet ist, oder beim nächsten Start der Filterung.";
language_ge["calibration_ph"] = "pH-Kalibrierung";
language_ge["calibration_phimpossible"] = "Wir haben derzeit keine pH-Messung. Bitte schalten Sie die Filterung ein, um einen gültigen Messwert zu erhalten, damit Sie ihn anpassen können.";
language_ge["calibration_phsensor"] = "pH-Sonde-Kalibrierung ";
language_ge["calibration_phwarning"] = "Der pH-Wert wird bei der nächsten Messung angepasst, also in etwa zehn Sekunden, wenn die Filterung eingeschaltet ist, oder beim nächsten Start der Filterung.";
language_ge["calibration_pressure"] = "Druck-Kalibrierung";
language_ge["calibration_pressure_warning"] = "Der Druck wird bei der nächsten Messung angepasst, also in etwa zehn Sekunden, wenn die Filterung eingeschaltet ist, oder beim nächsten Start der Filterung.";
language_ge["calibration_second_point_title"] = "Kalibrierung 2. Punkt";
language_ge["calibration_start"] = "Kalibrierung starten";
language_ge["calibration_start_second_point"] = "Den 2. Punkt kalibrieren";
language_ge["calibration_success"] = "Kalibrierung erfolgreich abgeschlossen";
language_ge["calibration_temp"] = "Temperatur-Kalibrierung ";
language_ge["calibration_temp_impossible"] = "Wir haben derzeit keine Temperaturmessung. Bitte schalten Sie die Filterung ein, um eine gültige Messung abzurufen, damit Sie sie anpassen können.";
language_ge["calibration_temp_warning"] = "Die Temperatur wird bei der nächsten Messung angepasst, also in etwa zehn Sekunden, wenn die Filterung eingeschaltet ist, oder beim nächsten Start der Filterung.";
language_ge["calibration_two_points"] = "2-Punkt-Kalibrierung";
language_ge["cgu_accept_warning"] = "Sie müssen das Kästchen ankreuzen, um die AGB zu akzeptieren.";
language_ge["cgu_bt_accept"] = "Akzeptieren";
language_ge["cgu_bt_accept_label"] = "Ich habe die Allgemeinen Nutzungsbedingungen gelesen und akzeptiere sie.";
language_ge["cgu_read_warning"] = "Sie müssen die AGB lesen, bevor Sie zustimmen.";
language_ge["channels"] = "Kanäle";
language_ge["color"] = "Farbe";
language_ge["color_eyedropper_title"] = "Farbe-Auswahl ";
language_ge["come_closer_to_your_device"] = "Gehen Sie näher an Ihr Gerät heran";
language_ge["common_accept_cgu"] = "Ich stimme den Nutzungsbedingungen zu";
language_ge["common_address"] = "Anschrift ";
language_ge["common_bluetooth"] = "Bluetooth";
language_ge["common_calibration"] = "Kalibrierung";
language_ge["common_cancel"] = "Abbrechen";
language_ge["common_city"] = "Stadt ";
language_ge["common_closed"] = "Geschlossen ";
language_ge["common_congratulations"] = "Herzlichen Glückwunsch!";
language_ge["common_connect"] = "Sich anmelden";
language_ge["common_connecting"] = "Verbindung wird hergestellt";
language_ge["common_country"] = "Land";
language_ge["common_cover"] = "Abdeckung";
language_ge["common_danger"] = "Gefahr";
language_ge["common_debit"] = "Durchfluss";
language_ge["common_delete_anyway"] = "Trotzdem löschen";
language_ge["common_disable"] = "Deaktivieren";
language_ge["common_dismiss"] = "Schließen";
language_ge["common_electrolyse"] = "Elektrolyse";
language_ge["common_email"] = "Email-Adresse";
language_ge["common_enable"] = "Aktivieren";
language_ge["common_error"] = "Fehler";
language_ge["common_filtration_type"] = "Filterung";
language_ge["common_gateway"] = "Zugangsstelle";
language_ge["common_ignore"] = "Ignorieren";
language_ge["common_information"] = "Information";
language_ge["common_light"] = "Licht ";
language_ge["common_loading"] = "Ladevorgang läuft…";
language_ge["common_min_temp"] = "Mindesttemperatur";
language_ge["common_mode"] = "Modus";
language_ge["common_mode_choc"] = "Shock";
language_ge["common_mode_prog"] = "Programmiert ";
language_ge["common_new_password"] = "Neues Passwort";
language_ge["common_no"] = "Nein";
language_ge["common_off"] = "Off";
language_ge["common_ok"] = "OK";
language_ge["common_on"] = "On";
language_ge["common_open"] = "Geöffnet";
language_ge["common_orp"] = "RedOx";
language_ge["common_owner_name"] = "Name des Besitzers";
language_ge["common_password"] = "Passwort";
language_ge["common_password_confirmation"] = "Passwort-Bestätigung";
language_ge["common_ph"] = "pH";
language_ge["common_phone_number"] = "Smartphone";
language_ge["common_pool_name"] = "Name des Pools";
language_ge["common_pool_type"] = "Art";
language_ge["common_post_code"] = "Postleitzahl";
language_ge["common_pressure"] = "Druck";
language_ge["common_remotely"] = "Aus der Ferne";
language_ge["common_reset"] = "Zurücksetzen";
language_ge["common_retry"] = "Erneut versuchen";
language_ge["common_save"] = "Speichern";
language_ge["common_scheduling"] = "Programmation";
language_ge["common_set_point"] = "Wert";
language_ge["common_sign_in"] = "Sich anmelden";
language_ge["common_sign_up"] = "Ein Konto erstellen";
language_ge["common_stop"] = "Im Stillstand";
language_ge["common_structure"] = "Struktur";
language_ge["common_success"] = "Erfolg";
language_ge["common_temperature"] = "Temperatur";
language_ge["common_temperature_unit"] = "°C";
language_ge["common_temperature_unit_us"] = "°F";
language_ge["common_thermoregulated"] = "Thermoreguliert";
language_ge["common_thermoregulation_mode"] = "Thermoregulierter Modus";
language_ge["common_timer"] = "Timer";
language_ge["common_unknown_device"] = "Unbekanntes Gerät";
language_ge["common_validate"] = "Bestätigen";
language_ge["common_volume_eu"] = "Volumen (m3)";
language_ge["common_volume_na"] = "Volumen (US gal)";
language_ge["common_warning"] = "Achtung";
language_ge["common_water"] = "Wasser";
language_ge["common_wifi_state"] = "Verbindungsstatus :";
language_ge["common_working"] = "Läuft";
language_ge["common_yes"] = "Ja";
language_ge["configure_dmxchannels"] = "Einstellungen DMX-Kanäle";
language_ge["configure_price_kwh"] = "kWh-Preis konfigurieren";
language_ge["configure_unit_temperature_help"] = "Die in der App verwendete Temperatureinheit (Celsius oder Fahrenheit) stammt aus den Einstellungen Ihres Telefons und hängt daher nicht von dieser Wahl ab.";
language_ge["configure_wifi_connection"] = "WLAN-Verbindung einstellen";
language_ge["configure_zones"] = "Konfiguration der Zonen";
language_ge["confirm"] = "Bestätigung";
language_ge["confirm_force_filtration_alert"] = "Die Filterung muss eingeschaltet sein, damit der Zusatz funktionieren kann.\n\nWenn Sie diese Option deaktivieren, kann sie das Einschalten der Filterung nicht erzwingen (falls nötig) und sich daher nicht einschalten, wenn die Filterung nicht eingeschaltet ist.";
language_ge["confirm_force_filtration_pac_alert"] = "Die Filterung muss eingeschaltet sein, damit die Wärmepumpe laufen kann.\n\nWenn Sie diese Option deaktivieren, kann sie das Einschalten der Filterung nicht erzwingen (falls nötig) und kann sich daher nicht einschalten, wenn die Filterung nicht läuft.";
language_ge["confirm_password"] = "Bestätigung";
language_ge["connect"] = "Verbindung";
language_ge["connect_setup_to_wifi"] = "Ihr Lokal mit WLAN vernetzen?";
language_ge["connected"] = "Verbindet";
language_ge["connected_to_wifi"] = "Mit WLAN verbunden";
language_ge["connecting_to_phileo"] = "Verbindung zu %1$s";
language_ge["connection_destination_internet"] = "zum Wifi";
language_ge["connection_log_out"] = "Sich abmelden";
language_ge["connection_looking_for_device_title"] = "Suche nach Geräten…";
language_ge["connection_to_internet_none"] = "Keine Internet-Verbindung";
language_ge["consumption"] = "Energieverbauch";
language_ge["contact_informations"] = "Meine Kontaktdaten";
language_ge["contact_informations_needed"] = "Erforderliche Kontaktinformationen";
language_ge["context_text_view_configure_your_wifi_connection"] = "Konfigurieren Sie Ihre WLAN-Verbindung";
language_ge["controlled_dmx"] = "DMX-gesteuert";
language_ge["controlled_micro"] = "Über Mikrofon gesteuert";
language_ge["cover_detected_details"] = "Dies kann die Betriebszeit einiger Geräte beeinträchtigen.";
language_ge["cover_detected_title"] = "Erkannte Abdeckung";
language_ge["cs4z_reconfigure_output"] = "Ausgänge neu konfigurieren";
language_ge["cs4z_rename_zone"] = "Feld umbenennen";
language_ge["cs4z_rename_zone_instructions"] = "Geben Sie den neuen Namen für das Feld ein.";
language_ge["cs4z_rename_zone_placeholder"] = "Neuer Name (z.B. Schwimmbad, Spa...)";
language_ge["cs4z_settings"] = "Zoneneinstellungen";
language_ge["cs4z_use_other_zones"] = "Gleichzeitig steuern :";
language_ge["cs4z_zone_name"] = "Name des Felds :";
language_ge["date_hour_ampmformatter"] = "h:mm j";
language_ge["date_hour_formatter"] = "H:mm";
language_ge["day"] = "Tag";
language_ge["day_caps"] = "Tag";
language_ge["days"] = "Tage";
language_ge["debit_current"] = "Aktueller Durchfluss";
language_ge["debit_desired"] = "Rektifizierter Durchfluss";
language_ge["debit_history"] = "Durchflusshistorie";
language_ge["delete"] = "Löschen";
language_ge["delete_all_registered_colors_message"] = "Sind Sie sicher, dass Sie die gespeicherten Farben löschen möchten?";
language_ge["delete_all_registered_colors_title"] = "Farben löschen";
language_ge["delete_contact_informations"] = "Kontaktinformationen löschen";
language_ge["delete_pool"] = "Meine Informationen löschen";
language_ge["demo_mode"] = "Demo-Modus";
language_ge["device_name_phileo"] = "Phileo";
language_ge["device_not_connected"] = "Ihr Gerät %1$s ist nicht verbunden.";
language_ge["device_shadow_error"] = "Es konnte keine Verbindung zu %1$s hergestellt werden.\n\nGrund: Kein verbundenes Objekt gefunden.";
language_ge["devices_remote_dialog_device_not_attached"] = "Wir sind nicht in der Lage, dieses Gerät mit Ihrem Vigipool-Konto zu verknüpfen.";
language_ge["devices_remote_dialog_device_not_found"] = "Wir sind nicht in der Lage, dieses Gerät in Ihrem Vigipool-Konto zu finden.";
language_ge["devices_remote_dialog_invalid_things"] = "Wir sind nicht in der Lage, die mit Ihrem Vigipool-Konto verbundenen Informationen abzurufen.";
language_ge["devices_remote_dialog_login_failed_message"] = "Ungültige E-Mail-Adresse und/oder Passwort";
language_ge["devices_remote_dialog_login_failed_network_error_message"] = "Überprüfen Sie, ob Sie mit dem Internet verbunden sind.";
language_ge["devices_remote_dialog_login_failed_network_error_title"] = "Netzwerkfehler";
language_ge["devices_remote_dialog_no_devices_found"] = "Wir sind nicht in der Lage, die mit Ihrem Vigipool-Konto verbundenen Geräte wiederherzustellen.";
language_ge["devices_remote_dialog_sign_in_not_complete"] = "Wir sind derzeit nicht in der Lage, eine Verbindung zu Ihnen herzustellen.";
language_ge["devices_remote_dialog_user_not_confirmed_message"] = "Ihr Konto wurde noch nicht überprüft.\n\nBitte sehen Sie in Ihrem E-Mail-Postfach nach, ob Sie den Bestätigungslink anklicken können.";
language_ge["devices_remote_error_email_required"] = "E-Mail-Adresse ist erforderlich";
language_ge["devices_remote_error_password_required"] = "Passwort ist erforderlich";
language_ge["devices_selection_select_a_device_message"] = "Bitte wählen Sie ein Gerät";
language_ge["devices_selection_text"] = "Wir haben mehrere Geräte gefunden, die mit Ihrem Konto verknüpft sind. Bitte wählen Sie das Gerät, mit dem Sie sich anmelden möchten.";
language_ge["devices_tab_bluetooth_bluetooth_throttle_error_message"] = "Bitte versuchen Sie es in Kürze erneut mit einem Bluetooth-Scan.";
language_ge["devices_tab_bluetooth_no_device_found_message"] = "Es wurde kein PhileoX-Gerät in der Nähe gefunden. Bitte vergewissern Sie sich, dass dieses eingeschaltet ist und dass Sie nahe genug am Gerät sind.";
language_ge["devices_tab_bluetooth_start_scan"] = "Scan starten";
language_ge["devices_tab_bluetooth_stop_scan"] = "Scan aufhören";
language_ge["devices_title"] = "Geräte ";
language_ge["dialog_missing_timezone_message"] = "Ihr %1$s-Gerät hat keine Zeitzone, was für die Programmierung unbedingt erforderlich ist.\n\nBitte stellen Sie erneut eine Bluetooth-Verbindung her, um die Zeitzone automatisch zu aktualisieren.";
language_ge["direct"] = "Direkt";
language_ge["disabled"] = "Deaktiviert ";
language_ge["divergence_flow_error_notification"] = "Fehlender Wasserfluss in einem Teil Ihrer Installation.";
language_ge["dmxmode"] = "DMX-Modus ";
language_ge["dmxmode_help"] = "Beziehen Sie sich auf die Dokumentation der DMX-Scheinwerfer.";
language_ge["duration_picker_dialog_title"] = "Stellen Sie die Dauer ein";
language_ge["edit"] = "Bearbeiten";
language_ge["edit_device_name_instructions"] = "Geben Sie den neuen Namen Ihres Geräts ein.\n\nAchtung: Wenn Sie Bluetooth als Verbindungsmethode verwenden, kann es sein, dass Sie sich erneut mit dem Gerät verbinden müssen, um die Änderung zu sehen (da einige Telefone Informationen über Bluetooth-Geräte lokal speichern).";
language_ge["edit_device_name_placeholder"] = "Neuer Name (z. B. Mein Pool)";
language_ge["edit_device_name_title"] = "Den Namen des Geräts ändern";
language_ge["edit_program_name_instructions"] = "Geben Sie den neuen Namen für Ihr Programm ein und bestätigen Sie ihn mit dem Knopf unten auf dem Bildschirm.\n\nWenn Sie den Standardnamen verwenden möchten, können Sie den Text löschen und bestätigen.";
language_ge["edit_program_name_placeholder"] = "Name des Programms (z. B.: Wochenende)";
language_ge["edit_program_name_title"] = "Programmnamen ändern";
language_ge["electrolyse_chlore_production_state"] = "Chlor-Produktionszustand ";
language_ge["electrolyse_choc_duration"] = "Dauer der Schockbehandlung";
language_ge["electrolyse_current"] = "Elektrolyse-Strom";
language_ge["electrolyse_daily_prod"] = "Dauer tägliche Produktion";
language_ge["electrolyse_filtration_state"] = "Zellfluss";
language_ge["electrolyse_internal_temp"] = "Innere Temperatur";
language_ge["electrolyse_power"] = "Leistung";
language_ge["electrolyse_prod_chlore"] = "Chlorproduktion ";
language_ge["electrolyse_prod_chlore_instant"] = "Sofortige Chlorproduktion";
language_ge["electrolyse_stopped"] = "Electrolysis stopped";
language_ge["electrolyse_stopped_details_format"] = "Minimum water temperature reached, the electrolysis of the device {{STRING}} is stopped.";
language_ge["electrolyse_temp_min"] = "Mindesttemperatur";
language_ge["electrolyse_temperature"] = "Wasserzelltemperatur";
language_ge["electrolyse_tension"] = "Spannung";
language_ge["electrolyse_thermoregulated_help"] = "Die Elektrolysedauer wird automatisch an die Wassertemperatur angepasst.";
language_ge["electrolyse_water_hardness"] = "Wasserhärte";
language_ge["electrolysis_amperage"] = "Strom";
language_ge["electrolysis_cover_off"] = "Geöffnet ";
language_ge["electrolysis_daily_production_duration_auto"] = "Dauer der temperaturgesteuerten Produktion: %1$s";
language_ge["electrolysis_dialog_no_orp_device_message"] = "Es wurde kein RedOx-Messgerät gefunden.\n\nWenn innerhalb einer Stunde kein Messgerät gefunden wird, schaltet die Elektrolyse wieder in den Programmierten Modus.";
language_ge["electrolysis_dialog_title"] = "Modus-Bestätigung";
language_ge["electrolysis_shock_treatment_duration_elapsed"] = "Schockbehandlung gestartet vor %1$s.";
language_ge["electrolysis_stop_dialog_message"] = "Möchten Sie wirklich mit der Elektrolyse aufhören?";
language_ge["electrolysis_thermoregulation"] = "Thermoregulation";
language_ge["energy"] = "Energie ";
language_ge["enslaved_to_filtration"] = "An die Filterung gekoppelt";
language_ge["enslaved_to_filtration_help"] = "Wenn die Zusatzfunktion an die Filterung gekoppelt ist, kann sie nicht starten, wenn die Filterung ausgeschaltet ist.";
language_ge["enslaved_to_filtration_pac_help"] = "Wenn es an die Filterung gekoppelt ist, kann die Wärmepumpe nicht starten, wenn die Filterung ausgeschaltet ist.";
language_ge["error"] = "Fehler";
language_ge["error_amplify_get_devices"] = "Beim Abrufen der Geräte ist ein Fehler aufgetreten. Bitte überprüfen Sie Ihre Internetverbindung und versuchen Sie es erneut.";
language_ge["error_confirmation_sign_up_unknown"] = "Es ist ein Fehler aufgetreten. Bitte überprüfen Sie den Code und versuchen Sie es erneut.";
language_ge["error_connection"] = "Verbindung kann nicht hergestellt werden, bitte versuchen Sie es erneut. Wenn der Fehler wiederholt auftritt, versuchen Sie, die App zu schließen und erneut zu starten.";
language_ge["error_ntpmessage"] = "Ihr Gerät muss mit dem Internet verbunden sein, um programmiert werden zu können.";
language_ge["error_scan"] = "Bei der Gerätesuche ist ein Fehler aufgetreten, bitte versuchen Sie es noch einmal. Wenn der Fehler wiederholt auftritt, versuchen Sie, die App zu schließen und neu zu starten oder den Verbindungsmodus zu ändern.";
language_ge["error_sign_in_no_device_linked"] = "Wir haben keine kompatiblen Geräte gefunden, die mit Ihrem Konto verknüpft sind. Bitte stellen Sie zunächst eine Bluetooth-Verbindung her, damit Sie Ihr Gerät mit Ihrem Konto verknüpfen können (Einstellungsbildschirm).";
language_ge["error_sign_in_unknown"] = "Verbindung fehlgeschlagen. Bitte überprüfen Sie Ihre Internetverbindung und versuchen Sie es erneut. Wenn der Fehler erneut auftritt, stellen Sie sicher, dass Ihre Anmeldeinformationen korrekt sind.";
language_ge["error_sign_up_mail_exists"] = "Ein Konto ist bereits mit dieser E-Mail verknüpft.";
language_ge["error_sign_up_no_internet"] = "Keine Internetverbindung. Bitte schalten Sie Ihre mobilen Daten ein oder stellen Sie eine Verbindung zu einem WLAN-Netzwerk her und versuchen Sie es erneut.";
language_ge["error_sign_up_timeout"] = "Die Anfrage konnte nicht abgeschlossen werden. Bitte überprüfen Sie Ihre Internetverbindung und versuchen Sie es erneut.";
language_ge["error_sign_up_unknown"] = "Bei der Erstellung des Kontos ist ein Fehler aufgetreten.";
language_ge["expired"] = "abgelaufen";
language_ge["face_id_authenticate_password_get"] = "Authentifizieren Sie sich, um Ihr Passwort wiederherzustellen";
language_ge["face_id_authenticate_password_set"] = "Authentifizieren Sie sich, um Ihr Passwort zu speichern";
language_ge["fill"] = "Ausfüllen";
language_ge["filt_light_force_help"] = "Die Filterung wird während der gesamten Dauer der Beleuchtung eingeschaltet.";
language_ge["filt_meteor_intensity_error"] = "Intensitätsfehler erkannt - Schalten Sie die Filterung aus, um den Fehler aufzuheben.";
language_ge["filtration_forced_by_frost_free_mode"] = "Erzwungen durch den Frostschutzmodus.";
language_ge["filtration_forced_by_user"] = "Vom Nutzer erzwungen.";
language_ge["filtration_forced_off_by_box_help"] = "Zum Einschalten vergewissern Sie sich bitte, dass der Schalter am tild-Kasten in der Position \"tild-gesteuert\" steht.\nWenn Sie über einen Niveauregler verfügen, kann dieses Verhalten normal sein.";
language_ge["filtration_forced_on_by_box_help"] = "Zum Ausschalten vergewissern Sie sich bitte, dass der Schalter am tild-Kasten in der Position \"tild-gesteuert\" steht.\nWenn Sie über einen Niveauregler verfügen, kann dieses Verhalten normal sein.";
language_ge["filtration_m_fragment_help_over_under_current"] = "Intensitätsfehler erkannt: Die Filterung muss ausgeschaltet werden, um das Problem zu beheben.";
language_ge["filtration_mode"] = "Filterungsmodus";
language_ge["filtration_paused"] = "Filterung pausiert";
language_ge["filtration_start_forced_march"] = "In Dauerbetrieb wechseln";
language_ge["filtration_stop_forced_march"] = "Dauerbetrieb ausschalten ";
language_ge["flow_calibration"] = "Durchfluss-Kalibrierung ";
language_ge["flow_current"] = "Aktueller Durchfluss";
language_ge["flow_desired"] = "Gewünschter Durchfluss";
language_ge["flow_measurement_history"] = "Durchflusswerten-Historie ";
language_ge["flow_not_determined"] = "Unbekannter Filterstatus";
language_ge["flow_not_working"] = "Kein Durchfluss erkannt";
language_ge["flow_probe_calibration_error_dialog_message"] = "Kalibrierungsfehler, überprüfen Sie Ihren Durchflusssensor.";
language_ge["flow_sensor_calibration"] = "Kalibrierung Durchflusssensor";
language_ge["flow_switch_diverging"] = "Wir haben festgestellt, dass sich einige Flüsse in unterschiedlichen Zuständen befinden.\nDas kann einfach daran liegen, dass es in Ihrer Anlage einen Bypass gibt, kann aber auch durch einen beschädigten Flusssensor oder einen zu geringen Wasserfluss verursacht werden";
language_ge["flow_view_flow_off"] = "Filterung gestoppt ";
language_ge["flow_working"] = "Filterung läuft ";
language_ge["force_filtration_during_aux"] = "Filterung erzwingen";
language_ge["force_filtration_during_aux_help"] = "Die Filterung wird automatisch eingeschaltet, wenn der Zusatz startet.";
language_ge["force_filtration_during_lighting"] = "Die Filterung erzwingen wenn die Beleuchtung eingeschaltet ist";
language_ge["force_filtration_during_pac_help"] = "Die Filterung schaltet sich automatisch ein, wenn die Wärmepumpe startet.";
language_ge["forced_by_aux"] = "Durch Zusatz erzwungen";
language_ge["forced_by_box"] = "Durch den Kasten erzwungen";
language_ge["forced_by_lighting"] = "Durch Beleuchtung erzwungen";
language_ge["forced_by_pac"] = "Von der Wärmepumpe erzwungen";
language_ge["forced_march"] = "Dauerbetrieb";
language_ge["forced_off_by_aux_help"] = "Zum Ausschalten schalten Sie bitte den Zusatz aus oder entfernen Sie das Häkchen bei der Option \"Filterung erzwingen\" des Zusatzes.";
language_ge["forced_off_by_frost_protection_help"] = "Die Filterung wurde eingeschaltet, um das Frostrisiko zu verringern.";
language_ge["forced_off_by_light_help"] = "Zum Ausschalten schalten Sie bitte das Licht aus oder entfernen Sie das Häkchen bei der Option \" Filterung bei Beleuchtung erzwingen\".";
language_ge["forced_off_by_pac_help"] = "Zum Ausschalten schalten Sie bitte die Wärmepumpe aus oder entfernen Sie das Häkchen bei der Option \" Filterung erzwingen \" der Wärmepumpe.";
language_ge["forced_off_by_water_renewal_help"] = "Die Filterung hat sich eingeschaltet, um die Temperaturmessungen auf dem neuesten Stand zu halten. Sie schaltet sich nach einigen Minuten automatisch ab.";
language_ge["forced_on_by_box_help"] = "Zum Ausschalten vergewissern Sie sich bitte, dass die tild-Kasten  auf Position 1 steht.@IMAGE(message_coffret_tild,26,26,8,0,10)\nWenn Sie über einen Niveauregler verfügen, kann dieses Verhalten normal sein.";
language_ge["forgotten_password"] = "Passwort vergessen?";
language_ge["forgotten_password_f2_hint_code_required"] = "Reset-Code ist erforderlich";
language_ge["forgotten_password_f2_hint_password_strength"] = "Geben Sie das neue Passwort für Ihr Konto ein.\nDas neue Passwort muss folgende Regeln erfüllen: mindestens 8 Zeichen mit Groß- und Kleinbuchstaben, eine Zahl und ein Sonderzeichen.";
language_ge["forgotten_password_success_dialog_message"] = "Das Passwort wurde aktualisiert.";
language_ge["form_error_character_limit15"] = "Die Anzahl der Zeichen darf 15 Zeichen nicht überschreiten";
language_ge["form_error_character_limit17"] = "Die Anzahl der Zeichen darf 17 nicht überschreiten.";
language_ge["form_error_character_limit2"] = "Die Anzahl der Zeichen muss größer oder gleich 2 sein.";
language_ge["form_error_character_limit3"] = "Die Anzahl der Zeichen muss größer oder gleich 3 sein.";
language_ge["form_error_character_limit43"] = "Die Anzahl der Zeichen darf 43 nicht überschreiten.";
language_ge["form_error_empty"] = "Feld ist leer";
language_ge["form_error_empty_fields"] = "Sie müssen alle Felder ausfüllen, um Ihren Pool zu speichern.";
language_ge["form_error_invalid_email"] = "Ungültige E-Mail-Adresse";
language_ge["form_error_password_length"] = "Muss mehr als 8 Zeichen lang sein";
language_ge["form_error_password_lower_case"] = "Erfordert mindestens einen Kleinbuchstaben";
language_ge["form_error_password_number"] = "Erfordet mindestens eine Zahl";
language_ge["form_error_password_special_char"] = "Erfordert mindestens ein Sonderzeichen";
language_ge["form_error_passwords_dont_match"] = "Passwörter sind verschieden";
language_ge["form_invalid_field"] = "Einige Felder sind leer oder falsch";
language_ge["form_shared_pool_limit_date_placeholder"] = "Datum des Endes der Freigabe";
language_ge["form_shared_pool_pro_mail_placeholder"] = "E-Mail-Adresse des Profis";
language_ge["format_weight_hour"] = "g/St";
language_ge["format_weight_hour_us"] = "oz/St";
language_ge["frequency"] = "Frequenz";
language_ge["friday_short"] = "Fr";
language_ge["frost_protection_help"] = "Der Frostschutzmodus schaltet die Filterung automatisch ein, wenn die Wassertemperatur zu niedrig wird, um ein Frosten des Wassers zu verhindern.";
language_ge["frost_protection_home_help"] = "Frostschutzmodus ist aktiviert. Ihre Filterung wird automatisch gestartet, um das Einfrieren des Wassers in der Leitung zu verhindern.";
language_ge["ft3h"] = "ft³/Stunde";
language_ge["ft3h_short"] = "ft³/h";
language_ge["general_connecting_to_aws"] = "Abrufen von Daten";
language_ge["general_copied_to_clipboard"] = "In die Zwischenablage kopiert!";
language_ge["general_do_update"] = "Update herunterladen & installieren";
language_ge["general_duration_choc_electrolyse_unknown"] = "Der Shock-Mode ist aktiv seit -- Stunde";
language_ge["general_duration_thermoregulation_unknown"] = "Dauer der temperaturgesteuerten Produktion: --St";
language_ge["general_forgotten_password"] = "Passwort vergessen? ";
language_ge["general_iunderstand"] = "Ich habe einverstanden";
language_ge["general_postpone_update"] = "Später aktualisieren";
language_ge["general_select_device"] = "Auswahl des Geräts";
language_ge["general_select_device_description"] = "Wir haben mehrere Devices gefunden, die mit Ihrem Konto verknüpft sind. Bitte wählen Sie diejenige aus, auf der Sie sich anmelden möchten.";
language_ge["general_unknown_device"] = "Gerät ohne Namen";
language_ge["general_unknown_error"] = "Ein unbekannter Fehler ist aufgetreten. Wenn dies erneut auftritt, könnten Sie versuchen, die App zu schließen und neu zu starten.";
language_ge["general_update"] = "Update";
language_ge["general_update_available"] = "Update verfügbar";
language_ge["get_closer_to_devices"] = "Gehen Sie näher an Ihre Einrichtung heran.";
language_ge["gpm"] = "US Gal/Min.";
language_ge["gpm_short"] = "gpm";
language_ge["great"] = "Super !";
language_ge["green"] = "Grün";
language_ge["has_min_temp_setpoint"] = "Min. Temperatursollwert aktivieren";
language_ge["has_min_temp_setpoint_help"] = "Ermöglicht die Aktivierung oder Deaktivierung der Auswahl einer Mindesttemperatur, unterhalb derer der Zusatz nicht gestartet wird.";
language_ge["has_orpsetpoint"] = "RedOx-Sollwert aktivieren";
language_ge["has_orpsetpoint_help"] = "Ermöglicht die Aktivierung oder Deaktivierung der Auswahl eines RedOx-Wertes, bei dessen Überschreitung das Elektrolysegerät nicht gestartet wird.\nDiese Option ist deaktiviert, wenn Sie kein Vigipool-Gerät haben, das RedOx-Messungen aufzeichnet.";
language_ge["heat_pump"] = "Wärmepumpe";
language_ge["help_measure_unknown"] = "Die Messwerte werden erst einige Minuten nach dem Einschalten der Filterung angezeigt.";
language_ge["help_priority_ph"] = "Die RedOx-Regelung wird nur aktiv, wenn der pH-Wert korrekt ist";
language_ge["history"] = "Historie ";
language_ge["history_impossible_to_display"] = "Grafik kann nicht angezeigt werden";
language_ge["history_no_data"] = "Keine Daten vorhanden";
language_ge["home_cover_on_hint"] = "Dies kann die Funktion einiger Geräte beeinflussen.";
language_ge["home_dialog_factory_reset_message"] = "Sind Sie sicher, dass Sie Ihr Gerät \"%1$s\" auf die Werkseinstellungen zurücksetzen möchten?";
language_ge["home_dialog_restart_message"] = "Sind Sie sicher, dass Sie Ihr Gerät \"%1$s\" neu starten möchten?";
language_ge["home_latest_filtration"] = "Letzte Filterung";
language_ge["home_no_auxiliary"] = "Keinen Zusatz gefunden";
language_ge["home_no_program"] = "Keine Programmierung";
language_ge["home_ph_consigne"] = "Sollwert: %1$s";
language_ge["home_volume_injected_24_hours"] = "Injektionsvolumen 24 St";
language_ge["hour"] = "Uhr";
language_ge["impossible_demo_mode"] = "Im Demomodus nicht möglich";
language_ge["impossible_to_use_spotify"] = "Spotify kann nicht verwendet werden";
language_ge["impossible_to_use_spotify_description"] = "Dazu muss die Spotify-App auf Ihrem Telefon installiert sein.";
language_ge["info_winter_mode"] = "Ihr Gerät befindet sich im Überwinterungsmodus";
language_ge["information_setup_wifi"] = "Um die Wifi-Einstellungen zu ändern, müssen Sie eine Bluetooth-Verbindung zu Ihrem Gerät herstellen.";
language_ge["informations"] = "Infos";
language_ge["injection_mode"] = "Injektionsmodus";
language_ge["input"] = "Eingang";
language_ge["instant_consumption"] = "Instant Verbrauch";
language_ge["instant_current"] = "Instant Strom";
language_ge["internal_notification_information_new_device"] = "Ein neues Gerät wurde erkannt";
language_ge["invalid_format"] = "Ungültiges Format";
language_ge["ios_bonding_help_rssi"] = "Bringen Sie Ihr Smartphone einfach in die Nähe Ihres {{STRING}}, um die beiden Geräte zu koppeln.";
language_ge["ios_bonding_help_rssi_and_btn"] = "Halten Sie einfach Ihr Smartphone in die Nähe oder drücken Sie einmal auf die Taste Ihres {{STRING}}, um sie zu koppeln.";
language_ge["ios_bonding_message"] = "Bitte drücken Sie einmal auf die Taste Ihres {{STRING}}, um ihn mit Ihrem Smartphone zu koppeln.";
language_ge["ios_error_ble_lost_connection"] = "Die Verbindung zum Gerät ist verloren gegangen. Die wahrscheinlichste Ursache ist, dass Sie sich zu weit von Ihrem Gerät {{APP_NAME}} entfernt haben.";
language_ge["ios_fill_price_kwh_format"] = "Preis pro kWh in {{STRING}} angeben.";
language_ge["ios_format_alert_timezone_not_set"] = "Ihr {{STRING}}-Gerät hat keine Zeitzone, was für die Programmierung unbedingt erforderlich ist.\n\nBitte stellen Sie erneut eine Bluetooth-Verbindung her, um die Zeitzone automatisch zu aktualisieren.";
language_ge["ios_format_amplify_add_device"] = "Dieses Gerät hinzufügen ({{STRING}})";
language_ge["ios_format_bac_empty_error_notification"] = "Produktbehälter {{STRING}} leer - Pumpe gestoppt";
language_ge["ios_format_common_temperature"] = "%d°C";
language_ge["ios_format_common_temperature_us"] = "%d°F";
language_ge["ios_format_confirm_timezone"] = "Zeitzone bestätigen ({{STRING}})";
language_ge["ios_format_connection_connected"] = "Verbunden {{STRING}}";
language_ge["ios_format_connection_destination_device"] = "mit {{STRING}}";
language_ge["ios_format_connection_looking_for_device"] = "Suche nach {{STRING}}";
language_ge["ios_format_connection_not_connected"] = "Nicht verbunden Suche {{STRING}}";
language_ge["ios_format_crepuscular_mode_help"] = "Startet die Beleuchtung, wenn die Sonne untergeht ({{STRING}}Uhr{{{STRING}} heute)";
language_ge["ios_format_electrolyse_choc_duration"] = "Der Shock-Mode ist aktiv seit %dh%02d";
language_ge["ios_format_error_cell_error_notification"] = "Die Elektrolysezelle ({{STRING}}) produziert nicht mehr - wenden Sie sich an Ihren Installateur.";
language_ge["ios_format_error_modbus_message"] = "Ein Kommunikationsfehler (RS485) wird auf Ihrem {{STRING}} festgestellt. - code_E9";
language_ge["ios_format_firmware_version_too_low_winter_mode"] = "Der Überwinterungsmodus ist in der Version {{STRING}} deaktiviert.\n\nVerbinden Sie Ihre Vigipool-Anlage mit dem Internet, um die neuesten Updates zu erhalten und diese Funktion zu aktivieren.";
language_ge["ios_format_general_duration_thermoregulation"] = "Dauer der temperaturgesteuerten Produktion: %dh%02d";
language_ge["ios_format_last_measure"] = "Letzte Messung {{STRING}}";
language_ge["ios_format_meteor_alarm_low_flow"] = "{{STRING}}: Unterstrom erkannt - Stellen Sie sicher, dass die Pumpe nicht leer läuft.";
language_ge["ios_format_meteor_alarm_over_flow"] = "{{STRING}}: Überstrom erkannt - Überprüfen Sie, ob die Pumpe defekt oder blockiert ist.";
language_ge["ios_format_meteor_alarm_warning_gel"] = "{{STRING}}: Die Wassertemperatur liegt nahe bei 0 °C, die Filterung wird aktiviert, um die Frostgefahr zu vermeiden.";
language_ge["ios_format_meteor_alarm_water_level_low"] = "{{STRING}}: Überprüfen Sie den Wasserstand im Pool.";
language_ge["ios_format_missing_filt_error_notification"] = "Die aktuelle Filterungszeit ist zu kurz, um dem Elektrolyseur ({{STRING}}) zu ermöglichen, die programmierte Zeit zu produzieren.";
language_ge["ios_format_no_value_orperror_notification"] = "Ihr {{STRING}} erhält keine RedOx-Messungen mehr";
language_ge["ios_format_no_value_pherror_notification"] = "Ihr {{STRING}} empfängt keine pH-Messungen mehr";
language_ge["ios_format_not_enough_salt_error_notification"] = "Geringe Produktion - Lesen Sie die Anleitung von {{STRING}}";
language_ge["ios_format_notification_device_disconnected"] = "Die Verbindung zu Ihrem {{STRING}} {{STRING}} ist verloren gegangen.";
language_ge["ios_format_overdose_injection_notification"] = "Die maximale Menge an {{STRING}} Regulierungsprodukt, die in 24 Stunden injiziert wurde, wurde erreicht.";
language_ge["ios_format_overheat_elec_error_notification"] = "Interne Temperatur des Elektrolyseurs ({{STRING}}) zu hoch.";
language_ge["ios_format_pairing_to"] = "Verbindung zu {{STRING}}";
language_ge["ios_format_reconnect_to_device_message"] = "Möchten Sie sich mit {{STRING}} ({{STRING}}) verbinden?";
language_ge["ios_format_schedule_hour"] = "%d Stunde";
language_ge["ios_format_schedule_hours"] = "%d Stunden";
language_ge["ios_format_schedule_minute"] = "%02d Min";
language_ge["ios_format_schedule_on_time_aux"] = "%@/Tag";
language_ge["ios_format_schedule_on_time_booster"] = "%@/Tag";
language_ge["ios_format_schedule_on_time_filtration"] = "%@/Tag";
language_ge["ios_format_schedule_on_time_heater"] = "max %@/Tag";
language_ge["ios_format_schedule_on_time_light"] = "%@/Tag";
language_ge["ios_format_schedule_on_time_treatment"] = "max %@/Tag";
language_ge["ios_format_schedule_time"] = "%dh%02d";
language_ge["ios_format_settings_button_date_sensor"] = "Datum des letzten Austauschs der Sonde: {{STRING}}";
language_ge["ios_format_sunrise_mode_help"] = "Stoppt die Beleuchtung, wenn die Sonne aufgeht ({{STRING}}h{{STRING}}).";
language_ge["ios_format_temp_too_high_error_notification"] = "Fehler bei der Messung von Hohe Temperatur von {{STRING}}.";
language_ge["ios_format_temp_too_low_error_notification"] = "Fehler bei der Messung von Niedrige Temperatur von {{STRING}}.";
language_ge["ios_format_too_much_salt_error_notification"] = "Salzgehalt zu hoch. Abschaltung des Elektrolyseurs ({{STRING}}).";
language_ge["ios_format_update_description_mandatory"] = "{{APP_NAME}} {{STRING}} ist verfügbar.\nWenn Sie Ihre App auf dem neuesten Stand halten, haben Sie Zugriff auf die neuesten Funktionen und Fehlerbehebungen.\n\nDa die verfügbare Aktualisierung für das Funktionieren der App notwendig ist, müssen Sie sie aktualisieren, um sie nutzen zu können.";
language_ge["ios_format_update_description_not_mandatory"] = "{{APP_NAME}} {{STRING}} ist verfügbar.\nWenn Sie Ihre App auf dem neuesten Stand halten, haben Sie Zugriff auf die neuesten Funktionen und Fehlerbehebungen.\n\nSie können diese Version vorerst weiter verwenden, aber wir empfehlen Ihnen, auf die neueste Version zu aktualisieren, um die neuesten Funktionen und Korrekturen zu erhalten.";
language_ge["ios_format_update_failed_alert_message"] = "Beim Aktualisieren von {{STRING}} ist ein Fehler aufgetreten. Bitte versuchen Sie es später noch einmal.";
language_ge["ios_format_update_firmware_ask_state_title"] = "Für {{STRING}} ({{STRING}}) ist ein Update verfügbar.";
language_ge["ios_format_update_firmware_progress_complement_description"] = "Sobald der Download abgeschlossen ist, wird das Update installiert und Ihr {{STRING}} wird neu gestartet. ";
language_ge["ios_format_update_firmware_progress_complement_description_ble_server"] = "Sobald der Download abgeschlossen ist, wird das Update installiert und Ihr {{STRING}} wird neu gestartet, wodurch die Verbindung zur App unterbrochen wird.";
language_ge["ios_format_update_succeed_alert_message"] = "Das Update von {{STRING}} wurde erfolgreich heruntergeladen und installiert!";
language_ge["ios_format_water_orp"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Aktueller RedOx-Messwert: {{STRING}} mV";
language_ge["ios_format_water_temperature"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Wassertemperatur: {{STRING}}";
language_ge["ios_last_format"] = "zuletzt am {{STRING}}";
language_ge["ios_new_device_message"] = "Sie haben soeben einen {{STRING}} zu Ihrem Vigipool-System hinzugefügt.\n\nNun müssen Sie es parametrieren.";
language_ge["ios_new_device_title"] = "Neue {{STRING}} erkannt";
language_ge["ios_output_nb_format"] = "Ausgang %1$d";
language_ge["ios_price_in_currency_format"] = "Preis in {{STRING}} ";
language_ge["ios_vspump_speed_details_format"] = "%1$d-Geschwindigkeits-Pumpe ";
language_ge["ios_warning_pairing_iosble_off"] = "Bluetooth ist nicht verfügbar. Bitte überprüfen Sie, ob Bluetooth auf Ihrem Smartphone aktiviert ist und ob die App {{APP_NAME}} die Erlaubnis hat, Bluetooth zu verwenden (kann in der App \"Einstellungen\" geändert werden).";
language_ge["ios_warning_pairing_no_results_ble"] = "Es wurde kein Gerät {{APP_NAME}} in der Nähe gefunden. Bitte überprüfen Sie, ob dieses eingeschaltet ist und ob Sie nicht zu weit entfernt sind.";
language_ge["ios_warning_pairing_timeout_ble"] = "Die Zeit für die Verbindung ist abgelaufen, bitte versuchen Sie es erneut. Wenn der Fehler wiederholt auftritt, gehen Sie näher an Ihr Gerät {{APP_NAME}} heran.";
language_ge["ios_zone_nb_format"] = "Zone %d";
language_ge["it_is_done"] = "Erledigt";
language_ge["just_now"] = "zum Zeitpunkt";
language_ge["l"] = "L";
language_ge["last_backwash"] = "Letzte Rückspülung";
language_ge["last_backwash_fill_date"] = "Haben Sie eine manuelle Rückspülung durchgeführt?\nFüllen Sie das Datum unten aus, um eine Erinnerung zu erhalten.";
language_ge["last_measure_now"] = "Letzte Messung soeben";
language_ge["later"] = "Später";
language_ge["latest_measurement_ago"] = "Letzte Messung %1$s";
language_ge["latest_measurement_not_co"] = "Messgerät abgetrennt";
language_ge["latest_probe_replacement"] = "Letzter Austausch der Sonde: %1$s";
language_ge["leave"] = "Verlassen";
language_ge["light_banner_cover_on_description"] = "Das Licht kann nicht eingeschaltet werden, wenn die Abdeckung geschlossen ist.";
language_ge["light_banner_cover_on_title"] = "Abdeckung öffnen";
language_ge["light_banner_register_color_already_registered_description"] = "Diese Farbe wurde bereits gespeichert.";
language_ge["light_banner_register_color_light_off_description"] = "Bitte schalten Sie das Licht ein, bevor Sie seine Farbe speichern.";
language_ge["light_banner_timer_on_light_off_description"] = "Bitte schalten Sie das Licht ein, bevor Sie das Ausschalten programmieren.";
language_ge["light_color_cyan"] = "Cyan";
language_ge["light_color_lagoon"] = "Lagon";
language_ge["light_color_magenta"] = "Magenta";
language_ge["light_color_orange"] = "Orange";
language_ge["light_color_pink"] = "Rosa";
language_ge["light_color_purple"] = "Lila ";
language_ge["light_color_white"] = "Kalt";
language_ge["light_color_white_warm"] = "Warm";
language_ge["light_colors_title"] = "Farben ";
language_ge["light_command_favorite_color"] = "Lieblingsfarbe";
language_ge["light_crepuscular_mode"] = "Dämmerungsmodus";
language_ge["light_crepuscular_short"] = "Dämm.";
language_ge["light_sequence_gradient"] = "Farbverlauf";
language_ge["light_sequence_horizon"] = "Horizont";
language_ge["light_sequence_magic"] = "Magisch";
language_ge["light_sequence_parade"] = "Farbenlauf";
language_ge["light_sequence_rainbow"] = "Regenbogen";
language_ge["light_sequence_random"] = "Zufall";
language_ge["light_sequence_speed_fast"] = "Schnell";
language_ge["light_sequence_speed_normal"] = "Normal";
language_ge["light_sequence_speed_slow"] = "Langsam";
language_ge["light_sequence_techno"] = "Techno";
language_ge["light_sequence_title"] = "Sequenz";
language_ge["light_sequences_title"] = "Sequenzen ";
language_ge["light_sunrise_mode"] = "Sonnenaufgangsmodus";
language_ge["light_sunrise_short"] = "Sonnenauf.";
language_ge["lighting"] = "Beleuchtung";
language_ge["lighting_color_fav"] = "Favorit";
language_ge["lighting_mode"] = "Lichtmodus";
language_ge["lighting_overlay_couv_error_message"] = "Das Licht kann nicht eingeschaltet werden, wenn die Abdeckung geschlossen ist.";
language_ge["lighting_overlay_paused"] = "Beleuchtung pausiert";
language_ge["lighting_overlay_switched_on"] = "Eingeschaltet";
language_ge["lighting_overlay_timer_info_title"] = "Licht einschalten";
language_ge["lighting_settings_dialog_forced_filtration_hint"] = "Das Filtergerät schaltet sich jedes Mal ein, wenn das Licht eingeschaltet wird, und zwar für die gesamte Dauer der Beleuchtung.";
language_ge["lighting_settings_dialog_forced_filtration_text"] = "Die Filterung während der Beleuchtung erzwingen.";
language_ge["link_device_btn_link"] = "Verbinden";
language_ge["link_device_message"] = "Möchten Sie das Gerät %1$s %2$s mit Ihrem Vigipool-Konto verknüpfen?";
language_ge["link_device_title"] = "Gerät verbinden";
language_ge["link_device_to_account"] = "Dieses Gerät mit Ihrem Konto verknüpfen?";
language_ge["loader_connecting_attempt"] = "Verbindung wird hergestellt";
language_ge["loading_error_dialog_message_device_not_found"] = "Das Gerät wurde in Ihrem Vigipool-Konto nicht gefunden.";
language_ge["loading_error_dialog_message_no_devices_found"] = "In Ihrem Vigipool-Konto wurden keine Geräte gefunden.";
language_ge["loading_failed"] = "Upload nicht erfolgreich, bitte überprüfen Sie Ihre Internetverbindung";
language_ge["loading_page"] = "Seite lädt";
language_ge["location_permission_rationale_message"] = "Für die Nutzung dieser Funktion ist die Standortgenehmigung erforderlich.";
language_ge["location_permission_rationale_title"] = "Lokalisierung erlauben";
language_ge["log_out"] = "Abmeldung";
language_ge["login"] = "Anmeldung";
language_ge["login_failed"] = "Verbindung nicht erfolgreich";
language_ge["logout_progress_dialog_title"] = "Abmeldung ";
language_ge["m3h"] = "m³/Stunde";
language_ge["m3h_short"] = "m³/h";
language_ge["measurement_history_ble_hint"] = "Die Werte-Historie ist nur verfügbar, wenn Sie den Fernverbindungsmodus verwenden:\n\n- Ihr Vigipool-Gerät muss mit WLAN verbunden sein.\n- Sie müssen Ihr Vigipool-Konto erstellen und bestätigen.\n- Sie müssen sich \"Aus der Ferne\" anmelden";
language_ge["measurement_units_debit_unit"] = "Durchfluss-Einheit";
language_ge["measurement_units_debit_unit_cubic_feet_per_hour"] = "Kubikfuß pro Stunde (ft³/h)";
language_ge["measurement_units_debit_unit_cubic_meter_per_hour"] = "Kubikmeter pro Stunde (m³/h)";
language_ge["measurement_units_debit_unit_gallon_per_minute"] = "US-Gallonen pro Minute (gpm)";
language_ge["measurement_units_measurement_system"] = "Messsystem";
language_ge["measurement_units_pressure_unit"] = "Druckeinheit";
language_ge["measurement_units_pressure_unit_bar"] = "Bar (bar)";
language_ge["measurement_units_pressure_unit_psi"] = "PSI (psi)";
language_ge["measurement_units_temperature_celcius"] = "Celsius (°C)";
language_ge["measurement_units_temperature_fahrenheit"] = "Fahrenheit (°F)";
language_ge["measurement_units_temperature_unit"] = "Temperatureinheit";
language_ge["merge_lighting_zone"] = "Beleuchtungszonen zusammenführen";
language_ge["merge_lighting_zone_help"] = "Durch das Zusammenführen von Zonen werden Befehle, die an einen Wix gesendet werden, an alle anderen in Ihrer Installation weitergeleitet.\nSo können Sie also mehrere Wix einfach steuern, wenn Sie nicht zwischen ihnen unterscheiden möchten.";
language_ge["meteor_mode_auto"] = "Auto ";
language_ge["meteor_mode_help_aux"] = "On: Der Zusatz ist 24 Stunden am Tag eingeschaltet.\n\nProg: Der Zusatz schaltet sich entsprechend den Einstellungen des Zeitfensters (P1) ein.";
language_ge["meteor_mode_help_aux_heater"] = "Ein: Die Heizung ist rund um die Uhr eingeschaltet, bis die Wassertemperatur den Sollwert erreicht hat. Danach läuft sie nur so lange, bis die Temperatur gehalten wird.\n\nProg: Die Heizung läuft während des eingestellten Zeitfensters (P1). Wenn die Wassertemperatur den Sollwert erreicht, läuft die Heizung bis zum Ende des Zeitfensters nur so lange, bis die Temperatur gehalten wird.";
language_ge["meteor_mode_help_aux_orp_treatment"] = "On: Die Wasseraufbereitung ist rund um die Uhr durchgehend eingeschaltet.\n\nProg: Die Behandlung wird gemäß den Einstellungen des Zeitfensters (P1) eingeschaltet.\n\nAuto: Die Wasseraufbereitung wird mit einem RedOx-Sollwert geregelt und bleibt so lange eingeschaltet, bis die RedOx-Messung den Sollwert erreicht hat. Sobald der Sollwert erreicht ist, wird der RedOx-Messwert anschließend auf seinem Wert gehalten.";
language_ge["meteor_mode_help_aux_treatment"] = "Prog: Die Wasseraufbereitung wird gemäß den Einstellungen des Zeitfensters (P1) gestartet.\n\nAuto: Die Wasseraufbereitung wird entsprechend den Einstellungen des Zeitfensters (P1) gestartet, aber die Dauer wird je nach Wassertemperatur angepasst.";
language_ge["meteor_mode_help_aux_treatment_orp"] = "On: Die Wasseraufbereitung ist rund um die Uhr eingeschaltet.\n\nProg: Die Wasseraufbereitung wird gemäß den Einstellungen des Zeitfensters (P1) eingeschaltet.\n\nAuto: Die Wasseraufbereitung wird mit einem RedOx-Sollwert geregelt und bleibt so lange eingeschaltet, bis die RedOx-Messungen den Sollwert erreicht haben. Wenn der RedOx-Sollwert erreicht ist, wird er auf diesem Wert gehalten.";
language_ge["meteor_mode_help_filt"] = "On: Die Filterung ist rund um die Uhr eingeschaltet.\n\nProg: Die Filteranlage schaltet sich entsprechend den Einstellungen der drei Zeitbereiche (P1 bis P3) ein.\n\nAuto: Die Filteranlage schaltet sich zu der für den Bereich P1 eingestellten Startzeit für eine je nach Wassertemperatur automatisch berechnete Dauer ein.";
language_ge["meteor_mode_help_light"] = "On: Die Beleuchtung ist 24 Stunden am Tag eingeschaltet.\n\nProg: Die Beleuchtung wird entsprechend der eingestellten Zeitdauer eingeschaltet.\n\nAuto: Die Beleuchtung wird bei Dämmerung für 4 Stunden eingeschaltet.";
language_ge["meteor_mode_prog"] = "Prog";
language_ge["mic_permission_message"] = "Vigipool benötigt für den Musikmodus Zugriff auf das Mikrofon";
language_ge["mic_permission_title"] = "Mikrofon zulassen";
language_ge["minute"] = "Minute";
language_ge["minutes"] = "Minuten";
language_ge["mode_music"] = "Musikmodus";
language_ge["mode_music_choice_audio_micro_device"] = "Mikrofon, das mit Ihrem Vigipool-Gerät geliefert wurde";
language_ge["mode_music_choice_audio_micro_phone"] = "Mikrofon Ihres Handys";
language_ge["mode_music_choose_audio"] = "Welche Art von Audioeingang möchten Sie verwenden?";
language_ge["mode_music_choose_zone"] = "In welcher/n Zone/n soll der Musikmodus aktiviert werden?";
language_ge["mode_music_place_micro_next_to_sound_title"] = "Schließen Sie das Mikrofon an das Vigipool-Gerät an. Stellen Sie das Mikrofon dann neben Ihren Lautsprecher oder eine andere Tonquelle.";
language_ge["mode_music_place_phone_next_to_sound_title"] = "Stellen Sie Ihr Smartphone neben Ihren Lautsprecher oder eine andere Tonquelle.";
language_ge["mode_music_welcome_modal_text"] = "In diesem Modus können Sie Ihre Scheinwerfer mit dem Rhythmus der Musik synchronisieren.\nFür unvergessliche Momente.";
language_ge["mode_music_welcome_modal_title"] = "Willkommen im Musikmodus!";
language_ge["mode_pac_silence"] = "Stille";
language_ge["mode_pac_smart"] = "Smart";
language_ge["mode_pac_turbo"] = "Turbo";
language_ge["modify_duration"] = "Dauer ändern";
language_ge["modify_settings"] = "Einstellungen ändern";
language_ge["monday_short"] = "Mon";
language_ge["month"] = "Monat";
language_ge["music_mode_input_app"] = "Verbindung mit einer Musikanwendung";
language_ge["music_mode_no_permission_description"] = "Sie haben den Zugriff auf das Mikrofon des Smartphones abgelehnt, aber es ist notwendig, um den Musikmodus zu verwenden.\n\nMöchten Sie die Anwendungseinstellungen öffnen, um diese Einstellung zu ändern?";
language_ge["music_mode_no_permission_title"] = "Mikrofonerlaubnis abgelehnt";
language_ge["music_mode_unavailable"] = "Musikmodus nicht verfügbar";
language_ge["music_mode_welcome_hint"] = "In diesem Modus können Sie Ihre Scheinwerfer mit dem Rhythmus der Musik synchronisieren.\nFür unvergessliche Momente.";
language_ge["music_mode_welcome_start"] = "Los geht's!";
language_ge["music_mode_zone_one"] = "Zone 1";
language_ge["music_mode_zone_three"] = "Zone 3";
language_ge["music_mode_zone_two"] = "Zone 2";
language_ge["my_account"] = "Mein Konto";
language_ge["my_account_aws_hello_user"] = "Hallo %1$s";
language_ge["my_account_signup_dialog_signup_success_bt_mailbox"] = "Öffnen Sie Ihre Mailbox, um Ihre Adresse zu bestätigen.";
language_ge["my_account_signup_dialog_signup_success_message"] = "Sie werden bald eine E-Mail an Ihre %1$s-Adresse erhalten, um Ihr Konto zu bestätigen. Sobald es aktiviert ist, werden Sie in der Lage sein, sich in Ihr Vigipool-Konto einzuloggen.";
language_ge["my_account_signup_error_username_already_exists"] = "Diese E-Mail-Adresse ist bereits mit einem Vigipool-Konto verknüpft.";
language_ge["my_contact_address_dialog_title"] = "Wählen Sie Ihre Adresse";
language_ge["my_contact_changes_dialog_bt_discard"] = "Abbrechen";
language_ge["my_contact_changes_dialog_message"] = "Sie haben gerade Änderungen vorgenommen.\n\nMöchten Sie diese speichern oder abbrechen?";
language_ge["my_contact_dialog_confirm_delete_message"] = "Möchten Sie Ihre Kontaktinformationen wirklich löschen?\n\nBitte beachten Sie, dass dadurch auch Ihre Freigaben gelöscht werden.";
language_ge["my_pool_dialog_confirm_delete_message"] = "Möchten Sie Ihren Pool wirklich löschen?\n\nBitte beachten Sie, dass dadurch auch Ihre Kontaktdaten und Freigaben gelöscht werden.";
language_ge["my_vp_devices_device_connection_state"] = "Verbindung zu %1$s";
language_ge["my_vp_devices_settings_auxiliary_type_tooltip"] = "Beachten Sie, dass die Programme des Zusatzes beim Wechsel des Zusatztyps deaktiviert werden (die Zeitfenster bleiben jedoch erhalten).";
language_ge["my_vp_devices_settings_frost_free_mode_tooltip"] = "Der Frostschutzmodus schaltet die Filterung automatisch ein, wenn die Wassertemperatur zu niedrig wird, um ein Frostgefahr zu verhindern.";
language_ge["my_vp_devices_settings_projector_type"] = "Scheinwerfer";
language_ge["my_vp_devices_settings_projector_type_tooltip"] = "Beachten Sie, dass die Beleuchtungsprogramme beim Wechsel des Scheinwerfertyps zurückgesetzt werden.";
language_ge["my_vp_devices_wifi_connection_state_connection_error"] = "Verbindungsfehler";
language_ge["my_vp_devices_wifi_connection_state_no_wifi"] = "Nicht mit WLAN verbunden";
language_ge["my_vp_devices_wifi_connection_state_wifi_no_internet"] = "Mit WLAN verbunden, kein Internet";
language_ge["my_vp_devices_wifi_connection_state_wifi_with_internet"] = "Mit WLAN und Internet verbunden";
language_ge["my_vp_devices_winter_mode_dialog_message"] = "Sind Sie sicher, dass Sie Ihr Gerät %1$s \"%2$s\" in den Überwinterungsmodus einstellen möchten?";
language_ge["name"] = "Name ";
language_ge["navigation_drawer_log_in"] = "Anmelden / Registrieren";
language_ge["navigation_drawer_my_devices"] = "Meine Geräte";
language_ge["navigation_drawer_probes_and_calibration"] = "Sonden &amp; Kalibrierung";
language_ge["never"] = "Nie";
language_ge["new_device_message"] = "Sie haben soeben einen neuen %1$s zu Ihrem Vigipool-System hinzugefügt.\n\nNun müssen Sie ihn einstellen.";
language_ge["new_device_title"] = "Neue %1$s entdeckt";
language_ge["next"] = "Nächste";
language_ge["next_color"] = "Nächste Farbe";
language_ge["no_data"] = "Keine Daten";
language_ge["no_measurement_tooltip"] = "Die Messwerte werden einige Minuten nach dem Einschalten der Filterung angezeigt.";
language_ge["no_sensor_data"] = "Um die Historie Ihrer Messungen zu erhalten, verbinden Sie bitte Ihr Vigipool-Gerät mit dem Internet und verknüpfen Sie es mit Ihrem Vigipool-Bereich.";
language_ge["no_temp_disconnected_help"] = "Temperaturmessungen werden nicht angezeigt, da Ihr Gerät nicht mit dem Internet verbunden ist.";
language_ge["no_temp_sensor"] = "Kein Temperatursensor erkannt";
language_ge["no_temp_sensor_tild"] = "Ihr tild hat keinen Temperatursensor - Funktionen sind deaktiviert (Frostschutz, Sollwert Zusatzheizung, Sollwert Min.-Temperatur Behandlung etc.)";
language_ge["no_temp_value_help"] = "Die Messwerte werden einige Minuten nach dem Start der Filterung angezeigt.";
language_ge["not_connected"] = "Nicht verbunden ";
language_ge["notification_awsconnected"] = "Ihr Vigipool-Gerät ist wieder mit dem WLAN verbunden!";
language_ge["notification_awsnot_connected"] = "Ihr Vigipool-Gerät ist nicht mehr mit WLAN verbunden… Überprüfen Sie die Netzwerkverbindung oder verbinden Sie sich über Bluetooth.";
language_ge["notification_device_disconnected"] = "Achtung, Ihr Gerät %1$s ist nicht mit WLAN verbunden.\nBitte überprüfen Sie die Netzwerkverbindung oder stellen Sie eine Verbindung über Bluetooth her.";
language_ge["notification_device_linked_vigipool"] = "Jetzt können Sie Ihren Pool von überall aus im Auge behalten, indem Sie den Verbindungsmodus \"Aus der Ferne\" verwenden.";
language_ge["notification_disconnected"] = "Achtung, Ihr Phileo-Gerät ist nicht mit WLAN verbunden.\nBitte überprüfen Sie die Netzwerkverbindung oder stellen Sie eine Verbindung über Bluetooth her.";
language_ge["notification_divergent_flow"] = "Ihre Flusssensoren zeigen nicht alle denselben Filterstatus an.";
language_ge["notification_ely_cell_error"] = "Die Elektrolysezelle produziert nicht mehr - wenden Sie sich an Ihren Installateur.";
language_ge["notification_ely_missed_filtration"] = "Die aktuelle Filterzeit ist zu kurz, damit die Elektrolyse die programmierte Zeit produzieren kann.";
language_ge["notification_ely_over_salt"] = "Salzgehalt top hoch - Elektrolyse stoppen.";
language_ge["notification_ely_overheat"] = "Interne Temperatur des Elektrolyseurs zu hoch.";
language_ge["notification_ely_overload"] = "Stromversorgung des Elektrolyseurs überlastet.";
language_ge["notification_ely_temp_too_low"] = "Minimale Wassertemperatur erreicht. Elektrolyse wird gestoppt.";
language_ge["notification_ely_under_salt"] = "Geringe Produktion - lesen Sie die Anleitung zu %1$s.";
language_ge["notification_empty_tub"] = "Der Behälter für das Regelmittel ist leer - Die Pumpe ist ausgeschaltet";
language_ge["notification_meteor_current_too_high_alarm"] = "Überstrom festgestellt - Überprüfen Sie, ob die Pumpe defekt oder blockiert ist.";
language_ge["notification_meteor_current_too_low_alarm"] = "Unterstrom erkannt - Stellen Sie sicher, dass die Pumpe nicht leer läuft.";
language_ge["notification_meteor_frost_warning_alarm"] = "Die Wassertemperatur liegt nahe bei 0 °C, die Filterung wird aktiviert, um die Gefahr des Einfrierens zu vermeiden.";
language_ge["notification_meteor_water_level_too_low_alarm"] = "Sehr niedriger Wasserstand: Überprüfen Sie den Wasserstand im Pool.";
language_ge["notification_modbus_error"] = "Es wurde ein Kommunikationsfehler zwischen dem Gerät und dem Antennenmodul festgestellt.";
language_ge["notification_no_orp_value"] = "Seit mindestens einer Stunde keine RedOx-Messung erhalten.";
language_ge["notification_no_ph_value"] = "Seit mindestens einer Stunde wurden keine pH-Messungen mehr empfangen.";
language_ge["notification_orp"] = "Es wurden Fehler bei den RedOx-Messungen beobachtet, bitte überprüfen Sie den Status Ihrer Anlage.";
language_ge["notification_overdose"] = "Die maximale Menge des innerhalb von 24 Stunden injizierten Regulierungsprodukts wurde erreicht.";
language_ge["notification_overdose_orp"] = "Das maximale Volumen des in 24 Stunden injizierten RedOx-Regulierungsprodukts wurde erreicht.";
language_ge["notification_overdose_ph"] = "Die maximale Menge an pH-Regulierungsmittel, die innerhalb von 24 Stunden injiziert wurde, wurde erreicht";
language_ge["notification_permission_rationale_message"] = "Wir müssen Ihnen Benachrichtigungen über auffälliges Verhalten Ihrer Vigipool-Geräte schicken.";
language_ge["notification_permission_rationale_title"] = "Benachrichtigungen erlauben";
language_ge["notification_temp"] = "Es wurden Fehler bei der Temperaturmessung festgestellt, bitte überprüfen Sie den Status Ihrer Anlage. ";
language_ge["number_picker_dialog_title"] = "Wählen Sie eine Zahl";
language_ge["number_too_big"] = "Anzahl zu hoch";
language_ge["on"] = "Eingeschlatet";
language_ge["open_settings"] = "Einstellungen öffnen";
language_ge["open_spotify"] = "Spotify öffnen ";
language_ge["operating_mode"] = "Betriebmodus ";
language_ge["options"] = "Optionen ";
language_ge["orp_measurement_orp_history"] = "RedOx-Wertehistorie";
language_ge["orp_probe_calibration_error_dialog_message"] = "Kalibrierungsfehler, überprüfen Sie Ihren RedOx-Sensor.";
language_ge["orpcalibration_measured"] = "Gemessener RedOx";
language_ge["orpcalibration_solution"] = "RedOx-Lösung ";
language_ge["orpcurrent"] = "Aktueller RedOx ";
language_ge["orpdesired"] = "Angepasster RedOx ";
language_ge["orperror_meteor_notification"] = "Fehler bei der RedOx-Messung, überprüfen Sie die Sonde.";
language_ge["orperror_notification"] = "Es werden Fehler bei den RedOx-Messungen festgestellt, die Injektion wird gestoppt, bitte überprüfen Sie Ihre Anlage und die Sonden.";
language_ge["orphistoric"] = "RedOx-Historie ";
language_ge["orpmeasurement_title"] = "RedOx-Messung ";
language_ge["orpsetpoint"] = "RedOx-Sollwert";
language_ge["orpsetpoint_help"] = "Das Elektrolysegerät wird während der von Ihnen angegebenen Stunden eingeschaltet.\nWenn der RedOx-Sollwert erreicht ist, wird der RedOx bis zur Endzeit des Programms auf seinem Sollwert gehalten.";
language_ge["orpsetpoint_help_detailed"] = "Der gewählte RedOx-Sollwert wird auch auf alle Programme angewendet.\nWenn der RedOx-Messwert den Sollwert erreicht und die Elektrolyseanlage eingeschaltet ist, läuft sie nur so weit, dass der RedOx-Wert auf dem Sollwert gehalten wird.";
language_ge["orpsetpoint_help_detailed_meteor"] = "Die Elektrolyseanlage bleibt so lange eingeschaltet, bis der RedOx-Wert den Sollwert erreicht.\nSobald der Sollwert erreicht ist, läuft es nur noch so weit, dass der RedOx-Wert auf seinem Niveau bleibt.";
language_ge["orptank_almost_empty_notification"] = "Der RedOx-Regelmittelbehälter ist fast leer";
language_ge["orptank_empty_notification"] = "Der RedOx-Regelmittelbehälter ist fast leer - Die Pumpe ist ausgeschaltet";
language_ge["oups"] = "Oupsi! ";
language_ge["output"] = "Ausgang ";
language_ge["output_not_plugged"] = "Nicht angeschlossen";
language_ge["oz"] = "oz";
language_ge["paused"] = "pausiert";
language_ge["ph_measurement_dialog_aws_login_message"] = "Sind Sie sicher, dass Sie die App im Fernverbindungsmodus neu starten wollen?";
language_ge["ph_measurement_dialog_aws_login_title"] = "Neustart";
language_ge["ph_measurement_orp_history_ble_hint"] = "Der Verlauf der RedOx-Werte ist nur verfügbar, wenn Sie den Fernverbindungsmodus verwenden:\n\n- Ihr Vigipool-Gerät muss mit WLAN verbunden sein.\n- Sie müssen Ihr Vigipool-Konto erstellen und bestätigen.\n- Sie müssen sich \"Aus der Ferne\" anmelden";
language_ge["ph_measurement_ph_history"] = "Historie der pH-Werte";
language_ge["ph_measurement_ph_history_aws_login"] = "Fernverbindung";
language_ge["ph_measurement_ph_history_ble_hint"] = "Die Historie der pH-Werte ist nur verfügbar, wenn Sie den Fernverbindungsmodus verwenden :\n\n- Ihr Vigipool-Gerät muss mit WLAN verbunden sein.\n- Sie müssen Ihr Vigipool-Konto erstellen und bestätigen.\n- Sie müssen sich \"Aus der Ferne\" anmelden";
language_ge["ph_probe_calibration_btn_validation"] = "Kalibrierung bestätigen";
language_ge["ph_probe_calibration_calibration_manual"] = "Calibration manuelle";
language_ge["ph_probe_calibration_error_dialog_message"] = "Kalibrierungsfehler, überprüfen Sie Ihre pH-Sonde.";
language_ge["ph_regulation_injection_max_volume"] = "Maximales injiziertes Volumen";
language_ge["ph_regulation_injection_max_volume_value"] = "%1$,.2f %2$s/Tag ";
language_ge["ph_regulation_injection_max_volume_value_litre"] = "%1$,.2f L/Tag ";
language_ge["ph_regulation_injection_max_volume_value_oz"] = "%1$d oz/Tag ";
language_ge["phcalibration_measured"] = "Gemessener pH-Wert";
language_ge["phcalibration_solution"] = "pH Lösung ";
language_ge["phcurrent"] = "aktueller pH ";
language_ge["phdesired"] = "angepasster pH ";
language_ge["pherror_notification"] = "Es wurden Fehler bei der pH-Messung festgestellt, bitte überprüfen Sie den Zustand Ihrer Anlage";
language_ge["phhistoric"] = "pH-Historie ";
language_ge["phmeasurement_title"] = "pH-Messung ";
language_ge["phtank_almost_empty_notification"] = "Der pH-Regulierungsmittelbehälter ist fast leer";
language_ge["phtank_empty_notification"] = "Der Behälter für das pH-Regulierungsmittel ist leer - Die Pumpe ist ausgeschaltet";
language_ge["play_last_song"] = "Letzte Musik abspielen";
language_ge["please_wait"] = "Bitte haben Sie einen Moment Geduld…";
language_ge["plurals_1_an"] = "%1$d Jahr ";
language_ge["plurals_1_heure"] = "%1$d Stunde ";
language_ge["plurals_1_jour"] = "%1$d Tag";
language_ge["plurals_1_minute"] = "%1$d Minute ";
language_ge["plurals_1_mois"] = "%1$d  Monat ";
language_ge["plurals_1_seconde"] = "%1$d Sekunde";
language_ge["plurals_1_semaine"] = "%1$d Woche ";
language_ge["plurals_x_an"] = "%1$d Jahre ";
language_ge["plurals_x_heure"] = "%1$d Stunden ";
language_ge["plurals_x_jour"] = "%1$d Tage";
language_ge["plurals_x_minute"] = "%1$d Minuten ";
language_ge["plurals_x_mois"] = "%1$d Monate ";
language_ge["plurals_x_seconde"] = "%1$d Sekunden";
language_ge["plurals_x_semaine"] = "%1$d Wochen ";
language_ge["pool_description"] = "Geben Sie die Eigenschaften Ihres Pools an, damit wir die Funktionsweise der installierten Geräte optimieren können.";
language_ge["power_factor"] = "Leistungsfaktor";
language_ge["prepare_reconnection"] = "Wiederverbindung wird vorbereitet...";
language_ge["pressure_current"] = "Aktueller Druck";
language_ge["pressure_desired"] = "Berichtigter Druck";
language_ge["pressure_history"] = "Druckhistorie";
language_ge["pressure_measurement_history"] = "Druckwerten-Historie";
language_ge["price_kwh"] = "kWh-Preis";
language_ge["priority_ph"] = "pH Priorität";
language_ge["probe_replacement_dialog_message_orp"] = "Sie sind dabei, das Datum der letzten Änderung Ihrer RedOx-Sonde zurückzusetzen.\n\nDiese Änderung ist nicht umkehrbar. Sind Sie sicher, dass Sie weitermachen wollen?";
language_ge["probe_replacement_dialog_message_ph"] = "Sie sind dabei, das Datum des letzten Wechsels Ihrer pH-Sonde zurückzusetzen.\n\nDiese Änderung ist nicht umkehrbar. Sind Sie sicher, dass Sie weitermachen wollen?";
language_ge["program"] = "Programm ";
language_ge["programming_heating_text"] = "Max %1$s/Tag";
language_ge["programming_lighting_text"] = "%1$s/Tag";
language_ge["programming_overlay_average_temperature"] = "Durchschnittstemperatur: %1$d%2$s";
language_ge["programming_program_1"] = "Programm 1";
language_ge["programming_program_2"] = "Programm 2 ";
language_ge["prohibited_by_box"] = "Durch den Elektrokasten verboten";
language_ge["proj_type_microcut"] = "Farbe Mikro-Schnitte";
language_ge["proj_type_mono"] = "Monochrom";
language_ge["proj_type_mono_dim"] = "Dimmbarer Monochrom";
language_ge["proj_type_rc"] = "RC+ Farbe ";
language_ge["proximity_search_ble_powered_off_description"] = "Das Bluetooth Ihres Telefons ist deaktiviert und wir benötigen es, um Ihre Nähe zum Gerät zu überprüfen.\n\nBitte aktivieren Sie Bluetooth auf Ihrem Telefon, bevor Sie es erneut versuchen.";
language_ge["proximity_search_ble_unauthorized_description"] = "Die App hat nicht die Erlaubnis, das Bluetooth Ihres Telefons zu verwenden, und wir benötigen es, um zu überprüfen, wie nah Sie dem Gerät sind.\n\nBitte geben Sie Vigipool über die App \"Einstellungen\" die Bluetooth-Erlaubnis, bevor Sie es erneut versuchen.";
language_ge["proximity_search_device_not_found_description"] = "Wir müssen überprüfen, wie nah Sie an Ihrer Installation sind, um eine Rückspülung durchzuführen.\nBitte gehen Sie in die Nähe Ihrer Anlage und prüfen Sie, ob Ihre Geräte eingeschaltet sind, bevor Sie es erneut versuchen.";
language_ge["psi"] = "psi";
language_ge["quit_backwash_description"] = "Achtung, denken Sie daran, das Ventil der Filterpumpe wieder auf FILTRATION zu stellen.";
language_ge["quit_backwash_title"] = "Sind Sie sicher, dass Sie den Rückspülmodus verlassen möchten?";
language_ge["real_time"] = "Echtzeit";
language_ge["reconnect_to_device_alert_title"] = "Gerät wechseln?";
language_ge["reconnection_needed"] = "Neuverbindung erforderlich";
language_ge["red"] = "Rot";
language_ge["regulated"] = "Reguliert ";
language_ge["regulation_available_tank_volume"] = "Verfügbares Produktvolumen";
language_ge["regulation_available_tank_volume_help_lock"] = "Lock, um die Änderungen zu speichern";
language_ge["regulation_available_tank_volume_help_unlock"] = "Unlock, um das verfügbare Volumen zu bearbeiten";
language_ge["regulation_filtration_state"] = "Filterungsstatus";
language_ge["regulation_injection_state"] = "Injektion läuft";
language_ge["regulation_max_injection_volume_adjustment"] = "Max. Injektionsvolumen";
language_ge["regulation_orptitle"] = "RedOx-Regulierung";
language_ge["regulation_phminus"] = "pH-";
language_ge["regulation_phminus_title"] = "pH- -Regulierung";
language_ge["regulation_phplus"] = "pH+";
language_ge["regulation_phplus_title"] = "pH+-Regulierung";
language_ge["regulation_phtitle"] = "pH-Regulierung";
language_ge["regulation_product_type"] = "Art des eingespritzten Produkts";
language_ge["regulation_volume_product_injected_description"] = "Injektionssequenz: 1 von 3 Minuten";
language_ge["remember_config"] = "Diese Konfiguration speichern";
language_ge["rename"] = "Umbenennen";
language_ge["repeat_everyday"] = "Täglich wiederholen";
language_ge["resend_verification_code"] = "Code erneut per E-Mail senden";
language_ge["reset_password_code_placeholder"] = "Reset-Code";
language_ge["reset_password_enter_code"] = "Geben Sie den Code ein, den Sie an Ihre E-Mail-Adresse erhalten (dies kann einige Minuten dauern, bitte überprüfen Sie Ihren Spam, falls Sie ihn nicht finden).";
language_ge["reset_password_enter_email"] = "Geben Sie die E-Mail-Adresse Ihres Kontos ein, um einen Bestätigungscode zu erhalten.";
language_ge["reset_password_enter_new_password"] = "Geben Sie das neue Passwort für Ihr Konto ein.\nDas neue Passwort muss diesen Regeln entsprechen: mindestens 8 Zeichen mit Groß- und Kleinbuchstaben, eine Zahl und ein Sonderzeichen.";
language_ge["reset_password_error"] = "Es ist ein Fehler aufgetreten, bitte überprüfen Sie Ihre Internetverbindung und versuchen Sie es erneut";
language_ge["reset_password_error_code"] = "Das Passwort konnte nicht zurückgesetzt werden. Bitte überprüfen Sie, ob Ihr Rücksetzcode richtig eingegeben wurde.";
language_ge["reset_password_success"] = "Passwort erfolgreich aktualisiert!";
language_ge["restart"] = "Neu starten ";
language_ge["row_pool_sharing_timestamp_expire"] = "Läuft  am %1$s ab";
language_ge["row_pool_sharing_timestamp_expired"] = "Am %1$s abgelaufen ";
language_ge["salt_level"] = "Salzgehalt ";
language_ge["saturday_short"] = "Sam";
language_ge["saved_colors"] = "Gespeicherte Farben";
language_ge["schedule_orpsetpoint_warning"] = "Der gewählte RedOx-Sollwert wird auf alle Programme übernommen.";
language_ge["schedule_program_at"] = "Zum ";
language_ge["schedule_program_at2"] = "Auf";
language_ge["schedule_program_during"] = "während ";
language_ge["schedule_program_from"] = "Von";
language_ge["schedule_program_from2"] = "Von ";
language_ge["schedule_programto"] = "bis";
language_ge["schedule_programto2"] = "bis ";
language_ge["schedule_temp_setpoint_warning"] = "Die gewählte Temperatur wird auf alle Programme übernommen.";
language_ge["scheduled_operation"] = "Programmierter Start";
language_ge["scheduling_timeslot_description"] = "Wählen Sie Start- und Endzeit des Programms aus";
language_ge["scheduling_timeslot_duration_description"] = "Wählen Sie die Startzeit und die Dauer des Programms aus";
language_ge["seconds"] = "Sekunden";
language_ge["see_debit_history"] = "Durchflusshistorie ansehen";
language_ge["see_pressure_history"] = "Druckhistorie ansehen";
language_ge["select"] = "Auswählen ";
language_ge["select_clients"] = "Wählen Sie die gewünschten zugehörigen Geräte aus";
language_ge["select_master"] = "Wählen Sie das Hauptgerät";
language_ge["select_zone_for_output"] = "Wählen Sie, welcher Zone die einzelnen Ausgänge zugeordnet sind.";
language_ge["sensor_debit"] = "Durchfluss-Sonde";
language_ge["sensor_flow"] = "Durchfluss-Sonde";
language_ge["sensor_orp"] = "RedOx-Sonde";
language_ge["sensor_ph"] = "pH-Sonde";
language_ge["sensor_pressure"] = "Drucksensor";
language_ge["sensor_temp"] = "Temp-Sensor ";
language_ge["set_brightness"] = "Intensität einstellen";
language_ge["set_speed"] = "Geschwindigkeit einstellen";
language_ge["setpoint_picker_dialog_title"] = "Legen Sie den Sollwert fest";
language_ge["settings_aws_state_connection_failure"] = "Verbindung fehlgeschlagen";
language_ge["settings_button_aux_type"] = "Einstellung ";
language_ge["settings_button_aux_type_help"] = "Beachten Sie, dass die Programme beim Wechsel des Zusatztyps deaktiviert werden (die Zeitfenster bleiben jedoch erhalten).";
language_ge["settings_button_frost_protection_mode"] = "Frostschutzmodus";
language_ge["settings_button_projector_type_help"] = "Beachten Sie, dass die Programme beim Wechsel des Scheinwerfertyps zurückgesetzt werden.";
language_ge["settings_button_winter_mode"] = "Überwinterungsmodus ";
language_ge["settings_dialog_aws_wifi_not_connected_message"] = "Die WLAN-Verbindung Ihres Geräts kann nur als Bluetooth konfiguriert werden.\n\nMöchten Sie die App im Bluetooth-Modus neu starten?";
language_ge["settings_dialog_connnection_in_progress_bt_cancel"] = "Abbrechen";
language_ge["settings_dialog_connnection_in_progress_message"] = "Ihr Phileo-Gerät versucht, sich mit WLAN zu verbinden.\n\nSie können es entweder weiterlaufen lassen oder abbrechen und eine neue Verbindung einrichten.";
language_ge["settings_flow_state"] = "Flow-Status :";
language_ge["settings_hardware_version"] = "Hardware-Version: %1$s";
language_ge["settings_software_version"] = "Firmware-Version: %1$s";
language_ge["settings_wifi_connection_error"] = "Fehler bei der WLAN-Verbindung";
language_ge["settings_wifi_connection_in_progress"] = "WLAN-Verbindung";
language_ge["setup"] = "Installation";
language_ge["setup_lynx_failed"] = "Verbindung zum Lynx fehlgeschlagen";
language_ge["setup_lynx_success"] = "Verbindung zum Lynx erfolgreich hergestellt";
language_ge["setup_new_device_button"] = "Einstellen";
language_ge["setup_wifi_choice_credentials"] = "Manuel ";
language_ge["setup_wifi_choice_lynx"] = "Lynx";
language_ge["setup_wifi_choice_wps"] = "WPS ";
language_ge["setup_wifi_credentials_description"] = "Bitte geben Sie die Zugangsdaten des Netzwerks ein, mit dem Sie sich verbinden möchten.\nAchtung: Es ist nicht möglich, sich mit 5GHz-Netzwerken zu verbinden.";
language_ge["setup_wifi_credentials_failed"] = "Die Verbindung ist fehlgeschlagen.\n\nÜberprüfen Sie die eingegebenen Informationen und stellen Sie sicher, dass die WLAN-Abdeckung Ihrer Einrichtung ausreichend ist.";
language_ge["setup_wifi_credentials_pass_placeholder"] = "Netzwerk-Passwort";
language_ge["setup_wifi_credentials_ssid_placeholder"] = "Name des Netzwerks";
language_ge["setup_wifi_credentials_wrong_password"] = "Die Anmeldung ist fehlgeschlagen.\n\nDas eingegebene Passwort ist falsch.";
language_ge["setup_wifi_lynx_description"] = "Wenn Sie einen Lynx besitzen, können Sie ihn als Zugangspunkt verwenden, um sich mit dem WLAN zu verbinden.\n\nSobald sich Ihr Lynx im Access Point-Modus befindet, drücken Sie unten auf die Schaltfläche \"Verbinden\" und Ihre Einrichtung wird sich damit verbinden.\nGehen Sie dann zu Ihrem Lynx und konfigurieren Sie das WLAN: Ihre Installation hat nun über den Access Point des Lynx Zugang zum Internet!";
language_ge["setup_wifi_success"] = "WLAN-Verbindung hergestellt";
language_ge["setup_wifi_wps_description"] = "WLAN Protected Setup (WPS) ist eine Funktion, die von vielen Routern bereitgestellt wird. Sie wurde entwickelt, um den Prozess der Verbindung zu einem sicheren WLAN-Netzwerk von einem Computer oder einem anderen Gerät aus zu vereinfachen.\n\nUm fortzufahren, drücken Sie einfach die WPS-Taste an Ihrem Router und tippen Sie dann auf die Schaltfläche \"Verbinden\" unten.";
language_ge["setup_wifi_wpsfailed"] = "Die Verbindung ist fehlgeschlagen.\n\nBitte überprüfen Sie, ob die WLAN-Abdeckung Ihrer Einrichtung ausreichend ist.";
language_ge["shadow_incomplete_reboot_message"] = "Neustartversuch, bitte warten Sie 30 Sekunden...";
language_ge["share_my_pool_bt_share"] = "Teilen ";
language_ge["share_my_pool_date_picker_title"] = "Teilen bis zu…";
language_ge["share_my_pool_date_picker_validation"] = "Bitte füllen Sie das Ablaufdatum aus";
language_ge["share_my_pool_delete_share_dialog_bt_remove"] = "Löschen ";
language_ge["share_my_pool_delete_share_dialog_message"] = "Möchten Sie die Freigabe Ihres Pools mit dem Konto \"%1$s\" wirklich löschen?";
language_ge["share_my_pool_dialog_contact_not_found_message"] = "Sie müssen Ihre Kontaktdaten ausfüllen, bevor Sie Ihren Pool mit anderen teilen können.";
language_ge["share_my_pool_hint_date"] = "Bis zum TT/MM/JJJJ";
language_ge["share_my_pool_no_shares"] = "Keine Freigaben zum Anzeigen.";
language_ge["share_pool_description"] = "Bitte geben Sie Ihre Kontaktdaten und Informationen über Ihren Pool an, damit wir ihn mit einem Profi teilen können.";
language_ge["share_pool_new_share"] = "Neue Freigabe";
language_ge["share_pool_shared"] = "Meine Freigaben";
language_ge["share_pool_title"] = "Wie kann ich meinen Pool mit anderen teilen?";
language_ge["share_unavailable"] = "Freigabe nicht möglich";
language_ge["short_ble_history_information"] = "Gerät mit dem WLAN verbinden, um von den Verbrauchsprotokollen zu profitieren.";
language_ge["short_ble_history_information_return_line"] = "Gerät mit dem WLAN verbinden,\num von den Verbrauchsprotokollen\nzu profitieren.";
language_ge["short_debit_history"] = "Durchflusshistorie";
language_ge["short_pressure_history"] = "Druckhistorie";
language_ge["should_add_to_vigipool_account_alert_message"] = "Wir haben festgestellt, dass Ihr Gerät mit dem Internet verbunden ist und Sie mit einem Vigipool-Konto angemeldet sind, die beiden aber nicht miteinander verknüpft sind.\n\nMöchten Sie dieses Gerät mit Ihrem Vigipool-Konto verknüpfen, um es aus der Ferne steuern zu können? ";
language_ge["side_menu_configure"] = "Einstellen ";
language_ge["side_menu_configure_devices"] = "Meine Geräte";
language_ge["side_menu_configure_measurements"] = "Sonden & Kalibrierung";
language_ge["side_menu_configure_units"] = "Maßeinheiten";
language_ge["side_menu_others"] = "Andere";
language_ge["side_menu_others_cgu"] = "AGB";
language_ge["side_menu_others_faq"] = "Häufige Fragen";
language_ge["side_menu_others_share_pool"] = "Meinen Pool freigeben";
language_ge["side_menu_vigipool"] = "Vigipool-Konto";
language_ge["side_menu_vigipool_connected_devices"] = "Vernetzte Geräte";
language_ge["side_menu_vigipool_my_pool"] = "Mein Pool";
language_ge["side_menu_vigipool_sign_in"] = "Anmelden/Registrieren";
language_ge["side_menu_vigipool_sign_out"] = "Abmelden ";
language_ge["sign_in_success_title"] = "Erfolgreiche Verbindung";
language_ge["sign_in_up_vigipool"] = "Konto erstellen oder sich mit Vigipool vernetzen?";
language_ge["sign_up_complete_success_title"] = "Ihr Konto ist validiert!\nSie können sich jetzt anmelden.\n";
language_ge["sign_up_success_description"] = "Sie erhalten umgehend einen Bestätigungscode per E-Mail. Geben Sie nach Erhalt den Code unten ein, um Ihr Konto zu validieren.";
language_ge["sign_up_success_title"] = "Ihr Konto wurde erstellt!";
language_ge["skip_rinse"] = "Spülschritt überspringen";
language_ge["something_went_wrong"] = "Es ist ein Fehler aufgetreten.";
language_ge["spotify_connection_lost"] = "Verbindung mit Spotify verloren";
language_ge["spotify_connection_lost_description"] = "Bitte spielen Sie Musik auf Spotify und kehren Sie zur Vigipool-App zurück, damit wir die Verbindung wiederherstellen können.";
language_ge["spotify_unavailable"] = "Spotify nicht verfügbar";
language_ge["spotify_unavailable_description"] = "Wir können nicht mit den Servern von Spotify kommunizieren.\nDas kann an einem vorübergehenden Problem auf deren Seite liegen oder an einem Problem mit der Internetverbindung auf Ihrem Telefon.";
language_ge["start"] = "Starten";
language_ge["start2"] = "Starten";
language_ge["start_timer"] = "Timer starten";
language_ge["status_accepted"] = "Genehmigt";
language_ge["status_denied"] = "Abgelehnt";
language_ge["status_pending"] = "In der Warteschleife";
language_ge["stop"] = "Stoppen";
language_ge["stop_backwash"] = "Rückspülung beenden";
language_ge["stop_calibration"] = "Kalibrierung stoppen";
language_ge["sunday_short"] = "Son";
language_ge["switch_device_device_type_not_supported"] = "Der Gerätetyp %s wird von der Vigipool-App noch nicht unterstützt.";
language_ge["switch_device_message"] = "Möchten Sie sich wirklich mit dem Gerät %1$s verbinden?";
language_ge["temp_current"] = "Aktuelle Temp.";
language_ge["temp_desired"] = "Berichtigte Temp.";
language_ge["temp_error_meteor_notification"] = "Fehler bei der Messung der Wassertemperatur. Überprüfen Sie den Anschluss der Temperatursonde.";
language_ge["temp_measurement_temp_history"] = "Historie der Temperaturwerte";
language_ge["temp_measurement_temp_history_ble_hint"] = "Der Verlauf der Temperaturwerte ist nur verfügbar, wenn Sie den Fernverbindungsmodus verwenden:\n\n- Ihr Vigipool-Gerät muss mit WLAN verbunden sein.\n- Sie müssen Ihr Vigipool-Konto erstellen und bestätigen.\n- Sie müssen sich \"Aus der Ferne\" anmelden";
language_ge["temp_measurement_temp_probe_calibration"] = "Kalibrierung der Temperatursonde";
language_ge["temp_measurement_title"] = "Temperaturhistorie";
language_ge["temp_min_start"] = "Mindeststarttemperatur";
language_ge["temp_picker_dialog_title"] = "Wählen Sie die Temperatur";
language_ge["temp_probe_calibration_error_dialog_message"] = "Kalibrierungsfehler, bitte überprüfen Sie die Temperatursonde.";
language_ge["temp_setpoint"] = "Temperatursollwert";
language_ge["temperature_min_start_help"] = "Die Behandlung wird während der gewählten Zeitfenster eingeschaltet, aber nur, wenn die Wassertemperatur über der Mindeststarttemperatur liegt.";
language_ge["temperature_min_start_help_detailed"] = "Die gewählte Temperatur wird auch auf alle Programme angewendet.\nWenn die Wassertemperatur unter dem Sollwert liegt, wird die Behandlung nicht gestartet.";
language_ge["temperature_setpoint_help"] = "Die Heizung schaltet sich während der von Ihnen angegebenen Stunden ein.\nWenn der Sollwert erreicht ist, wird die Temperatur bis zur Endzeit des Programms gehalten.";
language_ge["temperature_setpoint_help_detailed"] = "Die gewählte Temperatur wird auch auf alle Programme angewendet.\nWenn die Wassertemperatur den Sollwert erreicht hat und die Heizung eingeschaltet ist, wird sie gerade so viel laufen, dass die Temperatur gehalten wird.";
language_ge["tendency_week"] = "7-Tage-Trend";
language_ge["tension"] = "Spannung";
language_ge["terms_of_use"] = "Allgemeine Nutzungsbedingungen";
language_ge["text_copied_to_clipboard"] = "%1$s in die Zwischenablage kopiert.";
language_ge["text_serial_number"] = "Seriennummer";
language_ge["text_watcher_invalid_email"] = "Die E-Mail-Adresse muss gültig sein.";
language_ge["text_watcher_lower_case_error"] = "Bitte geben Sie mindestens ein Kleinbuchstaben ein.";
language_ge["text_watcher_max_length_error"] = "Bitte geben Sie weniger als %1$d Zeichen ein.";
language_ge["text_watcher_min_length_error"] = "Bitte geben Sie mindestens %1$d Zeichen ein.";
language_ge["text_watcher_number_error"] = "Bitte geben Sie mindestens eine Zahl ein.";
language_ge["text_watcher_password_confirm_error"] = "Die Passwörter passen nicht zusammen.";
language_ge["text_watcher_password_error"] = "Das Passwort ist nicht stark genug.";
language_ge["text_watcher_required"] = "Dieses Feld ist erforderlich";
language_ge["text_watcher_special_char_error"] = "Bitte geben Sie mindestens ein Sonderzeichen ein.";
language_ge["text_watcher_upper_case_error"] = "Bitte geben Sie mindestens ein Großbuchstabenzeichen ein.";
language_ge["theme"] = "Theme";
language_ge["theme_black_and_white"] = "Schwarz und weiß";
language_ge["theme_disco"] = "Disco";
language_ge["theme_disco2"] = "Disco 2";
language_ge["theme_france"] = "Frankreich";
language_ge["theme_jamaica"] = "Reggae";
language_ge["theme_rainbow"] = "Regenbogen";
language_ge["theme_spotify_cold_colors"] = "Kalte Farben";
language_ge["theme_spotify_hot_colors"] = "Warme Farben";
language_ge["theme_white"] = "Weißvariation";
language_ge["thermoregulated_mode_help"] = "Der temperaturgesteuerte Modus wird die Dauer der Programmbereiche an die Wassertemperatur anpassen.\nBei hohen Wassertemperaturen wird die Filterung etwas länger als geplant laufen, bei niedrigen Temperaturen umgekehrt.";
language_ge["thursday_short"] = "Don";
language_ge["time_ago"] = "es gibt %1$s";
language_ge["time_picker_dialog_sunset_mode_tooltip"] = "Startet die Beleuchtung bei Sonnenuntergang";
language_ge["time_picker_dialog_sunset_mode_tooltip_with_twilight"] = "Startet die Beleuchtung, wenn die Sonne untergeht (%1$s heute)";
language_ge["time_picker_dialog_title_end_time"] = "Stellen Sie die Endzeit ein";
language_ge["time_picker_dialog_title_start_time"] = "Stellen Sie die Startzeit ein";
language_ge["title_activity_base_regulation"] = "Regulierung";
language_ge["title_activity_bonding"] = "Pairing";
language_ge["title_activity_faq"] = "häufige Fragen ";
language_ge["title_activity_probes_and_calibration"] = "Sonden & Kalibrierung";
language_ge["title_activity_settings"] = "Einstellungen";
language_ge["title_activity_temp_measurement"] = "Temperatur Messung ";
language_ge["title_activity_temp_probe_calibration"] = "Temp Kalibrierung ";
language_ge["title_activity_update_name"] = "Namen aktualisieren";
language_ge["title_activity_wifi_setup"] = "WLAN-Konfiguration";
language_ge["toast_ble_auto_connect_error"] = "Es kann keine automatische Verbindung zum letzten Gerät hergestellt werden.";
language_ge["toast_serial_number_copied_to_clipboard"] = "Seriennummer in die Zwischenablage kopiert.";
language_ge["too_high"] = "Zu hoch";
language_ge["too_low"] = "Zu niedrig";
language_ge["treatment"] = "Wasseraufbereitung";
language_ge["tuesday_short"] = "Di";
language_ge["turbo_mode_tooltip_help"] = "Der Turbo-Modus ist nur verfügbar, wenn die Wärmepumpe läuft, und kehrt automatisch in den Smart-Modus zurück, sobald die eingestellte Temperatur erreicht ist.";
language_ge["turn_off"] = "Ausschalten";
language_ge["turn_off_auto"] = "Automatisch ausschalten";
language_ge["turn_off_filtration_forced"] = "Dauerbetrieb stoppen ";
language_ge["turn_on"] = "Einsschalten";
language_ge["turn_on_filtration_forced"] = "Dauerbetrieb starten";
language_ge["turn_on_the_light"] = "Beleuchtung einsschalten";
language_ge["turned_off"] = "Ausgeschaltet";
language_ge["twilight"] = "Dämmerung";
language_ge["twilight_unavailable"] = "Dämmerungsmodus nicht verfügbar";
language_ge["unable_to_read_device_data"] = "Unerwarteter Fehler: Der Datencache des Geräts kann nicht gelesen werden.";
language_ge["units_measure_eu"] = "Metrisch (m, L, kg…)";
language_ge["units_measure_na"] = "Imperial (ft, US Gal, lbs…)";
language_ge["units_measure_title"] = "Maßeinheiten";
language_ge["unknown"] = "Unbekannt";
language_ge["unpair"] = "Verlassen";
language_ge["update_action"] = "Aktualisieren";
language_ge["update_device_for_backwash_description"] = "Um die geführte Rückspülung nutzen zu können, ist es notwendig, dass Sie Ihre Anlage mit dem Internet vernetzt haben und Ihre Geräte aktualisieren.";
language_ge["update_failed_alert_title"] = "Aktualisierung fehlgeschlagen";
language_ge["update_firmware_ask_state_description"] = "Möchten Sie es jetzt installieren? (Wenn nicht, können Sie es jederzeit über den Bildschirm \"Einstellungen\" aktualisieren)";
language_ge["update_firmware_error_description"] = "Bei der Aktualisierung ist ein Fehler aufgetreten.";
language_ge["update_firmware_progress_description"] = "Download der aktuellen Aktualisierung…";
language_ge["update_firmware_restart_description"] = "Neustart wird durchgeführt …";
language_ge["update_firmware_success_description"] = "Update erfolgreich installiert!";
language_ge["update_mandatory"] = "Obligatorische Aktualisierung";
language_ge["update_name_validation_error"] = "Der Name muss mindestens drei Zeichen enthalten.";
language_ge["update_necessary"] = "Geräte-Update erforderlich";
language_ge["update_ota_f1_bt_download_and_install"] = "Download & Installation";
language_ge["update_ota_f1_text_top"] = "Ein Update ist verfügbar für %1$s (%2$s)";
language_ge["update_ota_f2_text_top"] = "Bitte haben Sie etwas Geduld, Ihr Gerät wird aktualisiert.";
language_ge["update_ota_f2_text_top_restarting"] = "Bitte warten Sie, Ihr Gerät startet neu.";
language_ge["update_ota_f2_text_top_restarting_with_device_type"] = "Bitte warten Sie, Ihr Gerät %1$s startet neu.";
language_ge["update_ota_f2_text_top_with_device_type"] = "Bitte warten Sie, Ihr Gerät %1$s wird aktualisiert.";
language_ge["update_ota_f2_update_progress"] = "%1$d %%";
language_ge["update_succeed_alert_title"] = "Erfolgreiches Update";
language_ge["validation_required"] = "Dies ist ein Pflichtfeld.";
language_ge["verification_code"] = "Code :";
language_ge["version_firmware_prefix"] = "Firmware-Version: ";
language_ge["version_hardware_prefix"] = "Hardware-Version: ";
language_ge["vigipool_account_not_verified_message"] = "Ihr Vigipool-Konto ist nicht aktiviert.\n\nBitte geben Sie den in Ihrer E-Mail erhaltenen Code ein, um Ihr Konto zu validieren.";
language_ge["vigipool_device"] = "Vigipool-Gerät";
language_ge["vigipool_device_added_success"] = "Gerät erfolgreich hinzugefügt!";
language_ge["volume_unit_litre"] = "Liter";
language_ge["volume_unit_us_gallon"] = "US-Gallone";
language_ge["volume_unit_us_gallon_unit"] = "US gal";
language_ge["vs_need_tild_or_meteor_alert"] = "";
language_ge["vspump_brand"] = "Marke : ";
language_ge["vspump_help"] = "Deaktivieren Sie die Automatische Auswahl, wenn Sie die Geschwindigkeit der Filterpumpe während des Zwangslaufs manuell wählen möchten.";
language_ge["vspump_model"] = "Modell :";
language_ge["vspump_new_device_button"] = "Einstellen";
language_ge["vspump_onoff_details"] = "mit steuerbarem Ein-/Ausschalter";
language_ge["vspump_select"] = "Eine andere Pumpe wählen";
language_ge["vspump_settings"] = "Pumpeneinstellungen";
language_ge["vspump_settings_confirm_message"] = "Achtung: Diese Einstellungen haben Auswirkungen auf die korrekte Funktionsweise des Geräts.";
language_ge["vspump_settings_confirm_title"] = "Bitte überprüfen Sie die ausgefüllten Informationen";
language_ge["vspump_settings_help"] = "Wählen Sie Ihre Pumpe aus der folgenden Liste";
language_ge["vspump_settings_title"] = "Pumpeneinstellungen";
language_ge["vspump_speed"] = "Geschwindigkeit";
language_ge["vspump_speed_auto"] = "Automatische Geschwindigkeit";
language_ge["vspump_speed_details"] = "%1$d-Geschwindigkeits-Pumpe";
language_ge["vspump_speed_eco"] = "Eco";
language_ge["vspump_speed_fast"] = "Turbo ";
language_ge["vspump_speed_normal"] = "Normal";
language_ge["vspump_speed_off"] = "Ausgeschaltet";
language_ge["vspump_type"] = "Art der Pumpe :";
language_ge["water_hardness_hard"] = "Hart";
language_ge["water_hardness_slightly_hard"] = "Ziemlich hart";
language_ge["water_hardness_slightly_soft"] = "Ziemlich weich";
language_ge["water_hardness_soft"] = "Weich";
language_ge["water_hardness_very_hard"] = "Sehr hart";
language_ge["water_hardness_very_soft"] = "Sehr weich";
language_ge["water_renewal"] = "Temperaturüberwachungsmodus";
language_ge["water_temperature"] = "Wassertemperatur";
language_ge["water_temperature_error"] = "Temperaturfehler: %1$s";
language_ge["wednesday_short"] = "Mi";
language_ge["white"] = "Weiß";
language_ge["wifi_lynx_fail_description"] = "Verbindung zum Lynx fehlgeschlagen";
language_ge["wifi_lynx_in_progress_description"] = "Suche nach dem Lynx, um sich damit zu verbinden…";
language_ge["wifi_lynx_success_description"] = "Verbindung zum Lynx erfolgreich hergestellt";
language_ge["wifi_setup_error_dialog_failure_message"] = "Fehler bei der WLAN-Verbindung, bitte überprüfen Sie Ihre SSID und Ihr Passwort.";
language_ge["wifi_setup_error_dialog_failure_message_wps"] = "Fehler bei der WLAN-Verbindung, bitte überprüfen Sie, ob Sie nahe genug am Router sind.";
language_ge["wifi_setup_error_dialog_timeout_message"] = "Timeout bei der WLAN-Verbindung überschritten";
language_ge["wifi_setup_error_dialog_timeout_message_ssid"] = "Die Wartezeit für die WLAN-Verbindung ist abgelaufen.\n\nBitte überprüfen Sie die eingegebenen Informationen und kontrollieren Sie, ob Ihr WLAN in Ihrer Einrichtung ausreichend ist.";
language_ge["wifi_setup_error_dialog_timeout_message_wps"] = "Délai d'attente dépassé pour la connexion Wifi.\n\nVeuillez contrôler que la couverture Wifi de votre installation est suffisante.";
language_ge["wifi_setup_error_dialog_wrong_password"] = "Bitte überprüfen Sie Ihr Passwort.";
language_ge["wifi_setup_lynx_hint"] = "Wenn Sie einen Lynx besitzen, können Sie ihn als Zugangspunkt verwenden, um sich mit dem WLAN zu verbinden.\n\nSobald sich Ihr Lynx im Access Point-Modus befindet, drücken Sie unten auf die Taste \"Verbinden\" und Ihre Einrichtung wird sich damit verbinden.\nGehen Sie dann zu Ihrem Lynx und konfigurieren Sie das WLAN: Ihre Installation hat nun über den Access Point des Lynx Zugang zum Internet!";
language_ge["wifi_setup_ssid_5ghz_hint"] = "Achtung: WLAN-Netze mit 5 GHz werden nicht unterstützt.";
language_ge["wifi_setup_ssid_hint_ssid"] = "SSID";
language_ge["wifi_setup_ssid_scan_qr_code"] = "QR-Code des Passworts scannen";
language_ge["wifi_setup_success_dialog_button_setup"] = "Mein Konto verwalten";
language_ge["wifi_setup_success_dialog_message"] = "Die WLAN-Verbindung wurde erfolgreich eingerichtet.\n\nSie können nun Ihr Vigipool-Konto erstellen oder sich in Ihr Konto einloggen.";
language_ge["wifi_setup_wps_hint"] = "Wi-Fi Protected Setup (WPS) ist eine Funktion, die von vielen Routern bereitgestellt wird. Sie wurde entwickelt, um den Prozess der Verbindung zu einem sicheren WLAN-Netzwerk von einem Computer oder einem anderen Gerät aus zu vereinfachen.\n\nUm fortzufahren, drücken Sie einfach die WPS-Taste an Ihrem Router und tippen Sie dann auf die Taste \"Verbinden\" unten.";
language_ge["wifi_state_connected_no_internet"] = "WLAN verbunden, kein Internet";
language_ge["wifi_state_in_progress"] = "WLAN-Verbindung wird hergestellt";
language_ge["wifi_state_internet"] = "Mit Internet verbunden";
language_ge["wifi_state_no_internet"] = "Kein Internet";
language_ge["wifi_state_not_connected"] = "WLAN nicht verbunden ";
language_ge["wifi_wpsin_progress_description"] = "Bitte drücken Sie die WPS-Taste auf Ihrem Router, um Ihr Vigipool-Gerät zu verbinden.\n\nVerbindungsversuch läuft…";
language_ge["winter_mode_disabled"] = "Der Überwinterungsmodus ist in der Version %1$s deaktiviert.\n\nVerbinden Sie Ihre Vigipool-Anlage mit dem Internet, um die neuesten Updates zu erhalten und diese Funktion zu aktivieren.";
language_ge["winter_mode_short"] = "Überwinterung";
language_ge["wix_settings_merge_zones"] = "Zonen zusammenführen";
language_ge["write_cancel_not_connected"] = "Kommunikationsproblem mit dem Gerät";
language_ge["write_cancel_poor_connection"] = "Ihr Handy hat eine schlechte Verbindung";
language_ge["zones"] = "Zonen";
language_ge["ios_with_thermoregulation"] = "Mit Thermoregulierung ≃ %@";


language_ge["forced_for_temp"] = "Die Filterung ist für die Zeit zur Aktualisierung der Temperatur aktiviert";


var language_it = {};

language_it["language"] = "Lingua";
language_it["sign_in"] = "Registrazione";
language_it["email"] = "E-mail";
language_it["password"] = "Password";
language_it["show_password"] = "Mostra password";
language_it["remember_me"] = "Ricordati di me";
language_it["login"] = "Accedi";
language_it["particular"] = "Privato";
language_it["professional"] = "Professionista";
language_it["free"] = "Gratuito";
language_it["prenium"] = "A pagamento";
language_it["dont_have_an_account"] = "Non avete ancora un account ?";
language_it["sign_up"] = "Iscriversi";
language_it["create_supervision_account"] = "Creare un account Supervisione";
language_it["forgot_your_password"] = "Password dimenticata";
language_it["resend_email_verification"] = "Non ho ricevuto l'E-mail di conferma";
language_it["wrong_id"] = "User name sbagliato";
language_it["perso_pro_error"] = "Errore account individuale/professionale";
language_it["email_used"] = "questa e-mail è già in uso";
language_it["password_rule_title"] = "La password deve contenere:";
language_it["password_rule_0"] = "Una lettera minuscola";
language_it["password_rule_1"] = "Una lettera maiuscola";
language_it["password_rule_2"] = "Un numero";
language_it["password_rule_3"] = "Almeno 6 caratteri";
language_it["password_rule_conform"] = "Le vostre password devono essere identiche";
language_it["account_specify"] = "Si prega di specificare quale account si desidera utilizzare";
language_it["email_not_verified"] = "Convalida la tua email prima di accedere.";
language_it["univers_vp"] = "Scopri l'universo Vigipool";
language_it["demo_text"] = "Una demo prima di iniziare?";
language_it["demo_button"] = "Accedi alla modalità demo";
language_it["name_of_the_brand"] = "Nome della società";
language_it["professional_s_name"] = "Nome del professionista";
language_it["address"] = "Indirizzo";
language_it["postal_code"] = "Codice Postale";
language_it["city"] = "Città";
language_it["country"] = "Nazione";
language_it["phone"] = "Telefono";
language_it["ccei_customer_number"] = "Numero cliente CCEI";
language_it["siret"] = "SIRET (Richiesto solo se la società è francese)";
language_it["vigipool_product_supplier"] = "Fornitore di prodotti";
language_it["register_info_1"] = "Un account Supervision";
language_it["register_info_2"] = "- vi permette di controllare delle piscine condivise, tramite l'applicazione Vigipool.";
language_it["register_info_3"] = "- ma non vi permette di utilizzare l'applicazione Vigipool (Si dovrà creare un'account Vigipool nell'applicazione";
language_it["register_info_4"] = "Se hai già un account Applicazione Vigipool, puoi connetterti direttamente a Supervision utilizzando i tuoi dati di accesso per visualizzare le informazioni associate alla tua piscina!";
language_it["create_an_account"] = "Creare un account";
language_it["password_confirmation"] = "Password (conferma)";
language_it["first_name"] = "Nome";
language_it["last_name"] = "Cognome";
language_it["already_have_an_account_connect"] = "Avete già un'account ?";
language_it["login_btn"] = "Connettersi";
language_it["reset_password"] = "Rigenerare password";
language_it["send_confirmation_email"] = "Inviare un e-mail di conferma";
language_it["reset_password_error"] = "Questo indirizzo e-mail non è in uso";
language_it["email_verification"] = "Invia ancora l'e-mail di conferma";
language_it["email_verification_footer"] = "LA vostra e-mail è già stata verificata?";
language_it["email_sent"] = "Email inviata";
language_it["email_has_been_sent"] = "È stata inviata un'e-mail per rigenerare la password.";
language_it["password_reset_link"] = "Questo link per rigenerare la password scadrà tra 60 minuti.";
language_it["return"] = "Torna indietro";
language_it["reset_success_title"] = "Password rigenerata con successo";
language_it["reset_success_text"] = "Puoi provare a connetterti nuovamente.";
language_it["mail_template_text_1"] = "Ricevi questa e-mail perchè abbiamo ricevuto una domanda di rigenerare la password legata al vostro account.";
language_it["mail_template_text_2"] = "Se non hai richiesto la rigenerazione della password, non sono necessarie ulteriori azioni";
language_it["mail_template_signature"] = "Cordiali saluti";
language_it["account_created_title"] = "Il tuo account è stato creato, prima di accedere, convalida la tua registrazione tramite l'e-mail che ti è stata appena inviata.";
language_it["email_verify_title"] = "Verifica della tua email di Vigipool Supervision";
language_it["email_verify_text_1"] = "Ricevi questa email perché hai appena creato il tuo account Vigipool Supervision";
language_it["email_verify_text_2"] = "Conferma la creazione del tuo account facendo clic sul pulsante in basso";
language_it["email_verify_text_3"] = "Se non hai creato un account, non sono necessarie ulteriori azioni.";
language_it["email_already_verified"] = "Email già verificata.";
language_it["email_verified"] = "Email verificata con successo.";
language_it["administrator"] = "Amministratore";
language_it["manager"] = "Responsabile";
language_it["pool_tech"] = "Tecnico della piscina";
language_it["new_user"] = "Nuovo";
language_it["btn_sign_out"] = "Disconnetersi";
language_it["dashboard"] = "Pannello di controllo";
language_it["my_account"] = "Il mio account";
language_it["users_management"] = "Utenti";
language_it["pool_management"] = "Gestione piscina";
language_it["interventions"] = "Progremma di manutenzione";
language_it["event_history"] = "Cronologia";
language_it["force_refresh"] = "Ricaricare";
language_it["overview"] = "piscine controllate";
language_it["overview_single"] = "piscina controllata";
language_it["swimming_pool_list"] = "Lista delle piscine";
language_it["swimming_pools_accepted"] = "Le piscine che controlli";
language_it["awaiting_delegation_acceptance"] = "In attesa di accettazione delega";
language_it["search_here"] = "Cerca qui...";
language_it["see_details"] = "Vedere dettagli";
language_it["accept_pool"] = "Accettare la piscina";
language_it["refuse_pool"] = "Rifiutare la piscina";
language_it["swimming_pool_locations"] = "Posizioni delle piscine";
language_it["legal_notice"] = "Note legali";
language_it["terms_of_service"] = "Termini d'utilizzo";
language_it["user_devices_graph"] = "Dispositivi installati";
language_it["table_pool_name"] = "Nome della piscina";
language_it["table_ownername"] = "Proprietario";
language_it["table_temperature"] = "T°";
language_it["table_wifi"] = "Wifi";
language_it["table_pool_status"] = "Stato della piscina";
language_it["table_rdv"] = "Appuntamento";
language_it["total"] = "Totale";
language_it["ok"] = "Ok";
language_it["warning"] = "Avviso/i";
language_it["error"] = "Errore/i";
language_it["disconnected"] = "Disconnesso/i";
language_it["ok_devices_only"] = "Solo dispositivi OK";
language_it["devices_to_be_monitored_only"] = "Solo dispositivi da monitorare";
language_it["devices_in_error_only"] = "Solo dispositive in errore";
language_it["devices_disconnected_only"] = "Solo dispositivi disconnessi";
language_it["error_multiple"] = "Diversi errori";
language_it["error_orp_high"] = "ORP troppo elevato";
language_it["error_orp_low"] = "ORP troppo basso";
language_it["error_orp_none"] = "Niente ORP";
language_it["error_ph_high"] = "pH troppo elevato";
language_it["error_ph_low"] = "pH troppo basso";
language_it["error_ph_none"] = "Niente pH";
language_it["error_temp_high"] = "Temperatura troppo elevata";
language_it["error_temp_low"] = "Temperatura troppo bassa";
language_it["error_temp_none"] = "Niente temperatura";
language_it["warning_multiple"] = "Attenzione";
language_it["warning_no_wifi"] = "Piscina disconnessa";
language_it["warning_orp_high"] = "ORP leggermente alto";
language_it["warning_orp_low"] = "ORP leggermente basso";
language_it["warning_ph_high"] = "pH leggermente alto";
language_it["warning_ph_low"] = "pH leggermente basso";
language_it["warning_temp_high"] = "temperatura leggermente alta";
language_it["warning_temp_low"] = "temperatura leggermente bassa";
language_it["app_account_fail_pool"] = ":nb_pool  piscina/e non sono inserite nell'applicazione Vigipool (\"La mia piscina\" nel menu a sinistra dell'applicazione) e non possono essere visualizzate in Vigipool Supervision";
language_it["CGU"] = "Menzioni legali | CGU";
language_it["remove_pool_tracking"] = "Rimuovere il monitoraggio della piscina";
language_it["see_map"] = "Guarda la mappa";
language_it["see_more"] = "Mostra di più";
language_it["remove_picture"] = "Eliminare questa foto";
language_it["file_too_heavy"] = "File troppo grande";
language_it["picture_tooltip"] = "Fare clic sul pulsante per aggiungere una foto, dimensione massima 4 MB";
language_it["deviceType"] = "Dispositivo principale";
language_it["cover"] = "Copertura";
language_it["volume"] = "Volume";
language_it["deviceId"] = "ID";
language_it["structure"] = "Struttura";
language_it["treatment"] = "Trattamento";
language_it["past"] = "Passati";
language_it["planned"] = "Programmati";
language_it["vigipool_devices"] = "Dispositivi di Vigipool";
language_it["electrolyse"] = "Elettrolisi";
language_it["shadow"] = "Informazioni dettagliate";
language_it["device"] = "Dispositivo";
language_it["function"] = "Funzione";
language_it["serial_number"] = "Numero di serie";
language_it["normal_behaviour"] = "Funzionamento corretto";
language_it["calibration_in_progress"] = "Calibrazione in corso";
language_it["winter_mode"] = "Modalità Inverno";
language_it["sync_flow"] = "Sincronizzazione della filtrazione";
language_it["update_available"] = "Aggiornamento disponibile";
language_it["update_in_progress"] = "Aggiornamento in corso";
language_it["update_error"] = "Errore durante l'aggiornamento";
language_it["restart_in_progress"] = "Riavvio in corso";
language_it["stable_calibration"] = "Calibrazione stabile";
language_it["gateway_mode"] = "Modalità gateway";
language_it["gateway_mode_0"] = "Cliente";
language_it["gateway_mode_1"] = "Gateway";
language_it["fast_slow_ble"] = "Bluetooth low energy - modalità rapida";
language_it["state"] = "Stato";
language_it["ap_bcast_duration"] = "Tempo per abbinamento dispositivi";
language_it["update_ota"] = "Aggiornato via Wi-Fi";
language_it["server_on"] = "Master";
language_it["flow_on"] = "Filtrazione";
language_it["prod_on"] = "Produzione di cloro";
language_it["mqtt_connected"] = "Connesso";
language_it["model_id"] = "Identificativo del modello";
language_it["hw_vers"] = "Versione dell'hardware";
language_it["date_mes"] = "Ultima misura";
language_it["date_mes_ph"] = "Ultima misura pH";
language_it["date_mes_orp"] = "Ultima misura ORP";
language_it["value_orp"] = "Valore ORP";
language_it["value_temp"] = "Temperatura";
language_it["sw_vers"] = "Versione del software";
language_it["ph_adjust"] = "Regolazione del pH";
language_it["temp_adjust"] = "Regolazione della temperatura";
language_it["orp_adjust"] = "Regolazione dell'ORP";
language_it["ph_calibration_target"] = "Punto di calibrazione del pH";
language_it["orp_calibration_target"] = "Punto di calibrazione dell'ORP";
language_it["jeedom_interval"] = "Intervallo di Jeedom";
language_it["rssi"] = "RSSI";
language_it["inject_on"] = "Iniezione in corso";
language_it["vol_tot_inject"] = "Volume totale iniettato (L)";
language_it["vol_bac"] = "Volume del serbatoio";
language_it["vol_max_24h"] = "Volume max 24h";
language_it["consigne_ph"] = "Consegna pH";
language_it["source_ph"] = "Fonte pH";
language_it["priority"] = "Priorità pH";
language_it["consigne_orp"] = "Consegna pH";
language_it["source_orp"] = "Fonte ORP";
language_it["mode_ely"] = "Modalità";
language_it["power_ely"] = "Potenza";
language_it["ely_duration_in_minut"] = "Durata elettrolisi in minuti";
language_it["couv_on"] = "Copertura piscina";
language_it["couv_on_2"] = "Copertura piscina &gt; 12h";
language_it["consigne_temp"] = "Consegna temperatura";
language_it["value_temp_in"] = "Temperatura in entrata";
language_it["value_temp_out"] = "Temperatura in uscita";
language_it["value_temp_int"] = "Temperatura  interna";
language_it["value_cond"] = "Conduttività";
language_it["ely_duration_compensated"] = "Durata programmata dell'elettrolisi";
language_it["mode_choc"] = "Modalità shock";
language_it["choc_duration"] = "Durata modalità shock";
language_it["water_hardness"] = "Durezza dell'acqua";
language_it["temp_min_off_ely"] = "Temperatura  minima";
language_it["off"] = "OFF";
language_it["on"] = "ON";
language_it["continuous"] = "Flitrazione continua";
language_it["thermo_regulated"] = "Termoregolato";
language_it["orp_regulated"] = "Regolato da ORP";
language_it["open"] = "Aperta";
language_it["closed"] = "Chiusa";
language_it["meteor_mode_1"] = "Marcia forzata";
language_it["meteor_mode_2"] = "Programmato";
language_it["meteor_mode_3"] = "Autoamtico";
language_it["tild_no_program"] = "Nessun programma è disponibile";
language_it["tild_hors_gel"] = "Modalità antigelo attivata, la tua filtrazione verrà avviata automaticamente per evitare che l'acqua si congeli nelle tubazioni";
language_it["tild_aux_type_6"] = "Regolazione ORP";
language_it["light_type_m"] = "Tipo di illuminazione";
language_it["light_type_m_0"] = "Mono";
language_it["light_type_m_1"] = "Micro-interruzioni (ON/OFF) ";
language_it["light_type_m_2"] = "Brio RC+";
language_it["aux1_type_2"] = "Riscaldamento";
language_it["aux1_type_3"] = "Booster";
language_it["aux1_type_4"] = "Trattamento ORP";
language_it["froze_mode"] = "Modalità antigelo";
language_it["froze_mode_0"] = "Attiva se &lt; 0° C";
language_it["froze_mode_1"] = "Attiva se &lt; 1° C";
language_it["froze_mode_2"] = "Attiva se &lt; 2° C";
language_it["tild_light_state_4"] = "Timer";
language_it["tild_filt_state_2"] = "Forzata dall'illuminazione";
language_it["tild_filt_state_3"] = "Forzata dall'ausiliario";
language_it["tild_filt_state_5"] = "Forzata dalla modalità antigelo";
language_it["tild_filt_state_6"] = "Forzata dal riscaldamento";
language_it["aux_state_1"] = "Asservito alla filtrazione";
language_it["aux_state_2"] = "Consegna di temperatura raggiunta";
language_it["aux_state_3"] = "Inferiore alla temperatura minima";
language_it["aux_state_4"] = "Inizierà presto";
language_it["aux_state_5"] = "Misura ORP errata";
language_it["device_not_online"] = "Dispositivo disconnesso o spento␣";
language_it["description_ofix"] = "Analizzatore T°, pH, ORP";
language_it["description_daisyph"] = "Pompa dosatrice pH";
language_it["description_daisyox"] = "Pompa dosatrice ORP";
language_it["description_zelia"] = "Cloratore a sale";
language_it["description_zelix"] = "Cloratore a sale";
language_it["description_lynx"] = "Schermo remoto";
language_it["description_ziphox"] = "Analizzatore T°, pH, ORP";
language_it["description_phileox"] = "Regolatore pH";
language_it["description_oxeox"] = "Regolatore ORP";
language_it["description_tild"] = "Quadro elettrico per piscina";
language_it["description_limpidoez"] = "Cloratore a sale";
language_it["description_vigipac"] = "Pompa di calore";
language_it["description_anteam"] = "Quadro multifunzione intelligente";
language_it["description_wix"] = "Controllore di luci X3";
language_it["no"] = "No";
language_it["yes"] = "Si";
language_it["disabled"] = "Disattivato";
language_it["enabled"] = "Attivato";
language_it["manual"] = "Manuale";
language_it["repetition"] = "Ripetizione";
language_it["operating_hour"] = "Orario di funzionamento";
language_it["mod"] = "Modalità";
language_it["duration"] = "Durata";
language_it["light"] = "Illuminazione";
language_it["everyday"] = "Tutti i giorni";
language_it["monday"] = "Lunedi";
language_it["tuesday"] = "Martedi";
language_it["wednesday"] = "Mercoledi";
language_it["thursday"] = "Giovedi";
language_it["friday"] = "Venerdi";
language_it["saturday"] = "Sabato";
language_it["sunday"] = "Domenica";
language_it["from"] = "Da";
language_it["during"] = "Durante";
language_it["to"] = "a";
language_it["sunset_mode"] = "Modalità crepuscolare";
language_it["auxiliary"] = "Ausiliario";
language_it["electrolysis_mode"] = "Modalità elettrolisi";
language_it["chlorine_production_status"] = "Stato produzione cloro";
language_it["power"] = "Potenza";
language_it["cell_flow"] = "Flusso cella";
language_it["cell_water_t"] = "T° acqua cella";
language_it["cell_internal_temperature"] = "T° interna cella";
language_it["powerful"] = "Potenza";
language_it["minimum_temperature"] = "T° minima";
language_it["electrolysis_current"] = "Corrente di elettrolisi (in A)";
language_it["voltage"] = "Tensione (in V)";
language_it["today_details"] = "Dettagli del giorno";
language_it["tooltip_1"] = "Per eseguire lo zoom, premi il pulsante sinistro del mouse, seleziona la zona in questione e rilascia il pulsante.";
language_it["tooltip_2"] = "Puoi ingrandire orizzontalmente e verticalmente.";
language_it["tooltip_3"] = "Per eseguire lo zoom indietro, fai doppio clic con il pulsante sinistro del mouse in un punto qualsiasi del grafico.";
language_it["tooltip_4"] = "Fare clic su un giorno specifico per visualizzarne i dettagli.";
language_it["connected"] = "Connesso␣";
language_it["value_ph"] = "Misura pH";
language_it["mode_ph"] = "Modalità regolazione pH";
language_it["vol_24h_inject"] = "Volume iniettato 24h";
language_it["mode_orp"] = "Modalità regolazione ORP";
language_it["more_info"] = "Maggiori informazioni";
language_it["export_historique"] = "Esportare la cronologia dei dati";
language_it["export_historique_modal_msg"] = "Selezionate il tipo di cronologia che volete esportare";
language_it["export_historique_year"] = "Scegliere l'anno della cronologia da esportare";
language_it["pool_note_title"] = "Note sulla piscina";
language_it["pool_note_delete"] = "Eliminare la nota";
language_it["pool_note_writer"] = "Ultima modifica :writer_name, le :date";
language_it["society"] = "Società";
language_it["cp"] = "Codice postale";
language_it["new_password"] = "Nuova password";
language_it["conf_password"] = "Conferma password";
language_it["actual_password"] = "Password attuale";
language_it["password_change_success"] = "Modifica effettuata";
language_it["password_change_fail"] = "Password attuale non corretta";
language_it["change_password"] = "Cambiare password";
language_it["users_managed"] = "Utenti gestiti";
language_it["add_user"] = "Aggiungere un utente";
language_it["user_list"] = "Lista degli utenti";
language_it["user_email"] = "E-mail dell'utente";
language_it["add_now"] = "Aggiungere adesso";
language_it["role"] = "Ruolo";
language_it["member_since"] = "Membro dal";
language_it["action"] = "Azione";
language_it["modify_or_delete"] = "Modificare o eliminare";
language_it["edit_user"] = "Modificare l'utente";
language_it["delete_user"] = "Eliminare l'utente";
language_it["warning_!"] = "Attenzione !";
language_it["to_delete_the_user"] = "Volete davvero eliminare quest'utente ?";
language_it["from_vigipool"] = "di Vigipool ?";
language_it["action_irreversible."] = "L'azione è irreversibile.";
language_it["go_back"] = "Torna indietro.";
language_it["user_update_success"] = "Informazioni aggiornate con successo";
language_it["user_delete_success"] = "Utente eliminato con successo";
language_it["temperature"] = "Temperatura";
language_it["ph"] = "pH";
language_it["orp"] = "ORP";
language_it["devices"] = "Dispositivi";
language_it["status"] = "Stato";
language_it["interventions_planned"] = "Interventi previsti";
language_it["interventions_done"] = "Interventi terminati";
language_it["interventions_graph"] = "Ripartizione degli interventi";
language_it["date"] = "Data";
language_it["type"] = "Tipo";
language_it["ownername"] = "Proprietario";
language_it["map"] = "Mappa";
language_it["create_new_intervention"] = "Crea un nuovo intervento";
language_it["last_intervention"] = "Ultimo intervento";
language_it["new_intervention"] = "Nuovo intervento";
language_it["technician_in_charge"] = "Tecnico responsabile";
language_it["no_interventions"] = "Nessun intervento";
language_it["intervention"] = "Intervento";
language_it["intervention_type"] = "Tipo di intervento";
language_it["intervention_type_0"] = "Lista degli interventi";
language_it["intervention_type_1"] = "Controlavaggio";
language_it["intervention_type_2"] = "Inizio modalità svernamento";
language_it["intervention_type_3"] = "Uscita modalità svernamento";
language_it["intervention_type_4"] = "Manutenzione ordinaria";
language_it["intervention_type_5"] = "Manutenzione";
language_it["intervention_button"] = "Pianificare l'intervento";
language_it["intervention_realized"] = "L'intervento è stato effettuato ?";
language_it["select_pool"] = "Selezionate una piscina";
language_it["select_date"] = "Data di completamento";
language_it["date_intervention"] = "Data dell'intervento";
language_it["select_tech"] = "Nome di chi ha effettuato l'intervento";
language_it["select_comment"] = "Commenti";
language_it["comment_placeholder"] = "Descrivi in ​​poche righe l'intervento effettuato...";
language_it["edit_intervention_title"] = "Dettagli dell'intervento";
language_it["pool"] = "Piscina";
language_it["detail"] = "Informazioni sulla piscina";
language_it["intervention_report"] = "Rapporto dell'intervento";
language_it["intervention_cost"] = "Costo dell'intervento";
language_it["delete_intervention"] = "Eliominare l'intervento";
language_it["messages"] = "Messaggi";
language_it["list_event_history"] = "Cronologia degli eventi";
language_it["data_did_not_change"] = "I dati del tuo dispositivo non sono cambiati da:␣";
language_it["notification_bloc"] = "Allarmi";
language_it["notifcation_ok_two_weeks"] = "Nessuna notifica nelle ultime due settimane";
language_it["SURCHAUFFE_ELECTROLYSEUR"] = "Temperatura interna del cloratore a sale troppo alta";
language_it["TEMP_HIGH"] = "Errore di misurazione della temperatura elevata di :deviceType";
language_it["TEMP_LOW"] = "Errore di misurazione della temperatura bassa di :deviceType , la modalità termoregolata è disabilitata";
language_it["CELLULE_CURRENT_LOW"] = "La cella di elettrolisi non produce più - contattare il proprio installatore";
language_it["SALT_MISSING"] = "Produzione troppo bassa - Consultare il manuale di :deviceType";
language_it["SALT_TOO_MUCH"] = "Livello del sale Troppo alto. Blocco di sicurezza del cloratore a sale";
language_it["TEMP_MIN"] = "Temperatura minima dell'acqua raggiunta. Spegnimento elettrolisi";
language_it["TEMP_MIN_SWITCHED_BACK"] = "Temperatura dell'acqua tornata normale - Riavvio dell'elettrolisi";
language_it["PH_NO_VALUE"] = "Il tuo :deviceType non riceve più la misurazione del pH";
language_it["PH_NO_VALUE_SWITCHED_BACK"] = "Il tuo :deviceType sta ricevendo di nuovo le letture del pH";
language_it["ORP_NO_VALUE"] = "Il tuo :deviceType non riceve più la misurazione del ORP";
language_it["ORP_ERROR_MESURE_22_SWITCHED_BACK"] = "Il tuo :deviceType sta ricevendo di nuovo le letture del ORP";
language_it["TUB_ALMOST_EMPTY"] = "Livello serbatoio prodotto :deviceType Basso";
language_it["TUB_EMPTY"] = "Serbatoio del prodotto: deviceType vuoto - Pompa in arresto";
language_it["V_MAX_INJECTED"] = "È stato raggiunto il volume massimo di prodotto iniettato";
language_it["PH_ERROR_MESURE_29"] = "Si osservano errori di misurazione del pH, l'iniezione viene interrotta, controllare l'installazione e le sonde";
language_it["PH_ERROR_MESURE_29_SWITCHED_BACK"] = "Le letture del pH sono di nuovo regolari";
language_it["ORP_ERROR_MESURE_27"] = "Si osservano errori di misurazione dell'orp, l'iniezione viene interrotta, controllare l'installazione e le sonde";
language_it["ORP_ERROR_MESURE_27_SWITCHED_BACK"] = "Le letture dell'ORP sono di nuovo regolari";
language_it["WIFI_CONNECTION_ERROR"] = "Il tuo dispositivo:deviceType non è più connesso, controlla che sia ben alimentato e che la tua rete wifi sia funzionante";
language_it["WIFI_CONNECTION_ERROR_SWITCHED_BACK"] = "Il tuo dispositivo:deviceType è connesso";
language_it["ELECTROLYSEUR_OVERLOAD_ERROR"] = "Alimentazione elettrica cloratore a sale in sovraccarico";
language_it["MODE_HORS_GEL"] = "Attenzione, la temperatura dell'acqua è di 0°C, pericolo di congelamento! La tua filtrazione passa alla modalità Protezione antigelo di livello 3 (funzionamento permanente)";
language_it["RS485_ERROR"] = "È stato rilevato un errore di comunicazione (RS485) sul tuo :deviceType";
language_it["share_pool_ts"] = "Data di fine condivisione";
language_it["cancel_modal"] = "Annullare";
language_it["delete_modal"] = "Eliminare";
language_it["delete_sharing_pool_msg"] = "Stai per eliminare la sorveglianza della piscina ':poolName ' sei sicuro di voler continuare?";
language_it["pac_mode"] = "Modalità di produzione";
language_it["pac_speed"] = "Velocità di funzionamento";
language_it["pac_sched"] = "Intervalli di programmazione";
language_it["two_weeks"] = "2 settimane";
language_it["one_month"] = "1 mese";
language_it["two_month"] = "2 mesi";
language_it["confirm_button"] = "Confermare";
language_it["submit_button"] = "Convalidare";
language_it["file_button"] = "Scegli un file";
language_it["pool_expire_msg"] = "Questa email ti informa che l'elenco delle piscine qui sotto sta per scadere tra meno di due settimane, ricordati di rinnovare la condivisione con il tuo cliente, altrimenti perderai la sorveglianza di questa piscina sul tuo account di Supervisione.";

// Perso

language_it["title"] = "Gestione generale di";
language_it["display"] = "Gestione di display e storici";
language_it["deletion"] = "Ricerca automatica e aggiunta di nuove funzionalità";

language_it["settings"] = "Impostazioni";

language_it["frost_protection_mode"] = "Modalità protezione antigelo";

language_it["projector"] = "Proiettore";

language_it["color_rc"] = "Colore RC+";
language_it["monochrome"] = "Monocromo";
language_it["monochrome_dimmable"] = "Monocromatico dimmerabile";
language_it["color_micro_cuts"] = "Microtagli colorati";

language_it["auxiliary"] = "Ausiliario";

language_it["none"] = "Nessuno";
language_it["heater"] = "Stufa";
language_it["treatment"] = "Trattamento";
language_it["booster"] = "Booster";
language_it["auxiliary"] = "Ausiliario";

language_it["title"] = "Gestione ausiliaria per";

language_it["modes"] = "Modalità";

language_it["off"] = "Spegnere";
language_it["on"] = "Accendere";
language_it["prog"] = "Programmazione";
language_it["auto"] = "Automatico";

language_it["program"] = "Programma";
language_it["day"] = "giorno";

language_it["history_title"] = "Cronologia dei dati";
language_it["history"] = "Vedi la storia";

language_it["title"] = "gestione della luce per";

language_it["state"] = "Stato";

language_it["off"] = "Spegnere";
language_it["on"] = "Accendere";

language_it["colors"] = "Colori";

language_it["warm"] = "Caldo";
language_it["cold"] = "Freddo";
language_it["blue"] = "Blu";
language_it["lagoon"] = "Laguna";
language_it["cyan"] = "Ciano";
language_it["green"] = "Verde";
language_it["purple"] = "Viola";
language_it["magenta"] = "Magenta";
language_it["pink"] = "Rosa";
language_it["red"] = "Rosso";
language_it["orange"] = "Arancia";

language_it["favorite"] = "Preferito";

language_it["sequences"] = "Sequenze";

language_it["gradiant"] = "Gradiente";
language_it["rainbow"] = "Arcobaleno";
language_it["parade"] = "Parata";
language_it["techno"] = "Tecno";
language_it["horizon"] = "Orizzonte";
language_it["random"] = "Casuale";
language_it["magical"] = "Magico";

language_it["programming"] = "Programmazione";
language_it["program"] = "Programma";

language_it["bright"] = "Luminosità";
language_it["speed"] = "Velocità";

language_it["low"] = "Basso";
language_it["medium"] = "medio";
language_it["high"] = "Alto";
language_it["max"] = "Massimo";

language_it["slow"] = "Lento";
language_it["normal"] = "Normale";
language_it["fast"] = "Veloce";

language_it["history_title"] = "Cronologia dei dati";
language_it["history"] = "Vedi la storia";

language_it["monday"] = "Lunedi";
language_it["tuesday"] = "Martedì";
language_it["wednesday"] = "Mercoledì";
language_it["thursday"] = "Giovedì";
language_it["friday"] = "Venerdì";
language_it["saturday"] = "Sabato";
language_it["sunday"] = "Domenica";

language_it["color"] = "Colore";

language_it["duration"] = "Durata";
language_it["hours"] = "ore al giorno";

language_it["wintermode"] = "Modalità invernale";
language_it["type_of_product_injected"] = "Tipo di prodotto iniettato";
language_it["maximum_volume_injected"] = "Volume massimo iniettato";
language_it["product_volume_available"] = "Quantità di prodotto disponibile";
language_it["setpoint"] = "Punto di riferimento";

language_it["aux_state"] = "Stato ausiliario";
language_it["aux_min_temp"] = "Temperatura ausiliaria minima";

language_it["init_fail_1"] = "L'inizializzazione non è stata eseguita correttamente";
language_it["init_fail_2"] = "Si prega di provare ad aggiornare la pagina";
language_it["init_fail_3"] = "E se non funziona, reimposta il plug-in facendo clic sul seguente pulsante:";

language_it["aux_state"] = "Stato ausiliario";
language_it["aux_min_temp"] = "Temperatura ausiliaria minima";

language_it["vigipool_modal_all"] = "Impostazioni";
language_it["vigipool_modal_light"] = "Leggero";
language_it["vigipool_modal_filtration"] = "Filtrazione";
language_it["vigipool_modal_auxiliary"] = "Ausiliario";
language_it["vigipool_modal_ph"] = "Gestione del PH";
language_it["vigipool_modal_orp"] = "Gestione dell'ORP";
language_it["vigipool_modal_light_m"] = "Leggero";
language_it["tild_modal_filt_m"] = "Filtrazione";
language_it["vigipool_modal_auxiliary_1"] = "ausiliario 1";
language_it["vigipool_modal_auxiliary_2"] = "ausiliario 2";
language_it["vigipool_modal_ely"] = "Elettrolisi";

language_it["mode"] = "Modalità";
language_it["daily_production_duration"] = "Tempo di produzione giornaliero";
language_it["programmed"] = "Programmato";
language_it["regulated"] = "Regolamentato";
language_it["shock"] = "Shock";

language_it["instant_chlorine_prod"] = "Cloro istantaneo Prod";
language_it["min_temperature"] = "Temperatura minima";
language_it["chlorine_prod"] = "Cloro Prod";
language_it["amperage"] = "Amperaggio";
language_it["internal_temperature"] = "Temperatura interna";

language_it["very_soft"] = "Molto morbido";
language_it["soft"] = "Morbido";
language_it["slightly_soft"] = "Leggermente morbido";
language_it["slightly_hard"] = "Leggermente duro";
language_it["hard"] = "Difficile";
language_it["very_hard"] = "Molto difficile";

language_it["window_size_error"] = "La finestra del plugin Vigipool è troppo piccola, ingrandirla utilizzando l'icona della matita in alto a destra.";
language_it["no_mqtt_data"] = "Non è stato possibile recuperare dati MQTT";

language_it["no_parameters"] = "Questo dispositivo non ha parametri";

language_it["warning_power"] = "Una potenza superiore al 100% può ridurre la durata della cella di elettrolisi e quindi non dovrebbe essere utilizzata quotidianamente.";

language_it["water"] = "Acqua";

language_it["ph_regulation"] = "Regolazione del pH";
language_it["orp_regulation"] = "Regolamento ORP";

language_it["injection_in_progress"] = "Iniezione in corso";

language_it["volume_injected_in_24h"] = "Volume iniettato in 24H";

language_it["chlorine_prod"] = "Cloro Prod.";

language_it["stopped"] = "Fermato";

language_it["color_picker"] = "Color Picker";
language_it["white"] = "Bianco";

language_it["saved_colors"] = "Colori salvati";

language_it["rainbow"] = "Arcobaleno";
language_it["fun"] = "Divertimento";
language_it["ocean"] = "Oceano";
language_it["flamme"] = "Fiamma";
language_it["parade"] = "Parata";
language_it["elegant"] = "Elegante";
language_it["horizon"] = "Orizzonte";
language_it["psyche"] = "Psiche";

language_it["vigipool_modal_x3_state"] = "Luce X3";
language_it["vigipool_modal_x3_state_prog_1"] = "Programma di aggiornamento 1 della luce x3";
language_it["vigipool_modal_x3_state_prog_2"] = "Programma di aggiornamento 2 della luce x3";

language_it["scheduling"] = "Programmazione";

language_it["save"] = "Salva";

language_it["select_the_start_time_and_duration_of_the_program"] = "Selezionare l'ora di inizio e la durata del programma";
language_it["schedule"] = "Programma";
language_it["at"] = "A";
language_it["during"] = "Durante";

language_it["add"] = "Aggiungere";
language_it["back"] = "Torna indietro";
language_it["thermoregulated_mode"] = "Modalità termoregolata";

language_it["see_advanced_options"] = "Vedi le opzioni avanzate";

language_it["enslaved_to_filtration"] = "Dipende dalla filtrazione";

language_it["force_filtration_during_aux"] = "Forzare il filtraggio";

language_it["CGUWebURL"] = "https://eu.ccei-pool.com/it/content/3-politica-sulla-riservatezza";
language_it["FAQWebURL"] = "https://eu.ccei-pool.com/en/module/faqs/display";
language_it["account_not_verified_btn_resend_email"] = "Rinvia l'e-mail";
language_it["alert_action_impossible_no_internet"] = "Impossibile eseguire questa azione in questo momento, controlla la connessione Internet del telefono e riprova";
language_it["alert_button_connect_aws"] = "Connettiti da remoto";
language_it["alert_button_create_contact"] = "Compila i miei dati";
language_it["alert_button_create_pool"] = "Inserisci le informazioni sulla mia piscina";
language_it["alert_button_stay_bluetooth"] = "Rimani in Bluetooth";
language_it["alert_choc_from_off"] = "Non è possibile attivare la modalità Shock dalla modalità Off perché una volta terminata la durata del trattamento shock, il dispositivo torna alla modalità di funzionamento precedente.\n\nPer poter attivare la modalità shock, è quindi necessario prima scegliere un'altra modalità operativa.";
language_it["alert_configure_aux_description"] = "Scegli il tipo di ausiliario collegato al tuo tild VP.\n\nPuoi sempre aggiornarlo dalla schermata di configurazione dei tuoi dispositivi.";
language_it["alert_configure_aux_title"] = "Configurazione necessaria";
language_it["alert_contact_deleted"] = "I tuoi dati di contatto sono stati cancellati.";
language_it["alert_contact_deleted_failed"] = "Non è stato possibile eliminare i tuoi dati.\n\nControlla la tua connessione Internet o riprova più tardi.";
language_it["alert_contact_saved"] = "I tuoi dati sono stati salvati.";
language_it["alert_contact_saved_failed"] = "Non è stato possibile salvare i tuoi dati.\n\nControlla la tua connessione Internet o riprova più tardi.";
language_it["alert_contact_warning_delete"] = "L'eliminazione delle informazioni di contatto eliminerà anche i dati  condivisioni della piscina.";
language_it["alert_description_geoloc_crep_needed"] = "Hai rifiutato la geolocalizzazione ma è necessaria per utilizzare la modalità crepuscolare della programmazione luci, oltre che per recuperare il meteo.\n\nAprire le impostazioni dell'app per modificare questa impostazione?";
language_it["alert_dialog_aws_timeout_error"] = "Il tuo dispositivo non sembra essere connesso a Internet.";
language_it["alert_dialog_calibration_in_progress_orp_value_message"] = "Calibrazione in corso, ORP attuale: %1$s";
language_it["alert_dialog_calibration_in_progress_ph_value_message"] = "Calibrazione in corso, pH attuale: %1$s";
language_it["alert_dialog_calibration_in_progress_title"] = "Attendere prego";
language_it["alert_dialog_config_change_device_added_message"] = "Sembra che un dispositivo sia stato appena aggiunto alla tua configurazione.\n\nAccedi di nuovo.";
language_it["alert_dialog_config_change_device_removed_message"] = "Sembra che un dispositivo sia stato appena rimosso dalla tua configurazione.\n\nAccedi di nuovo.";
language_it["alert_dialog_delete_device_message"] = "Sei sicuro di voler eliminare il dispositivo \"%1$s\" dai tuoi dispositivi Vigipool?";
language_it["alert_dialog_delete_device_title"] = "Elimina un dispositivo";
language_it["alert_dialog_factory_reset_message"] = "Sei sicuro di voler eseguire un reset alle impostazioni di fabbrica?";
language_it["alert_dialog_lost_ble_connection_message"] = "La connessione Bluetooth con il dispositivo è stata persa.";
language_it["alert_dialog_message_bluetooth_error"] = "Si è verificato un errore Bluetooth, riprova.";
language_it["alert_dialog_message_loading_timeout"] = "Interruzione del caricamento, riprova.";
language_it["alert_dialog_message_remote_error"] = "Si è verificato un errore durante la connessione remota, riprova.";
language_it["alert_dialog_no_internet_message"] = "Controlla lo stato della tua connessione Internet.";
language_it["alert_dialog_no_internet_title"] = "Errore di rete";
language_it["alert_dialog_orp_calibration_in_progress_message"] = "Calibrazione ORP in corso.";
language_it["alert_dialog_ph_calibration_in_progress_message"] = "Calibrazione pH in corso.";
language_it["alert_dialog_title_bluetooth_error"] = "Errore Bluetooth";
language_it["alert_dialog_title_loading_timeout"] = "Timeout";
language_it["alert_dialog_token_expired_message"] = "La sessione è scaduta.\n\nAccedi di nuovo.";
language_it["alert_edit_last_backwash_error"] = "Si è verificato un problema durante la registrazione della data dell'ultimo controlavaggio, controllare la connessione Internet del telefono e registrare nuovamente la data dell'ultimo controlavaggio manualmente tramite la schermata delle impostazioni del controlavaggio";
language_it["alert_electrolyse_power"] = "Attenzione, questa potenza può ridurre la durata della cella di elettrolisi e non deve essere utilizzata in modo permanente.";
language_it["alert_empty_shadow_description"] = "È impossibile recuperare le informazioni dal tuo dispositivo.\n\nVerifica che la copertura di rete sia sufficiente e che il tuo dispositivo sia connesso a Internet.\nSe necessario, puoi configurare la connessione del tuo dispositivo collegandoti ad esso tramite Bluetooth.\n\nSe il problema persiste, riavviare il dispositivo.";
language_it["alert_factory_reset_description"] = "Vuoi ripristinare le impostazioni di fabbrica del tuo dispositivo?\nTieni presente che questa modifica è irreversibile.";
language_it["alert_factory_reset_title"] = "Ripristino delle impostazioni di fabbrica";
language_it["alert_incomplete_shadow_description"] = "È impossibile recuperare le informazioni dal tuo dispositivo.\n\nVerifica che la copertura di rete sia sufficiente e che il tuo dispositivo sia connesso a Internet.\nSe necessario, puoi configurare la connessione del tuo dispositivo collegandoti ad esso tramite Bluetooth.\n\nSe il problema persiste, riavviare il dispositivo tramite il pulsante in basso.";
language_it["alert_navigate_to_configure_wifi_description"] = "Ora puoi configurare la connessione Internet della tua installazione per poter controllare a distanza la tua piscina.";
language_it["alert_navigate_to_sign_in_vigipool_description"] = "Ora puoi creare o connetterti al tuo account Vigipool per controllare da remoto la tua piscina.";
language_it["alert_pool_deleted"] = "Le informazioni sulla piscina sono state eliminate.";
language_it["alert_pool_deleted_failed"] = "Non è stato possibile eliminare le informazioni sulla piscina.\n\nControlla la tua connessione Internet o riprova più tardi.";
language_it["alert_pool_saved"] = "Le informazioni sulla tua piscina sono state salvate.";
language_it["alert_pool_saved_failed"] = "Non è stato possibile salvare le informazioni sulla tua piscina.\n\nControlla la tua connessione Internet o riprova più tardi.";
language_it["alert_pool_warning_delete"] = "L'eliminazione delle informazioni sulla piscina eliminerà anche le informazioni di contatto salvate, nonché le condivisioni della piscina, se presenti.";
language_it["alert_power_electrolyse_choice_prog"] = "Programmato";
language_it["alert_power_electrolyse_description"] = "Quale modalità vuoi per la tua elettrolisi?";
language_it["alert_reboot_description"] = "Sei sicuro di voler riavviare il tuo dispositivo?";
language_it["alert_reboot_title"] = "Riavviare il sistema";
language_it["alert_reconnect_in_ble_for_crep"] = "Il tuo dispositivo deve conoscere la tua geolocalizzazione per utilizzare la modalità crepuscolo del programma luci.\n\nSe desideri usufruire di questa opzione, riconnettiti via bluetooth per condividere la tua posizione";
language_it["alert_reconnect_in_ble_for_music_mode"] = "Modalità musica non disponibile in connessione \"remota\".\n\nPer poter utilizzare questa funzionalità è necessario connettersi in modalità Bluetooth al dispositivo.\n\nPer fare ciò, apri il menu laterale, fai clic su \"Disconnetti\" e connettiti al tuo dispositivo dalla scheda Bluetooth.";
language_it["alert_reconnecting_cancel"] = "Annulla riconnessione";
language_it["alert_reconnecting_description"] = "Tentativo di riconnessione…";
language_it["alert_reconnecting_title"] = "Connessione perduta";
language_it["alert_reg_warning_description"] = "Non è stato trovato alcun misuratore ORP.\nSe non viene rilevata alcuna misura entro i successivi 15 minuti, l'elettrolisi passerà alla modalità automatica (programmata + termoregolata)";
language_it["alert_regulation_available_volume_edit_mode_on"] = "Stai per cambiare la quantità di prodotto disponibile, vuoi salvare le modifiche?";
language_it["alert_schedule_modified_but_not_saved"] = "Hai modificato la tua programmazione ma non hai salvato le modifiche";
language_it["alert_schedule_modified_but_not_saved_action_do_not_save"] = "Non salvare";
language_it["alert_schedule_modified_but_not_saved_action_save"] = "Salvare le modifiche";
language_it["alert_service_modified"] = "È stata rilevata una modifica alla rete del dispositivo (connessione di un nuovo dispositivo, ad esempio). Procedo a una riconnessione in modo che l'applicazione tenga conto delle modifiche necessarie.";
language_it["alert_shared_pool_deleted"] = "La condivisione della piscina è stata eliminata";
language_it["alert_shared_pool_deleted_failed"] = "Non è stato possibile eliminare la condivisione della piscina.\n\nControlla la tua connessione Internet o riprova più tardi.";
language_it["alert_shared_pool_edited"] = "La durata della condivisione della piscina è stata aggiornata.";
language_it["alert_shared_pool_edited_failed"] = "Non è stato possibile completare la modifica della durata della condivisione della piscina.\n\nControlla la tua connessione Internet o riprova più tardi";
language_it["alert_shared_pool_email_already_exist"] = "La tua piscina è già condivisa con questo professionista (indirizzo e-mail identico).\n\nFornisci un indirizzo email diverso o modifica la data di fine della tua condivisione nell'elenco delle condivisioni esistenti nella parte inferiore di questa schermata.";
language_it["alert_shared_pool_need_contact"] = "Prima di condividere la tua piscina, devi fornire i tuoi dati di contatto.";
language_it["alert_shared_pool_need_pool"] = "Per condividere la tua piscina, è necessario inserire le sue caratteristiche.";
language_it["alert_shared_pool_saved"] = "La tua piscina è stata condivisa con successo.";
language_it["alert_shared_pool_saved_failed"] = "Condivisione della piscina non riuscita.\n\nControlla la tua connessione Internet o riprova più tardi.";
language_it["alert_warning_delete_vigipool_device"] = "Una volta che questo dispositivo è stato eliminato dal tuo account, dovrai riaccoppiarlo via bluetooth (tramite l'applicazione) se desideri aggiungerlo di nuovo.\n\nSei sicuro di voler cancellare?";
language_it["alert_warning_reset_sensor_date"] = "Stai per reimpostare la data dell'ultima modifica della tua sonda. Questa modifica non è reversibile, sei sicuro di voler continuare?";
language_it["alert_warning_winter_mode"] = "La modalità svernamento disattiverà l'iniezione sul tuo dispositivo";
language_it["alerts"] = "Avvisi";
language_it["amplify_device_current"] = "(Questo dispositivo)";
language_it["amplify_error_add_device"] = "Errore durante l'aggiunta del dispositivo";
language_it["amplify_error_delete_device"] = "Errore durante l'eliminazione del dispositivo";
language_it["amplify_error_sign_out"] = "Errore durante la disconnessione";
language_it["amplify_linked_devices"] = "I tuoi dispositivi collegati a Vigipool";
language_it["android_output_nb_format"] = "Uscita %1$d";
language_it["android_zone_nb_format"] = "Zona %1$d";
language_it["app_restart_dialog_message"] = "Ora puoi gestire la tua piscina ovunque ti trovi utilizzando la modalità di connessione \"Remota\".";
language_it["ask_user_configure_lynx_wifi"] = "La tua installazione è connessa al tuo Lynx ma non hai internet. Per connettere la tua installazione al Wifi, configurala sul tuo Lynx.";
language_it["aux2name"] = "Ausiliario 2";
language_it["aux_forced_off_no_filtration"] = "L'ausiliario è in pausa perché può funzionare solo con la filtrazione in funzione.\nL'ausiliario si avvierà non appena la filtrazione è in funzione.";
language_it["aux_forced_off_no_filtration_title"] = "In attesa della filtrazione";
language_it["aux_forced_off_orp_measurement_error"] = "L'ausiliario è in pausa perché il valore misurato dell' ORP è inferiore a 400 mV ; o perché lo strumento di misura è scollegato";
language_it["aux_forced_off_orp_measurement_error_title"] = "Errore di misurazione ORP";
language_it["aux_forced_off_orperror_description"] = "C'è un problema con le misurazioni ORP, è necessario correggere questo problema o disabilitare il set point ORP nelle impostazioni dell'ausiliario in modo da poter avviare l'elettrolizzatore.";
language_it["aux_forced_off_orperror_title"] = "Misura ORP non valida";
language_it["aux_forced_off_orpreached"] = "L'ausiliario è in pausa perché è stato raggiunto il set point ORP.";
language_it["aux_forced_off_orpreached_title"] = "Set point ORP raggiunto";
language_it["aux_forced_off_starter_description"] = "La filtrazione si è appena accesa e l'ausiliario si avvierà automaticamente in pochi minuti.";
language_it["aux_forced_off_starter_title"] = "In attesa dell'inizio della filtrazione";
language_it["aux_forced_off_temp_too_high"] = "L'ausiliario è in pausa perché è stata raggiunta la temperatura impostata.";
language_it["aux_forced_off_temp_too_high_title"] = "Livello temp. raggiunto";
language_it["aux_forced_off_temp_too_low"] = "L'ausiliario è in pausa perché il valore minimo di temperatura non è raggiunto.";
language_it["aux_forced_off_temp_too_low_title"] = "Temp. min. non raggiunta";
language_it["aux_min_temp_picker_dialog_title"] = "Scelta della temperatura min.";
language_it["aux_paused"] = "%1$s in pausa";
language_it["aux_starting"] = "avvio in corso";
language_it["aux_type_booster"] = "Booster";
language_it["aux_type_heater"] = "Riscaldamento";
language_it["aux_type_none"] = "Nessuno";
language_it["auxiliary"] = "Ausiliario";
language_it["auxiliary_mode"] = "Modalità ausiliario ";
language_it["auxiliary_overlay_aux_min_temp"] = "Temperatura minima di avvio del trattamento";
language_it["auxiliary_paused"] = "Ausiliario in pausa";
language_it["auxiliary_settings_dialog_filtration_dependant_tooltip"] = "Se l'ausiliario è asservito alla filtrazione, non potrà avviarsi quando la filtrazione è spenta.";
language_it["auxiliary_treatment_orp_value"] = "Valore ORP misurato: %1$d mV ";
language_it["auxiliary_type_deactivated"] = "Disattivato";
language_it["auxiliary_type_orp_treatment"] = "Trattamento ORP";
language_it["auxiliary_type_undefined"] = "Sconosciuto";
language_it["backwash"] = "Contro lavaggio";
language_it["backwash_close_sewer_valve"] = "Quindi chiudere la valvola di scarico";
language_it["backwash_completed"] = "Contro lavaggio terminato";
language_it["backwash_help"] = "Si raccomanda un controlavaggio regolare della filtrazione per garantire acqua pulita.\nVigipool può guidarti in questa operazione.\nAttenzione: la filtrazione verrà messa in pausa quando viene avviato il controlavaggio.";
language_it["backwash_impossible"] = "Contro lavaggio impossibile";
language_it["backwash_impossible_filt_prohibited_message"] = "Interrompere la il blocco pompa della filtrazione (direttamente sull'interrutore di commutazione del quadro elettrico) prima di avviare un controlavaggio";
language_it["backwash_impossible_forced_march_message"] = "Interrompere la marcia forzata della filtrazione (direttamente sull'interrutore di commutazione del quadro elettrico) prima di avviare un controlavaggio";
language_it["backwash_in_progress"] = "Controlavaggio in corso";
language_it["backwash_in_progress_description"] = "Sembra che sia in corso un controlavaggio.\n\nSe si ritiene che si tratti di un errore e si desidera ripristinare il normale stato di funzionamento del dispositivo, fare clic su \"Arresta controlavaggio\".\nIn caso contrario, chiudere l'applicazione e riavviarla al termine dell'operazione di controlavaggio.";
language_it["backwash_mode_welcome"] = "Benvenuti nella modalità controlavaggio";
language_it["backwash_mode_welcome_description"] = "Questa modalità consente di pulire efficacemente il filtro\n\nAttenzione questa modalità richiede di essere fisicamente nel proprio locale tecnico per una durata che va dai 5 ai 15min";
language_it["backwash_need_vigipool_account"] = " E' necessario essere collegati ad un account Vigipool,  per poter usufruire del controlavaggio guidato e del promemoria del controlavaggio.\n\nPuoi creare un account Vigipool o collegarti ad esso dal menu principale dell'applicazione.";
language_it["backwash_next_water_clear"] = "La mia acqua è limpida, seguente";
language_it["backwash_open_sewer_and_turn_valve_to_wash"] = "Aprire la valvola di scarico, quindi ruotare la valvola in posizione LAVAGGIO";
language_it["backwash_reminder"] = "Avviso di controlavaggio";
language_it["backwash_rinse_completed"] = "Risciacquo terminato";
language_it["backwash_rinse_in_progress"] = "Il risciacquo è in corso, attendere prego";
language_it["backwash_valve_turn_to_filtration"] = "Rimettere la valvola su FILTRAZIONE";
language_it["backwash_valve_turn_to_rinse"] = "Ruotare la valvola su RISCIACQUO";
language_it["backwash_wash_completed"] = "Lavaggio terminato";
language_it["backwash_wash_in_progress"] = "Il lavaggio è in corso, attendere prego";
language_it["banner_music_mode_need_one_zone_title"] = "La modalità musica deve avere almeno un'area selezionata per funzionare";
language_it["bar"] = "bar";
language_it["ble_needed"] = "Bluetooth neccessario";
language_it["ble_permission_needed"] = "Autorizzazione Bluetooth richiesta";
language_it["blue"] = "Blu";
language_it["bluetooth_disabled_error_message"] = "Il Bluetooth non è disponibile. Verifica che il Bluetooth sia attivo sul tuo telefono e che l'app %1$s abbia il permesso di usare il Bluetooth (modificabile nell'app Impostazioni del telefono).";
language_it["bluetooth_not_available_error_message"] = "La funzionalità Bluetooth non è disponibile sul tuo dispositivo Android.";
language_it["bluetooth_permission_rationale_message"] = "L'autorizzazione Bluetooth è necessaria per connettersi tramite Bluetooth al dispositivo.";
language_it["bluetooth_permission_rationale_title"] = "Consentire il Bluetooth";
language_it["bonding_cancel"] = "Annullare il pairing";
language_it["bonding_check_title"] = "Recupero dei dati";
language_it["bonding_error"] = "Errore di associazione";
language_it["bonding_help_rssi"] = "Avvicinare lo smartphone al tuo %1$s per associarli.";
language_it["bonding_help_rssi_and_btn"] = "Avvicinare lo smartphone o premere il tasto %1$s per associarli.";
language_it["bonding_location_unavailable"] = "Non è stato possibile recuperare la posizione attuale per completare l'associazione.";
language_it["bonding_message"] = "Premere una volta il pulsante %1$s (mostrato sopra) per associarlo al telefono";
language_it["bonding_required_title"] = "Abbinamento necessario";
language_it["bonding_timeout"] = "Tempo scaduto per il pairing.";
language_it["brightness"] = "Luminosità";
language_it["button_cancel_calibration"] = "Annullare la calibrazione";
language_it["button_cancel_connection"] = "Annullare la connessione";
language_it["button_cancel_scan"] = "Annullare la ricerca";
language_it["button_update_app_store"] = "Aggiornamento su AppStore";
language_it["bypass"] = "Bypass";
language_it["calibrate"] = "Calibrare";
language_it["calibration_adjustment_information"] = "Il valore di %1$s sarà regolato alla prossima misurazione, quindi entro una decina di secondi se la filtrazione è in funzione, o al prossimo avvio della filtrazione.";
language_it["calibration_choose_type_title"] = "Tipo di calibrazione";
language_it["calibration_debit"] = "Calibrazione del flusso";
language_it["calibration_debit_warning"] = "La portata sarà regolata alla misura successiva, quindi entro una decina di secondi se la filtrazione è in funzione, o al prossimo avvio della filtrazione.";
language_it["calibration_failed"] = "La calibrazione non è riuscita, si prega di controllare la sonda";
language_it["calibration_first_point_title"] = "Calibrazione 1 punto";
language_it["calibration_in_progress"] = "La calibrazione è in corso…";
language_it["calibration_information"] = "La durata della calibrazione è compresa tra 30 secondi e 3 minuti, si prega di rimanere vicino al dispositivo e tenere l'applicazione aperta durante questa operazione";
language_it["calibration_manual"] = "Regolazione manuale";
language_it["calibration_one_point"] = "Calibrazione 1 punto";
language_it["calibration_orp"] = "Calibrazione ORP";
language_it["calibration_orpimpossible"] = "Al momento non abbiamo una misurazione ORP, si prega di accendere la filtrazione per recuperare una misura valida per poterla regolare.";
language_it["calibration_orpsensor"] = "Calibrazione sonda ORP";
language_it["calibration_orpwarning"] = "L'ORP sarà regolato alla alla prossima misurazione, quindi entro una decina di secondi se la filtrazione è in funzione, o al prossimo avvio della filtrazione.";
language_it["calibration_ph"] = "Calibrazione pH";
language_it["calibration_phimpossible"] = "Al momento non abbiamo una misurazione del pH, si prega di accendere la filtrazione per recuperare una misura valida per poterla regolare.";
language_it["calibration_phsensor"] = "Calibrazione sonda pH";
language_it["calibration_phwarning"] = "Il pH sarà regolato alla alla prossima misurazione, quindi entro una decina di secondi se la filtrazione è in funzione, oppure al prossimo inizio della filtrazione.";
language_it["calibration_pressure"] = "Calibrazione della pressione";
language_it["calibration_pressure_warning"] = "La pressione sarà regolata alla prossima misurazione, quindi entro una decina di secondi se la filtrazione è in funzione, oppure al prossimo avvio della filtrazione.";
language_it["calibration_second_point_title"] = "Calibrazione secondo punto";
language_it["calibration_start"] = "Iniziare la calibrazione";
language_it["calibration_start_second_point"] = "Calibrare il secondo punto";
language_it["calibration_success"] = "Calibrazione completata con successo";
language_it["calibration_temp"] = "Calibrazione della temperatura";
language_it["calibration_temp_impossible"] = "Attualmente non abbiamo una misurazione della temperatura, si prega di accendere la filtrazione per recuperare una misura valida per poterla regolare.";
language_it["calibration_temp_warning"] = "La temperatura sarà regolata alla prossima misurazione, quindi entro una decina di secondi se la filtrazione è in funzione, oppure al prossimo avvio della filtrazione.";
language_it["calibration_two_points"] = "Calibrazione a 2 punti";
language_it["cgu_accept_warning"] = "Devi selezionare la casella di controllo per accettare le CGU.";
language_it["cgu_bt_accept"] = "Accettare";
language_it["cgu_bt_accept_label"] = "Ho letto e accetto le condizioni generali di utilizzo";
language_it["cgu_read_warning"] = "Leggere le CGU prima di accettarle.";
language_it["channels"] = "Canali";
language_it["color"] = "Colori";
language_it["color_eyedropper_title"] = "Selettore di colore";
language_it["come_closer_to_your_device"] = "Avvicinarsi al dispositivo";
language_it["common_accept_cgu"] = "Accetto i termini di utilizzo";
language_it["common_address"] = "Indirizzo";
language_it["common_bluetooth"] = "Bluetooth";
language_it["common_calibration"] = "Calibrazione";
language_it["common_cancel"] = "Annullare";
language_it["common_city"] = "Città";
language_it["common_closed"] = "Chiuso";
language_it["common_congratulations"] = "Complimenti!";
language_it["common_connect"] = "Connettersi";
language_it["common_connecting"] = "Connessione in corso";
language_it["common_country"] = "Paese";
language_it["common_cover"] = "Copertura";
language_it["common_danger"] = "Pericolo";
language_it["common_debit"] = "Flusso";
language_it["common_delete_anyway"] = "Eliminare comunque";
language_it["common_disable"] = "Disattivare";
language_it["common_dismiss"] = "Chiudere";
language_it["common_electrolyse"] = "Elettrolisi";
language_it["common_email"] = "Indirizzo e-mail";
language_it["common_enable"] = "Attivare";
language_it["common_error"] = "Errore";
language_it["common_filtration_type"] = "Filtrazione";
language_it["common_gateway"] = "Punto d'accesso";
language_it["common_ignore"] = "Ignorare";
language_it["common_information"] = "Informazione";
language_it["common_light"] = "Luce";
language_it["common_loading"] = "Caricamento in corso…";
language_it["common_min_temp"] = "Temp. Min.";
language_it["common_mode"] = "Modalità";
language_it["common_mode_choc"] = "Shock";
language_it["common_mode_prog"] = "Programmato";
language_it["common_new_password"] = "Nuova password";
language_it["common_no"] = "No";
language_it["common_off"] = "Off";
language_it["common_ok"] = "OK";
language_it["common_on"] = "On";
language_it["common_open"] = "Aperto";
language_it["common_orp"] = "ORP";
language_it["common_owner_name"] = "Nome del proprietario";
language_it["common_password"] = "Password";
language_it["common_password_confirmation"] = "Conferma Password";
language_it["common_ph"] = "pH";
language_it["common_phone_number"] = "Telefono";
language_it["common_pool_name"] = "Nome della piscina";
language_it["common_pool_type"] = "Tipo";
language_it["common_post_code"] = "Codice Postale";
language_it["common_pressure"] = "Pressione";
language_it["common_remotely"] = "Da remoto";
language_it["common_reset"] = "Ripristinare";
language_it["common_retry"] = "Riprovare";
language_it["common_save"] = "Registrare";
language_it["common_scheduling"] = "Programmazione";
language_it["common_set_point"] = "Set point";
language_it["common_sign_in"] = "Connettersi";
language_it["common_sign_up"] = "Creare un account";
language_it["common_stop"] = "Allo stop";
language_it["common_structure"] = "Struttura";
language_it["common_success"] = "Successo";
language_it["common_temperature"] = "Temperatura";
language_it["common_temperature_unit"] = "°C";
language_it["common_temperature_unit_us"] = "°F";
language_it["common_thermoregulated"] = "Termoregolato";
language_it["common_thermoregulation_mode"] = "Modalità termoregolata";
language_it["common_timer"] = "Timer";
language_it["common_unknown_device"] = "Dispositivo sconosciuto";
language_it["common_validate"] = "Confermare";
language_it["common_volume_eu"] = "Volume (m3)";
language_it["common_volume_na"] = "Volume (US gal)";
language_it["common_warning"] = "Attenzione";
language_it["common_water"] = "Acqua";
language_it["common_wifi_state"] = "Stato connessione:";
language_it["common_working"] = "In funzione";
language_it["common_yes"] = "Si";
language_it["configure_dmxchannels"] = "Impostazioni dei canali DMX";
language_it["configure_unit_temperature_help"] = "L'unità di temperatura (Celsius o Fahrenheit) utilizzata nell'app proviene dalle impostazioni del telefono e quindi non dipenderà da questa scelta.";
language_it["configure_wifi_connection"] = "Configurare la connessione Wifi";
language_it["configure_zones"] = "Configurazione delle zone";
language_it["confirm"] = "Conferma";
language_it["confirm_force_filtration_alert"] = "La filtrazione deve essere accesa in modo che l'ausiliario possa funzionare.\n\nSe si deseleziona questa opzione, non sarà in grado di forzare l'accensione della filtrazione (se necessario) e quindi non potrà accendersi quando la filtrazione non è in funzione.";
language_it["confirm_force_filtration_pac_alert"] = "La filtrazione deve essere accesa in modo che la pompa di calore possa funzionare.\n\nSe si deseleziona questa opzione, non sarà in grado di forzare l'accensione della filtrazione (se necessario) e quindi non potrà accendersi quando la filtrazione non è in funzione.";
language_it["confirm_password"] = "Conferma";
language_it["connect"] = "Connessione";
language_it["connect_setup_to_wifi"] = "Connettere il vostro locale tecnico al WI-FI ?";
language_it["connected"] = "Connesso";
language_it["connected_to_wifi"] = "Connesso al Wifi";
language_it["connecting_to_phileo"] = "Connessione a\n%1$s";
language_it["connection_destination_internet"] = "al Wifi";
language_it["connection_log_out"] = "Disconnettersi";
language_it["connection_looking_for_device_title"] = "Ricerca dei dispositivi…";
language_it["connection_to_internet_none"] = "Nessuna connessione internet";
language_it["contact_informations"] = "I miei contatti";
language_it["contact_informations_needed"] = "Informazioni di contatto necessarie";
language_it["context_text_view_configure_your_wifi_connection"] = "Configura la tua connessione WiFi";
language_it["controlled_dmx"] = "Controllo in DMX";
language_it["controlled_micro"] = "Controllato da un microfono";
language_it["cover_detected_details"] = "Ciò può influire sulla durata del funzionamento di alcuni dispositivi.";
language_it["cover_detected_title"] = "Copertura rilevata";
language_it["cs4z_reconfigure_output"] = "Riconfigurare le uscite";
language_it["cs4z_rename_zone"] = "Rinomina zona";
language_it["cs4z_rename_zone_instructions"] = "Immettere il nuovo nome della zona.";
language_it["cs4z_rename_zone_placeholder"] = "Nuovo nome (ad es. Piscina, Spa...)";
language_it["cs4z_settings"] = "Configurazione delle zone";
language_it["cs4z_use_other_zones"] = "Controlla simultaneamente";
language_it["cs4z_zone_name"] = "Nome della zona:";
language_it["date_hour_ampmformatter"] = "h:mm a";
language_it["date_hour_formatter"] = "H:mm";
language_it["day"] = "giorno";
language_it["days"] = "giorni";
language_it["debit_current"] = "Flusso attuale";
language_it["debit_desired"] = "Flusso rettificato";
language_it["delete"] = "Eliminare";
language_it["delete_all_registered_colors_message"] = "Sei sicuro di voler eliminare i colori salvati?";
language_it["delete_all_registered_colors_title"] = "Eliminazione dei colori";
language_it["delete_contact_informations"] = "Eliminare le informazioni di contatto";
language_it["delete_pool"] = "Eliminare le mie informazione";
language_it["demo_mode"] = "Modalità Demo";
language_it["device_name_phileo"] = "Phileo";
language_it["device_not_connected"] = "Il dispositivo %1$s non è connesso.";
language_it["device_shadow_error"] = "Impossibile connettersi a %1$s.\n\nMotivo: nessun oggetto connesso trovato.";
language_it["devices_remote_dialog_device_not_attached"] = "Non siamo in grado di ricollegare questo dispositivo al tuo account Vigipool.";
language_it["devices_remote_dialog_device_not_found"] = "Non siamo in grado di trovare questo dispositivo nel tuo account Vigipool.";
language_it["devices_remote_dialog_invalid_things"] = "Non siamo in grado di recuperare le informazioni collegate al tuo account Vigipool.";
language_it["devices_remote_dialog_login_failed_message"] = "Indirizzo e-mail e/o password non validi";
language_it["devices_remote_dialog_login_failed_network_error_message"] = "Assicurati di essere connesso a internet.";
language_it["devices_remote_dialog_login_failed_network_error_title"] = "Errore di rete";
language_it["devices_remote_dialog_no_devices_found"] = "Non siamo in grado di recuperare i dispositivi collegati al tuo account Vigipool.";
language_it["devices_remote_dialog_sign_in_not_complete"] = "Al momento non siamo in grado di effettuare il login.";
language_it["devices_remote_dialog_user_not_confirmed_message"] = "Il tuo account non è ancora verificato.\n\nControlla la tua casella di posta per fare clic sul link di conferma.";
language_it["devices_remote_error_email_required"] = "É richiesto l'indirizzo e-mail";
language_it["devices_remote_error_password_required"] = "È richiesta la password";
language_it["devices_selection_select_a_device_message"] = "Si prega di selezionare un dispositivo";
language_it["devices_selection_text"] = "Abbiamo trovato diversi dispositivi collegati al tuo account, scegli quello a cui desideri accedere";
language_it["devices_tab_bluetooth_bluetooth_throttle_error_message"] = "Riprova tra qualche istante nuova scansione Bluetooth .";
language_it["devices_tab_bluetooth_no_device_found_message"] = "Nessun dispositivo PhileoX è stato trovato nelle vicinanze. Si prega di verificare che sia acceso e di essere abbastanza vicini al dispositivo.";
language_it["devices_tab_bluetooth_start_scan"] = "Avviare la scansione";
language_it["devices_tab_bluetooth_stop_scan"] = "Interrompere la scansione";
language_it["devices_title"] = "Dispositivi";
language_it["dialog_missing_timezone_message"] = "Il tuo dispositivo %1$s non ha un fuso orario, il che è essenziale per programmarlo.\n\nRiconnettersi tramite Bluetooth per aggiornare automaticamente il fuso orario.";
language_it["disabled"] = "Disattivato";
language_it["divergence_flow_error_notification"] = "Assenza di flusso d'acqua su una parte del vostro impianto.";
language_it["dmxmode"] = "Modalità DMX";
language_it["dmxmode_help"] = "Fare riferimento alla documentazione dei proiettori DMX.";
language_it["duration_picker_dialog_title"] = "Regolare la durata";
language_it["edit"] = "Modificare";
language_it["edit_device_name_instructions"] = "Immettere il nuovo nome del dispositivo.\n\nAttenzione però, è possibile se si utilizza il Bluetooth come modalità di connessione che sia necessario riconnettersi al dispositivo per vedere il cambiamento (perché alcuni telefoni salvano le informazioni sui dispositivi Bluetooth in locale).";
language_it["edit_device_name_placeholder"] = "Nuovo nome (es: La mia piscina)";
language_it["edit_device_name_title"] = "Aggiornamento del nome";
language_it["edit_program_name_instructions"] = "Inserisci il nuovo nome del tuo programma e convalidalo con il pulsante in basso sullo schermo.\n\nSe si desidera utilizzare il nome predefinito, è possibile eliminare il testo e convalidare.";
language_it["edit_program_name_placeholder"] = "Nome del programma (es: Weekend)";
language_it["edit_program_name_title"] = "Modificare il nome del programma";
language_it["electrolyse_chlore_production_state"] = "Stato produzione Cloro";
language_it["electrolyse_choc_duration"] = "Durata trattamento shock";
language_it["electrolyse_current"] = "Tensione dell'elettrolisi";
language_it["electrolyse_daily_prod"] = "Durata produzione giornaliera";
language_it["electrolyse_filtration_state"] = "Flusso della cella";
language_it["electrolyse_internal_temp"] = "Temperatura interna";
language_it["electrolyse_power"] = "Potenza";
language_it["electrolyse_prod_chlore"] = "Prod. Cloro";
language_it["electrolyse_prod_chlore_instant"] = "Prod. Instant. Cloro";
language_it["electrolyse_stopped"] = "Electrolysis stopped";
language_it["electrolyse_stopped_details_format"] = "Minimum water temperature reached, the electrolysis of the device {{STRING}} is stopped.";
language_it["electrolyse_temp_min"] = "Temperatura minima";
language_it["electrolyse_temperature"] = "Temp. acqua nella cella";
language_it["electrolyse_tension"] = "Tensione";
language_it["electrolyse_thermoregulated_help"] = "La durata dell'elettrolisi viene adattata automaticamente alla temperatura dell'acqua";
language_it["electrolyse_water_hardness"] = "Durezza dell'acqua";
language_it["electrolysis_amperage"] = "Corrente";
language_it["electrolysis_cover_off"] = "Aperta";
language_it["electrolysis_daily_production_duration_auto"] = "Durata della produzione termoregolata: %1$s";
language_it["electrolysis_dialog_no_orp_device_message"] = "Non è stato trovato alcun dispositivo di misurazione ORP.\n\nSe non viene rilevata alcuna misurazione entro un'ora, l'elettrolisi tornerà in modalità Programmata.";
language_it["electrolysis_dialog_title"] = "Conferma della modalità";
language_it["electrolysis_shock_treatment_duration_elapsed"] = "Trattamento shock iniziato %1$s.";
language_it["electrolysis_stop_dialog_message"] = "Vuoi davvero interrompere l'elettrolisi?";
language_it["electrolysis_thermoregulation"] = "Termoregolazione";
language_it["enslaved_to_filtration"] = "Asservito alla filtrazione";
language_it["enslaved_to_filtration_help"] = "Se asservito alla filtrazione, l'ausiliario non potrà avviarsi quando la filtrazione è spenta.";
language_it["enslaved_to_filtration_pac_help"] = "Se asservita alla filtrazione, la pompa di calore non potrà avviarsi quando la filtrazione è spenta.";
language_it["error"] = "Errore";
language_it["error_amplify_get_devices"] = "Si è verificato un errore durante il ripristino dei dispositivi, controllare la connessione Internet e riprovare.";
language_it["error_confirmation_sign_up_unknown"] = "Si è verificato un errore, verifica il codice e riprova.";
language_it["error_connection"] = "Impossibile accedere, riprovare. Se l'errore si ripete, provare a chiudere l'applicazione e riavviarla.";
language_it["error_ntpmessage"] = "Il dispositivo deve essere connesso a Internet per poter essere programmato.";
language_it["error_scan"] = "Si è verificato un errore durante la ricerca del dispositivo, riprova. Se l'errore si ripete, prova a chiudere l'App e riavviarla o cambia la modalità di connessione.";
language_it["error_sign_in_no_device_linked"] = "Non abbiamo trovato dispositivi compatibili collegati al tuo account. Per prima cosa, accedi tramite Bluetooth per associare il tuo dispositivo al tuo account (schermata delle impostazioni).";
language_it["error_sign_in_unknown"] = "Connessione non riuscita, controlla la tua connessione Internet e riprova. Se l'errore si ripete, assicurati che le tue credenziali siano corrette.";
language_it["error_sign_up_mail_exists"] = "Un account è già associato a questa email.";
language_it["error_sign_up_no_internet"] = "Nessuna connessione Internet. Attiva i tuoi dati mobili o connettiti a una rete WiFi e riprova.";
language_it["error_sign_up_timeout"] = "La richiesta non può essere completata. Controlla la tua connessione Internet e riprova.";
language_it["error_sign_up_unknown"] = "Si è verificato un errore durante la creazione dell'account.";
language_it["expired"] = "Scaduto";
language_it["face_id_authenticate_password_get"] = "Autenticati per recuperare la tua password";
language_it["face_id_authenticate_password_set"] = "Autenticati per salvare la tua password";
language_it["fill"] = "Compilare ";
language_it["filt_light_force_help"] = "La filtrazione sarà attiva per tutta la durata dell'illuminazione.";
language_it["filt_meteor_intensity_error"] = "Difetto di intensità rilevato - Spegnere la filtrazione per annullare l'errore";
language_it["filtration_forced_by_frost_free_mode"] = "Forzata dalla modalità off-gel";
language_it["filtration_forced_by_user"] = "Forzata dall'utente";
language_it["filtration_forced_off_by_box_help"] = "Per accendere, si prega di verificare che l'interruttore del quadro tild sia in posizione \"gestito dal tild\".\nSe si dispone di un regolatore di livello, questo comportamento può essere normale.";
language_it["filtration_forced_on_by_box_help"] = "Per spegnere, si prega di verificare che l'interruttore del quadro tild sia in posizione \"gestito dal tild\".\nSe si dispone di un regolatore di livello, questo comportamento può essere normale.";
language_it["filtration_m_fragment_help_over_under_current"] = "Difetto di intensità rilevato: la filtrazione deve essere spenta per correggere il problema.";
language_it["filtration_mode"] = "Modalità di filtrazione";
language_it["filtration_paused"] = "Filtrazione in pausa";
language_it["filtration_start_forced_march"] = "Passare a marcia forata";
language_it["filtration_stop_forced_march"] = "Disattivare la marcia forzata";
language_it["flow_not_determined"] = "Stato della filtrazione sconosciuto";
language_it["flow_not_working"] = "Nessun flusso rilevato";
language_it["flow_switch_diverging"] = "Abbiamo rilevato che alcuni flussi sono in stati diversi.\nQuesto può essere semplicemente dovuto alla presenza di un bypass nel tuo impianto, ma può anche provenire da un sensore di flusso danneggiato o da un flusso d'acqua troppo debole.";
language_it["flow_view_flow_off"] = "Filtrazione a riposo";
language_it["flow_working"] = "Filtrazione in funzione";
language_it["force_filtration_during_aux"] = "Forzare la filtrazione";
language_it["force_filtration_during_aux_help"] = "La filtrazione si avvierà automaticamente all'avvio dell'ausiliario.";
language_it["force_filtration_during_lighting"] = "Forzare la filtrazione durante l'illuminazione";
language_it["force_filtration_during_pac_help"] = "La filtrazione si avvierà automaticamente all'avvio della pompa di calore.";
language_it["forced_by_aux"] = "Forzata dall'ausiliario";
language_it["forced_by_box"] = "Forzata dal quadro elettrico";
language_it["forced_by_lighting"] = "Forzata dall'illuminazione";
language_it["forced_by_pac"] = "Forzata dalla pompa di calore";
language_it["forced_march"] = "Marcia forzata";
language_it["forced_off_by_aux_help"] = "Per spegnere, spegnere l'ausiliario o deselezionare l'opzione «Forzare la filtrazione» dell'ausiliario.";
language_it["forced_off_by_frost_protection_help"] = "La filtrazione è stata avviata per contrastare il gelo.";
language_it["forced_off_by_light_help"] = "Per spegnere, spegnere la luce o deselezionare l'opzione «Forzare la filtrazione durante l'illuminazione».";
language_it["forced_off_by_pac_help"] = "Per spegnere, spegnere la pompa di calore o deselezionare l'opzione «Forzare la filtrazione».";
language_it["forced_off_by_water_renewal_help"] = "La filtrazione si è attivata per avere misure di temperatura aggiornate, si fermerà automaticamente dopo alcuni minuti.";
language_it["forced_on_by_box_help"] = "Per spegnere, verificare che il quadro tild sia in posizione 1.@IMAGE(message_coffret_tild,26,8,0,10)\nSe si dispone di un regolatore di livello, questo comportamento può essere normale.";
language_it["forgotten_password"] = "Password dimenticata?";
language_it["forgotten_password_f2_hint_code_required"] = "È richiesto il codice di reset";
language_it["forgotten_password_f2_hint_password_strength"] = "Inserisci la nuova password del tuo account.\nLa nuova password deve rispettare queste regole: almeno 8 caratteri con maiuscolo(e) e minuscolo(e), un numero e un carattere speciale";
language_it["forgotten_password_success_dialog_message"] = "La password è stata aggiornata.";
language_it["form_error_character_limit15"] = "Il numero di caratteri non deve superare 15";
language_it["form_error_character_limit17"] = "Il numero di caratteri non deve superare i 17.";
language_it["form_error_character_limit2"] = "Il numero di caratteri deve essere maggiore o uguale a 2.";
language_it["form_error_character_limit3"] = "Il numero di caratteri deve essere maggiore o uguale a 3.";
language_it["form_error_character_limit43"] = "Il numero di caratteri non deve superare 43.";
language_it["form_error_empty"] = "Il campo è vuoto";
language_it["form_error_empty_fields"] = "È necessario compilare tutti i campi per salvaguardare la vostra piscina";
language_it["form_error_invalid_email"] = "Indirizzo e-mail non valido";
language_it["form_error_password_length"] = "Deve essere più di 8 caratteri";
language_it["form_error_password_lower_case"] = "Richiede almeno una minuscola";
language_it["form_error_password_number"] = "Richiede almeno una cifra";
language_it["form_error_password_special_char"] = "Richiede almeno un carattere speciale";
language_it["form_error_passwords_dont_match"] = "Le password sono diverse";
language_it["form_invalid_field"] = "Alcuni campi sono vuoti o non corretti";
language_it["form_shared_pool_limit_date_placeholder"] = "Data di fine della condivisione";
language_it["form_shared_pool_pro_mail_placeholder"] = "Indirizzo e-mail del professionista";
language_it["format_weight_hour"] = "g/h";
language_it["format_weight_hour_us"] = "oz/h";
language_it["friday_short"] = "Ven";
language_it["frost_protection_help"] = "La modalità anti gelo attiva automaticamente la filtrazione se la temperatura dell'acqua diventa troppo bassa, per evitare che l'acqua si congeli.";
language_it["frost_protection_home_help"] = "Modalità anti-gelo attivata, la filtrazione verrà avviata automaticamente per evitare il congelamento dell'acqua nella tubazione";
language_it["ft3h"] = "ft³/ora";
language_it["ft3h_short"] = "ft³/h";
language_it["general_connecting_to_aws"] = "Recupero dati";
language_it["general_copied_to_clipboard"] = "È stato copiato dagli appunti!";
language_it["general_do_update"] = "Scarica e installa l'aggiornamento";
language_it["general_duration_choc_electrolyse_unknown"] = "La modalità shock è attiva da -- ora";
language_it["general_duration_thermoregulation_unknown"] = "Durata della produzione termoregolata: -h";
language_it["general_forgotten_password"] = "Password dimenticata?";
language_it["general_iunderstand"] = "Ho capito";
language_it["general_postpone_update"] = "Aggiornare più tardi";
language_it["general_select_device"] = "Selezione del dispositivo";
language_it["general_select_device_description"] = "Abbiamo trovato diversi dispositivi collegati al tuo account, scegli quello a cui desideri accedere";
language_it["general_unknown_device"] = "Dispositivo senza nome";
language_it["general_unknown_error"] = "Si è verificato un errore sconosciuto. Se si verifica di nuovo, potresti provare a chiudere e riavviare l'applicazione.";
language_it["general_update"] = "Aggiornamento";
language_it["general_update_available"] = "Aggiornamento disponibile";
language_it["get_closer_to_devices"] = "Avvicinarsi al dispositivo";
language_it["gpm"] = "US Gal/m";
language_it["gpm_short"] = "gpm";
language_it["great"] = "Perfetto !";
language_it["green"] = "Verde";
language_it["has_min_temp_setpoint"] = "Impostare valore temperatura min.";
language_it["has_min_temp_setpoint_help"] = "Permette di impostare o meno la scelta di una temperatura minima al di sotto della quale l'ausiliario non si avvierà.";
language_it["has_orpsetpoint"] = "Attivare set point ORP";
language_it["has_orpsetpoint_help"] = "Consente di impostare o meno la scelta di un valore ORP sopra il quale l'elettrolizzatore non si avvierà.\nQuesta opzione è disabilitata se non si dispone di un dispositivo Vigipool che registra le misurazioni ORP.";
language_it["heat_pump"] = "Pompa di calore";
language_it["help_measure_unknown"] = "Le misurazioni verranno visualizzate solo pochi minuti dopo l'avvio della filtrazione.";
language_it["help_priority_ph"] = "La regolazione ORP sarà attiva solo se il pH è corretto";
language_it["history_impossible_to_display"] = "Impossibile visualizzare il grafico";
language_it["history_no_data"] = "Nessun dato disponibile";
language_it["home_cover_on_hint"] = "Ciò può influire sul funzionamento di alcuni dispositivi.";
language_it["home_dialog_factory_reset_message"] = "Sei sicuro di voler ripristinare il tuo dispositivo \"%1$s\" alle impostazioni di fabbrica?";
language_it["home_dialog_restart_message"] = "Sei sicuro di voler riavviare il tuo dispositivo \"%1$s\"?";
language_it["home_latest_filtration"] = "Ultima filtrazione";
language_it["home_no_auxiliary"] = "Nessun ausiliario rilevato";
language_it["home_no_program"] = "Nessuna programmazione";
language_it["home_ph_consigne"] = "Valore : %1$s";
language_it["home_volume_injected_24_hours"] = "Volume iniettato 24H";
language_it["impossible_demo_mode"] = "Impossibile farlo in modalità Demo";
language_it["info_winter_mode"] = "Il dispositivo è in modalità svernamento";
language_it["information_setup_wifi"] = "Per modificare le impostazioni WiFi, devi connetterti al tuo dispositivo tramite Bluetooth";
language_it["injection_mode"] = "Modalità di iniezione";
language_it["input"] = "Ingresso";
language_it["internal_notification_information_new_device"] = "È stato rilevato un nuovo dispositivo";
language_it["ios_bonding_help_rssi"] = "Basta avvicinare il tuo smartphone al tuo {{STRING}} per associarli.";
language_it["ios_bonding_help_rssi_and_btn"] = "Basta avvicinare lo smartphone o premere il pulsante {{STRING}} una volta per associarli.";
language_it["ios_bonding_message"] = "Premere una volta il pulsante {{STRING}} per associarlo al telefono.";
language_it["ios_error_ble_lost_connection"] = "Abbiamo perso la connessione con il dispositivo. La causa più probabile è che sei troppo lontano dal tuo dispositivo {{APP_NAME}}.";
language_it["ios_format_alert_timezone_not_set"] = "Il tuo dispositivo {{STRING}} non ha un fuso orario, che è essenziale per programmarlo.\n\nRiconnettersi tramite Bluetooth per aggiornare automaticamente il fuso orario.";
language_it["ios_format_amplify_add_device"] = "Aggiungi questo dispositivo ({{STRING}})";
language_it["ios_format_bac_empty_error_notification"] = "Serbatoio {{STRING}} vuoto - Pompa bloccata";
language_it["ios_format_common_temperature"] = "%d°C";
language_it["ios_format_common_temperature_us"] = "%d°F";
language_it["ios_format_confirm_timezone"] = "Conferma il fuso orario ({{STRING}})";
language_it["ios_format_connection_connected"] = "Connesso {{STRING}}";
language_it["ios_format_connection_destination_device"] = "a {{STRING}}";
language_it["ios_format_connection_looking_for_device"] = "Ricerca del {{STRING}}";
language_it["ios_format_connection_not_connected"] = "Non connesso {{STRING}}";
language_it["ios_format_crepuscular_mode_help"] = "Avvia l'illuminazione quando il sole tramonta ({{STRING}}h{STRING}} oggi)";
language_it["ios_format_electrolyse_choc_duration"] = "Modalità shock attiva da %dh%02d";
language_it["ios_format_error_cell_error_notification"] = "La cella di elettrolisi ({{STRING}}) non produce più - contattate il vostro installatore.";
language_it["ios_format_error_modbus_message"] = "Un errore di comunicazione (RS485) viene rilevato sul tuo {{STRING}} - code_E9";
language_it["ios_format_firmware_version_too_low_winter_mode"] = "La modalità svernamento è disattivata nella versione {{STRING}}.\n\nConnetti l'installazione Vigipool a Internet per ricevere gli ultimi aggiornamenti e attivare questa funzione.";
language_it["ios_format_general_duration_thermoregulation"] = "Durata dellla produzione termoregolata: %dh%02d";
language_it["ios_format_last_measure"] = "Ultima misura {{STRING}}";
language_it["ios_format_meteor_alarm_low_flow"] = "{{STRING}} Rilevato flusso basso - Verificare che la pompa non funzioni a vuoto.";
language_it["ios_format_meteor_alarm_over_flow"] = "{{STRING}} Rilevato flusso elevato - Verificare che la pompa non sia difettosa o bloccata.";
language_it["ios_format_meteor_alarm_warning_gel"] = "{{STRING}} : La temperatura dell'acqua è vicina a 0°C, la filtrazione si attiverà per evitare il rischio di gelo.";
language_it["ios_format_meteor_alarm_water_level_low"] = "{{STRING}} : Controlla il livello dell'acqua della piscina.";
language_it["ios_format_missing_filt_error_notification"] = "Il tempo di filtrazione corrente è troppo breve per consentire all'elettrolizzatore ({{STRING}}) di produrre il tempo programmato.";
language_it["ios_format_no_value_orperror_notification"] = "Il vostro {{STRING}} non riceve più misure dell' Orp";
language_it["ios_format_no_value_pherror_notification"] = "Il vostro {{STRING}} non riceve più la misurazione del pH";
language_it["ios_format_not_enough_salt_error_notification"] = "Bassa produzione - Fare riferimento alle istruzioni di {{STRING}}.";
language_it["ios_format_notification_device_disconnected"] = "La connessione a {{STRING}} {{STRING}} è stata persa.";
language_it["ios_format_overdose_injection_notification"] = "Il volume massimo di prodotto di regolazione {{STRING}} iniettato in 24h è stato raggiunto";
language_it["ios_format_overheat_elec_error_notification"] = "Temperatura interna dell'elettrolizzatore ({{STRING}}) troppo alta.";
language_it["ios_format_pairing_to"] = "Connessione a {{STRING}}";
language_it["ios_format_reconnect_to_device_message"] = "Vuoi connetterti a {{STRING}} ({{STRING}})?";
language_it["ios_format_schedule_hour"] = "%d ora";
language_it["ios_format_schedule_hours"] = "%d ore";
language_it["ios_format_schedule_minute"] = "%02d min";
language_it["ios_format_schedule_on_time_aux"] = "%@/giorno";
language_it["ios_format_schedule_on_time_booster"] = "%@/giorno";
language_it["ios_format_schedule_on_time_filtration"] = "%@/giorno";
language_it["ios_format_schedule_on_time_heater"] = "max %@/giorno";
language_it["ios_format_schedule_on_time_light"] = "%@/giorno";
language_it["ios_format_schedule_on_time_treatment"] = "max %@/giorno";
language_it["ios_format_schedule_time"] = "%dh%02d";
language_it["ios_format_settings_button_date_sensor"] = "Data dell'ultima sostituzione della sonda: {{STRING}}";
language_it["ios_format_sunrise_mode_help"] = "Stop dell'illuminazione quando sorge il sole ({{{STRING}}h{STRING}}).";
language_it["ios_format_temp_too_high_error_notification"] = "Errore di misurazione di elevata temperatura del {{STRING}}.";
language_it["ios_format_temp_too_low_error_notification"] = "Errore di misurazione di bassa temperatura del {{STRING}}.";
language_it["ios_format_too_much_salt_error_notification"] = "Sale troppo alto. Arresto dell'elettrolizzatore ({{STRING}}).";
language_it["ios_format_update_description_mandatory"] = "{{APP_NAME}} {{STRING}} è disponibile.\nMantenere la tua app aggiornata ti dà accesso alle ultime funzionalità e correzioni di bug.\n\nPoiché l'aggiornamento disponibile è necessario per il corretto funzionamento dell'App, è necessario aggiornarlo per poterla utilizzare.";
language_it["ios_format_update_description_not_mandatory"] = "{{APP_NAME}} {{STRING}} è disponibile.\nMantenere la tua app aggiornata ti dà accesso alle ultime funzionalità e correzioni di bug.\n\nPuoi continuare a utilizzare questa versione per ora, ma ti consigliamo di aggiornarla per avere le ultime funzionalità e correzioni.";
language_it["ios_format_update_failed_alert_message"] = "Si è verificato un errore durante l'aggiornamento di {{STRING}}, riprova più tardi.";
language_it["ios_format_update_firmware_ask_state_title"] = "È disponibile un aggiornamento per {{STRING}} ({{STRING}}).";
language_it["ios_format_update_firmware_progress_complement_description"] = "Una volta completato il download, l'aggiornamento verrà installato e il {{STRING}} verrà riavviato.";
language_it["ios_format_update_firmware_progress_complement_description_ble_server"] = "Una volta completato il download, l'aggiornamento verrà installato e il tuo {{STRING}} si riavvierà, disconnettendo l'applicazione.";
language_it["ios_format_update_succeed_alert_message"] = "L'aggiornamento di {{STRING}} è stato scaricato e installato correttamente!";
language_it["ios_format_water_orp"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Misura attuale ORP : {{STRING}} mV";
language_it["ios_format_water_temperature"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Temperatura dell'acqua : {{STRING}}";
language_it["ios_last_format"] = "Ultimo il {{STRING}}";
language_it["ios_new_device_message"] = "Hai appena aggiunto un {{STRING}} al tuo impianto Vigipool.\n\nOra devi configurarlo.";
language_it["ios_new_device_title"] = "Nuovo {{STRING}} rilevato";
language_it["ios_output_nb_format"] = "Uscita %d";
language_it["ios_vspump_speed_details_format"] = "Pompa %d velocità";
language_it["ios_warning_pairing_iosble_off"] = "Il Bluetooth non è disponibile. Verifica che il Bluetooth sia attivato sul tuo telefono e che l'app {{APP_NAME}} abbia il permesso di utilizzare il Bluetooth (modificabile nell'app Impostazioni).";
language_it["ios_warning_pairing_no_results_ble"] = "Nessun dispositivo {{APP_NAME}} è stato trovato nelle vicinanze. Controlla che sia acceso e che non sia troppo lontano.";
language_it["ios_warning_pairing_timeout_ble"] = "Il tempo di connessione è scaduto, riprova. Se l'errore si ripete, avvicinati al tuo dispositivo {{APP_NAME}}.";
language_it["ios_zone_nb_format"] = "Zona %d";
language_it["it_is_done"] = "È fatta";
language_it["just_now"] = "adesso";
language_it["l"] = "L";
language_it["last_backwash"] = "Ultimo contro lavaggio";
language_it["last_backwash_fill_date"] = "Hai effettuato il controlavaggio manualmente?\nInserisci la data qui sotto per avere un avviso";
language_it["last_measure_now"] = "Ultima misura del momento";
language_it["later"] = "Dopo";
language_it["latest_measurement_ago"] = "Ultima misura %1$s";
language_it["latest_measurement_not_co"] = "Strumento di misura scollegato";
language_it["latest_probe_replacement"] = "Ultima sostituzione della sonda: %1$s";
language_it["leave"] = "Uscire";
language_it["light_banner_cover_on_description"] = "La luce non può accendersi quando la copertura della piscina è chiusa.";
language_it["light_banner_cover_on_title"] = "Apri la copertura";
language_it["light_banner_register_color_already_registered_description"] = "Questo colore è già stato registrato.";
language_it["light_banner_register_color_light_off_description"] = "Accendete la luce prima di salvare il colore.";
language_it["light_banner_timer_on_light_off_description"] = "Accendete la luce prima di programmare lo spegnimento.";
language_it["light_color_cyan"] = "Ciano";
language_it["light_color_lagoon"] = "Laguna";
language_it["light_color_magenta"] = "Magenta";
language_it["light_color_orange"] = "Arancio";
language_it["light_color_pink"] = "Rosa";
language_it["light_color_purple"] = "Viola";
language_it["light_color_white"] = "Bianco freddo";
language_it["light_color_white_warm"] = "Bianco caldo";
language_it["light_colors_title"] = "Colori";
language_it["light_command_favorite_color"] = "Colori preferiti";
language_it["light_crepuscular_mode"] = "Modalità crepuscolare";
language_it["light_crepuscular_short"] = "Crep.";
language_it["light_sequence_gradient"] = "Dégradé";
language_it["light_sequence_horizon"] = "Orizzonte";
language_it["light_sequence_magic"] = "Magico";
language_it["light_sequence_parade"] = "Défilé";
language_it["light_sequence_rainbow"] = "Arcobaleno";
language_it["light_sequence_random"] = "Random";
language_it["light_sequence_speed_fast"] = "Rapido";
language_it["light_sequence_speed_normal"] = "Normale";
language_it["light_sequence_speed_slow"] = "Lento";
language_it["light_sequence_techno"] = "Techno";
language_it["light_sequence_title"] = "Sequenza";
language_it["light_sequences_title"] = "Sequenze";
language_it["light_sunrise_mode"] = "Modalità alba";
language_it["light_sunrise_short"] = "Alba";
language_it["lighting"] = "Illuminazione";
language_it["lighting_color_fav"] = "Preferita";
language_it["lighting_mode"] = "Modalità di illuminazione";
language_it["lighting_overlay_couv_error_message"] = "La luce non può accendersi quando la copertura della piscina è chiusa.";
language_it["lighting_overlay_paused"] = "Illuminazione in pausa";
language_it["lighting_overlay_switched_on"] = "Accesa";
language_it["lighting_overlay_timer_info_title"] = "Accendi la luce";
language_it["lighting_settings_dialog_forced_filtration_hint"] = "Il filtro si accenderà ogni volta che la luce sarà accesa e per tutta la durata dell'illuminazione.";
language_it["lighting_settings_dialog_forced_filtration_text"] = "Forzare la filtrazione durante l'illuminazione.";
language_it["link_device_to_account"] = "Collegare questo dispositivo al tuo account?";
language_it["loader_connecting_attempt"] = "Connessione in corso";
language_it["loading_error_dialog_message_device_not_found"] = "Il dispositivo non è stato trovato nel tuo account Vigipool.";
language_it["loading_error_dialog_message_no_devices_found"] = "Nessun dispositivo è stato trovato nel tuo account Vigipool.";
language_it["loading_failed"] = "Caricamento non riuscito, controlla la tua connessione internet";
language_it["loading_page"] = "Caricamento della pagina";
language_it["location_permission_rationale_message"] = "Per utilizzare questa funzione è necessaria l'autorizzazione alla localizzazione.";
language_it["location_permission_rationale_title"] = "Autorizzare la localizzazione";
language_it["log_out"] = "Disconnessione";
language_it["login"] = "Connessione";
language_it["login_failed"] = "Connessione fallita";
language_it["logout_progress_dialog_title"] = "Disconnessione";
language_it["m3h"] = "m³/ora";
language_it["m3h_short"] = "m³/h";
language_it["measurement_units_measurement_system"] = "Sistema di misura";
language_it["measurement_units_temperature_celcius"] = "Celsius (°C)";
language_it["measurement_units_temperature_fahrenheit"] = "Fahrenheit (°F)";
language_it["measurement_units_temperature_unit"] = "Unità di misura della temperatura";
language_it["merge_lighting_zone"] = "Unire le aree di illuminazione";
language_it["merge_lighting_zone_help"] = "Unire le zone permette di propagare i comandi inviati a un Wix su tutti gli altri della vostra installazione.\nCiò consente di controllare più Wix semplicemente quando non si desidera distinguerli.";
language_it["meteor_mode_auto"] = "Auto";
language_it["meteor_mode_help_aux"] = "On: l'ausiliario è in funzione continua, 24h/24.\n\nProg: l'ausiliario si accenderà secondo le impostazioni dell'intervallo di tempo (P1).";
language_it["meteor_mode_help_aux_heater"] = "On: il riscaldamento è in funzionamento continuo, 24/24, fino a quando la temperatura dell'acqua raggiunge il set point. Quindi funzionerà solo quanto basta per mantenere la temperatura.\n\nProg: il riscaldamento funzionerà durante la fascia oraria (P1) programmata. Se la temperatura dell'acqua raggiunge il set point, funzionerà solo quanto basta per mantenere la temperatura fino alla fine dell'intervallo di tempo.";
language_it["meteor_mode_help_aux_orp_treatment"] = "On: Il trattamento è in funzione 24/24.\n\nProg:  l'elaborazione si accenderà secondo le impostazioni dell'intervallo orario (P1).\n\nAuto:  il trattamento è regolato con un set point ORP, e rimarrà acceso fino a quando la misurazione ORP non raggiunge il set point. Una volta raggiunto, l'ORP sarà mantenuto al valore impostato.";
language_it["meteor_mode_help_aux_treatment"] = "On: il trattamento è in funzione 24/24.\n\nProg: l'elaborazione si accenderà secondo le impostazioni dell'intervallo orario (P1).\n\nAuto: il trattamento si accenderà secondo le impostazioni dell'intervallo orario (P1), ma la sua durata sarà modulata in base alla temperatura dell'acqua.";
language_it["meteor_mode_help_aux_treatment_orp"] = "On: il trattamento è in funzione 24/24.\n\nProg: l'elaborazione si accenderà secondo le impostazioni dell'intervallo orario (P1).\n\nAuto: il trattamento è regolato con un ORP e rimarrà acceso fino a quando le misurazioni ORP non raggiungono il set point. Una volta raggiunto, l'ORP sarà mantenuta al valore impostato.";
language_it["meteor_mode_help_filt"] = "On: la filtrazione è in funzionamento continuo, 24h/24.\n\nProg: la filtrazione si accenderà secondo le impostazioni dei 3 intervalli orari (da P1 a P3).\n\nAuto: la filtrazione si accenderà all'orario di avvio indicato per l'intervallo P1, per un tempo calcolato automaticamente in base alla temperatura dell'acqua.";
language_it["meteor_mode_help_light"] = "On: l'illuminazione è accesa, 24h/24.\n\nProg: l'illuminazione verrà attivata in base all'impostazione della fascia oraria.\n\nAuto: l'illuminazione sarà accesa al tramonto per una durata di 4 ore.";
language_it["meteor_mode_prog"] = "Prog";
language_it["mic_permission_message"] = "Vigipool deve poter accedere al microfono per la modalità musica.";
language_it["mic_permission_title"] = "Autorizzare il microfono";
language_it["minute"] = "minuto";
language_it["minutes"] = "minuti";
language_it["mode_music"] = "Modalità musica";
language_it["mode_music_choice_audio_micro_device"] = "Microfono in dotazione con il dispositivo Vigipool";
language_it["mode_music_choice_audio_micro_phone"] = "Microfono del tuo telefono";
language_it["mode_music_choose_audio"] = "Che tipo di ingresso audio vuoi utilizzare?";
language_it["mode_music_choose_zone"] = "In quale(i) zona(e) vuoi attivare la modalità musica?";
language_it["mode_music_place_micro_next_to_sound_title"] = "Collega il microfono al dispositivo Vigipool. Posiziona il microfono accanto all'altoparlante o a qualsiasi altra sorgente audio.";
language_it["mode_music_place_phone_next_to_sound_title"] = "Posizionare il telefono accanto all'altoparlante o a qualsiasi altra fonte di suono";
language_it["mode_music_welcome_modal_text"] = "Questa modalità consente di sincronizzare i proiettori al ritmo della musica.\nPer momenti indimenticabili.";
language_it["mode_music_welcome_modal_title"] = "Benvenuti nella modalità musica!";
language_it["mode_pac_silence"] = "Silenzio";
language_it["mode_pac_smart"] = "Smart";
language_it["mode_pac_turbo"] = "Turbo";
language_it["modify_duration"] = "Modificare la duratz";
language_it["modify_settings"] = "Modificare i parametri";
language_it["monday_short"] = "Lun";
language_it["music_mode_input_app"] = "Associazione con un' App musicale";
language_it["music_mode_no_permission_description"] = "Hai negato l'accesso al microfono del telefono, ma questo è necessario per utilizzare la modalità musica.\n\nAprire le impostazioni dell'App per modificare questa impostazione?";
language_it["music_mode_no_permission_title"] = "Autorizzazione al microfono rifiutata";
language_it["music_mode_unavailable"] = "Modalità musica non disponibile";
language_it["music_mode_welcome_hint"] = "Questa modalità consente di sintonizzare i proiettori al ritmo della musica.\nPer momenti indimenticabili.";
language_it["music_mode_welcome_start"] = "Via !";
language_it["music_mode_zone_one"] = "Zona 1";
language_it["music_mode_zone_three"] = "Zona 3";
language_it["music_mode_zone_two"] = "Zona 2";
language_it["my_account"] = "Il mio account";
language_it["my_account_aws_hello_user"] = "Buongiorno %1$s";
language_it["my_account_signup_dialog_signup_success_bt_mailbox"] = "Apri la tua casella di posta per verificare il tuo indirizzo";
language_it["my_account_signup_dialog_signup_success_message"] = "Presto riceverai un'email al tuo indirizzo %1$s per verificare il tuo account. una volta attivato, sarai in grado di accedere al tuo account Vigipool.";
language_it["my_account_signup_error_username_already_exists"] = "Questo indirizzo e-mail è già associato ad un account Vigipool.";
language_it["my_contact_address_dialog_title"] = "Seleziona il tuo indirizzo";
language_it["my_contact_changes_dialog_bt_discard"] = "Annullare";
language_it["my_contact_changes_dialog_message"] = "Ci sono delle modifiche in corso.\n\nVuoi salvare o cancellare?";
language_it["my_contact_dialog_confirm_delete_message"] = "Vuoi davvero cancellare i tuoi dati?\n\nTieni presente che rimuoverà anche le tue condivisioni.";
language_it["my_pool_dialog_confirm_delete_message"] = "Vuoi davvero eliminare la tua piscina?\n\nTieni presente che rimuoverà anche i tuoi dati e le tue condivisioni.";
language_it["my_vp_devices_device_connection_state"] = "Connessione a %1$s";
language_it["my_vp_devices_settings_auxiliary_type_tooltip"] = "Attenzione, i programmi dell'ausiliario saranno disattivati quando si cambia tipo di ausiliario (le fasce orarie saranno comunque mantenute).";
language_it["my_vp_devices_settings_frost_free_mode_tooltip"] = "La modalità anti gelo attiva automaticamente la filtrazione se la temperatura dell'acqua diventa troppo bassa, per evitare che l'acqua si congeli.";
language_it["my_vp_devices_settings_projector_type"] = "Proiettori";
language_it["my_vp_devices_settings_projector_type_tooltip"] = "Attenzione, i programmi di illuminazione verranno ripristinati al cambio del tipo di proiettore.";
language_it["my_vp_devices_wifi_connection_state_connection_error"] = "Errore di connessione";
language_it["my_vp_devices_wifi_connection_state_no_wifi"] = "Non connesso al Wifi";
language_it["my_vp_devices_wifi_connection_state_wifi_no_internet"] = "Connessione Wi-Fi, internet assente";
language_it["my_vp_devices_wifi_connection_state_wifi_with_internet"] = "Connessione Wi-Fi ed Internet";
language_it["my_vp_devices_winter_mode_dialog_message"] = "Sei sicuro di voler mettere il tuo dispositivo %1$s \"%2$s\" in Modalità Svernamento?";
language_it["name"] = "Nome";
language_it["navigation_drawer_log_in"] = "Accedi/Iscriviti";
language_it["navigation_drawer_my_devices"] = "I miei dispositivi";
language_it["navigation_drawer_probes_and_calibration"] = "Sonde &amp; Calibrazione";
language_it["never"] = "Mai";
language_it["next"] = "Seguente";
language_it["next_color"] = "Colore successivo";
language_it["no_data"] = "Nessun dato";
language_it["no_measurement_tooltip"] = "Le misurazioni verranno visualizzate pochi minuti dopo l'avvio della filtrazione.";
language_it["no_sensor_data"] = "Per ottenere la cronologia delle misurazioni, collega il tuo dispositivo Vigipool a internet e collegalo al tuo spazio Vigipool.";
language_it["no_temp_disconnected_help"] = "Le misurazioni della temperatura non vengono visualizzate perché il dispositivo non è connesso a Internet";
language_it["no_temp_sensor"] = "Nessuna sonda di temperatura rilevata";
language_it["no_temp_sensor_tild"] = "Il tuo tild non ha una sonda di temperatura - le funzioni sono disabilitate (senza gel, istruzioni per il riscaldamento dell'ausiliario, temperatura min. di processo, ecc)";
language_it["no_temp_value_help"] = "Le misurazioni verranno visualizzate pochi minuti dopo l'avvio della filtrazione";
language_it["not_connected"] = "Non connesso";
language_it["notification_awsconnected"] = "Il tuo dispositivo Vigipool è di nuovo connesso al Wifi!";
language_it["notification_awsnot_connected"] = "Il tuo dispositivo Vigipool non è più connesso al wifi… Controlla la connessione di rete o connettiti tramite Bluetooth.";
language_it["notification_device_disconnected"] = "Attenzione, il tuo dispositivo %1$s non è connesso al WiFi.\nControllare la connessione di rete o connettersi tramite Bluetooth.";
language_it["notification_device_linked_vigipool"] = "Ora puoi tenere d'occhio la tua piscina ovunque ti trovi utilizzando la modalità di connessione \"Da remoto\".";
language_it["notification_disconnected"] = "Attenzione, il dispositivo Phileo non è collegato al Wifi.\nControllare la connessione di rete o connettersi tramite Bluetooth.";
language_it["notification_divergent_flow"] = "Non tutti i vostri sensori di flusso indicano lo stesso stato di filtrazione.";
language_it["notification_ely_cell_error"] = "La cella di elettrolisi non produce più - contattate il vostro installatore.";
language_it["notification_ely_missed_filtration"] = "Il tempo di filtrazione corrente è troppo breve per permettere che l'elettrolisi generi nei tempi programmati.";
language_it["notification_ely_over_salt"] = "Tasso di sale elevato - arresto dell'elettrolisi.";
language_it["notification_ely_overheat"] = "Temperatura interna dell'elettrolizzatore troppo elevata.";
language_it["notification_ely_overload"] = "Alimentazione elettrolizzatore in sovraccarico.";
language_it["notification_ely_temp_too_low"] = "Raggiungimento della temperatura minima dell'acqua. Arresto dell'elettrolisi";
language_it["notification_ely_under_salt"] = "Bassa produzione - vedere il manuale del %1$s.";
language_it["notification_empty_tub"] = "Il serbatoio del prodotto regolatore è vuoto - La pompa è ferma";
language_it["notification_meteor_current_too_high_alarm"] = "Sovratensione rilevata - Verificare che la pompa non sia difettosa o bloccata.";
language_it["notification_meteor_current_too_low_alarm"] = "Sottotensione rilevata - Verificare che la pompa non funzioni a vuoto.";
language_it["notification_meteor_frost_warning_alarm"] = "La temperatura dell'acqua è vicina a 0 °C, la filtrazione si attiverà per evitare il rischio di gelo.";
language_it["notification_meteor_water_level_too_low_alarm"] = "Livello dell'acqua molto basso: controllare il livello dell'acqua della piscina.";
language_it["notification_modbus_error"] = "È stato rilevato un errore di comunicazione tra il dispositivo e il modulo Antenna.";
language_it["notification_no_orp_value"] = "Nessuna misurazione di ORP ricevuta da almeno un'ora.";
language_it["notification_no_ph_value"] = "Nessuna misurazione del pH ricevuta da almeno un'ora.";
language_it["notification_orp"] = "Sono stati osservati errori di misurazione ORP, si prega di controllare lo stato della vostra installazione";
language_it["notification_overdose"] = "Il volume massimo di prodotto di regolazione iniettato in 24 ore è stato raggiunto";
language_it["notification_overdose_orp"] = "Il volume massimo di prodotto di regolazione ORP iniettato in 24 ore è stato raggiunto";
language_it["notification_overdose_ph"] = "Il volume massimo di prodotto di regolazione pH iniettato in 24 ore è stato raggiunto";
language_it["notification_permission_rationale_message"] = "Abbiamo bisogno di inviarti notifiche per i comportamenti anomali dei tuoi dispositivi Vigipool.";
language_it["notification_permission_rationale_title"] = "Consenti notifiche";
language_it["notification_temp"] = "Sono stati osservati errori di misurazione della temperatura, si prega di controllare lo stato del vostro impianto";
language_it["number_picker_dialog_title"] = "Scegli un numero";
language_it["on"] = "Acceso";
language_it["open_settings"] = "Aprire le Impostazioni";
language_it["operating_mode"] = "Modalità di funzionamento";
language_it["options"] = "Opzioni";
language_it["orp_measurement_orp_history"] = "Cronologia dei valori delle ORP";
language_it["orp_probe_calibration_error_dialog_message"] = "Errore di calibrazione, controlli la sua sonda ORP.";
language_it["orpcalibration_measured"] = "ORP Misurato";
language_it["orpcalibration_solution"] = "Soluzione ORP";
language_it["orpcurrent"] = "ORP attuale";
language_it["orpdesired"] = "ORP rettificato";
language_it["orperror_meteor_notification"] = "Errore di misurazione ORP, controllare la sonda.";
language_it["orperror_notification"] = "Sono stati rilevati errori di misurazione ORP, l'iniezione è stata interrotta, si prega di controllare l'installazione e le sonde.";
language_it["orphistoric"] = "Cronologia ORP";
language_it["orpmeasurement_title"] = "Misura ORP";
language_it["orpsetpoint"] = "Valore dell'ORP";
language_it["orpsetpoint_help"] = "L'elettrolizzatore si accenderà durante le ore indicate.\nSe l'ORP raggiunge l'obiettivo prefissato, l'ORP deve rimanere in funzione fino all'ora di fine del programma.";
language_it["orpsetpoint_help_detailed"] = "Il valore ORP selezionato verrà applicato anche a tutti i programmi.\nSe la misurazione ORP raggiunge il set point e l'elettrolizzatore è acceso, funzionerà quanto basta a mantenere l'ORP al suo valore nominale.";
language_it["orpsetpoint_help_detailed_meteor"] = "L'elettrolizzatore rimarrà acceso finché la misura ORP non raggiunge il set point.\nUna volta raggiunto il set-point, funzionerà solo quanto basta per mantenere l'ORP al suo livello.";
language_it["orptank_almost_empty_notification"] = "Il serbatoio del prodotto di regolazione ORP è quasi vuoto";
language_it["orptank_empty_notification"] = "Il serbatoio del prodotto regolatore ORP è vuoto - La pompa è ferma";
language_it["oups"] = "Ops!";
language_it["output"] = "Uscita";
language_it["output_not_plugged"] = "Non collegato";
language_it["oz"] = "oz";
language_it["paused"] = "in pausa";
language_it["ph_measurement_dialog_aws_login_message"] = "Sei sicuro di voler riavviare l'App in modalità di connessione remota?";
language_it["ph_measurement_dialog_aws_login_title"] = "Riavviare";
language_it["ph_measurement_orp_history_ble_hint"] = "La cronologia dei valori ORP è disponibile solo utilizzando la modalità di connessione remota:\n\n- il dispositivo Vigipool deve essere collegato al Wifi\n- devi creare e confermare il tuo account Vigipool\n- devi accedere \"Da remoto\"";
language_it["ph_measurement_ph_history"] = "Cronologia dei valori pH";
language_it["ph_measurement_ph_history_aws_login"] = "Connessione da remoto";
language_it["ph_measurement_ph_history_ble_hint"] = "La cronologia dei valori del pH è disponibile solo utilizzando la modalità di connessione remota:\n\n- il dispositivo Vigipool deve essere collegato al Wifi\n- devi creare e confermare il tuo account Vigipool\n- devi accedere \"Da remoto\"";
language_it["ph_probe_calibration_btn_validation"] = "Convalidare la calibrazione";
language_it["ph_probe_calibration_calibration_manual"] = "Calibrazione manuale";
language_it["ph_probe_calibration_error_dialog_message"] = "Errore di calibrazione, controlli la sonda pH.";
language_it["ph_regulation_injection_max_volume"] = "Volume massimo iniettato";
language_it["ph_regulation_injection_max_volume_value"] = "%1$,.2f %2$s/giorno";
language_it["ph_regulation_injection_max_volume_value_litre"] = "%1$,.2f L/giorno";
language_it["ph_regulation_injection_max_volume_value_oz"] = "%1$d oz/giorno";
language_it["phcalibration_measured"] = "pH Misurato";
language_it["phcalibration_solution"] = "pH Soluzione";
language_it["phcurrent"] = "pH attuale";
language_it["phdesired"] = "pH rettificato";
language_it["pherror_notification"] = "Sono stati osservati errori di misurazione del pH, si prega di controllare lo stato del vostro impianto";
language_it["phhistoric"] = "Cronologia pH";
language_it["phmeasurement_title"] = "Misura pH";
language_it["phtank_almost_empty_notification"] = "Il serbatoio del prodotto regolatore pH è quasi vuoto";
language_it["phtank_empty_notification"] = "Il serbatoio del prodotto regolatore pH è vuoto - La pompa è ferma";
language_it["please_wait"] = "La prego di attendere…";
language_it["plurals_1_an"] = "%1$d anno";
language_it["plurals_1_heure"] = "%1$d ora";
language_it["plurals_1_jour"] = "%1$d giorno";
language_it["plurals_1_minute"] = "%1$d minuto";
language_it["plurals_1_mois"] = "%1$d mese";
language_it["plurals_1_seconde"] = "%1$d secondo";
language_it["plurals_1_semaine"] = "%1$d settimana";
language_it["plurals_x_an"] = "%1$d anni";
language_it["plurals_x_heure"] = "%1$d ore";
language_it["plurals_x_jour"] = "%1$d giorni";
language_it["plurals_x_minute"] = "%1$d minuti";
language_it["plurals_x_mois"] = "%1$d mesi";
language_it["plurals_x_seconde"] = "%1$d secondi";
language_it["plurals_x_semaine"] = "%1$d settimane";
language_it["pool_description"] = "Inserisci le caratteristiche della tua piscina per permetterci di ottimizzare il funzionamento dei dispositivi installati.";
language_it["prepare_reconnection"] = "Preparazione riconnessione in corso...";
language_it["pressure_current"] = "Pressione attuale";
language_it["pressure_desired"] = "Pressione rettificata";
language_it["priority_ph"] = "Priorità pH";
language_it["probe_replacement_dialog_message_orp"] = "Stai per reimpostare la data dell'ultimo cambio della sonda ORP.\n\nQuesto cambiamento non è reversibile, sei sicuro di voler continuare?";
language_it["probe_replacement_dialog_message_ph"] = "Stai per reimpostare la data dell'ultima modifica della sonda pH.\n\nQuesto cambiamento non è reversibile, sei sicuro di voler continuare?";
language_it["program"] = "Programma";
language_it["programming_heating_text"] = "max %1$s/giorno";
language_it["programming_lighting_text"] = "%1$s/giorno";
language_it["programming_overlay_average_temperature"] = "Temperatura media: %1$d%2$s";
language_it["programming_program_1"] = "Programma 1";
language_it["programming_program_2"] = "Programma 2";
language_it["prohibited_by_box"] = "Vietato dal quadro elettrico";
language_it["proj_type_microcut"] = "Colore micro-interruzioni (on/off)";
language_it["proj_type_mono"] = "Monocromatico";
language_it["proj_type_mono_dim"] = "Monocromatico dimmerabile";
language_it["proj_type_rc"] = "Colore RC+";
language_it["proximity_search_ble_powered_off_description"] = "Il bluetooth del telefono è disattivato è necessario per verificare la vicinanza al dispositivo.\n\nAbilitare il Bluetooth sul telefono prima di riprovare.";
language_it["proximity_search_ble_unauthorized_description"] = "L'app non dispone dell'autorizzazione per utilizzare il bluetooth del telefono, ed è necessario per verificare la vicinanza al dispositivo.\n\nConcedi l'autorizzazione Bluetooth a Vigipool dall'app in Impostazioni/applicazione Vigipool prima di riprovare.";
language_it["proximity_search_device_not_found_description"] = "Dobbiamo verificare la vicinanza al dispositivo per eseguire un controlavaggio.\nAvvicinarsi ai dispositivi e verificare che siano accesi prima di riprovare";
language_it["psi"] = "psi";
language_it["quit_backwash_description"] = "Attenzione, ricordarsi di rimettere la valvola della pompa di filtrazione su FILTRAZIONE";
language_it["quit_backwash_title"] = "Siete sicuri di voler uscire dalla modalità controlavaggio ?";
language_it["reconnect_to_device_alert_title"] = "Cambiare dispositivo?";
language_it["reconnection_needed"] = "Riconnessione necessaria";
language_it["red"] = "Rosso";
language_it["regulated"] = "Regolato";
language_it["regulation_available_tank_volume"] = "Volume di prodotto disponibile";
language_it["regulation_available_tank_volume_help_lock"] = "Blocca per salvare le modifiche";
language_it["regulation_available_tank_volume_help_unlock"] = "Sblocca per modificare il volume disponibile";
language_it["regulation_filtration_state"] = "Stato filtrazione";
language_it["regulation_injection_state"] = "Injection en cours";
language_it["regulation_max_injection_volume_adjustment"] = "Volume massimo di iniezione";
language_it["regulation_orptitle"] = "Regolazione ORP";
language_it["regulation_phminus"] = "pH-";
language_it["regulation_phminus_title"] = "Régulazione pH-";
language_it["regulation_phplus"] = "pH+";
language_it["regulation_phplus_title"] = "Regolazione pH+";
language_it["regulation_phtitle"] = "Regolazione pH";
language_it["regulation_product_type"] = "Tipo di prodotto iniettato";
language_it["regulation_volume_product_injected_description"] = "Sequenza di iniezione: 1 minuto su 3";
language_it["remember_config"] = "Salvare questa configurazione";
language_it["rename"] = "Rinominare";
language_it["repeat_everyday"] = "Ripetere ogni giorno";
language_it["resend_verification_code"] = "Invia di nuovo il codice via email";
language_it["reset_password_code_placeholder"] = "Codice di ripristino";
language_it["reset_password_enter_code"] = "Inserisci il codice che riceverai al tuo indirizzo e-mail (potrebbe volerci qualche minuto, controlla lo spam se non lo trovi)";
language_it["reset_password_enter_email"] = "Inserisci l'indirizzo email del tuo account per ricevere un codice di conferma.";
language_it["reset_password_enter_new_password"] = "Inserisci la nuova password del tuo account.\nLa nuova password deve rispettare queste regole: almeno 8 caratteri con maiuscola(e) e minuscola(e), un numero e un carattere speciale.";
language_it["reset_password_error"] = "Si è verificato un errore, controlla la tua connessione internet e riprova";
language_it["reset_password_error_code"] = "Impossibile reimpostare la password, verificare che il codice di reimpostazione sia stato inserito correttamente";
language_it["reset_password_success"] = "Password aggiornata con successo!";
language_it["restart"] = "Riavviare";
language_it["row_pool_sharing_timestamp_expire"] = "Scade il %1$s";
language_it["row_pool_sharing_timestamp_expired"] = "Scaduta il %1$s";
language_it["salt_level"] = "Tasso di sale";
language_it["saturday_short"] = "Sab";
language_it["saved_colors"] = "Colori registrati";
language_it["schedule_orpsetpoint_warning"] = "Il valore ORP selezionato verrà applicato a tutti i programmi.";
language_it["schedule_program_at"] = "A";
language_it["schedule_program_at2"] = "Al";
language_it["schedule_program_during"] = "durante";
language_it["schedule_program_from"] = "Da";
language_it["schedule_program_from2"] = "dei";
language_it["schedule_programto"] = "a";
language_it["schedule_programto2"] = "al";
language_it["schedule_temp_setpoint_warning"] = "La temperatura selezionata verrà applicata a tutti i programmi.";
language_it["scheduled_operation"] = "Avvio programmato";
language_it["scheduling_timeslot_description"] = "Selezionare l'ora di inizio e fine del programma";
language_it["scheduling_timeslot_duration_description"] = "Selezionare l'ora di inizio e la durata del programma";
language_it["seconds"] = "secondi";
language_it["select"] = "Selezionare";
language_it["select_clients"] = "Seleziona i dispositivi associati che desideri";
language_it["select_master"] = "Selezionare il dispositivo centrale";
language_it["select_zone_for_output"] = "Scegli a quale zona è assegnata ciascuna uscita";
language_it["sensor_debit"] = "Sonda di flusso";
language_it["sensor_orp"] = "Sonda ORP";
language_it["sensor_ph"] = "Sonda pH";
language_it["sensor_pressure"] = "Sensore di pressione";
language_it["sensor_temp"] = "Sonda T°";
language_it["set_brightness"] = "Regolare l'intensità";
language_it["set_speed"] = "Regolare la velocità";
language_it["setpoint_picker_dialog_title"] = "Impostare il set point";
language_it["settings_aws_state_connection_failure"] = "Errore di connessione";
language_it["settings_button_aux_type"] = "Configurazione";
language_it["settings_button_aux_type_help"] = "Attenzione, i programmi saranno disattivati al cambio del tipo di ausiliario (le fasce orarie saranno comunque mantenute).";
language_it["settings_button_frost_protection_mode"] = "Modalità anti gelo";
language_it["settings_button_projector_type_help"] = "Attenzione, i programmi verranno ripristinati al cambio del tipo di proiettore.";
language_it["settings_button_winter_mode"] = "Modalità Svernamento";
language_it["settings_dialog_aws_wifi_not_connected_message"] = "La connessione WiFi del tuo dispositivo può essere configurata solo in Bluetooth .\n\nVuoi riavviare l'app in modalità Bluetooth?";
language_it["settings_dialog_connnection_in_progress_bt_cancel"] = "Abbandonare";
language_it["settings_dialog_connnection_in_progress_message"] = "Il tuo dispositivo Phileo sta cercando di connettersi al Wifi.\n\nPuoi lasciarlo continuare o abbandonare e configurare una nuova connessione.";
language_it["settings_flow_state"] = "Stato del flusso:";
language_it["settings_hardware_version"] = "Versione hardware: %1$s";
language_it["settings_software_version"] = "Versione firmware: %1$s";
language_it["settings_wifi_connection_error"] = "Errore di connessione Wi-Fi";
language_it["settings_wifi_connection_in_progress"] = "Connessione al Wifi";
language_it["setup_lynx_failed"] = "Connessione al Lynx non riuscita";
language_it["setup_lynx_success"] = "Connessione al Lynx riuscita";
language_it["setup_new_device_button"] = "Configurazione";
language_it["setup_wifi_choice_credentials"] = "Manuale";
language_it["setup_wifi_choice_lynx"] = "Lynx";
language_it["setup_wifi_choice_wps"] = "WPS";
language_it["setup_wifi_credentials_description"] = "Inserisci le credenziali della rete a cui desideri accedere.\nAttenzione, non è possibile connettersi a reti a 5GHz.";
language_it["setup_wifi_credentials_failed"] = "Connessione non andata a buon fine.\n\nControlla le informazioni inserite e controlla che la copertura WiFi della tua installazione sia sufficiente.";
language_it["setup_wifi_credentials_pass_placeholder"] = "Password di rete";
language_it["setup_wifi_credentials_ssid_placeholder"] = "Nome della rete";
language_it["setup_wifi_credentials_wrong_password"] = "Connessione non andata a buon fine.\n\nLa password inserita è errata.";
language_it["setup_wifi_lynx_description"] = "Se hai un Lynx, puoi usarlo come punto di accesso per connetterti al WiFi.\n\nUna volta che il Lynx è in modalità punto di accesso, premi il pulsante \"Connetti\" qui sotto ed il tuo impianto si collegherà ad essa.\nQuindi, vai nel tuo Lynx e configura il Wi-Fi: l'impianto ha ora accesso ad internet attraverso l'hotspot del Lynx!";
language_it["setup_wifi_success"] = "Connessione al WIFI stabilita";
language_it["setup_wifi_wps_description"] = "Wi-Fi Protected Setup (WPS) è una funzionalità fornita da molti router. È stato creato con l'obiettivo di semplificare il processo di connessione a una rete WiFi protetta da un computer o altro dispositivo.\n\nPer continuare, basta premere il pulsante WPS sul router e quindi premere il pulsante \"Connetti\" qui sotto.";
language_it["setup_wifi_wpsfailed"] = "Connessione fallita.\n\nAssicurati che la copertura WiFi della tuo impianto sia sufficiente.";
language_it["shadow_incomplete_reboot_message"] = "Tentativo di riavvio, attendere 30 secondi...";
language_it["share_my_pool_bt_share"] = "Condividere";
language_it["share_my_pool_date_picker_title"] = "Condividere fino al…";
language_it["share_my_pool_date_picker_validation"] = "Si prega di indicare la data di scadenza";
language_it["share_my_pool_delete_share_dialog_bt_remove"] = "Eliminare";
language_it["share_my_pool_delete_share_dialog_message"] = "Vuoi davvero eliminare la condivisione della tua piscina con l'account \"%1$s\"?";
language_it["share_my_pool_dialog_contact_not_found_message"] = "È necessario compilare i dettagli prima di poter condividere la piscina.";
language_it["share_my_pool_hint_date"] = "Fino a GG/MM/AAAA";
language_it["share_my_pool_no_shares"] = "Nessuna condivisione da visualizzare.";
language_it["share_pool_description"] = "Compila i tuoi dati e le informazioni sulla tua piscina per poterla condividere con un professionista.";
language_it["share_pool_new_share"] = "Nuova condivisione";
language_it["share_pool_shared"] = "Le mie condivisioni";
language_it["share_pool_title"] = "Come condividere la mia piscina?";
language_it["share_unavailable"] = "Condivisione impossibile";
language_it["should_add_to_vigipool_account_alert_message"] = "Abbiamo notato che il tuo dispositivo è connesso a Internet e sei connesso ad un account Vigipool, ma i due non sono collegati tra loro.\n\nVuoi collegare questo dispositivo al tuo account Vigipool per poterlo pilotare da remoto?";
language_it["side_menu_configure"] = "Configurare";
language_it["side_menu_configure_devices"] = "I miei dispositivi";
language_it["side_menu_configure_measurements"] = "Sonde e calibrazione";
language_it["side_menu_configure_units"] = "Unità di misura";
language_it["side_menu_others"] = "Altri";
language_it["side_menu_others_cgu"] = "UGC";
language_it["side_menu_others_faq"] = "FAQ";
language_it["side_menu_others_share_pool"] = "Condividere la mia piscina";
language_it["side_menu_vigipool"] = "Account Vigipool";
language_it["side_menu_vigipool_connected_devices"] = "Dispositivi connessi";
language_it["side_menu_vigipool_my_pool"] = "La mia piscina";
language_it["side_menu_vigipool_sign_in"] = "Connessione / Creazione";
language_it["side_menu_vigipool_sign_out"] = "Disconnettersi";
language_it["sign_in_success_title"] = "Connessione riuscita";
language_it["sign_in_up_vigipool"] = "Creare un account o connettersi a Vigipool ?";
language_it["sign_up_complete_success_title"] = "Il tuo account è stato convalidato!\nOra puoi accedere.\n";
language_it["sign_up_success_description"] = "Riceverai rapidamente un codice di verifica via email. Una volta ricevuto, inserisci il codice sottostante per convalidare il tuo account.";
language_it["sign_up_success_title"] = "Il tuo account è stato creato!";
language_it["skip_rinse"] = "Salta la fase di risciacquo";
language_it["something_went_wrong"] = "Si è verificato un errore.";
language_it["start"] = "Iniziare";
language_it["start2"] = "Iniziare";
language_it["start_timer"] = "Avviare il timer";
language_it["status_accepted"] = "Accettato";
language_it["status_denied"] = "Rifiutato";
language_it["status_pending"] = "In attesa";
language_it["stop"] = "Fermare";
language_it["stop_backwash"] = "Fermare il controlavaggio";
language_it["stop_calibration"] = "Interrompere la calibrazione";
language_it["sunday_short"] = "Dom";
language_it["switch_device_device_type_not_supported"] = "Il tipo di dispositivo %s non è ancora supportato dall'app Vigipool.";
language_it["switch_device_message"] = "Sei sicuro di volerti connettere al dispositivo %1$s?";
language_it["temp_current"] = "Temp. attuale";
language_it["temp_desired"] = "Temp. attuale";
language_it["temp_error_meteor_notification"] = "Errore di misurazione della temperatura dell'acqua. Controllare il collegamento della sonda di temperatura.";
language_it["temp_measurement_temp_history"] = "Cronologia dei valori della temperatura";
language_it["temp_measurement_temp_history_ble_hint"] = "La cronologia dei valori della temperatura è disponibile solo utilizzando la modalità di connessione remota:\n\n- il dispositivo Vigipool deve essere collegato al Wifi\n- devi creare e confermare il tuo account Vigipool\n- devi accedere \"Da remoto\"";
language_it["temp_measurement_temp_probe_calibration"] = "Calibrazione sonda temperatura";
language_it["temp_measurement_title"] = "Cronologia delle temperature";
language_it["temp_min_start"] = "Temperatura minima di avvio";
language_it["temp_picker_dialog_title"] = "Scegli la temperatura";
language_it["temp_probe_calibration_error_dialog_message"] = "Errore di calibrazione, controllare la sonda della temperatura.";
language_it["temp_setpoint"] = "Set point della temperatura";
language_it["temperature_min_start_help"] = "Il trattamento si attiverà durante le fasce orarie selezionate, ma solo se la temperatura dell'acqua supera la temperatura minima di avvio.";
language_it["temperature_min_start_help_detailed"] = "La temperatura scelta verrà applicata anche a tutti i programmi.\nSe la temperatura dell'acqua è al di sotto del valore indicato, il trattamento non inizierà.";
language_it["temperature_setpoint_help"] = "Il riscaldamento si accenderà durante le ore indicate.\nSe il valore impostato viene raggiunto, la temperatura sarà mantenuta fino all'ora di fine del programma.";
language_it["temperature_setpoint_help_detailed"] = "La temperatura scelta verrà applicata anche a tutti i programmi.\nSe la temperatura dell'acqua ha raggiunto il set point e il riscaldamento è acceso, funzionerà quanto basta per mantenere la temperatura.";
language_it["terms_of_use"] = "Condizioni generali di utilizzo";
language_it["text_copied_to_clipboard"] = "%1$s copiato negli appunti.";
language_it["text_serial_number"] = "Numero di serie";
language_it["text_watcher_invalid_email"] = "L'indirizzo e-mail deve essere valido";
language_it["text_watcher_lower_case_error"] = "Inserisci almeno un carattere minuscolo.";
language_it["text_watcher_max_length_error"] = "Inserisci meno di %1$d caratteri.";
language_it["text_watcher_min_length_error"] = "Inserisci almeno %1$d caratteri.";
language_it["text_watcher_number_error"] = "Inserisci almeno una cifra.";
language_it["text_watcher_password_confirm_error"] = "Le password non corrispondono.";
language_it["text_watcher_password_error"] = "La password non è abbastanza forte.";
language_it["text_watcher_required"] = "Questo campo è richiesto";
language_it["text_watcher_special_char_error"] = "Inserisci almeno un carattere speciale.";
language_it["text_watcher_upper_case_error"] = "Inserisci almeno un carattere maiuscolo.";
language_it["theme"] = "Tema";
language_it["theme_black_and_white"] = "Bianco e nero";
language_it["theme_disco"] = "Disco";
language_it["theme_disco2"] = "Disco 2";
language_it["theme_france"] = "Francia";
language_it["theme_jamaica"] = "Reggae";
language_it["theme_rainbow"] = "Arcobaleno";
language_it["theme_white"] = "Variazione di bianco";
language_it["thermoregulated_mode_help"] = "La modalità termoregolata adatterà la durata degli intervalli di programmazione in base alla temperatura dell'acqua.\nSe la temperatura dell'acqua è alta, la filtrazione funzionerà un po' più a lungo del previsto e viceversa se la temperatura è bassa.";
language_it["thursday_short"] = "Gio";
language_it["time_ago"] = "c'è %1$s";
language_it["time_picker_dialog_sunset_mode_tooltip"] = "Avvia l'illuminazione quando il sole tramonta";
language_it["time_picker_dialog_sunset_mode_tooltip_with_twilight"] = "Avvia l'illuminazione al tramonto (%1$s oggi)";
language_it["time_picker_dialog_title_end_time"] = "Impostare l'ora di fine";
language_it["time_picker_dialog_title_start_time"] = "Impostare l'ora di inizio";
language_it["title_activity_base_regulation"] = "Regolazione";
language_it["title_activity_bonding"] = "Associazione";
language_it["title_activity_faq"] = "F.A.Q.";
language_it["title_activity_probes_and_calibration"] = "Sonde & calibrazione";
language_it["title_activity_settings"] = "Impostazioni";
language_it["title_activity_temp_measurement"] = "Misura Temperatura";
language_it["title_activity_temp_probe_calibration"] = "Calibrazione Temp";
language_it["title_activity_update_name"] = "Aggiornamento del nome";
language_it["title_activity_wifi_setup"] = "Configurazione Wifi";
language_it["toast_ble_auto_connect_error"] = "Impossibile riconnettersi automaticamente all'ultimo dispositivo.";
language_it["toast_serial_number_copied_to_clipboard"] = "Numero di serie copiato negli appunti.";
language_it["too_high"] = "Troppo alto";
language_it["too_low"] = "Troppo basso";
language_it["treatment"] = "Trattamento";
language_it["tuesday_short"] = "Mar";
language_it["turn_off"] = "Spegnere";
language_it["turn_off_auto"] = "Spegnere automaticamente";
language_it["turn_off_filtration_forced"] = "Fermare la marcia forzata";
language_it["turn_on"] = "Accendere";
language_it["turn_on_filtration_forced"] = "Attiva la marcia forzata";
language_it["turn_on_the_light"] = "Accendere l'illuminazione";
language_it["turned_off"] = "Spento";
language_it["twilight"] = "Crepuscolo";
language_it["twilight_unavailable"] = "Crepuscolare non disponibile";
language_it["unable_to_read_device_data"] = "Errore imprevisto: impossibile leggere la cache dei dati del dispositivo.";
language_it["units_measure_eu"] = "Metrica (m, L, kg…)";
language_it["units_measure_na"] = "Imperiale (ft, US Gal, lbs…)";
language_it["units_measure_title"] = "Unità di misura";
language_it["unknown"] = "Sconosciuto";
language_it["unpair"] = "Abbandonare";
language_it["update_action"] = "Aggiornare";
language_it["update_device_for_backwash_description"] = "Per poter fare il controlavaggio guidato, è necessario collegare il proprio impianto a Internet e aggiornare i propri dispositivi.";
language_it["update_failed_alert_title"] = "Aggiornamento non riuscito";
language_it["update_firmware_ask_state_description"] = "Vuoi installarlo ora? (In caso contrario, è possibile effettuare l'aggiornamento in qualsiasi momento dalla schermata delle impostazioni)";
language_it["update_firmware_error_description"] = "Si è verificato un errore durante l'aggiornamento.";
language_it["update_firmware_progress_description"] = "Download aggiornamento in corso…";
language_it["update_firmware_restart_description"] = "Riavvio in corso di…";
language_it["update_firmware_success_description"] = "Aggiornamento installato con successo !";
language_it["update_mandatory"] = "Aggiornamento obbligatorio";
language_it["update_name_validation_error"] = "Il nome deve contenere almeno tre caratteri.";
language_it["update_necessary"] = "Aggiornamento del dispositivo necessario";
language_it["update_ota_f1_bt_download_and_install"] = "Scaricare ed Installare";
language_it["update_ota_f1_text_top"] = "È disponibile un aggiornamento per %1$s (%2$s)";
language_it["update_ota_f2_text_top"] = "Attendere, il dispositivo si sta aggiornando.";
language_it["update_ota_f2_text_top_restarting"] = "Attendere, il dispositivo si riavvia.";
language_it["update_ota_f2_text_top_restarting_with_device_type"] = "Attendi, il tuo dispositivo %1$s si riavvierà.";
language_it["update_ota_f2_text_top_with_device_type"] = "Attendi, il tuo dispositivo %1$s si sta aggiornando.";
language_it["update_ota_f2_update_progress"] = "%1$d %%";
language_it["update_succeed_alert_title"] = "Aggiornamento riuscito";
language_it["validation_required"] = "Questo campo è obbligatorio.";
language_it["verification_code"] = "Codice :";
language_it["version_firmware_prefix"] = "Versione firmware : ";
language_it["version_hardware_prefix"] = "Versione hardware : ";
language_it["vigipool_account_not_verified_message"] = "Il tuo account Vigipool non è attivato.\n\nInserisci il codice ricevuto nella tua e-mail per convalidare il tuo account.";
language_it["vigipool_device"] = "Dispositivo Vigipool";
language_it["vigipool_device_added_success"] = "Aggiunta del dispositivo riuscita!";
language_it["volume_unit_litre"] = "Litro";
language_it["volume_unit_us_gallon"] = "Gallone US";
language_it["volume_unit_us_gallon_unit"] = "US gal";
language_it["vs_need_tild_or_meteor_alert"] = "Associate il vostro Tild VP o Meteor VP, all'Antea-VS per poter controllare la filtrazione.";
language_it["vspump_brand"] = "Marca :";
language_it["vspump_help"] = "Disabilitare Selezione automatica se si desidera scegliere manualmente la velocità della pompa del filtro durante la marcia forzata";
language_it["vspump_model"] = "Modello :";
language_it["vspump_new_device_button"] = "Configura";
language_it["vspump_onoff_details"] = "con accensione/spegnimento controllabile";
language_it["vspump_select"] = "Scegliere un'altra pompa";
language_it["vspump_settings"] = "Configurazione parametri della pompa";
language_it["vspump_settings_confirm_message"] = "Attenzione, questi parametri hanno un impatto sul buon funzionamento del dispositivo";
language_it["vspump_settings_confirm_title"] = "Vogliate verificare le informazioni inserite";
language_it["vspump_settings_help"] = "Selezionate la vostra pompa nella lista qui sotto";
language_it["vspump_settings_title"] = "Regolazioni della pompa";
language_it["vspump_speed"] = "Velocità";
language_it["vspump_speed_auto"] = "Velocita automatica";
language_it["vspump_speed_details"] = "Pompa %1$d velocità";
language_it["vspump_speed_eco"] = "Eco";
language_it["vspump_speed_fast"] = "Turbo";
language_it["vspump_speed_normal"] = "Normale";
language_it["vspump_speed_off"] = "Spenta";
language_it["vspump_type"] = "Tipo di pompa :";
language_it["water_hardness_hard"] = "Durezza";
language_it["water_hardness_slightly_hard"] = "Piuttosto dura";
language_it["water_hardness_slightly_soft"] = "Piuttosto dolce";
language_it["water_hardness_soft"] = "Dolce";
language_it["water_hardness_very_hard"] = "Molto dura";
language_it["water_hardness_very_soft"] = "Molto dolce";
language_it["water_renewal"] = "Modalità monitoraggio della temperatura";
language_it["water_temperature"] = "Temperatura dell'acqua";
language_it["water_temperature_error"] = "Errore temperatura: %1$s";
language_it["wednesday_short"] = "Mer";
language_it["white"] = "Bianco";
language_it["wifi_lynx_fail_description"] = "Connessione al Lynx non riuscita";
language_it["wifi_lynx_in_progress_description"] = "Cerca il Lynx per connettersi…";
language_it["wifi_lynx_success_description"] = "Connessione al Lynx riuscita";
language_it["wifi_setup_error_dialog_failure_message"] = "Errore di connessione WiFi, controlla il tuo SSID e la password.";
language_it["wifi_setup_error_dialog_failure_message_wps"] = "Errore di connessione Wi-Fi, controlla di essere abbastanza vicino al router.";
language_it["wifi_setup_error_dialog_timeout_message"] = "Tempo scaduto per la connessione WiFi";
language_it["wifi_setup_error_dialog_timeout_message_ssid"] = "Tempo scaduto per la connessione WiFi.\n\nControlla le informazioni inserite e verifica che la copertura WiFi della tua installazione sia sufficiente.";
language_it["wifi_setup_error_dialog_timeout_message_wps"] = "Tempo scaduto per la connessione WiFi.\n\nSi prega di controllare che la copertura Wi-Fi della vostra installazione sia sufficiente.";
language_it["wifi_setup_error_dialog_wrong_password"] = "Controlla la tua password.";
language_it["wifi_setup_lynx_hint"] = "Se hai un Lynx, puoi usarlo come punto di accesso per connetterti al WiFi.\n\nUna volta che il Lynx è in modalità punto di accesso, premi il pulsante \"Connetti\" qui sotto e la tua installazione si collegherà ad esso.\nQuindi, vai nel tuo Lynx e configura il Wi-Fi: la tua struttura ha ora accesso ad internet attraverso l'hotspot del Lynx!";
language_it["wifi_setup_ssid_5ghz_hint"] = "Attenzione, le reti WiFi a 5GHz non sono supportate.";
language_it["wifi_setup_ssid_hint_ssid"] = "SSID";
language_it["wifi_setup_ssid_scan_qr_code"] = "Scansiona il codice QR della password";
language_it["wifi_setup_success_dialog_button_setup"] = "Gestisci il mio account";
language_it["wifi_setup_success_dialog_message"] = "La connessione WiFi è stata configurata con successo.\n\nOra puoi creare o accedere al tuo account Vigipool.";
language_it["wifi_setup_wps_hint"] = "Wi-Fi Protected Setup (WPS) è una funzionalità fornita da molti router. È stato creato con l'obiettivo di semplificare il processo di connessione a una rete WiFi protetta da un computer o altro dispositivo.\n\nPer continuare, basta premere il pulsante WPS sul router e quindi premere il pulsante \"Connetti\" qui sotto.";
language_it["wifi_state_connected_no_internet"] = "Wifi connesso, internet assente";
language_it["wifi_state_in_progress"] = "Connessione Wi-Fi in corso";
language_it["wifi_state_internet"] = "Connesso a Internet";
language_it["wifi_state_no_internet"] = "Internet assente";
language_it["wifi_state_not_connected"] = "Wifi non connesso";
language_it["wifi_wpsin_progress_description"] = "Premere il pulsante WPS sul router per collegare il dispositivo Vigipool\n\nTentativo di accesso in corso…";
language_it["winter_mode_disabled"] = "La modalità Svernamento è disattivata in %1$s.\n\nConnetti l'installazione Vigipool a Internet per ricevere gli ultimi aggiornamenti e attivare questa funzione.";
language_it["winter_mode_short"] = "Svernamento";
language_it["wix_settings_merge_zones"] = "Unire le zone";
language_it["write_cancel_not_connected"] = "Problemi di comunicazione con il dispositivo";
language_it["write_cancel_poor_connection"] = "Il tuo telefono ha una cattiva connessione";
language_it["zones"] = "Zone";
language_it["ask_for_authorization"] = "Richiesta di autorizzazione";
language_it["ask_for_authorization_description"] = "Abbiamo bisogno dell'autorizzazione Spotify per poter sincronizzare la musica.";
language_it["calibration_debit_flow_warning"] = "La calibrazione del flusso si puo' fare solo con la filtrazione in funzione.";
language_it["configure_price_kwh"] = "Configurare il prezzo del kWh";
language_it["consumption"] = "Consumo";
language_it["day_caps"] = "Giorno";
language_it["debit_history"] = "Storico dei flussi";
language_it["direct"] = "Diretto";
language_it["energy"] = "Energia";
language_it["flow_calibration"] = "Calibrazione flusso";
language_it["flow_current"] = "Flusso attuale";
language_it["flow_desired"] = "Flusso desiderato";
language_it["flow_measurement_history"] = "Cronologia dei valori di flusso";
language_it["flow_probe_calibration_error_dialog_message"] = "Errore di calibrazione verificare il sensore di flusso";
language_it["flow_sensor_calibration"] = "Calibrazione sensore di flusso";
language_it["frequency"] = "Frequenza";
language_it["history"] = "Storico";
language_it["hour"] = "Ora";
language_it["impossible_to_use_spotify"] = "Impossibile usare Spotify";
language_it["impossible_to_use_spotify_description"] = "È necessario che l'applicazione Spotify sia installata sul telefono.";
language_it["informations"] = "Informazioni";
language_it["instant_consumption"] = "Consumo istantaneo";
language_it["instant_current"] = "Corrente istantanea";
language_it["invalid_format"] = "Formato non valido";
language_it["ios_fill_price_kwh_format"] = "Inserire il prezzo del kWh in {{STRING}}.";
language_it["ios_price_in_currency_format"] = "Prezzo in {{STRING}}";
language_it["link_device_btn_link"] = "Associare";
language_it["link_device_message"] = "Vuoi associare il dispositivo %1$s %2$s al tuo account Vigipool?";
language_it["link_device_title"] = "Associare il dispositivo";
language_it["measurement_history_ble_hint"] = "La cronologia dei valori è disponibile solo quando si utilizza la modalità di connessione remota:\n\n- il tuo dispositivo Vigipool deve essere connesso al Wifi\n- devi creare e confermare il tuo account Vigipool\n- devi connetterti \"Da remoto\"";
language_it["measurement_units_debit_unit"] = "Unità di flusso";
language_it["measurement_units_debit_unit_cubic_feet_per_hour"] = "Piedi cubi ora  (ft³/h)";
language_it["measurement_units_debit_unit_cubic_meter_per_hour"] = "Metri cubi ora  (m³/h)";
language_it["measurement_units_debit_unit_gallon_per_minute"] = "Galloni US per minuto (gpm)";
language_it["measurement_units_pressure_unit"] = "Unità di pressione";
language_it["measurement_units_pressure_unit_bar"] = "Bar (bar)";
language_it["measurement_units_pressure_unit_psi"] = "PSI (psi)";
language_it["month"] = "Mese";
language_it["new_device_message"] = "Hai appena aggiunto un nuovo %1$s al tuo sistema Vigipool.\n\nOra devi configurarlo.";
language_it["new_device_title"] = "Nuovo %1$s individuato";
language_it["number_too_big"] = "Il numero è troppo grande";
language_it["open_spotify"] = "Aprire Spotify";
language_it["play_last_song"] = "Riproduci la musica più recente";
language_it["power_factor"] = "Fattore di potenza";
language_it["pressure_history"] = "Storico della pressione";
language_it["pressure_measurement_history"] = "Cronologia dei valori della pressione";
language_it["price_kwh"] = "Prezzo al kWh :";
language_it["real_time"] = "Tempo reale";
language_it["see_debit_history"] = "Vedere lo storico dei flussi";
language_it["see_pressure_history"] = "Vedere lo storico della pressione";
language_it["sensor_flow"] = "Sensore di flusso";
language_it["setup"] = "Installazione";
language_it["short_ble_history_information"] = "Connetti il ​​tuo dispositivo al Wi-Fi per beneficiare della cronologia dei consumi";
language_it["short_ble_history_information_return_line"] = "Connetti il ​​tuo dispositivo\nal Wi-Fi per beneficiare della\ncronologia dei consumi";
language_it["short_debit_history"] = "Storico dei flussi";
language_it["short_pressure_history"] = "Storico  della pressione";
language_it["spotify_connection_lost"] = "Connessione persa con Spotify";
language_it["spotify_connection_lost_description"] = "Riproduci musica su Spotify e torna all'app Vigipool in modo da poter ripristinare la connessione.";
language_it["spotify_unavailable"] = "Spotify non disponibile";
language_it["spotify_unavailable_description"] = "Non siamo in grado di comunicare con i server di Spotify.\nCiò potrebbe essere dovuto a un problema temporaneo da parte loro o a un problema di connessione a Internet sul telefono.";
language_it["tendency_week"] = "Tendenza sui 7 giorni";
language_it["tension"] = "Tensione";
language_it["theme_spotify_cold_colors"] = "Colori freddi";
language_it["theme_spotify_hot_colors"] = "Colori caldi";
language_it["turbo_mode_tooltip_help"] = "La modalità Turbo è disponibile solo quando la pompa di calore è in funzione e tornerà automaticamente alla modalità Smart una volta raggiunta la temperatura impostata";
language_it["ios_with_thermoregulation"] = "Con termoregolazione ≃ %@";

language_it["forced_for_temp"] = "La filtrazione viene attivata fino all'aggiornamento della temperatura";


var language_sp = {};

language_sp["language"] = "Francés";
language_sp["sign_in"] = "Identificarse";
language_sp["email"] = "Email";
language_sp["password"] = "Contraseña";
language_sp["show_password"] = "Mostrar contraseña";
language_sp["remember_me"] = "Recordarme";
language_sp["login"] = "Conexión";
language_sp["particular"] = "Particular";
language_sp["professional"] = "Profesional";
language_sp["free"] = "Gratis";
language_sp["prenium"] = "Pagando";
language_sp["dont_have_an_account"] = "¿No tienes cuenta?";
language_sp["sign_up"] = "Inscribirse";
language_sp["create_supervision_account"] = "Crear una cuenta Supervisión";
language_sp["forgot_your_password"] = "Contraseña olvidada";
language_sp["resend_email_verification"] = "No he recibido el mail de confirmación";
language_sp["wrong_id"] = "Tus datos de acceso son incorrectos";
language_sp["perso_pro_error"] = "Error cuenta particular/profesional";
language_sp["email_used"] = "Este mail es ya utilizado";
language_sp["password_rule_title"] = "La contraseña debe contener:";
language_sp["password_rule_0"] = "Una letra minúscula";
language_sp["password_rule_1"] = "Una letra mayúscula";
language_sp["password_rule_2"] = "Una cifra";
language_sp["password_rule_3"] = "Al menos 6 caracteres";
language_sp["password_rule_conform"] = "Las contraseñas deben ser idénticas";
language_sp["account_specify"] = "Gracias de especificar que cuenta deseas utilizar";
language_sp["email_not_verified"] = "Gracias de validar tu mail antes de conectarte.";
language_sp["univers_vp"] = "Descubrir el universo Vigipool";
language_sp["demo_text"] = "¿Una visita antes de empezar?";
language_sp["demo_button"] = "Acceder al modo demo";
language_sp["name_of_the_brand"] = "Nombre de la marca";
language_sp["professional_s_name"] = "Nombre del profesional";
language_sp["address"] = "Dirección";
language_sp["postal_code"] = "Código postal";
language_sp["city"] = "Ciudad";
language_sp["country"] = "País";
language_sp["phone"] = "Teléfono";
language_sp["ccei_customer_number"] = "Número Cliente CCEI";
language_sp["siret"] = "CIF";
language_sp["vigipool_product_supplier"] = "Proveedor de productos";
language_sp["register_info_1"] = "Una cuenta Supervisión:";
language_sp["register_info_2"] = "- Te permite supervisar piscinas compartidas con la ayuda de la aplicación Vigipool.";
language_sp["register_info_3"] = "- Pero no permite utilizar la aplicación Vigipool (una cuenta Vigipool será creada en la aplicación)";
language_sp["register_info_4"] = "Si ya tienes una cuenta Vigipool Aplicación, podrás conectarte directamente a Supervision con la ayuda de vuestros datos de acceso para ver las informaciones asociadas a tu piscina.";
language_sp["create_an_account"] = "Crear una cuenta";
language_sp["password_confirmation"] = "Contraseña (confirmación)";
language_sp["first_name"] = "Nombre";
language_sp["last_name"] = "Apellidos";
language_sp["already_have_an_account_connect"] = "¿Ya tienes una cuenta?";
language_sp["login_btn"] = "Conectarse";
language_sp["reset_password"] = "Reiniciar la contraseña";
language_sp["send_confirmation_email"] = "Enviar un correo de confirmación";
language_sp["reset_password_error"] = "Esta dirección de correo no ha sido utilizada";
language_sp["email_verification"] = "Reenviar el correo de validación";
language_sp["email_verification_footer"] = "¿Tu email ha sido verificado?";
language_sp["email_sent"] = "Correo enviado";
language_sp["email_has_been_sent"] = "Un correo ha sido enviado para que puedas reinicializar la contraseña de tu cuenta.";
language_sp["password_reset_link"] = "Este link de reinicialización de la contraseña expirará en 60 minutos.";
language_sp["return"] = "Volver";
language_sp["reset_success_title"] = "Contraseña reinicializada con éxito";
language_sp["reset_success_text"] = "Puedes intentar conectarte de nuevo.";
language_sp["mail_template_text_1"] = "Recibes este correo porque hemos recibido una solicitud de reinicialización de contraseña de tu cuenta.";
language_sp["mail_template_text_2"] = "Si nos has solicitado la reinicialización de la contraseña, ninguna acción será requerida.";
language_sp["mail_template_signature"] = "Saludos";
language_sp["account_created_title"] = "Tu cuenta ha sido bien creada, antes de conectarte gracias de validar tu inscripción a través del correo que acaba de ser enviado";
language_sp["email_verify_title"] = "Verificación de tu email Vigipool Supervision";
language_sp["email_verify_text_1"] = "Recibes este correo electrónico porque acabas de crear tu cuenta Vigipool Supervision.";
language_sp["email_verify_text_2"] = "Gracias de confirmar la creación de tu cuenta clicando sobre el botón aquí abajo";
language_sp["email_verify_text_3"] = "Si no has efectuado la creación de la cuenta, ninguna acción será requerida.";
language_sp["email_already_verified"] = "Correo ya verificado.";
language_sp["email_verified"] = "Correo verificado con éxito.";
language_sp["administrator"] = "Administrador";
language_sp["manager"] = "Responsable";
language_sp["pool_tech"] = "Piscinero";
language_sp["new_user"] = "Nuevo";
language_sp["btn_sign_out"] = "Desconectarse";
language_sp["dashboard"] = "Cuadro de mando";
language_sp["my_account"] = "Mi cuenta";
language_sp["users_management"] = "Usuarios";
language_sp["pool_management"] = "Gestión piscina";
language_sp["interventions"] = "Carnet de mantenimiento";
language_sp["event_history"] = "Historial";
language_sp["force_refresh"] = "Refrescar";
language_sp["overview"] = "Piscina supervisadas";
language_sp["overview_single"] = "Piscina supervisada";
language_sp["swimming_pool_list"] = "Lista de piscinas";
language_sp["swimming_pools_accepted"] = "Tus piscinas supervisadas";
language_sp["awaiting_delegation_acceptance"] = "Esperando la aceptación de delegación";
language_sp["search_here"] = "Buscar aquí...";
language_sp["see_details"] = "Ver detalles";
language_sp["accept_pool"] = "Aceptar la piscina";
language_sp["refuse_pool"] = "Rechazar la piscina";
language_sp["swimming_pool_locations"] = "Emplazamiento de las piscinas";
language_sp["legal_notice"] = "Menciones legales";
language_sp["terms_of_service"] = "Condiciones de utilización";
language_sp["user_devices_graph"] = "Material instalado";
language_sp["table_pool_name"] = "Nombre de la piscina";
language_sp["table_ownername"] = "Propietario";
language_sp["table_temperature"] = "Tº";
language_sp["table_wifi"] = "Wifi";
language_sp["table_pool_status"] = "Estado de la piscina";
language_sp["table_rdv"] = "RDV";
language_sp["total"] = "Total";
language_sp["ok"] = "Ok";
language_sp["warning"] = "Alerta(s)";
language_sp["error"] = "Error(es)";
language_sp["disconnected"] = "Desconectado(s)";
language_sp["ok_devices_only"] = "Equipos OK únicamente";
language_sp["devices_to_be_monitored_only"] = "Equipos a vigilar únicamente";
language_sp["devices_in_error_only"] = "Equipos en error únicamente";
language_sp["devices_disconnected_only"] = "Equipos desconectados sólamente";
language_sp["error_multiple"] = "Varios errores";
language_sp["error_orp_high"] = "Orp demasiado alto";
language_sp["error_orp_low"] = "Orp demasiado bajo";
language_sp["error_orp_none"] = "Ningún Orp";
language_sp["error_ph_high"] = "pH demasiado alto";
language_sp["error_ph_low"] = "pH demasiado bajo";
language_sp["error_ph_none"] = "Ningún pH";
language_sp["error_temp_high"] = "Temperatura demasiado alta";
language_sp["error_temp_low"] = "Temperatura demasiado baja";
language_sp["error_temp_none"] = "Ninguna temperatura";
language_sp["warning_multiple"] = "Atención";
language_sp["warning_no_wifi"] = "Piscina desconectada";
language_sp["warning_orp_high"] = "Orp ligeramente alto";
language_sp["warning_orp_low"] = "Orp ligeramente bajo";
language_sp["warning_ph_high"] = "pH ligeramente alto";
language_sp["warning_ph_low"] = "pH ligeramente bajo";
language_sp["warning_temp_high"] = "Temperatura ligeramente alta";
language_sp["warning_temp_low"] = "Temperatura ligeramente baja";
language_sp["app_account_fail_pool"] = ":nb_pool piscina(s) no está registrada(s) en la aplicación Vigipool (\"Mi piscina\" en el menú de la izquierda de la aplicación) y no puede(n) ser mostrado(s) en Vigipool Supervision";
language_sp["CGU"] = "Menciones legales | CGU";
language_sp["remove_pool_tracking"] = "Borrar el seguimiento de la piscina";
language_sp["see_map"] = "Ver Mapa";
language_sp["see_more"] = "Ver más";
language_sp["remove_picture"] = "Borrar esta foto";
language_sp["file_too_heavy"] = "Fichero demasiado voluminoso";
language_sp["picture_tooltip"] = "Clicar sobre el botón para añadir una foto, talla máxima 4Mo";
language_sp["deviceType"] = "Periférico Principal";
language_sp["cover"] = "Cubierta";
language_sp["volume"] = "Volumen";
language_sp["deviceId"] = "Identificante";
language_sp["structure"] = "Estructura";
language_sp["treatment"] = "Tratamiento";
language_sp["past"] = "Pasado(s)";
language_sp["planned"] = "Planificado";
language_sp["vigipool_devices"] = "Periféricos de Vigipool";
language_sp["electrolyse"] = "Electrólisis";
language_sp["shadow"] = "Informaciones detalladas";
language_sp["device"] = "Periférico";
language_sp["function"] = "Función";
language_sp["serial_number"] = "Número de serie";
language_sp["normal_behaviour"] = "Comportamiento normal";
language_sp["calibration_in_progress"] = "Calibración en curso";
language_sp["winter_mode"] = "Modo invierno";
language_sp["sync_flow"] = "Modo medidas";
language_sp["update_available"] = "Puesta al día disponible";
language_sp["update_in_progress"] = "Puesta al día en curso";
language_sp["update_error"] = "Error de puesta al día";
language_sp["restart_in_progress"] = "Rearranque en curso";
language_sp["stable_calibration"] = "Calibración estable";
language_sp["gateway_mode"] = "Modo pasarela";
language_sp["gateway_mode_0"] = "Cliente";
language_sp["gateway_mode_1"] = "Pasarela";
language_sp["fast_slow_ble"] = "BLE modo rápido";
language_sp["state"] = "Estado";
language_sp["ap_bcast_duration"] = "Duración de la difusión de la aplicación";
language_sp["update_ota"] = "Puesta al día por Wi-Fi";
language_sp["server_on"] = "Máster";
language_sp["flow_on"] = "Filtración";
language_sp["prod_on"] = "Producción de cloro";
language_sp["mqtt_connected"] = "Conectado";
language_sp["model_id"] = "Identificante del modelo";
language_sp["hw_vers"] = "Versión del Hardware";
language_sp["date_mes"] = "Última medida";
language_sp["date_mes_ph"] = "Última medida pH";
language_sp["date_mes_orp"] = "Última medida Orp";
language_sp["value_orp"] = "Valor orp";
language_sp["value_temp"] = "Temperatura";
language_sp["sw_vers"] = "Versión del software";
language_sp["ph_adjust"] = "Ajuste del pH";
language_sp["temp_adjust"] = "Ajuste de la temperatura";
language_sp["orp_adjust"] = "Ajuste del Orp";
language_sp["ph_calibration_target"] = "Objetivo de la calibración del pH";
language_sp["orp_calibration_target"] = "Objetivo de la calibración del Orp";
language_sp["jeedom_interval"] = "Intervalo de Jeedom";
language_sp["rssi"] = "RSSI";
language_sp["inject_on"] = "Inyección en curso";
language_sp["vol_tot_inject"] = "Vol total inyectado (L)";
language_sp["vol_bac"] = "Volumen del vaso";
language_sp["vol_max_24h"] = "Volumen max 24h";
language_sp["consigne_ph"] = "Consigna pH";
language_sp["source_ph"] = "Fuente pH";
language_sp["priority"] = "Prioridad pH";
language_sp["consigne_orp"] = "Consigna Orp";
language_sp["source_orp"] = "Fuente Orp";
language_sp["mode_ely"] = "Modo";
language_sp["power_ely"] = "Potencia";
language_sp["ely_duration_in_minut"] = "Tiempos de electrólisis actual";
language_sp["couv_on"] = "Cubierta de piscina";
language_sp["couv_on_2"] = "Cubierta &gt; 12h";
language_sp["consigne_temp"] = "Consigna de temperatura";
language_sp["value_temp_in"] = "Temperatura entrante";
language_sp["value_temp_out"] = "Temperatura saliente";
language_sp["value_temp_int"] = "Temperatura interna";
language_sp["value_cond"] = "Conductividad";
language_sp["ely_duration_compensated"] = "Duración programada de la electrólisis";
language_sp["mode_choc"] = "Modo Choque";
language_sp["choc_duration"] = "Duración modo choque";
language_sp["water_hardness"] = "Dureza del agua";
language_sp["temp_min_off_ely"] = "Temperatura mínima";
language_sp["off"] = "OFF";
language_sp["on"] = "ON";
language_sp["continuous"] = "Contínua";
language_sp["thermo_regulated"] = "Termorregulada";
language_sp["orp_regulated"] = "Orp regulado";
language_sp["open"] = "Abierto";
language_sp["closed"] = "Cerrado";
language_sp["meteor_mode_1"] = "Marcha forzada";
language_sp["meteor_mode_2"] = "Programado";
language_sp["meteor_mode_3"] = "Automático";
language_sp["tild_no_program"] = "Ningún programa está disponible";
language_sp["tild_hors_gel"] = "Modo antihielo activado, tu filtración será lanzada automáticamente para evitar el hielo del agua en la canalización";
language_sp["tild_aux_type_6"] = "Regulación Orp";
language_sp["light_type_m"] = "Tipo de iluminación";
language_sp["light_type_m_0"] = "Mono";
language_sp["light_type_m_1"] = "T.Switch";
language_sp["light_type_m_2"] = "Brio RC+";
language_sp["aux1_type_2"] = "Calentador";
language_sp["aux1_type_3"] = "Bomba centrífuga";
language_sp["aux1_type_4"] = "Tratamiento Orp";
language_sp["froze_mode"] = "Modo antihielo";
language_sp["froze_mode_0"] = "Activado si &lt; O°C";
language_sp["froze_mode_1"] = "Activado si &lt; 1°C";
language_sp["froze_mode_2"] = "Activado si &lt; 2°C";
language_sp["tild_light_state_4"] = "Cronómetro";
language_sp["tild_filt_state_2"] = "Forzado por la iluminación";
language_sp["tild_filt_state_3"] = "Forzado por el auxiliar";
language_sp["tild_filt_state_5"] = "Forzado por el modo antihielo";
language_sp["tild_filt_state_6"] = "Forzado por el calentador";
language_sp["aux_state_1"] = "Ligado a la filtración";
language_sp["aux_state_2"] = "Consigna de temperatura esperada";
language_sp["aux_state_3"] = "Inferior a la temperatura mínima";
language_sp["aux_state_4"] = "Pronto va a arrancar";
language_sp["aux_state_5"] = "Medida de orp incorrecta";
language_sp["device_not_online"] = "Equipo desconectado o apagado";
language_sp["description_ofix"] = "Analizador T°, pH, Orp";
language_sp["description_daisyph"] = "Bomba dosificadora pH";
language_sp["description_daisyox"] = "Bomba dosificadora Orp";
language_sp["description_zelia"] = "Clorador salino";
language_sp["description_zelix"] = "Clorador salino";
language_sp["description_lynx"] = "Pasarela Wifi - Pantalla portátil";
language_sp["description_ziphox"] = "Analizador T°, pH, Orp";
language_sp["description_phileox"] = "Regulador pH";
language_sp["description_oxeox"] = "Regulador Orp";
language_sp["description_tild"] = "Cuadro eléctrico piscina";
language_sp["description_limpidoez"] = "Clorador salino";
language_sp["description_vigipac"] = "Bomba de calor";
language_sp["description_anteam"] = "Cuadro multifunción inteligente";
language_sp["description_wix"] = "Controlador de iluminación X3";
language_sp["no"] = "No";
language_sp["yes"] = "Sí";
language_sp["disabled"] = "Desactivado";
language_sp["enabled"] = "Activado";
language_sp["manual"] = "Manual";
language_sp["repetition"] = "Repetición";
language_sp["operating_hour"] = "Hora de funcionamiento";
language_sp["mod"] = "Modo";
language_sp["duration"] = "Duración";
language_sp["light"] = "Iluminación";
language_sp["everyday"] = "Todos los días";
language_sp["monday"] = "Lunes";
language_sp["tuesday"] = "Martes";
language_sp["wednesday"] = "Miércoles";
language_sp["thursday"] = "Jueves";
language_sp["friday"] = "Viernes";
language_sp["saturday"] = "Sábado";
language_sp["sunday"] = "Domingo";
language_sp["from"] = "De";
language_sp["during"] = "Durante";
language_sp["to"] = "a";
language_sp["sunset_mode"] = "Modo crepúsculo";
language_sp["auxiliary"] = "Auxiliar";
language_sp["electrolysis_mode"] = "Modo electrólisis";
language_sp["chlorine_production_status"] = "Estado producción de cloro";
language_sp["power"] = "Potencia";
language_sp["cell_flow"] = "Flujo célula";
language_sp["cell_water_t"] = "T° agua célula";
language_sp["cell_internal_temperature"] = "T° interna célula";
language_sp["powerful"] = "Potencia";
language_sp["minimum_temperature"] = "T° mínima";
language_sp["electrolysis_current"] = "Corriente el";
language_sp["voltage"] = "Tensión (en V)";
language_sp["today_details"] = "Detalles del día";
language_sp["tooltip_1"] = "Para hacer zoom, pulsa el botón izquierdo de tu ratón, selecciona la zona en cuestión y suelta el botón.";
language_sp["tooltip_2"] = "Puedes hacer zoom horizontal y verticalmente.";
language_sp["tooltip_3"] = "Para deshacer el zoom haz doble clic con el botón izquierdo en cualquier lugar del gráfico.";
language_sp["tooltip_4"] = "Clica sobre un día en particular para ver sus detalles.";
language_sp["connected"] = "Conectado";
language_sp["value_ph"] = "Medida pH";
language_sp["mode_ph"] = "Modo regulación pH";
language_sp["vol_24h_inject"] = "Volumen inyectado 24h";
language_sp["mode_orp"] = "Modo regulación Orp";
language_sp["more_info"] = "Más información";
language_sp["export_historique"] = "Exportar tu historial";
language_sp["export_historique_modal_msg"] = "Selecciona el tipo de historial que deseas exportar";
language_sp["export_historique_year"] = "Elegir el año de exportación";
language_sp["pool_note_title"] = "Nota de la piscina";
language_sp["pool_note_delete"] = "Borrar la nota";
language_sp["pool_note_writer"] = "Última modificación por: writer_name, le :date";
language_sp["society"] = "Empresa";
language_sp["cp"] = "Código Postal";
language_sp["new_password"] = "Nueva contraseña";
language_sp["conf_password"] = "Confirmación contraseña";
language_sp["actual_password"] = "Contraseña actual";
language_sp["password_change_success"] = "Cambio efectuado con éxito";
language_sp["password_change_fail"] = "Contraseña actual incorrecta";
language_sp["change_password"] = "Cambiar la contraseña";
language_sp["users_managed"] = "Usuarios gestionados";
language_sp["add_user"] = "Añadir un usuario";
language_sp["user_list"] = "Lista de usuarios";
language_sp["user_email"] = "Correo del usuario";
language_sp["add_now"] = "Añadir ahora";
language_sp["role"] = "Rol";
language_sp["member_since"] = "Miembro desde";
language_sp["action"] = "Acción";
language_sp["modify_or_delete"] = "Modificar o suprimir";
language_sp["edit_user"] = "Modificar el usuario";
language_sp["delete_user"] = "Borrar el usuario";
language_sp["warning_!"] = "¡Atención!";
language_sp["to_delete_the_user"] = "¿Quiéres realmente borrar el usuario?";
language_sp["from_vigipool"] = "¿De Vigipool?";
language_sp["action_irreversible."] = "La acción es irreversible.";
language_sp["go_back"] = "Volver atrás.";
language_sp["user_update_success"] = "Puesta al día de las informaciones con éxito";
language_sp["user_delete_success"] = "Borrado del usuario con éxito";
language_sp["temperature"] = "Temperatura";
language_sp["ph"] = "pH";
language_sp["orp"] = "Orp";
language_sp["devices"] = "Equipos";
language_sp["status"] = "Estado";
language_sp["interventions_planned"] = "Intervenciones previstas";
language_sp["interventions_done"] = "Intervenciones Terminadas";
language_sp["interventions_graph"] = "Reparto de las intervenciones";
language_sp["date"] = "Fecha";
language_sp["type"] = "Tipo";
language_sp["ownername"] = "Propietario";
language_sp["map"] = "Mapa";
language_sp["create_new_intervention"] = "Crear una nueva intervención";
language_sp["last_intervention"] = "Última intervención";
language_sp["new_intervention"] = "Nueva intervención";
language_sp["technician_in_charge"] = "Técnico a cargo";
language_sp["no_interventions"] = "Ningunas intervenciones";
language_sp["intervention"] = "Intervención";
language_sp["intervention_type"] = "Tipo de intervención";
language_sp["intervention_type_0"] = "Lista de intervenciones";
language_sp["intervention_type_1"] = "Contralavado";
language_sp["intervention_type_2"] = "Entrada en hibernaje";
language_sp["intervention_type_3"] = "Salida de hibernaje";
language_sp["intervention_type_4"] = "Mantenimiento corriente";
language_sp["intervention_type_5"] = "Mantenimiento";
language_sp["intervention_button"] = "Planificar la intervención";
language_sp["intervention_realized"] = "¿La intervención ha sido realizada?";
language_sp["select_pool"] = "Selecciona una piscina";
language_sp["select_date"] = "Fecha de realización";
language_sp["date_intervention"] = "Fecha de la intervención";
language_sp["select_tech"] = "Nombre de la intervención";
language_sp["select_comment"] = "Comentario";
language_sp["comment_placeholder"] = "Describe la intervención realizada en pocas líneas...";
language_sp["edit_intervention_title"] = "Detalles de la intervención";
language_sp["pool"] = "Piscina";
language_sp["detail"] = "Informaciones de la piscina";
language_sp["intervention_report"] = "Informe de la intervención";
language_sp["intervention_cost"] = "Coste de la intervención";
language_sp["delete_intervention"] = "Borrar la intervención";
language_sp["messages"] = "Mensajes";
language_sp["list_event_history"] = "Historial de eventos";
language_sp["data_did_not_change"] = "Los datos de tu equipo no han sido cambiados desde: ";
language_sp["notification_bloc"] = "Alertas";
language_sp["notifcation_ok_two_weeks"] = "Ninguna notificación en las dos últimas semanas";
language_sp["SURCHAUFFE_ELECTROLYSEUR"] = "Temperatura interna del clorador salino demasiado elevada";
language_sp["TEMP_HIGH"] = "Error de medida de Temperatura alta del :deviceType";
language_sp["TEMP_LOW"] = "Error de medida de Temperatura baja del :deviceType, el modo Termorregulado está desactivado";
language_sp["CELLULE_CURRENT_LOW"] = "La célula de electrólisis no produce más - contacta con tu instalador";
language_sp["SALT_MISSING"] = "Producción débil - Dirígete al manual técnico de :deviceType";
language_sp["SALT_TOO_MUCH"] = "Tasa de sal demasiado elevada. Parada del clorador salino";
language_sp["TEMP_MIN"] = "Temperatura mínima del agua alcanzada. Para del clorador salino";
language_sp["TEMP_MIN_SWITCHED_BACK"] = "Temperatura del agua vuelta a la normalidad - Puesta en marcha del clorador salino";
language_sp["PH_NO_VALUE"] = "Tu :deviceType no recibe más las medidas de pH";
language_sp["PH_NO_VALUE_SWITCHED_BACK"] = "Tu :deviceType recibe de nuevo medidas de pH";
language_sp["ORP_NO_VALUE"] = "Tu :deviceType no recibe más medidas de Orp";
language_sp["ORP_ERROR_MESURE_22_SWITCHED_BACK"] = "Tu :deviceType recibe de nuevo medidas de Orp";
language_sp["TUB_ALMOST_EMPTY"] = "Nivel bidón producto :deviceType bajo";
language_sp["TUB_EMPTY"] = "Bidón producto :deviceType vacío - Bomba parada";
language_sp["V_MAX_INJECTED"] = "El volumen Max de producto inyectado ha sido alcanzado";
language_sp["PH_ERROR_MESURE_29"] = "Errores de medidas pH han sido constatados, la inyección está parada, verifica tu instalación y las sondas";
language_sp["PH_ERROR_MESURE_29_SWITCHED_BACK"] = "Las medidas de pH son de nuevo correctas";
language_sp["ORP_ERROR_MESURE_27"] = "Errores de medidas Orp han sido constatados, la inyección está parada, verifica tu instalación y las sondas";
language_sp["ORP_ERROR_MESURE_27_SWITCHED_BACK"] = "Las medidas de Orp son de nuevo correctas";
language_sp["WIFI_CONNECTION_ERROR"] = "Tu equipo :deviceType no está conectado, verifica que está bien alimentado y que tu red wifi es funcional";
language_sp["WIFI_CONNECTION_ERROR_SWITCHED_BACK"] = "Tu equipo :deviceType está bien conectado";
language_sp["ELECTROLYSEUR_OVERLOAD_ERROR"] = "Alimentación clorador salino en sobrecarga";
language_sp["MODE_HORS_GEL"] = "¡Atención, la temperatura del agua es de 0°C, riesgo de hielo! Tu filtración pasa a modo Antihielo nivel 3 (funcionamiento permanente)";
language_sp["RS485_ERROR"] = "Un error de comunicación (RS485) es detectado en tu :deviceType";
language_sp["share_pool_ts"] = "Fecha del fin del compartido";
language_sp["cancel_modal"] = "Anular";
language_sp["delete_modal"] = "Borrar";
language_sp["delete_sharing_pool_msg"] = "Estás apunto de borrar el seguimiento de la piscina ':poolName' ¿Estás seguro de querer efectuar esto?";
language_sp["pac_mode"] = "Modo de producción";
language_sp["pac_speed"] = "Velocidad de funcionamiento";
language_sp["pac_sched"] = "Intervalos de programación";
language_sp["two_weeks"] = "2 semanas";
language_sp["one_month"] = "1 mes";
language_sp["two_month"] = "2 meses";
language_sp["confirm_button"] = "Confirmar";
language_sp["submit_button"] = "Validar";
language_sp["file_button"] = "Elegir un fichero";
language_sp["pool_expire_msg"] = "Este correo te informa que la lista de piscinas aquí debajo está apunto de expirar en menos de dos semanas, piensa en compartir de nuevo ";

// Perso

language_sp["title"] = "Gerencia general de";
language_sp["display"] = "Gestión de visualización e historial";
language_sp["deletion"] = "Búsqueda automática y adición de nuevas características.";

language_sp["settings"] = "Opciones";

language_sp["frost_protection_mode"] = "Modo de protección contra heladas";

language_sp["projector"] = "Proyector";

language_sp["color_rc"] = "Color RC+";
language_sp["monochrome"] = "monocromo";
language_sp["monochrome_dimmable"] = "Monocromo regulable";
language_sp["color_micro_cuts"] = "Microcortes de color";

language_sp["auxiliary"] = "Auxiliar";

language_sp["none"] = "Ninguno";
language_sp["heater"] = "Calefacción";
language_sp["treatment"] = "Tratamiento";
language_sp["booster"] = "Refuerzo";
language_sp["auxiliary"] = "Auxiliar";

language_sp["title"] = "Gestión auxiliar";

language_sp["modes"] = "modas";

language_sp["off"] = "Desactivar";
language_sp["on"] = "Encender";
language_sp["prog"] = "Programación";
language_sp["auto"] = "Automático";

language_sp["program"] = "Programa";
language_sp["day"] = "día";

language_sp["history_title"] = "Histórico";
language_sp["history"] = "ver historia";

language_sp["title"] = "gestión de la luz";

language_sp["state"] = "Estado";

language_sp["off"] = "Apagado";
language_sp["on"] = "Posarse";

language_sp["colors"] = "Colores";

language_sp["warm"] = "Caliente";
language_sp["cold"] = "Frío";
language_sp["blue"] = "Azul";
language_sp["lagoon"] = "laguna";
language_sp["cyan"] = "cian";
language_sp["green"] = "Verde";
language_sp["purple"] = "Púrpura";
language_sp["magenta"] = "Magenta";
language_sp["pink"] = "Rosa";
language_sp["red"] = "Rojo";
language_sp["orange"] = "naranja";

language_sp["favorite"] = "Favoritos";

language_sp["sequences"] = "Secuencias";

language_sp["gradiant"] = "Degradado";
language_sp["rainbow"] = "Arco iris";
language_sp["parade"] = "Desfile";
language_sp["techno"] = "tecnología";
language_sp["horizon"] = "Horizonte";
language_sp["random"] = "Casualidad";
language_sp["magical"] = "Mágico";

language_sp["programming"] = "Programas";
language_sp["program"] = "Programa";

language_sp["bright"] = "Brillo";
language_sp["speed"] = "Velocidad";

language_sp["low"] = "Débil";
language_sp["medium"] = "Promedio";
language_sp["high"] = "Alumno";
language_sp["max"] = "Máximo";

language_sp["slow"] = "Lento";
language_sp["normal"] = "normal";
language_sp["fast"] = "Rápido";

language_sp["history_title"] = "Histórico";
language_sp["history"] = "ver historia";

language_sp["monday"] = "Lunes";
language_sp["tuesday"] = "Martes";
language_sp["wednesday"] = "Miércoles";
language_sp["thursday"] = "JUEVES";
language_sp["friday"] = "Viernes";
language_sp["saturday"] = "Sábado";
language_sp["sunday"] = "Domingo";

language_sp["color"] = "Color";

language_sp["duration"] = "Duración";
language_sp["hours"] = "horas al día";

language_sp["winter_mode"] = "invernada";
language_sp["type_of_product_injected"] = "Tipo de producto inyectado";
language_sp["maximum_volume_injected"] = "Volumen máximo inyectado";
language_sp["product_volume_available"] = "Volumen de producto disponible";
language_sp["setpoint"] = "Consigna";

language_sp["aux_state"] = "estado auxiliar";
language_sp["aux_min_temp"] = "Temperatura mínima auxiliar";

language_sp["init_fail_1"] = "La inicialización no se hizo correctamente.";
language_sp["init_fail_2"] = "Intenta actualizar la página";
language_sp["init_fail_3"] = "Y si no funciona, reinicie el complemento haciendo clic en el siguiente botón:";

language_sp["aux_state"] = "estado auxiliar";
language_sp["aux_min_temp"] = "Temperatura mínima auxiliar";

language_sp["vigipool_modal_all"] = "Opciones";
language_sp["vigipool_modal_light"] = "Encendiendo";
language_sp["vigipool_modal_filtration"] = "Filtración";
language_sp["vigipool_modal_auxiliary"] = "Auxiliar";
language_sp["vigipool_modal_ph"] = "gestión de pH";
language_sp["vigipool_modal_orp"] = "gestión de redox";
language_sp["vigipool_modal_light_m"] = "Encendiendo";
language_sp["tild_modal_filt_m"] = "Filtración";
language_sp["vigipool_modal_auxiliary_1"] = "Auxiliar 1";
language_sp["vigipool_modal_auxiliary_2"] = "Auxiliar 2";
language_sp["vigipool_modal_ely"] = "Electrólisis";

language_sp["mode"] = "Moda";
language_sp["daily_production_duration"] = "Tiempo de producción diario";
language_sp["programmed"] = "Programa";
language_sp["regulated"] = "Regulado";
language_sp["shock"] = "Choque";

language_sp["instant_chlorine_prod"] = "Producto de cloro instantáneo";
language_sp["min_temperature"] = "Temperatura mínima";
language_sp["chlorine_prod"] = "producción de cloro";
language_sp["amperage"] = "Amperaje";
language_sp["internal_temperature"] = "Temperatura Interna";

language_sp["very_soft"] = "Muy dulce";
language_sp["soft"] = "Amable";
language_sp["slightly_soft"] = "bastante dulce";
language_sp["slightly_hard"] = "bastante duro";
language_sp["hard"] = "Duro";
language_sp["very_hard"] = "Muy duro";

language_sp["window_size_error"] = "La ventana del complemento de Vigipool es demasiado pequeña, amplíela usando el ícono de lápiz en la parte superior derecha.";
language_sp["no_mqtt_data"] = "No se pudieron recuperar datos MQTT";

language_sp["no_parameters"] = "Este dispositivo no tiene parámetros";

language_sp["warning_power"] = "Atención, esta potencia puede reducir la vida útil de la celda de electrólisis y no debe utilizarse de forma permanente.";

language_sp["water"] = "Agua";

language_sp["ph_regulation"] = "Regulación del pH";
language_sp["orp_regulation"] = "regulación redox";

language_sp["injection_in_progress"] = "Inyección en curso";

language_sp["volume_injected_in_24h"] = "Volumen inyectado en 24 horas";

language_sp["chlorine_prod"] = "producción Cloro";

language_sp["stopped"] = "Interrumpido";

language_sp["color_picker"] = "Selector de color";
language_sp["white"] = "Blanco, Blanca";

language_sp["saved_colors"] = "Colores guardados";

language_sp["rainbow"] = "Arco iris";
language_sp["fun"] = "Divertido";
language_sp["ocean"] = "Océano";
language_sp["flamme"] = "Fuego";
language_sp["parade"] = "Desfile";
language_sp["elegant"] = "Elegante";
language_sp["horizon"] = "Horizonte";
language_sp["psyche"] = "Psique";

language_sp["vigipool_modal_x3_state"] = "Iluminación X3";
language_sp["vigipool_modal_x3_state_prog_1"] = "Programa de iluminación X3 1 Actualizar";
language_sp["vigipool_modal_x3_state_prog_2"] = "Actualización del programa de iluminación X3 2";

language_sp["scheduling"] = "Planificación";

language_sp["save"] = "Ahorrar";

language_sp["select_the_start_time_and_duration_of_the_program"] = "Seleccione la hora de inicio y la duración del programa";
language_sp["schedule"] = "Programa";
language_sp["at"] = "EN";
language_sp["during"] = "durante";

language_sp["add"] = "Agregar";
language_sp["back"] = "Regresa";
language_sp["thermoregulated_mode"] = "Modo termorregulado";

language_sp["see_advanced_options"] = "Ver opciones avanzadas";

language_sp["enslaved_to_filtration"] = "Sujeto a filtración";

language_sp["force_filtration_during_aux"] = "Filtración forzada";

language_sp["CGUWebURL"] = "https://eu.ccei-pool.com/es/content/3-politica-de-confidencialidad";
language_sp["FAQWebURL"] = "https://eu.ccei-pool.com/en/module/faqs/display";
language_sp["account_not_verified_btn_resend_email"] = "Reenviar el email";
language_sp["alert_action_impossible_no_internet"] = "Imposible efectuar esta acción por el momento, verifique la conexión internet de tu teléfono y vuelve a intentarlo.";
language_sp["alert_button_connect_aws"] = "Conectarse a distancia";
language_sp["alert_button_create_contact"] = "Rellenar mis datos";
language_sp["alert_button_create_pool"] = "Rellenar las informaciones de mi piscina";
language_sp["alert_button_stay_bluetooth"] = "Continuar en bluetooth";
language_sp["alert_choc_from_off"] = "Es imposible activar el modo Choque desde del modo Off porque una vez que la duración del tratamiento de choque acaba, el aparato vuelve enseguida al modo de funcionamiento precedente.\n\nPara poder activar el modo choque, debe antes escoger otro modo de funcionamiento.";
language_sp["alert_configure_aux_description"] = "Debe escoger el tipo de auxiliar conectado a su tild VP.\n\nPodrá siempre actualizarlo desde la pantalla de configuración de sus aparatos.";
language_sp["alert_configure_aux_title"] = "Configuración necesaria";
language_sp["alert_contact_deleted"] = "Sus datos han sido borrados.";
language_sp["alert_contact_deleted_failed"] = "Sus datos no han podido ser borrados.\n\nVerifique su conexión a internet o vuelva a intentarlo más tarde.";
language_sp["alert_contact_saved"] = "Sus datos han sido guardados.";
language_sp["alert_contact_saved_failed"] = "Sus datos no han podido ser guardados.\n\nVerifique su conexión a internet o vuelva a intentarlo más tarde.";
language_sp["alert_contact_warning_delete"] = "Borrar las informaciones de contacto borrará también vuestros datos de la piscina.";
language_sp["alert_description_geoloc_crep_needed"] = "Ha rechazado la geolocalización, pero ésta es necesaria para utilizar el modo crepúsculo de la programación de la iluminación, y también para saber el tiempo.\n\n¿Desea abrir la configuración de la aplicación para poder modificar este parámetro?";
language_sp["alert_dialog_aws_timeout_error"] = "Su equipo parece que no está conectado a internet.";
language_sp["alert_dialog_calibration_in_progress_orp_value_message"] = "Calibración en curso, ORP actual: %1$s";
language_sp["alert_dialog_calibration_in_progress_ph_value_message"] = "Calibración en curso, pH actual: %1$s";
language_sp["alert_dialog_calibration_in_progress_title"] = "Espere";
language_sp["alert_dialog_config_change_device_added_message"] = "Parece que un aparato acaba de ser añadido a su configuración.\n\nConéctese de nuevo.";
language_sp["alert_dialog_config_change_device_removed_message"] = "Parece que un aparato acaba de ser retirado de su configuración.\n\nConéctese de nuevo.";
language_sp["alert_dialog_delete_device_message"] = "¿Está seguro de querer borrar el equipo \"%1$s\" de sus equipos Vigipool?";
language_sp["alert_dialog_delete_device_title"] = "Borrar un equipo";
language_sp["alert_dialog_factory_reset_message"] = "¿Está seguro de querer proceder al reseteo por defecto?";
language_sp["alert_dialog_lost_ble_connection_message"] = "La conexión Bluetooth con el equipo ha sido perdida.";
language_sp["alert_dialog_message_bluetooth_error"] = "Se ha producido un error bluetooth, gracias de reintentarlo.";
language_sp["alert_dialog_message_loading_timeout"] = "Tiempo de carga agotado, por favor inténtelo de nuevo.";
language_sp["alert_dialog_message_remote_error"] = "Se ha producido un error con la conexión a distancia, por favor inténtelo de nuevo.";
language_sp["alert_dialog_no_internet_message"] = "Verifique el estado de su conexión de internet.";
language_sp["alert_dialog_no_internet_title"] = "Error de red";
language_sp["alert_dialog_orp_calibration_in_progress_message"] = "Calibración ORP en curso.";
language_sp["alert_dialog_ph_calibration_in_progress_message"] = "Calibración pH en curso.";
language_sp["alert_dialog_title_bluetooth_error"] = "Error Bluetooth";
language_sp["alert_dialog_title_loading_timeout"] = "Cargando";
language_sp["alert_dialog_token_expired_message"] = "Sesión terminada.\n\nConéctese de nuevo.";
language_sp["alert_edit_last_backwash_error"] = "Un problema ha ocurrido durante el registro de la fecha del último contralavado, verifica la conexión a internet de tu teléfono y vuelve a registrar la fecha del último contralavado manualmente a través de la pantalla de configuración del contralavado.";
language_sp["alert_electrolyse_power"] = "Atención, esta potencia puede reducir la duración de vida de la célula de electrólisis y no debe ser utilizada de forma permanente.";
language_sp["alert_empty_shadow_description"] = "Imposible recuperar las informaciones de su equipo.\n\nAsegúrese de verificar que la cobertura de su red es suficiente y que su equipo está bien conectado a internet.\nSi lo necesita puede configurar la conexión de su equipo conectándose en Bluetooth.\n\nSi el problema persiste, intente reiniciar el equipo.";
language_sp["alert_factory_reset_description"] = "¿Desea hacer un reseteo por defecto de su equipo?\nImportante: Este cambio es irreversible.";
language_sp["alert_factory_reset_title"] = "Reseteo";
language_sp["alert_incomplete_shadow_description"] = "Imposible recuperar las informaciones de su equipo.\n\nAsegúrese de verificar que la cobertura de su red es suficiente y que su equipo está bien conectado a internet.\nSi lo necesita puede configurar la conexión de su equipo conectándose en Bluetooth.\n\nSi el problema persiste, intente reiniciar el equipo a través del botón de aquí debajo.";
language_sp["alert_navigate_to_configure_wifi_description"] = "Ahora puede configurar la conexión a internet de su instalación para poder controlar a distancia su piscina.";
language_sp["alert_navigate_to_sign_in_vigipool_description"] = "Ahora puede crear o conectarse a su cuenta Vigipool para controlar a distancia su piscina.";
language_sp["alert_pool_deleted"] = "Las informaciones de su piscina han sido borradas.";
language_sp["alert_pool_deleted_failed"] = "Las informaciones de su piscina no han sido borradas.\n\nVerifique su conexión internet o bien inténtelo más tarde.";
language_sp["alert_pool_saved"] = "Las informaciones de su piscina han sido guardadas.";
language_sp["alert_pool_saved_failed"] = "Las informaciones de su piscina no han podido ser guardadas.\n\nVerifique su conexión internet o bien inténtelo más tarde.";
language_sp["alert_pool_warning_delete"] = "Borrar las informaciones de su piscina borrará también las informaciones de los contactos registrados, así como los datos compartidos de la piscina si hubiera.";
language_sp["alert_power_electrolyse_choice_prog"] = "Programado";
language_sp["alert_power_electrolyse_description"] = "¿Qué modo desea para su clorador salino?";
language_sp["alert_reboot_description"] = "¿Está seguro de querer reiniciar su equipo?";
language_sp["alert_reboot_title"] = "Reiniciar";
language_sp["alert_reconnect_in_ble_for_crep"] = "Su aparato necesita conocer su geolocalización para utilizar el modo crepuscular de la programación de la iluminación.\n\nSi desea disfrutar de esta opción, vuelva a conectarse en bluetooth para compartir su posición.";
language_sp["alert_reconnect_in_ble_for_music_mode"] = "Modo música no disponible en conexión \"a distancia\".\n\nPara poder utilizar esta funcionalidad, es necesario conectarse en modo Bluetooth al equipo.\n\nPara hacerlo, hay que abrir el menú lateral, clicar en \"Desconectarse\" y conectarse a su equipo desde la pestaña Bluetooth.";
language_sp["alert_reconnecting_cancel"] = "Abandonar la reconexión";
language_sp["alert_reconnecting_description"] = "Intento de reconexión…";
language_sp["alert_reconnecting_title"] = "Conexión perdida";
language_sp["alert_reg_warning_description"] = "Ningún aparato de medida ORP ha sido encontrado.\nSi ninguna medida es detecta en los próximos 15 minutos, el clorador salino pasará a modo automático (programado + termorregulación).";
language_sp["alert_regulation_available_volume_edit_mode_on"] = "La cantidad de producto disponible está en modo edición, ¿desea guardar los cambios?";
language_sp["alert_schedule_modified_but_not_saved"] = "Ha editado la programación pero no ha guardado las modificaciones";
language_sp["alert_schedule_modified_but_not_saved_action_do_not_save"] = "No conservarlas";
language_sp["alert_schedule_modified_but_not_saved_action_save"] = "Guardar las modificaciones";
language_sp["alert_service_modified"] = "Una modificación de su red de equipos (conexión de un nuevo equipo por ejemplo) ha sido detectada. Vamos a proceder a una reconexión para que la aplicación tenga en cuenta los cambios necesarios.";
language_sp["alert_shared_pool_deleted"] = "El uso compartido de su piscina ha sido eliminado.";
language_sp["alert_shared_pool_deleted_failed"] = "El uso compartido de su piscina no ha podido ser eliminado.\n\nVerifique su conexión a internet";
language_sp["alert_shared_pool_edited"] = "La duración del uso compartido de su piscina ha sido puesta al día.";
language_sp["alert_shared_pool_edited_failed"] = "La modificación de la duración del uso compartido de su piscina no ha podido completarse.\n\nVerifique su conexión a internet o bien inténtelo más tarde.";
language_sp["alert_shared_pool_email_already_exist"] = "Usted ya comparte su piscina con este profesional (dirección de e-mail idéntica).\n\nIntroduzca una dirección e-mail diferente o edite la fecha en la que se acaba el uso compartido existente en la base de datos de esta pantalla.";
language_sp["alert_shared_pool_need_contact"] = "Antes de compartir su piscina, debe obligatoriamente darnos sus datos.";
language_sp["alert_shared_pool_need_pool"] = "Para compartir su piscina, es necesario identificar sus características.";
language_sp["alert_shared_pool_saved"] = "Vuestra piscina ha sido compartida con éxito.";
language_sp["alert_shared_pool_saved_failed"] = "El uso compartido de su piscina ha fallado.\n\nVerifique su conexión a internet o inténtelo más tarde.";
language_sp["alert_warning_delete_vigipool_device"] = "Una vez este aparato sea borrado de esta cuenta, estará obligado a ligarlo de nuevo en bluetooth (vía la aplicación) si desea añadirlo de nuevo.\n\n¿Está seguro de querer borrarlo?";
language_sp["alert_warning_reset_sensor_date"] = "Está usted a punto de reiniciar la fecha del último cambio de su sonda. Este cambio no es reversible, ¿está seguro de querer continuar?";
language_sp["alert_warning_winter_mode"] = "El modo Invernaje va a desactivar la inyección de su aparato.";
language_sp["alerts"] = "Alertas";
language_sp["amplify_device_current"] = "(Este aparato)";
language_sp["amplify_error_add_device"] = "Error al añadir el aparato";
language_sp["amplify_error_delete_device"] = "Error al borrar el aparato";
language_sp["amplify_error_sign_out"] = "Error en la desconexión";
language_sp["amplify_linked_devices"] = "Aparatos ligados a Vigipool";
language_sp["android_output_nb_format"] = "Salida %1$d";
language_sp["android_zone_nb_format"] = "Zona %1$d";
language_sp["app_restart_dialog_message"] = "Puede a partir de ahora echar un vistazo a su piscina desde donde esté utilizando el modo de conexión \"A distancia\"";
language_sp["ask_for_authorization"] = "Demanda de autorización";
language_sp["ask_for_authorization_description"] = "Necesitamos la autorización de Spotify para poder sincronizarnos con la música.";
language_sp["ask_user_configure_lynx_wifi"] = "Su instalación está conectada al Lynx pero no tiene internet. Para conectar su instalación al Wifi, configúrelo sobre Lynx.";
language_sp["aux2name"] = "Auxiliar 2";
language_sp["aux_forced_off_no_filtration"] = "El auxiliar está en pausa porque solo funciona con la filtración en marcha. El auxiliar arrancará cuando la filtración esté en marcha.";
language_sp["aux_forced_off_no_filtration_title"] = "En espera de la filtración";
language_sp["aux_forced_off_orp_measurement_error"] = "El auxiliar está en pausa porque el valor de la medida de ORP es inferior a 400mV; o porque el aparato de medida está desconectado.";
language_sp["aux_forced_off_orp_measurement_error_title"] = "Error de medida ORP";
language_sp["aux_forced_off_orperror_description"] = "Hay un problema de medida ORP, debe corregir este problema o desactivar la consigna ORP en los parámetros del auxiliar para poder arrancar su clorador salino.";
language_sp["aux_forced_off_orperror_title"] = "Medida de ORP no válida";
language_sp["aux_forced_off_orpreached"] = "El auxiliar está en pausa porque la consigna ORP se ha alcanzado.";
language_sp["aux_forced_off_orpreached_title"] = "Consigna ORP conseguida";
language_sp["aux_forced_off_starter_description"] = "La filtración acaba de arrancar y el auxiliar arrancará automáticamente en unos minutos.";
language_sp["aux_forced_off_starter_title"] = "En espera del arranque de la filtración";
language_sp["aux_forced_off_temp_too_high"] = "El auxiliar está en pausa porque la consigna de temperatura se ha alcanzado";
language_sp["aux_forced_off_temp_too_high_title"] = "Consigna temp. conseguida";
language_sp["aux_forced_off_temp_too_low"] = "El auxiliar está en pausa porque la consigna de temperatura mínima no se ha alcanzado.";
language_sp["aux_forced_off_temp_too_low_title"] = "Temp. min. no alcanzada";
language_sp["aux_min_temp_picker_dialog_title"] = "Elija la temperatura mínima";
language_sp["aux_paused"] = "%1$s en pausa";
language_sp["aux_starting"] = "Arrancando";
language_sp["aux_type_booster"] = "Bomba de presión";
language_sp["aux_type_heater"] = "Calentador";
language_sp["aux_type_none"] = "Ninguno";
language_sp["auxiliary"] = "Auxiliar";
language_sp["auxiliary_mode"] = "Modo auxiliar";
language_sp["auxiliary_overlay_aux_min_temp"] = "Temperatura mínima de arranque del tratamiento";
language_sp["auxiliary_paused"] = "Auxiliar en pausa";
language_sp["auxiliary_settings_dialog_filtration_dependant_tooltip"] = "Si el auxiliar está ligado a la filtración, sólo podrá arrancar si la filtración está en marcha.";
language_sp["auxiliary_treatment_orp_value"] = "Valor de ORP medido: %1$d mV";
language_sp["auxiliary_type_deactivated"] = "Desactivado";
language_sp["auxiliary_type_orp_treatment"] = "Tratamiento ORP";
language_sp["auxiliary_type_undefined"] = "Desconocido";
language_sp["backwash"] = "Contralavado";
language_sp["backwash_close_sewer_valve"] = "Después cierra la válvula de drenaje";
language_sp["backwash_completed"] = "Contralavado terminado";
language_sp["backwash_help"] = "Un contralavado de forma regular de su flitración es recomendable para garantizar un agua límpia.\nVigipool puede guiarle en esta operación.\nAtención";
language_sp["backwash_impossible"] = "Contralavado no posible";
language_sp["backwash_impossible_filt_prohibited_message"] = "Asegúrese de quitar la prohibición de la bomba de filtración (directamente sobre el botón interruptor de su cuadro) antes de arrancar un contralavado";
language_sp["backwash_impossible_forced_march_message"] = "Asegúrese de quitar la marcha forzada de su filtración (directamente sobre el botón interruptor de su cuadro) antes de arrancar un contralavado";
language_sp["backwash_in_progress"] = "Contralavado en curso";
language_sp["backwash_in_progress_description"] = "Parece que un contralavado está en curso.\n\nSi piensa que se trata de un error y desea reconfigurar el equipo en su estado de funcionamiento normal, clicke sobre \"Parar el contralavado\".\nSino, asegúrese de quitar la aplicación y relanzarla cuando la operación de contralavado haya acabado.";
language_sp["backwash_mode_welcome"] = "Bienvenido al modo contralavado";
language_sp["backwash_mode_welcome_description"] = "Este modo te permite limpiar eficazmente tu filtro\n\nAtención este modo necesita estar físicamente en tu local técnico para una duración que va de 5 a 15 min";
language_sp["backwash_need_vigipool_account"] = "Estar conectado a una cuenta Vigipool es necesario para poder disfrutar del contralavado guiado y de la memorización del contralavado.\n\nPuedes crear una cuenta Vigipool o conectarte desde el menú principal de la aplicación.";
language_sp["backwash_next_water_clear"] = "Mi agua está clara, siguiente";
language_sp["backwash_open_sewer_and_turn_valve_to_wash"] = "Abre la válvula de drenaje, y gire la válvula en la posición LAVADO";
language_sp["backwash_reminder"] = "Recuerdo de contralavado";
language_sp["backwash_rinse_completed"] = "Enjuague terminado";
language_sp["backwash_rinse_in_progress"] = "El enjuague está en curso, espere";
language_sp["backwash_valve_turn_to_filtration"] = "Vuelva a colocar la válvula en FILTRACIÓN";
language_sp["backwash_valve_turn_to_rinse"] = "Coloque la válvula en ENJUAGUE";
language_sp["backwash_wash_completed"] = "Lavado terminado";
language_sp["backwash_wash_in_progress"] = "El lavado está en curso, espere";
language_sp["banner_music_mode_need_one_zone_title"] = "El modo música necesita tener al menos una zona seleccionada para funcionar";
language_sp["bar"] = "bar";
language_sp["ble_needed"] = "Bluetooth necesario";
language_sp["ble_permission_needed"] = "Permiso bluetooth necesario";
language_sp["blue"] = "Azul";
language_sp["bluetooth_disabled_error_message"] = "El Bluetooth no está disponible. Verifique que el Bluetooth está activado en su teléfono, y que la aplicación %1$s tiene autorización de utilizar el Bluetooth (modificable en la aplicación Ajustes del teléfono).";
language_sp["bluetooth_not_available_error_message"] = "La funcionalidad Bluetooth no está disponible sobre su aparato Android.";
language_sp["bluetooth_permission_rationale_message"] = "El permiso Bluetooth es requerido para conectarse en Bluetooth a su equipo.";
language_sp["bluetooth_permission_rationale_title"] = "Autorizar el Bluetooth";
language_sp["bonding_cancel"] = "Anular el equipo";
language_sp["bonding_check_title"] = "Recuperación de datos";
language_sp["bonding_error"] = "Error de sincronización";
language_sp["bonding_help_rssi"] = "Acerque su smartphone a su %1$s para sincronizarlo.";
language_sp["bonding_help_rssi_and_btn"] = "Acerque su smartphone o pulse una vez sobre el botón de su %1$s para sincronizarlo.";
language_sp["bonding_location_unavailable"] = "La localización actual no ha podido ser recuperada para completar la sincronización.";
language_sp["bonding_message"] = "Pulse una vez en el botón de su %1$s (en la imagen superior) para sincronizarlo a su móvil";
language_sp["bonding_required_title"] = "Sincronización necesaria";
language_sp["bonding_timeout"] = "Tiempo de espera superado para la sincronización.";
language_sp["brightness"] = "Luminosidad";
language_sp["button_cancel_calibration"] = "Anular la calibración";
language_sp["button_cancel_connection"] = "Anular la conexión";
language_sp["button_cancel_scan"] = "Anular la búsqueda";
language_sp["button_update_app_store"] = "Actualizar en la AppStore";
language_sp["bypass"] = "Bypass";
language_sp["calibrate"] = "Calibrar";
language_sp["calibration_adjustment_information"] = "El valor de %1$s será ajustado después de la próxima medición, en unos diez segundos si la filtración está en marcha, o bien en el próximo arranque de la filtración.";
language_sp["calibration_choose_type_title"] = "Tipo de calibración";
language_sp["calibration_debit"] = "Calibración del caudal";
language_sp["calibration_debit_flow_warning"] = "La calibración del caudal tiene que ser efectuada cuando la filtración esté en marcha.";
language_sp["calibration_debit_warning"] = "El caudal será ajustado en la próxima medición, en unos diez segundos si la filtración está en marcha, o bien en el próximo arranque de la filtración.";
language_sp["calibration_failed"] = "La calibración no ha podido realizarse, verifique su sonda";
language_sp["calibration_first_point_title"] = "Calibración 1er punto";
language_sp["calibration_in_progress"] = "Calibración en curso…";
language_sp["calibration_information"] = "La duración de la calibración está comprendida entre 30 segundos y 3 minutos, quédese cerca del aparato y deje la aplicación abierta durante la operación";
language_sp["calibration_manual"] = "Ajuste manual";
language_sp["calibration_one_point"] = "Calibración 1 punto";
language_sp["calibration_orp"] = "Calibración ORP";
language_sp["calibration_orpimpossible"] = "No tenemos actualmente medida de ORP, encienda la filtración para poder obtener una medida válida y poder ajustarla.";
language_sp["calibration_orpsensor"] = "Calibración sonda ORP";
language_sp["calibration_orpwarning"] = "El ORP será ajustado en la próxima medición, en unos diez segundos si la filtración está en marcha o bien en el próximo arranque de la filtración.";
language_sp["calibration_ph"] = "Calibración pH";
language_sp["calibration_phimpossible"] = "No tenemos actualmente medida de pH, encienda la filtración para poder obtener una medida válida y poder ajustarla.";
language_sp["calibration_phsensor"] = "Calibración sonda pH";
language_sp["calibration_phwarning"] = "El pH será ajustado en la próxima medición, en unos diez segundos si la filtración está en marcha o bien en el próximo arranque de la filtración.";
language_sp["calibration_pressure"] = "Calibración presión";
language_sp["calibration_pressure_warning"] = "La presión será ajustada en la próxima medición, en unos diez segundos si la filtración está en marcha o bien en el próximo arranque de la filtración.";
language_sp["calibration_second_point_title"] = "Calibración 2º punto";
language_sp["calibration_start"] = "Comenzar la calibración";
language_sp["calibration_start_second_point"] = "Calibrar el 2º punto";
language_sp["calibration_success"] = "Calibración terminada con éxito";
language_sp["calibration_temp"] = "Calibración temperatura";
language_sp["calibration_temp_impossible"] = "No tenemos actualmente medida de temperatura, encienda la filtración para poder obtener una medida y poder ajustarla.";
language_sp["calibration_temp_warning"] = "La temperatura será ajustada en la próxima medición, en unos diez segundos si la filtración está en marcha o bien en el próximo arranque de la filtración.";
language_sp["calibration_two_points"] = "Calibración 2 puntos";
language_sp["cgu_accept_warning"] = "Debes marcar la casilla para aceptar las CGU.";
language_sp["cgu_bt_accept"] = "Aceptar";
language_sp["cgu_bt_accept_label"] = "He leído y aceptado las condiciones generales de utilización";
language_sp["cgu_read_warning"] = "Debe leer las CGU antes de aceptarlas.";
language_sp["channels"] = "Canales";
language_sp["color"] = "Color";
language_sp["color_eyedropper_title"] = "Selección de colores";
language_sp["come_closer_to_your_device"] = "Acérquese a su equipo";
language_sp["common_accept_cgu"] = "Acepto las condiciones de utilización";
language_sp["common_address"] = "Dirección";
language_sp["common_bluetooth"] = "Bluetooth";
language_sp["common_calibration"] = "Calibración";
language_sp["common_cancel"] = "Anular";
language_sp["common_city"] = "Ciudad";
language_sp["common_closed"] = "Cerrado";
language_sp["common_congratulations"] = "¡Felicidades!";
language_sp["common_connect"] = "Conectarse";
language_sp["common_connecting"] = "Conexión en curso";
language_sp["common_country"] = "País";
language_sp["common_cover"] = "Cubierta";
language_sp["common_danger"] = "Peligro";
language_sp["common_debit"] = "Caudal";
language_sp["common_delete_anyway"] = "Borrar igualmente";
language_sp["common_disable"] = "Desactivar";
language_sp["common_dismiss"] = "Cerrar";
language_sp["common_electrolyse"] = "Electrólisis";
language_sp["common_email"] = "Dirección e-mail";
language_sp["common_enable"] = "Activar";
language_sp["common_error"] = "Error";
language_sp["common_filtration_type"] = "Filtración";
language_sp["common_gateway"] = "Punto de acceso";
language_sp["common_ignore"] = "Ignorar";
language_sp["common_information"] = "Información";
language_sp["common_light"] = "Iluminación";
language_sp["common_loading"] = "Cargando…";
language_sp["common_min_temp"] = "Temp. Min.";
language_sp["common_mode"] = "Modo";
language_sp["common_mode_choc"] = "Choque";
language_sp["common_mode_prog"] = "Programado";
language_sp["common_new_password"] = "Contraseña nueva";
language_sp["common_no"] = "No";
language_sp["common_off"] = "Off";
language_sp["common_ok"] = "OK";
language_sp["common_on"] = "On";
language_sp["common_open"] = "Abierto";
language_sp["common_orp"] = "ORP";
language_sp["common_owner_name"] = "Nombre del propietario";
language_sp["common_password"] = "Contraseña";
language_sp["common_password_confirmation"] = "Confirmar contraseña";
language_sp["common_ph"] = "pH";
language_sp["common_phone_number"] = "Teléfono";
language_sp["common_pool_name"] = "Nombre de la piscina";
language_sp["common_pool_type"] = "Tipo";
language_sp["common_post_code"] = "Código postal";
language_sp["common_pressure"] = "Presión";
language_sp["common_remotely"] = "A distancia";
language_sp["common_reset"] = "Reiniciar";
language_sp["common_retry"] = "Reintentar";
language_sp["common_save"] = "Registrar";
language_sp["common_scheduling"] = "Programación";
language_sp["common_set_point"] = "Consigna";
language_sp["common_sign_in"] = "Conectarse";
language_sp["common_sign_up"] = "Crear una cuenta";
language_sp["common_stop"] = "Detenido";
language_sp["common_structure"] = "Estructura";
language_sp["common_success"] = "Éxito";
language_sp["common_temperature"] = "Temperatura";
language_sp["common_temperature_unit"] = "°C";
language_sp["common_temperature_unit_us"] = "°F";
language_sp["common_thermoregulated"] = "Termorregulado";
language_sp["common_thermoregulation_mode"] = "Modo termorregulado";
language_sp["common_timer"] = "Cronómetro";
language_sp["common_unknown_device"] = "Equipo desconocido";
language_sp["common_validate"] = "Validar";
language_sp["common_volume_eu"] = "Volumen (m3)";
language_sp["common_volume_na"] = "Volumen (US gal)";
language_sp["common_warning"] = "Atención";
language_sp["common_water"] = "Agua";
language_sp["common_wifi_state"] = "Estado de conexión:";
language_sp["common_working"] = "En marcha";
language_sp["common_yes"] = "Sí";
language_sp["configure_dmxchannels"] = "Ajustes canales DMX";
language_sp["configure_price_kwh"] = "Configurar el precio del kWh";
language_sp["configure_unit_temperature_help"] = "La unidad de temperatura (Celsius o Fahrenheit) utilizada en la aplicación proviene de los ajustes de su teléfono y no dependerá de esta elección.";
language_sp["configure_wifi_connection"] = "Configurar la conexión Wifi";
language_sp["configure_zones"] = "Configuración de zonas";
language_sp["confirm"] = "Confirmación";
language_sp["confirm_force_filtration_alert"] = "La filtración debe estar en marcha para que el auxiliar pueda funcionar.\n\nSi quita esta opción, no podrá forzar el encendido de la filtración (si es necesario) y no podrá encenderse cuando la filtración no esté en marcha.";
language_sp["confirm_force_filtration_pac_alert"] = "La filtración debe estar en marcha para que la bomba de calor pueda funcionar.\n\nSi quita esta opción, no podrá forzar el encendido de la filtración (si es necesario) y no podrá encenderse cuando la filtración no esté en marcha.";
language_sp["confirm_password"] = "Confirmación";
language_sp["connect"] = "Conexión";
language_sp["connect_setup_to_wifi"] = "¿Conecta el local al Wifi?";
language_sp["connected"] = "Conectado";
language_sp["connected_to_wifi"] = "Conectado al Wifi";
language_sp["connecting_to_phileo"] = "Conexión a %1$s";
language_sp["connection_destination_internet"] = "a Wifi";
language_sp["connection_log_out"] = "Desconectarse";
language_sp["connection_looking_for_device_title"] = "Búsqueda de equipos…";
language_sp["connection_to_internet_none"] = "No hay conexión a internet";
language_sp["consumption"] = "Consumación";
language_sp["contact_informations"] = "Mis datos";
language_sp["contact_informations_needed"] = "Informaciones de contacto necesarias";
language_sp["context_text_view_configure_your_wifi_connection"] = "Configure su conexión Wifi";
language_sp["controlled_dmx"] = "Controlado con DMX";
language_sp["controlled_micro"] = "Controlado por micrófono";
language_sp["cover_detected_details"] = "Esto puede afectar la duración de funcionamiento de ciertos aparatos.";
language_sp["cover_detected_title"] = "Cubierta detectada";
language_sp["cs4z_reconfigure_output"] = "Reconfigurar las salidas";
language_sp["cs4z_rename_zone"] = "Renombrar la zona";
language_sp["cs4z_rename_zone_instructions"] = "Introducir el nuevo nombre de la zona.";
language_sp["cs4z_rename_zone_placeholder"] = "Nuevo nombre (ex: Piscina, Spa...)";
language_sp["cs4z_settings"] = "Parametraje de zonas";
language_sp["cs4z_use_other_zones"] = "Controlar simultáneamente:";
language_sp["cs4z_zone_name"] = "Nombre de la zona:";
language_sp["date_hour_ampmformatter"] = "h:mm a";
language_sp["date_hour_formatter"] = "H:mm";
language_sp["day"] = "día";
language_sp["day_caps"] = "Día";
language_sp["days"] = "dias";
language_sp["debit_current"] = "Caudal actual";
language_sp["debit_desired"] = "Caudal rectificado";
language_sp["debit_history"] = "Historial del caudal";
language_sp["delete"] = "Borrar";
language_sp["delete_all_registered_colors_message"] = "¿Está seguro de querer borrar los colores registrados?";
language_sp["delete_all_registered_colors_title"] = "Borrado de colores";
language_sp["delete_contact_informations"] = "Borrar las informaciones de contacto";
language_sp["delete_pool"] = "Borrar mis informaciones";
language_sp["demo_mode"] = "Modo Demo";
language_sp["device_name_phileo"] = "Phileo";
language_sp["device_not_connected"] = "Su equipo %1$s no está conectado";
language_sp["device_shadow_error"] = "Imposible de conectarse a %1$s.\n\nRazón: ningún objeto conectado encontrado.";
language_sp["devices_remote_dialog_device_not_attached"] = "No somos capaces de vincular este equipo a su cuenta Vigipool.";
language_sp["devices_remote_dialog_device_not_found"] = "No somos capaces de encontrar este aparato en su cuenta Vigipool.";
language_sp["devices_remote_dialog_invalid_things"] = "No somos capaces de recuperar las informaciones ligadas a su cuenta Vigipool.";
language_sp["devices_remote_dialog_login_failed_message"] = "Dirección e-mail/contraseña incorrectas";
language_sp["devices_remote_dialog_login_failed_network_error_message"] = "Verifique que está conectado a internet.";
language_sp["devices_remote_dialog_login_failed_network_error_title"] = "Error de red";
language_sp["devices_remote_dialog_no_devices_found"] = "No somos capaces de recuperar los equipos ligados a su cuenta Vigipool.";
language_sp["devices_remote_dialog_sign_in_not_complete"] = "No somos capaces de conectarnos actualmente.";
language_sp["devices_remote_dialog_user_not_confirmed_message"] = "Su cuenta no ha sido todavía verificada.\n\nConsulte su bandeja de entrada para clickar sobre el enlace de confirmación.";
language_sp["devices_remote_error_email_required"] = "La dirección e-mail es requerida";
language_sp["devices_remote_error_password_required"] = "La contraseña es requerida";
language_sp["devices_selection_select_a_device_message"] = "Seleccione un equipo";
language_sp["devices_selection_text"] = "Hemos encontrado varios equipos ligados a su cuenta, escoge aquel que quiera conectar";
language_sp["devices_tab_bluetooth_bluetooth_throttle_error_message"] = "Gracias por intentar otra búsqueda Bluetooth en unos instantes.";
language_sp["devices_tab_bluetooth_no_device_found_message"] = "Ningún equipo PhileoX ha sido encontrado cerca. Verifique que esté bien encendido y que esté cerca del equipo.";
language_sp["devices_tab_bluetooth_start_scan"] = "Arrancar la búsqueda";
language_sp["devices_tab_bluetooth_stop_scan"] = "Parar la búsqueda";
language_sp["devices_title"] = "Equipos";
language_sp["dialog_missing_timezone_message"] = "Su equipo %1$s no tiene huso horario, y es indispensable para poder programarlo.\n\nReconecte el Bluetooth para poner el huso horario al día automáticamente.";
language_sp["direct"] = "Directo";
language_sp["disabled"] = "Desactivado";
language_sp["divergence_flow_error_notification"] = "Ausencia de caudal de agua en una parte de su instalación";
language_sp["dmxmode"] = "Modo DMX";
language_sp["dmxmode_help"] = "Diríjase a la documentación de los proyectores DMX.";
language_sp["duration_picker_dialog_title"] = "Regular la duración";
language_sp["edit"] = "Editar";
language_sp["edit_device_name_instructions"] = "Ponga el nuevo nombre de su equipo.\n\nAtención tenga cuidado, es posible si utiliza el bluetooth como modo de conexión que tenga la necesidad de reconectar su equipo para poder ver el cambio (porque ciertos teléfonos guardan las informaciones sobre el periférico bluetooth en local).";
language_sp["edit_device_name_placeholder"] = "Nuevo nombre (Ej: Mi piscina)";
language_sp["edit_device_name_title"] = "Modificar el nombre del equipo";
language_sp["edit_program_name_instructions"] = "Introduzca el nuevo nombre de su programa y valídelo con el botón de abajo de la pantalla.\n\nSi desea utilizar el nombre por defecto, puede borrar el texto y validar.";
language_sp["edit_program_name_placeholder"] = "Nombre del programa (Ej: Fin de semana)";
language_sp["edit_program_name_title"] = "Modificar el nombre del programa";
language_sp["electrolyse_chlore_production_state"] = "Estado producción Cloro";
language_sp["electrolyse_choc_duration"] = "Duración tratamiento de choque";
language_sp["electrolyse_current"] = "Corriente de la electrólisis";
language_sp["electrolyse_daily_prod"] = "Duración producción diaria";
language_sp["electrolyse_filtration_state"] = "Flujo de la célula";
language_sp["electrolyse_internal_temp"] = "Temperatura interna";
language_sp["electrolyse_power"] = "Potencia";
language_sp["electrolyse_prod_chlore"] = "Prod. Cloro";
language_sp["electrolyse_prod_chlore_instant"] = "Prod. Instant. Cloro";
language_sp["electrolyse_stopped"] = "Electrolysis stopped";
language_sp["electrolyse_stopped_details_format"] = "Minimum water temperature reached, the electrolysis of the device {{STRING}} is stopped.";
language_sp["electrolyse_temp_min"] = "Temperatura Mini";
language_sp["electrolyse_temperature"] = "Temp. agua célula";
language_sp["electrolyse_tension"] = "Tensión";
language_sp["electrolyse_thermoregulated_help"] = "La duración de la electrólisis será automáticamente adaptada en función de la temperatura del agu";
language_sp["electrolyse_water_hardness"] = "Dureza del agua";
language_sp["electrolysis_amperage"] = "Corriente";
language_sp["electrolysis_cover_off"] = "Abierta";
language_sp["electrolysis_daily_production_duration_auto"] = "Duración de producción termorregulada: %1$s";
language_sp["electrolysis_dialog_no_orp_device_message"] = "Ningún aparato de medida ORP ha sido encontrado.\n\nSi ninguna medida es detectada en una hora, la electrólisis pasará al modo Programado.";
language_sp["electrolysis_dialog_title"] = "Confirmación del modo";
language_sp["electrolysis_shock_treatment_duration_elapsed"] = "Tratamiento de choque arrancado hace %1$s.";
language_sp["electrolysis_stop_dialog_message"] = "¿Quiere realmente para la electrólisis?";
language_sp["electrolysis_thermoregulation"] = "Termorregulación";
language_sp["energy"] = "Energía";
language_sp["enslaved_to_filtration"] = "Ligado a la filtración";
language_sp["enslaved_to_filtration_help"] = "Si está ligado a la filtración, el auxiliar podrá arrancar sólo cuando la filtración esté encendida.";
language_sp["enslaved_to_filtration_pac_help"] = "Si está ligado a la filtración, la bomba de calor sólo podrá arrancar cuando la filtración esté encendida.";
language_sp["error"] = "Error";
language_sp["error_amplify_get_devices"] = "Ha ocurrido un error durante la recuperación de los equipos, verifique su conexión a internet e inténtelo de nuevo.";
language_sp["error_confirmation_sign_up_unknown"] = "Ocurrió un error, verifique el código y vuelva a intentarlo.";
language_sp["error_connection"] = "Imposible conectarse, inténtelo de nuevo. Si el error se repite, intente cerrar la aplicación y reabrirla.";
language_sp["error_ntpmessage"] = "Su equipo debe ser conectado a internet para poder ser programado.";
language_sp["error_scan"] = "Un error se ha producido durante la búsqueda del equipo, inténtelo de nuevo. Si el error se repite, intente cerrar la aplicación y reiniciarla, o cambiar el modo de conexión.";
language_sp["error_sign_in_no_device_linked"] = "No hemos encontrado equipos compatibles ligados a su cuenta. Conéctese en bluetooth para poder asociar su equipo a su cuenta (pantalla de configuración).";
language_sp["error_sign_in_unknown"] = "Error en la conexión, verifique su conexión a Internet y vuelva a intentarlo. Si el error se repite, asegúrese de que sus credenciales sean correctas.";
language_sp["error_sign_up_mail_exists"] = "Ya hay una cuenta asociada con este correo electrónico.";
language_sp["error_sign_up_no_internet"] = "No hay conexión a Internet. Encienda sus datos móviles o conéctese a una red WiFi e intente nuevamente.";
language_sp["error_sign_up_timeout"] = "No se pudo completar la solicitud. Verifique su conexión a Internet y vuelva a intentarlo.";
language_sp["error_sign_up_unknown"] = "Ha ocurrido un error durante la creación de la cuenta.";
language_sp["expired"] = "Expirado";
language_sp["face_id_authenticate_password_get"] = "Identifíquese para poder recuperar su contraseña";
language_sp["face_id_authenticate_password_set"] = "Identifíquese para guardar su contraseña";
language_sp["fill"] = "Rellenar";
language_sp["filt_light_force_help"] = "La filtración se pondrá en marcha durante toda la duración de la iluminación.";
language_sp["filt_meteor_intensity_error"] = "Defecto de intensidad detectado - Apagar la filtración para anular el defecto";
language_sp["filtration_forced_by_frost_free_mode"] = "Forzado por el modo anti hielo";
language_sp["filtration_forced_by_user"] = "Forzado por el usuario";
language_sp["filtration_forced_off_by_box_help"] = "Para encender, verifique que el botón del cuadro tild esté en posición \"gestionado por el tild\".\nSi dispone de un regulador de nivel, este comportamiento puede ser normal.";
language_sp["filtration_forced_on_by_box_help"] = "Para apagar, verifique que el botón del cuadro tild esté en posición \"gestionado por el tild\".\nSi dispone de un regulador de nivel, este comportamiento puede ser normal.";
language_sp["filtration_m_fragment_help_over_under_current"] = "Defecto de intensidad detectado: la filtración debe ser parada para corregir el problema.";
language_sp["filtration_mode"] = "Modo de filtración";
language_sp["filtration_paused"] = "Filtración en pausa";
language_sp["filtration_start_forced_march"] = "Cambiar a marcha continua";
language_sp["filtration_stop_forced_march"] = "Desactivar la marcha continua";
language_sp["flow_calibration"] = "Calibración del caudal";
language_sp["flow_current"] = "Caudal actual";
language_sp["flow_desired"] = "Caudal deseado";
language_sp["flow_measurement_history"] = "Historial de los valores del caudal";
language_sp["flow_not_determined"] = "Estado de filtración desconocido";
language_sp["flow_not_working"] = "Ningún caudal detectado";
language_sp["flow_probe_calibration_error_dialog_message"] = "Error de calibración, verifica tu sonda de caudal";
language_sp["flow_sensor_calibration"] = "Calibración sonda de caudal";
language_sp["flow_switch_diverging"] = "Hemos detectado que ciertos caudales están en estados diferentes.\nEsto puede simplemente deberse a la presencia de un bypass en su instalación, pero puede venir también de un detector de caudal dañado o de un caudal de agua demasiado débil.";
language_sp["flow_view_flow_off"] = "Filtración parada";
language_sp["flow_working"] = "Filtración en marcha";
language_sp["force_filtration_during_aux"] = "Forzar la filtración";
language_sp["force_filtration_during_aux_help"] = "La filtración se pondrá en marcha automáticamente cuando el auxiliar arranque.";
language_sp["force_filtration_during_lighting"] = "Forzar la filtración durante la iluminación";
language_sp["force_filtration_during_pac_help"] = "La filtración se pondrá en marcha automáticamente cuando la bomba de calor arranque.";
language_sp["forced_by_aux"] = "Forzado por el auxiliar";
language_sp["forced_by_box"] = "Forzado por el cuadro";
language_sp["forced_by_lighting"] = "Forzado por la iluminación";
language_sp["forced_by_pac"] = "Forzado por la bomba de calor";
language_sp["forced_march"] = "Marcha continua";
language_sp["forced_off_by_aux_help"] = "Para apagar, apague el auxiliar o quite la opción \"Forzar la filtración\" del auxiliar.";
language_sp["forced_off_by_frost_protection_help"] = "La filtración ha sido puesta en marcha para quitar el hielo.";
language_sp["forced_off_by_light_help"] = "Para apagar, apague la iluminación o quite la opción \"Forzar la filtración cuando la iluminación se encienda\".";
language_sp["forced_off_by_pac_help"] = "Para apagar, apague la bomba de calor o quite la opción \"Forzar la filtración\" de ésta.";
language_sp["forced_off_by_water_renewal_help"] = "La filtración se pone en marcha para poder obtener las medidas de temperatura al día, se parará automáticamente después de unos minutos.";
language_sp["forced_on_by_box_help"] = "Para pagar, verifique que el cuadro tild esté en posición 1.@IMAGE(message_coffret_tild,26,26,8,0,10)\nSi tiene un regulador de nivel, este comportamiento puede ser normal.";
language_sp["forgotten_password"] = "¿Olvidó su contraseña?";
language_sp["forgotten_password_f2_hint_code_required"] = "El código de reinicio es requerido";
language_sp["forgotten_password_f2_hint_password_strength"] = "Introduzca la nueva contraseña de su cuenta.\nLa nueva contraseña deberá respectar estas reglas: al menos 8 caracteres con mayúscula(s) y minúscula(s), un número y un carácter especial.";
language_sp["forgotten_password_success_dialog_message"] = "La contraseña ha sido actualizada.";
language_sp["form_error_character_limit15"] = "El número de caracteres no puede superar los 15.";
language_sp["form_error_character_limit17"] = "El número de caracteres no debe ser superior a 17.";
language_sp["form_error_character_limit2"] = "El número de caracteres debe ser superior o igual a 2.";
language_sp["form_error_character_limit3"] = "El número de caracteres debe ser igual o superior a 3.";
language_sp["form_error_character_limit43"] = "El número de caracteres no puede superar los 43.";
language_sp["form_error_empty"] = "El campo está vacío";
language_sp["form_error_empty_fields"] = "Es necesario rellenar todos los campos para guardar su piscina";
language_sp["form_error_invalid_email"] = "Dirección e-mail inválida";
language_sp["form_error_password_length"] = "Debe haber más de 8 caracteres";
language_sp["form_error_password_lower_case"] = "Necesita al menos una minúscula";
language_sp["form_error_password_number"] = "Necesita al menos una cifra";
language_sp["form_error_password_special_char"] = "Necesita al menos un carácter especial";
language_sp["form_error_passwords_dont_match"] = "Las contraseñas son diferentes";
language_sp["form_invalid_field"] = "Ciertos campos están vacíos o incorrectos";
language_sp["form_shared_pool_limit_date_placeholder"] = "Fecha de fin de uso compartido";
language_sp["form_shared_pool_pro_mail_placeholder"] = "Dirección e-mail del profesional";
language_sp["format_weight_hour"] = "g/h";
language_sp["format_weight_hour_us"] = "oz/h";
language_sp["frequency"] = "Frecuencia";
language_sp["friday_short"] = "Vie";
language_sp["frost_protection_help"] = "El modo anti hielo permite activar la filtración automáticamente si la temperatura del agua es demasiado baja, para evitar que el agua se hiele.";
language_sp["frost_protection_home_help"] = "Modo anti hielo activado, la filtración será activada automáticamente para evitar el hielo del agua en la canalización";
language_sp["ft3h"] = "ft³/hora";
language_sp["ft3h_short"] = "ft³/h";
language_sp["general_connecting_to_aws"] = "Recuperación de datos";
language_sp["general_copied_to_clipboard"] = "¡Copiado en el portapapeles!";
language_sp["general_do_update"] = "Descargar & instalar la actualización";
language_sp["general_duration_choc_electrolyse_unknown"] = "El modo choque está activo desde -- hora";
language_sp["general_duration_thermoregulation_unknown"] = "Duración de producción termorregulada: --h";
language_sp["general_forgotten_password"] = "¿Contraseña olvidada?";
language_sp["general_iunderstand"] = "Entendido";
language_sp["general_postpone_update"] = "Actualizar más tarde";
language_sp["general_select_device"] = "Selección del equipo";
language_sp["general_select_device_description"] = "Hemos encontrado varios aparatos ligados a su cuenta, escoja aquel que desee conectar";
language_sp["general_unknown_device"] = "Equipo sin nombre";
language_sp["general_unknown_error"] = "Un error desconocido ha ocurrido. Si este se repite, puede intentar cerrar y reiniciar la aplicación.";
language_sp["general_update"] = "Actualización";
language_sp["general_update_available"] = "Actualización disponible";
language_sp["get_closer_to_devices"] = "Acérquese a su instalación";
language_sp["gpm"] = "US Gal/m";
language_sp["gpm_short"] = "gpm";
language_sp["great"] = "¡Bien!";
language_sp["green"] = "Verde";
language_sp["has_min_temp_setpoint"] = "Activar consigna de temperatura min.";
language_sp["has_min_temp_setpoint_help"] = "Permite activar o no la elección de una temperatura mínima a la cual por debajo el auxiliar no arrancará.";
language_sp["has_orpsetpoint"] = "Activar consigna de ORP";
language_sp["has_orpsetpoint_help"] = "Permite activar o no la elección de un valor de ORP el cual por debajo la cloración salina no arrancará.\nEsta opción está desactivada si no dispone un equipo Vigipool que registre las medidas de ORP.";
language_sp["heat_pump"] = "Bomba de calor";
language_sp["help_measure_unknown"] = "Las medidas se mostrarán unos minutos después de la puesta en marcha de la filtración.";
language_sp["help_priority_ph"] = "La regulación ORP será activada únicamente si el pH es correcto";
language_sp["history"] = "Historial";
language_sp["history_impossible_to_display"] = "Imposible de mostrar la gráfica";
language_sp["history_no_data"] = "Ningún dato disponible";
language_sp["home_cover_on_hint"] = "Esta puede afectar al funcionamiento de ciertos equipos.";
language_sp["home_dialog_factory_reset_message"] = "¿Está seguro de querer reiniciar su aparato \"%1$s\" a los valores por defecto?";
language_sp["home_dialog_restart_message"] = "¿Está seguro de querer arrancar su aparato \"%1$s\"?";
language_sp["home_latest_filtration"] = "Última filtración";
language_sp["home_no_auxiliary"] = "Ningún auxiliar detectado";
language_sp["home_no_program"] = "Ninguna programación";
language_sp["home_ph_consigne"] = "Consigna: %1$s";
language_sp["home_volume_injected_24_hours"] = "Volumen inyectado 24H";
language_sp["hour"] = "Hora";
language_sp["impossible_demo_mode"] = "Imposible de hacer esto en modo Demo";
language_sp["impossible_to_use_spotify"] = "Imposible de utilizar Spotify";
language_sp["impossible_to_use_spotify_description"] = "Es necesario que la aplicación Spotify esté instalada en tu teléfono.";
language_sp["info_winter_mode"] = "Su equipo está en modo invernaje";
language_sp["information_setup_wifi"] = "Para modificar los parámetros wifi, debe conectarse en Bluetooth a su equipo";
language_sp["informations"] = "Informaciones";
language_sp["injection_mode"] = "Modo de inyección";
language_sp["input"] = "Entrada";
language_sp["instant_consumption"] = "Consumo instantáneo";
language_sp["instant_current"] = "Corriente instantánea";
language_sp["internal_notification_information_new_device"] = "Un nuevo equipo ha sido detectado";
language_sp["invalid_format"] = "Formato no válido";
language_sp["ios_bonding_help_rssi"] = "Acerque su smartphone a su {{STRING}} para emparejarlo.";
language_sp["ios_bonding_help_rssi_and_btn"] = "Acerque su smartphone o pulse una vez el botón de su {{STRING}} para emparejarlo.";
language_sp["ios_bonding_message"] = "Pulse una vez sobre el botón de su {{STRING}} para emparejarlo a su teléfono.";
language_sp["ios_error_ble_lost_connection"] = "Hemos perdido la conexión con el equipo. La causa más probable es que esté demasiado de su equipo {{APP_NAME}}.";
language_sp["ios_fill_price_kwh_format"] = "Introducir el precio del kWh en {{STRING}}.";
language_sp["ios_format_alert_timezone_not_set"] = "Su equipo {{STRING}} no tiene huso horario, que es indispensable para poder programarlo.\n\nReconéctese en Bluetooth para poner el huso horario actualizado automáticamente.";
language_sp["ios_format_amplify_add_device"] = "Añadir este aparato ({{STRING}})";
language_sp["ios_format_bac_empty_error_notification"] = "Bidón producto {{STRING}} vació - Bomba parada";
language_sp["ios_format_common_temperature"] = "%d°C";
language_sp["ios_format_common_temperature_us"] = "%d°F";
language_sp["ios_format_confirm_timezone"] = "Confirmar el huso horario ({{STRING}})";
language_sp["ios_format_connection_connected"] = "Conectado {{STRING}}";
language_sp["ios_format_connection_destination_device"] = "A {{STRING}}";
language_sp["ios_format_connection_looking_for_device"] = "Búsqueda del {{STRING}}";
language_sp["ios_format_connection_not_connected"] = "No conectado {{STRING}}";
language_sp["ios_format_crepuscular_mode_help"] = "Arranque de la iluminación cuando el sol se pone ({{STRING}}h{{STRING}} hoy)";
language_sp["ios_format_electrolyse_choc_duration"] = "El modo Choque está activo desde %dh%02d";
language_sp["ios_format_error_cell_error_notification"] = "La célula de electrólisis ({{STRING}}) no puede producir más - Contacte con su instalador.";
language_sp["ios_format_error_modbus_message"] = "Un error de comunicación (RS485) es detectado en su {{STRING}} - code_E9";
language_sp["ios_format_firmware_version_too_low_winter_mode"] = "El modo invernaje está desactivado en la versión {{STRING}}.\n\nConecte su instalación Vigipool a internet para aprovechar las últimas actualizaciones y activar esta funcionalidad.";
language_sp["ios_format_general_duration_thermoregulation"] = "Duración de producción termorregulada: %dh%02d";
language_sp["ios_format_last_measure"] = "Última medida {{STRING}}";
language_sp["ios_format_meteor_alarm_low_flow"] = "{{STRING}} : Sobreintensidad detectada - Verifique que la bomba no funciona vacía.";
language_sp["ios_format_meteor_alarm_over_flow"] = "{{STRING}} : Sobreintensidad detectada - Verifique que la bomba no esté defectuosa o bloqueada.";
language_sp["ios_format_meteor_alarm_warning_gel"] = "{{STRING}} : La temperatura del agua es próxima a 0°C, la filtración se activará para evitar el riesgo de hielo.";
language_sp["ios_format_meteor_alarm_water_level_low"] = "{{STRING}} : Verifique el nivel de agua de la piscina.";
language_sp["ios_format_missing_filt_error_notification"] = "La duración de filtración actual es demasiado corta para permitir al clorador salino ({{STRING}}) producir el tiempo programado.";
language_sp["ios_format_no_value_orperror_notification"] = "Su {{STRING}} no recibe la medida de Orp";
language_sp["ios_format_no_value_pherror_notification"] = "Su {{STRING}} no recibe medida de pH";
language_sp["ios_format_not_enough_salt_error_notification"] = "Producción débil - Diríjase al manual de {{STRING}}.";
language_sp["ios_format_notification_device_disconnected"] = "La conexión a su {{STRING}} {{STRING}} ha sido perdida.";
language_sp["ios_format_overdose_injection_notification"] = "El volumen máximo de producto de regulación {{STRING}} inyectado en 24h ha sido alcanzado";
language_sp["ios_format_overheat_elec_error_notification"] = "Temperatura interna del clorador salino ({{STRING}}) demasiado elevada.";
language_sp["ios_format_pairing_to"] = "Conexión a {{STRING}}";
language_sp["ios_format_reconnect_to_device_message"] = "¿Desea conectarse a {{STRING}} ({{STRING}})?";
language_sp["ios_format_schedule_hour"] = "%d hora";
language_sp["ios_format_schedule_hours"] = "%d horas";
language_sp["ios_format_schedule_minute"] = "%02d min";
language_sp["ios_format_schedule_on_time_aux"] = "%@/día";
language_sp["ios_format_schedule_on_time_booster"] = "%@/día";
language_sp["ios_format_schedule_on_time_filtration"] = "%@/día";
language_sp["ios_format_schedule_on_time_heater"] = "max %@/día";
language_sp["ios_format_schedule_on_time_light"] = "%@/día";
language_sp["ios_format_schedule_on_time_treatment"] = "max %@/día";
language_sp["ios_format_schedule_time"] = "%dh%02d";
language_sp["ios_format_settings_button_date_sensor"] = "Fecha del último reemplazamiento de la sonda : {{STRING}}";
language_sp["ios_format_sunrise_mode_help"] = "Parada de la electrólisis cuando el sol se pone ({{STRING}}h{{STRING}}).";
language_sp["ios_format_temp_too_high_error_notification"] = "Error de medida de Temperatura alta del {{STRING}}.";
language_sp["ios_format_temp_too_low_error_notification"] = "Error de medida de Temperatura baja del {{STRING}}.";
language_sp["ios_format_too_much_salt_error_notification"] = "Tasa de sal demasiado elevada. Para del clorador salino ({{STRING}}).";
language_sp["ios_format_update_description_mandatory"] = "{{APP_NAME}} {{STRING}} está disponible.\nMantener su aplicación actualizada le da acceso a las últimas funcionalidades y correcciones de bugs.\n\nSabiendo que la actualización disponible es necesaria para el buen funcionamiento de la aplicación, debe actualizar para poder utilizarla.";
language_sp["ios_format_update_description_not_mandatory"] = "{{APP_NAME}} {{STRING}} está disponible.\nMantener su aplicación actualizada le dará acceso a las últimas funcionalidades y correcciones de bugs.\n\nPuede continuar utilizando está versión por el momento, pero le aconsejamos hacer la actualización para tener las últimas funcionalidades y correcciones.";
language_sp["ios_format_update_failed_alert_message"] = "Ha ocurrido un error durante la actualización de {{STRING}}, inténtelo más tarde.";
language_sp["ios_format_update_firmware_ask_state_title"] = "Una actualización disponible para {{STRING}} ({{STRING}}).";
language_sp["ios_format_update_firmware_progress_complement_description"] = "Una vez la descarga termin, la actualización se instalará y su {{STRING}} arrancará.";
language_sp["ios_format_update_firmware_progress_complement_description_ble_server"] = "Una vez la descarga termine, la actualización se instalará y su {{STRING}} arrancará, y se desconectará la aplicación.";
language_sp["ios_format_update_succeed_alert_message"] = "¡La actualización de {{STRING}} ha sido descargada e instalada con éxito!";
language_sp["ios_format_water_orp"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Medida actual ORP : {{STRING}} mV";
language_sp["ios_format_water_temperature"] = "@IMAGE(ic_water_temp,20,20,0,0,6) Temperatura del agua : {{STRING}}";
language_sp["ios_last_format"] = "Última vez el {{STRING}}";
language_sp["ios_new_device_message"] = "Acaba de añadir un {{STRING}} a tu sistema Vigipool.\n\nAhora hay que configurarlo.";
language_sp["ios_new_device_title"] = "Nuevo {{STRING}} detectado";
language_sp["ios_output_nb_format"] = "Salida %d";
language_sp["ios_price_in_currency_format"] = "Precio en {{STRING}}";
language_sp["ios_vspump_speed_details_format"] = "Bomba %d velocidades";
language_sp["ios_warning_pairing_iosble_off"] = "El Bluetooth no está disponible. Verifique que el bluetooth está activado en su teléfono, y que la aplicación {{APP_NAME}} tiene la autorización de utilizar el Bluetooth (modificable en la aplicación Ajustes).";
language_sp["ios_warning_pairing_no_results_ble"] = "Ningún equipo {{APP_NAME}} ha sido encontrado cerca. Verifique que éste esté en marcha y que no esté demasiado lejos.";
language_sp["ios_warning_pairing_timeout_ble"] = "El tiempo de conexión se ha pasado, inténtelo de nuevo. Si el error se repite, acerque su aparato {{APP_NAME}}.";
language_sp["ios_zone_nb_format"] = "Zona %d";
language_sp["it_is_done"] = "Hecho";
language_sp["just_now"] = "Al instante";
language_sp["l"] = "L";
language_sp["last_backwash"] = "Último contralavado";
language_sp["last_backwash_fill_date"] = "¿Ha efectuado un contralavado manualmente?\nEscriba la fecha aquí debajo para poder tener un recordatorio";
language_sp["last_measure_now"] = "Última medida al instante";
language_sp["later"] = "Más tarde";
language_sp["latest_measurement_ago"] = "Última medida %1$s";
language_sp["latest_measurement_not_co"] = "Equipo de medida desconectado";
language_sp["latest_probe_replacement"] = "Último reemplazamiento de la sonda: %1$s";
language_sp["leave"] = "Retirar";
language_sp["light_banner_cover_on_description"] = "La iluminación no puede encenderse cuando la cubierta de la piscina está cerrada.";
language_sp["light_banner_cover_on_title"] = "Abrir la cubierta";
language_sp["light_banner_register_color_already_registered_description"] = "Este color ha sido ya registrado.";
language_sp["light_banner_register_color_light_off_description"] = "Encienda la iluminación antes de guardar el color.";
language_sp["light_banner_timer_on_light_off_description"] = "Encienda la iluminación antes de programar su apagado.";
language_sp["light_color_cyan"] = "Cian";
language_sp["light_color_lagoon"] = "Turquesa";
language_sp["light_color_magenta"] = "Magenta";
language_sp["light_color_orange"] = "Naranja";
language_sp["light_color_pink"] = "Rosa";
language_sp["light_color_purple"] = "Morado";
language_sp["light_color_white"] = "Frío";
language_sp["light_color_white_warm"] = "Cálido";
language_sp["light_colors_title"] = "Colores";
language_sp["light_command_favorite_color"] = "Color favorito";
language_sp["light_crepuscular_mode"] = "Modo crespúsculo";
language_sp["light_crepuscular_short"] = "Crep.";
language_sp["light_sequence_gradient"] = "Degradado";
language_sp["light_sequence_horizon"] = "Horizonte";
language_sp["light_sequence_magic"] = "Mágico";
language_sp["light_sequence_parade"] = "Desfile";
language_sp["light_sequence_rainbow"] = "Arcoiris";
language_sp["light_sequence_random"] = "Azar";
language_sp["light_sequence_speed_fast"] = "Rápido";
language_sp["light_sequence_speed_normal"] = "Normal";
language_sp["light_sequence_speed_slow"] = "Lento";
language_sp["light_sequence_techno"] = "Tecno";
language_sp["light_sequence_title"] = "Secuencia";
language_sp["light_sequences_title"] = "Secuencias";
language_sp["light_sunrise_mode"] = "Modo amanecer";
language_sp["light_sunrise_short"] = "Amanecer";
language_sp["lighting"] = "Iluminación";
language_sp["lighting_color_fav"] = "Favorito";
language_sp["lighting_mode"] = "Modo iluminación";
language_sp["lighting_overlay_couv_error_message"] = "La iluminación no puede encenderse cuando la cubierta de la piscina está cerrada.";
language_sp["lighting_overlay_paused"] = "Iluminación en pausa";
language_sp["lighting_overlay_switched_on"] = "Encendido";
language_sp["lighting_overlay_timer_info_title"] = "Encender la iluminación";
language_sp["lighting_settings_dialog_forced_filtration_hint"] = "El equipo de filtración se pondrá en marcha cada vez que la iluminación se encienda y durante toda la duración de la iluminación.";
language_sp["lighting_settings_dialog_forced_filtration_text"] = "Forzar la filtración durante la iluminación.";
language_sp["link_device_btn_link"] = "Aosciar";
language_sp["link_device_message"] = "¿Deseas asociar tu equipo %1$s %2$s a tu cuenta Vigipool?";
language_sp["link_device_title"] = "Asociar el equipo";
language_sp["link_device_to_account"] = "¿Ligar este equipo a tu cuenta?";
language_sp["loader_connecting_attempt"] = "Conexión en curso";
language_sp["loading_error_dialog_message_device_not_found"] = "El equipo no ha sido encontrado en su cuenta Vigipool.";
language_sp["loading_error_dialog_message_no_devices_found"] = "Ningún equipo ha sido encontrado en su cuenta Vigipool.";
language_sp["loading_failed"] = "Carga fallida, verifique su conexión a internet";
language_sp["loading_page"] = "Cargando página";
language_sp["location_permission_rationale_message"] = "El permiso de Localización es requerido para utilizar esta funcionalidad.";
language_sp["location_permission_rationale_title"] = "Autorizar la localización";
language_sp["log_out"] = "Desconexión";
language_sp["login"] = "Conexión";
language_sp["login_failed"] = "Fallo de conexión";
language_sp["logout_progress_dialog_title"] = "Desconexión";
language_sp["m3h"] = "m³/hora";
language_sp["m3h_short"] = "m³/h";
language_sp["measurement_history_ble_hint"] = "El historial de los valores está disponible solamente utilizando el modo de conexión a distancia:\n\n- Tu equipo Vigipool debe ser conectado al Wifi\n- Debes crear y confirmar tu cuenta Vigipool\n- Debes conectarte \"A distancia\"";
language_sp["measurement_units_debit_unit"] = "Unidad de caudal";
language_sp["measurement_units_debit_unit_cubic_feet_per_hour"] = "Pies cúbicos por hora (ft³/h)";
language_sp["measurement_units_debit_unit_cubic_meter_per_hour"] = "Metro cúbico por hora (m³/h)";
language_sp["measurement_units_debit_unit_gallon_per_minute"] = "Galón US por minuto (gpm)";
language_sp["measurement_units_measurement_system"] = "Sistema de medida";
language_sp["measurement_units_pressure_unit"] = "Unidad de presión";
language_sp["measurement_units_pressure_unit_bar"] = "Bar (bar) ";
language_sp["measurement_units_pressure_unit_psi"] = "PSI (psi)";
language_sp["measurement_units_temperature_celcius"] = "Celsius (°C)";
language_sp["measurement_units_temperature_fahrenheit"] = "Fahrenheit (°F)";
language_sp["measurement_units_temperature_unit"] = "Unidad de temperatura";
language_sp["merge_lighting_zone"] = "Fusionar las zonas de iluminación";
language_sp["merge_lighting_zone_help"] = "Fusionar las zonas permite propagar las órdenes enviadas a un Wix sobre los otros equipos de su instalación. \nEsto permite controlar varios Wix cuando no queramos diferenciar unos de otros.";
language_sp["meteor_mode_auto"] = "Auto";
language_sp["meteor_mode_help_aux"] = "On: El auxiliar está en marcha continua, 24h/24.\n\nProg: El auxiliar se encenderá según los ajustes del intervalo horario (P1).";
language_sp["meteor_mode_help_aux_heater"] = "On: el calentador está en marcha continua, 24h/24, hasta que la temperatura del agua llegue a la consigna. Funcionará el tiempo suficiente para mantener la temperatura.\n\nProg: el calentador funcionará durante el intervalo horario (P1) programado. Si la temperatura del agua llega a la consigna, funcionará el tiempo suficiente para mantener la temperatura hasta el final del intervalo horario.";
language_sp["meteor_mode_help_aux_orp_treatment"] = "On: el tratamiento está en marcha continua 24h/24.\n\nProg: el tratamiento se encenderá según los ajustes del intervalo horario (P1).\n\nAuto: el tratamiento está regulado con una consigna ORP, y estará encendido en tanto que la medida ORP no llegue a la consigna. Una vez la consigna se alcance, el ORP será mantenido en su valor.";
language_sp["meteor_mode_help_aux_treatment"] = "On: el tratamiento está en marcha continua, 24h/24.\n\nProg: el tratamiento se encenderá según los ajustes del intervalo horario (P1).\n\nAuto: el tratamiento se encenderá según los ajustes del intervalo horario (P1), pero su duración será ajustada en función de la temperatura del agua.";
language_sp["meteor_mode_help_aux_treatment_orp"] = "On: el tratamiento está en marcha continua, 24h/24.\n\nProg: el tratamiento se encenderá según los ajustes del intervalo horario (P1).\n\nAuto: el tratamiento está regulado con una consigna ORP, y se quedará encendido en tanto que las medidas de ORP no lleguen a la consigna. Una vez se alcance, el ORP será mantenido en su valor.";
language_sp["meteor_mode_help_filt"] = "On: la filtración está en marcha continua, 24h/24.\n\nProg: la filtración se encenderá según los ajustes de los 3 intervalos horarios (P1 a P3).\n\nAuto: la filtración se encenderá a la hora de arranque indicada en el intervalo P1, para una duración automática calculada en función de la temperatura del agua.";
language_sp["meteor_mode_help_light"] = "On: la iluminación está encendida, 24h/24.\n\nProg: la iluminación se encenderá según los ajustes del intervalo horario.\n\nAuto: la iluminación se encenderá al crepúsculo para una duración de 4 horas.";
language_sp["meteor_mode_prog"] = "Prog";
language_sp["mic_permission_message"] = "Vigipool necesita acceder al micrófono para el modo música.";
language_sp["mic_permission_title"] = "Autorizar el micrófono";
language_sp["minute"] = "minuto";
language_sp["minutes"] = "minutos";
language_sp["mode_music"] = "Modo música";
language_sp["mode_music_choice_audio_micro_device"] = "Micrófono suministrado con su aparato Vigipool";
language_sp["mode_music_choice_audio_micro_phone"] = "Micrófono de su teléfono";
language_sp["mode_music_choose_audio"] = "¿Qué tipo de entrada de audio quiere utilizar?";
language_sp["mode_music_choose_zone"] = "¿Sobre qué zona(s) quiere activar el modo música?";
language_sp["mode_music_place_micro_next_to_sound_title"] = "Conecta el micro al equipo Vigipool. Después coloque su micro al lado de su equipo de música o de cualquier fuente de sonido.";
language_sp["mode_music_place_phone_next_to_sound_title"] = "Coloque su teléfono al lado de su equipo de música o de cualquier fuente de sonido";
language_sp["mode_music_welcome_modal_text"] = "Este modo le permitirá sincronizar sus proyectores al ritmo de la música.\nPara tener momentos inolvidables.";
language_sp["mode_music_welcome_modal_title"] = "¡Bienvenido al modo música!";
language_sp["mode_pac_silence"] = "Silencio";
language_sp["mode_pac_smart"] = "Smart";
language_sp["mode_pac_turbo"] = "Turbo";
language_sp["modify_duration"] = "Modificar la duración";
language_sp["modify_settings"] = "Modificar los parámetros";
language_sp["monday_short"] = "Lun";
language_sp["month"] = "Mes";
language_sp["music_mode_input_app"] = "Asociación con una aplicación de música";
language_sp["music_mode_no_permission_description"] = "Ha rechazado el acceso al micrófono del teléfono pero es necesario para poder utilizar el modo música.\n\n¿Desea abrir los ajustes de la aplicación para poder modificar este parámetro?";
language_sp["music_mode_no_permission_title"] = "Permiso micro rechazado";
language_sp["music_mode_unavailable"] = "Modo música no disponible";
language_sp["music_mode_welcome_hint"] = "Este modo permite sincronizar sus proyectores al ritmo de la música.\nPara momentos inolvidables.";
language_sp["music_mode_welcome_start"] = "¡Listo!";
language_sp["music_mode_zone_one"] = "Zona 1";
language_sp["music_mode_zone_three"] = "Zona 3";
language_sp["music_mode_zone_two"] = "Zona 2";
language_sp["my_account"] = "Mi cuenta";
language_sp["my_account_aws_hello_user"] = "Hola %1$s";
language_sp["my_account_signup_dialog_signup_success_bt_mailbox"] = "Abra su bandeja de entrada para verificar su correo";
language_sp["my_account_signup_dialog_signup_success_message"] = "Recibirá pronto un correo a su dirección %1$s para verificar su cuenta. Una vez activado, podrá conectarse a su cuenta Vigipool.";
language_sp["my_account_signup_error_username_already_exists"] = "Esta dirección e-mail está ya asociada a una cuenta Vigipool.";
language_sp["my_contact_address_dialog_title"] = "Seleccione su dirección";
language_sp["my_contact_changes_dialog_bt_discard"] = "Anular";
language_sp["my_contact_changes_dialog_message"] = "Hay modificaciones en curso.\n\n¿Quiere Registrarlas o Anularlas?";
language_sp["my_contact_dialog_confirm_delete_message"] = "¿Quiere realmente borrar sus datos?\n\nÉsto borrará también sus datos compartidos.";
language_sp["my_pool_dialog_confirm_delete_message"] = "¿Quiere realmente borrar su piscina?\n\nÉsto borrará también sus datos y sus datos compartidos.";
language_sp["my_vp_devices_device_connection_state"] = "Conexión a %1$s";
language_sp["my_vp_devices_settings_auxiliary_type_tooltip"] = "Atención, los programas del auxiliar serán desactivados si cambiamos tipo de auxiliar (los intervalos horarios serán a partir de ahora conservados).";
language_sp["my_vp_devices_settings_frost_free_mode_tooltip"] = "El modo antihielo permite activar la filtración automáticamente si la temperatura del agua baja mucho, para evitar que el agua se hiele.";
language_sp["my_vp_devices_settings_projector_type"] = "Proyector";
language_sp["my_vp_devices_settings_projector_type_tooltip"] = "Atención, los programas de la iluminación serán reinicializadas cuando cambiemos el tipo de proyector.";
language_sp["my_vp_devices_wifi_connection_state_connection_error"] = "Error de conexión";
language_sp["my_vp_devices_wifi_connection_state_no_wifi"] = "No conectado al Wifi";
language_sp["my_vp_devices_wifi_connection_state_wifi_no_internet"] = "Conectado al Wifi, sin internet";
language_sp["my_vp_devices_wifi_connection_state_wifi_with_internet"] = "Conectado al Wifi y a internet";
language_sp["my_vp_devices_winter_mode_dialog_message"] = "¿Está seguro de querer poner su equipo %1$s \"%2$s\" en modo Invernaje?";
language_sp["name"] = "Nombre";
language_sp["navigation_drawer_log_in"] = "Conexión / Inscripción";
language_sp["navigation_drawer_my_devices"] = "Mis equipos";
language_sp["navigation_drawer_probes_and_calibration"] = "Sondas &amp; Calibración";
language_sp["never"] = "Nunca";
language_sp["new_device_message"] = "Acabas de añadir un nuevo %1$s a tu sistema Vigipool.\n\nHay que configurarlo.";
language_sp["new_device_title"] = "Nuevo %1$s detectado";
language_sp["next"] = "Siguiente";
language_sp["next_color"] = "Siguiente color";
language_sp["no_data"] = "Ningún dato";
language_sp["no_measurement_tooltip"] = "Las medidas se mostrarán en unos minutos después de la puesta en marcha de la filtración.";
language_sp["no_sensor_data"] = "Para obtener el historial de sus medidas, conéctese su equipo Vigipool a internet para ligarlo a su espacio Vigipool.";
language_sp["no_temp_disconnected_help"] = "Las medidas de temperatura no se muestran porque su aparato no está conectado a internet";
language_sp["no_temp_sensor"] = "Ninguna sonda de temperatura detectada";
language_sp["no_temp_sensor_tild"] = "Su tild no tiene sonda de temperatura - funcionalidades están desactivadas (antihielo, consigna calefacción del auxiliar, consigna temperatura min. del tratamiento etc)";
language_sp["no_temp_value_help"] = "Las medidas se mostrarán en unos minutos después del arranque de la filtración";
language_sp["not_connected"] = "No conectado";
language_sp["notification_awsconnected"] = "¡Su aparato Vigipool está de nuevo conectado al wifi!";
language_sp["notification_awsnot_connected"] = "Su equipo Vigipool no ha podido ser conectado al wifi…verifique la conexión de la red o conéctese en Bluetooth.";
language_sp["notification_device_disconnected"] = "Atención, su equipo %1$s no está conectado al wifi. Verifique la conexión red o conéctese en Bluetooth.";
language_sp["notification_device_linked_vigipool"] = "A partir de ahora puede echar un vistazo sobre su piscina desde dónde esté utilizando el modo de conexión \"A distancia\".";
language_sp["notification_disconnected"] = "Atención, su aparato Phileo no está conectado al Wifi. Verifique la conexión de la red o conéctese en Bluetooth.";
language_sp["notification_divergent_flow"] = "Sus detectores de flujo no indican todos el mismo estado de filtración.";
language_sp["notification_ely_cell_error"] = "La célula de electrólisis no produce - Contacte con su instalador.";
language_sp["notification_ely_missed_filtration"] = "La duración de filtración actual es demasiado corta para permitir al clorador salino producir el tiempo programado.";
language_sp["notification_ely_over_salt"] = "Tasa de sal demasiado elevada - parada del clorador salino.";
language_sp["notification_ely_overheat"] = "Temperatura interna del clorador salino demasiado elevada.";
language_sp["notification_ely_overload"] = "Alimentación del clorador salino en sobrecarga.";
language_sp["notification_ely_temp_too_low"] = "Temperatura mínima del agua alcanzada. Parada del clorador salino";
language_sp["notification_ely_under_salt"] = "Producción débil - diríjase al manual técnico de %1$s.";
language_sp["notification_empty_tub"] = "El bidón de producto de regulación está vacío - La bomba está parada";
language_sp["notification_meteor_current_too_high_alarm"] = "Sobreintensidad detectada - Verifique que la bomba no está defectuosa o bloqueada.";
language_sp["notification_meteor_current_too_low_alarm"] = "Infraintensidad detectada - Verifique que la bomba no funciona vacía.";
language_sp["notification_meteor_frost_warning_alarm"] = "La temperatura del agua está próxima a 0°C, la filtración se activará para evitar el riesgo de hielo.";
language_sp["notification_meteor_water_level_too_low_alarm"] = "Nivel de agua demasiado bajo: verifique el nivel de agua de la piscina.";
language_sp["notification_modbus_error"] = "Un error de comunicación entre el aparato y el módulo Antena ha sido detectado.";
language_sp["notification_no_orp_value"] = "Ninguna medida de ORP recibida desde hace al menos una hora.";
language_sp["notification_no_ph_value"] = "Ninguna medida de pH recibida desde hace al menos una hora.";
language_sp["notification_orp"] = "Errores de medidas ORP han sido observados, verifique el estado de su instalación";
language_sp["notification_overdose"] = "El volumen máximo de producto de regulación inyectado en 24h ha sido alcanzado";
language_sp["notification_overdose_orp"] = "El volumen máximo de producto de regulación ORP inyectado en 24h ha sido alcanzado";
language_sp["notification_overdose_ph"] = "El volumen máximo de producto de regulación pH inyectado en 24h ha sido alcanzado";
language_sp["notification_permission_rationale_message"] = "Necesitamos enviarle notificaciones de los comportamientos inusuales de sus equipos Vigipool.";
language_sp["notification_permission_rationale_title"] = "Autorizar las notificaciones";
language_sp["notification_temp"] = "Errores de medida de temperatura han sido observados, verifique el estado de su instalación";
language_sp["number_picker_dialog_title"] = "Elija un número";
language_sp["number_too_big"] = "Numero demasiado alto";
language_sp["on"] = "Encendido";
language_sp["open_settings"] = "Abrir la aplicación Ajustes";
language_sp["open_spotify"] = "Abrir Spotify";
language_sp["operating_mode"] = "Modo de funcionamiento";
language_sp["options"] = "Opciones";
language_sp["orp_measurement_orp_history"] = "Historial de valores ORP";
language_sp["orp_probe_calibration_error_dialog_message"] = "Error de calibración, verifique su sonda ORP.";
language_sp["orpcalibration_measured"] = "ORP Medida";
language_sp["orpcalibration_solution"] = "ORP Solución";
language_sp["orpcurrent"] = "ORP actual";
language_sp["orpdesired"] = "ORP rectificado";
language_sp["orperror_meteor_notification"] = "Error de medida ORP, verifique la sonda.";
language_sp["orperror_notification"] = "Errores de medidas ORP constatados, la inyección está parada, verifique su instalación y las sondas.";
language_sp["orphistoric"] = "Historial ORP";
language_sp["orpmeasurement_title"] = "Medida ORP";
language_sp["orpsetpoint"] = "Consigna de ORP";
language_sp["orpsetpoint_help"] = "El clorador salino se alimentará durante las horas que ha indicado.\nSi la consigna de ORP es alcanzada, el ORP será mantenido a su consigna hasta la hora del fin del programa.";
language_sp["orpsetpoint_help_detailed"] = "La consigna de ORP elegida será también aplicada a todos los programas.\nSi la medida de ORP alcanza la consigna y el clorador salino está encendido, funcionará lo justo para mantener el ORP en su valor de consigna.";
language_sp["orpsetpoint_help_detailed_meteor"] = "El clorador salino se quedará encendido hasta que la medida de ORP alcance la consigna.\nUna vez la consigna sea alcanzada, funcionará lo suficiente para mantener el ORP a su nivel.";
language_sp["orptank_almost_empty_notification"] = "El bidón de producto de regulación ORP está casi vacío";
language_sp["orptank_empty_notification"] = "El bidón de producto de regulación ORP está vacío - La bomba está parada";
language_sp["oups"] = "¡Oups!";
language_sp["output"] = "Salida";
language_sp["output_not_plugged"] = "No conectado";
language_sp["oz"] = "oz";
language_sp["paused"] = "en pausa";
language_sp["ph_measurement_dialog_aws_login_message"] = "¿Está usted seguro de querer reiniciar la aplicación en modo conexión a distancia?";
language_sp["ph_measurement_dialog_aws_login_title"] = "Reiniciar";
language_sp["ph_measurement_orp_history_ble_hint"] = "El historial de valores ORP está disponible sólamente utilizando el modo de conexión a distancia:\n\n- su equipo Vigipool debe ser conectado en Wifi\n- debe crear y confirmar su cuenta Vigipool\n- debe conectarse \"A distancia\"";
language_sp["ph_measurement_ph_history"] = "Historial de valores del pH";
language_sp["ph_measurement_ph_history_aws_login"] = "Conexión a distancia";
language_sp["ph_measurement_ph_history_ble_hint"] = "El historial de valores del pH está disponible solamente utilizando el modo de conexión a distancia:\n\n- su equipo Vigipool debe ser conectado al Wifi\n- debe crear y confirmar su cuenta Vigipool\n- debe conectarse \"A distancia\"";
language_sp["ph_probe_calibration_btn_validation"] = "Validar la calibración";
language_sp["ph_probe_calibration_calibration_manual"] = "Calibración manual";
language_sp["ph_probe_calibration_error_dialog_message"] = "Error de calibración, verifique su sonda pH.";
language_sp["ph_regulation_injection_max_volume"] = "Volumen máximo inyectado";
language_sp["ph_regulation_injection_max_volume_value"] = "%1$,.2f %2$s/día";
language_sp["ph_regulation_injection_max_volume_value_litre"] = "%1$,.2f L/día";
language_sp["ph_regulation_injection_max_volume_value_oz"] = "%1$d oz/día";
language_sp["phcalibration_measured"] = "pH Medido";
language_sp["phcalibration_solution"] = "pH Solución";
language_sp["phcurrent"] = "pH actual";
language_sp["phdesired"] = "pH rectificado";
language_sp["pherror_notification"] = "Errores de medidas pH han sido observados, verifique el estado de su instalación";
language_sp["phhistoric"] = "Historial pH";
language_sp["phmeasurement_title"] = "Medida pH";
language_sp["phtank_almost_empty_notification"] = "El bidón de producto de regulación pH está casi vacío";
language_sp["phtank_empty_notification"] = "El bidón de producto de regulación pH está vacío - La bomba está parada";
language_sp["play_last_song"] = "Reproducir la última canción";
language_sp["please_wait"] = "Espere…";
language_sp["plurals_1_an"] = "%1$d año";
language_sp["plurals_1_heure"] = "%1$d hora";
language_sp["plurals_1_jour"] = "%1$d día";
language_sp["plurals_1_minute"] = "%1$d minuto";
language_sp["plurals_1_mois"] = "%1$d mes";
language_sp["plurals_1_seconde"] = "%1$d segundo";
language_sp["plurals_1_semaine"] = "%1$d semana";
language_sp["plurals_x_an"] = "%1$d años";
language_sp["plurals_x_heure"] = "%1$d horas";
language_sp["plurals_x_jour"] = "%1$d días";
language_sp["plurals_x_minute"] = "%1$d minutos";
language_sp["plurals_x_mois"] = "%1$d mes";
language_sp["plurals_x_seconde"] = "%1$d segundos";
language_sp["plurals_x_semaine"] = "%1$d semanas";
language_sp["pool_description"] = "Describa las características de su piscina para poder nosotros optimizar el funcionamiento de los aparatos instalados.";
language_sp["power_factor"] = "Factor de potencia";
language_sp["prepare_reconnection"] = "Preparando reconexión...";
language_sp["pressure_current"] = "Presión actual";
language_sp["pressure_desired"] = "Presión rectificada";
language_sp["pressure_history"] = "Historial de la presión";
language_sp["pressure_measurement_history"] = "Historial de los valores de presión";
language_sp["price_kwh"] = "Precio del kWh :";
language_sp["priority_ph"] = "Prioridad pH";
language_sp["probe_replacement_dialog_message_orp"] = "Está a punto de reiniciar la fecha del último cambio de su sonda de ORP.\n\nEste cambio no es reversible, ¿Está seguro de querer continuar?";
language_sp["probe_replacement_dialog_message_ph"] = "Está a punto de reiniciar la fecha del último cambio de su sonda de pH.\n\nEste cambio no es reversible, ¿Está seguro de querer continuar?";
language_sp["program"] = "Programa";
language_sp["programming_heating_text"] = "max %1$s/día";
language_sp["programming_lighting_text"] = "%1$s/día";
language_sp["programming_overlay_average_temperature"] = "Temperatura media: %1$d%2$s";
language_sp["programming_program_1"] = "Programa 1";
language_sp["programming_program_2"] = "Programa 2";
language_sp["prohibited_by_box"] = "Prohibido por el cuadro";
language_sp["proj_type_microcut"] = "Color microcortes";
language_sp["proj_type_mono"] = "Monocromo";
language_sp["proj_type_mono_dim"] = "Monocromo dimable";
language_sp["proj_type_rc"] = "Color RC+";
language_sp["proximity_search_ble_powered_off_description"] = "El Bluetooth de su teléfono está desactivado, y lo necesitamos para poder verificar su proximidad con el equipo.\n\nAsegúrese de activar el bluetooth en su teléfono antes de reintentarlo.";
language_sp["proximity_search_ble_unauthorized_description"] = "La aplicación no tiene permiso de utilizar el bluetooth de su teléfono, y se necesita el permiso para poder verificar la proximidad con su equipo.\n\nAsegúrese de dar permiso bluetooth a Vigipool desde la aplicación de Ajustes antes de reintentarlo.";
language_sp["proximity_search_device_not_found_description"] = "Necesitamos verificar su proximidad con su instalación para hacer un contralavado.\nAsegúrese su acercarse a su instalación y verificar que sus equipos están encendidos antes de reintentarlo.";
language_sp["psi"] = "psi";
language_sp["quit_backwash_description"] = "Atención, ponga la válvula de la bomba de filtración en posición FILTRACIÓN";
language_sp["quit_backwash_title"] = "¿Está seguro de querer quitar el modo contralavado?";
language_sp["real_time"] = "Tiempo real";
language_sp["reconnect_to_device_alert_title"] = "¿Cambiar de equipo?";
language_sp["reconnection_needed"] = "Reconexión necesaria";
language_sp["red"] = "Rojo";
language_sp["regulated"] = "Regulado";
language_sp["regulation_available_tank_volume"] = "Volumen producto disponible";
language_sp["regulation_available_tank_volume_help_lock"] = "Bloquear para guardar los cambios";
language_sp["regulation_available_tank_volume_help_unlock"] = "Desbloquear para editar el volumen disponible";
language_sp["regulation_filtration_state"] = "Estado filtración";
language_sp["regulation_injection_state"] = "Inyección en curso";
language_sp["regulation_max_injection_volume_adjustment"] = "Volumen inyección max";
language_sp["regulation_orptitle"] = "Regulación ORP";
language_sp["regulation_phminus"] = "pH-";
language_sp["regulation_phminus_title"] = "Regulación pH-";
language_sp["regulation_phplus"] = "pH+";
language_sp["regulation_phplus_title"] = "Regulación pH+";
language_sp["regulation_phtitle"] = "Regulación pH";
language_sp["regulation_product_type"] = "Tipo de producto inyectado";
language_sp["regulation_volume_product_injected_description"] = "Secuencia de inyección: 1 minuto cada 3 minutos";
language_sp["remember_config"] = "Memorizar esta configuración";
language_sp["rename"] = "Renombrar";
language_sp["repeat_everyday"] = "Repetir todos los días";
language_sp["resend_verification_code"] = "Reenviar el código por correo electrónico";
language_sp["reset_password_code_placeholder"] = "Código de renicialización";
language_sp["reset_password_enter_code"] = "Introduzca el código que ha recibido en su correo (puede tardar algunos minutos, verifique su spam si no lo encuentra)";
language_sp["reset_password_enter_email"] = "Introduzca la dirección e-mail de su cuenta para recibir un código de confirmación.";
language_sp["reset_password_enter_new_password"] = "Introduzca la nueva contraseña de su cuenta.\nLa nueva contraseña deberá respetar estas reglas: al menos 8 caracteres con mayúscula(s) y minúscula(s), una cifra y un carácter especial. ";
language_sp["reset_password_error"] = "Ha ocurrido un error, verifique su conexión a internet e inténtelo de nuevo";
language_sp["reset_password_error_code"] = "Imposible reiniciar la contraseña, verifique que su código de reinicialización ha sido correctamente introducido";
language_sp["reset_password_success"] = "¡Contraseña actualizada con éxito!";
language_sp["restart"] = "Reiniciar";
language_sp["row_pool_sharing_timestamp_expire"] = "Expira el %1$s";
language_sp["row_pool_sharing_timestamp_expired"] = "Expirado el %1$s";
language_sp["salt_level"] = "Tasa de sal";
language_sp["saturday_short"] = "Sab";
language_sp["saved_colors"] = "Colores registrados";
language_sp["schedule_orpsetpoint_warning"] = "La consigna de ORP seleccionada será aplicada a todos los programas.";
language_sp["schedule_program_at"] = "A";
language_sp["schedule_program_at2"] = "Al";
language_sp["schedule_program_during"] = "durante";
language_sp["schedule_program_from"] = "De";
language_sp["schedule_program_from2"] = "Del";
language_sp["schedule_programto"] = "a";
language_sp["schedule_programto2"] = "al";
language_sp["schedule_temp_setpoint_warning"] = "La temperatura elegida será aplicada a todos los programas.";
language_sp["scheduled_operation"] = "Marcha programada";
language_sp["scheduling_timeslot_description"] = "Selecciona la hora del inicio y el fin del programa";
language_sp["scheduling_timeslot_duration_description"] = "Selecciona la hora del inicio y la duración del programa";
language_sp["seconds"] = "segundos";
language_sp["see_debit_history"] = "Ver el historial del caudal";
language_sp["see_pressure_history"] = "Ver historial de la presión";
language_sp["select"] = "Seleccionar";
language_sp["select_clients"] = "Seleccione los equipos asociados que desee";
language_sp["select_master"] = "Seleccione el equipo central";
language_sp["select_zone_for_output"] = "Elige a qué zona esté atribuida cada salida";
language_sp["sensor_debit"] = "Sonda de caudal";
language_sp["sensor_flow"] = "Sonda de caudal";
language_sp["sensor_orp"] = "Sonda ORP";
language_sp["sensor_ph"] = "Sonda pH";
language_sp["sensor_pressure"] = "Detector de presión";
language_sp["sensor_temp"] = "Sonda T°";
language_sp["set_brightness"] = "Regular la intensidad";
language_sp["set_speed"] = "Regular la velocidad";
language_sp["setpoint_picker_dialog_title"] = "Definir la consigna";
language_sp["settings_aws_state_connection_failure"] = "Fallo de conexión";
language_sp["settings_button_aux_type"] = "Configuración";
language_sp["settings_button_aux_type_help"] = "Atención, los programas serán desactivados con el cambio de tipo de auxiliar (los intervalos horarios serán sin embargo conservados).";
language_sp["settings_button_frost_protection_mode"] = "Modo antihielo";
language_sp["settings_button_projector_type_help"] = "Atención, los programas serán reinicializados con el cambio de tipo de proyector.";
language_sp["settings_button_winter_mode"] = "Modo invernaje";
language_sp["settings_dialog_aws_wifi_not_connected_message"] = "La conexión Wifi de su equipo sólo puede configurarse en Bluetooth.";
language_sp["settings_dialog_connnection_in_progress_bt_cancel"] = "Abandonar";
language_sp["settings_dialog_connnection_in_progress_message"] = "Su equipo Phileo intenta conectarse al Wifi.\n\nPuede dejarle continuar o abandonar y configurar una nueva conexión.";
language_sp["settings_flow_state"] = "Estado del flow:";
language_sp["settings_hardware_version"] = "Versión hardware: %1$s";
language_sp["settings_software_version"] = "Versión firmware: %1$s";
language_sp["settings_wifi_connection_error"] = "Error de conexión Wifi";
language_sp["settings_wifi_connection_in_progress"] = "Conexión al Wifi";
language_sp["setup"] = "Instalación";
language_sp["setup_lynx_failed"] = "Fallo de conexión al Lynx";
language_sp["setup_lynx_success"] = "Conexión a Lynx conseguida";
language_sp["setup_new_device_button"] = "Configurar";
language_sp["setup_wifi_choice_credentials"] = "Manual";
language_sp["setup_wifi_choice_lynx"] = "Lynx";
language_sp["setup_wifi_choice_wps"] = "WPS";
language_sp["setup_wifi_credentials_description"] = "Introduzca los datos de la red a la que quiere conectarse.\nAtención, es imposible conectarse a redes 5GHz.";
language_sp["setup_wifi_credentials_failed"] = "Conexión fallida.\n\nVerifique las informaciones introducidas y asegure que la cobertura wifi de su instalación es suficiente.";
language_sp["setup_wifi_credentials_pass_placeholder"] = "Contraseña de la red";
language_sp["setup_wifi_credentials_ssid_placeholder"] = "Nombre de la red";
language_sp["setup_wifi_credentials_wrong_password"] = "Conexión fallida.\n\nLa contraseña introducida es errónea.";
language_sp["setup_wifi_lynx_description"] = "Si ya tiene un Lynx, puede utilizarlo como punto de acceso para conectarse al Wifi.\n\nUna vez que vuestro Lynx estén en modo punto de acceso, pulse el botón \"Conectarse\" aquí debajo y su instalación se conectará.\nDespués, vaya a su Lynx y configure el Wifi: ¡Su instalación tiene ahora acceso a internet a través del punto de acceso del Lynx!";
language_sp["setup_wifi_success"] = "Conexión a Wifi establecida";
language_sp["setup_wifi_wps_description"] = "Wi-Fi Protected Setup (WPS) es una funcionalidad suministrada por numerosos rúteres. Ha sido creada con el objetivo de simplificar el proceso de conexión a una red Wifi segura desde un ordenador u otro aparato.\n\nPara continuar, pulse simplemente en el botón WPS de su rúter, después pulse el botón \"Conexión\" aquí debajo.";
language_sp["setup_wifi_wpsfailed"] = "Conexión fallida.\n\nVerifique que la cobertura wifi de su instalación es suficiente.";
language_sp["shadow_incomplete_reboot_message"] = "Intentando reiniciar, espere 30 segundos...";
language_sp["share_my_pool_bt_share"] = "Compartir";
language_sp["share_my_pool_date_picker_title"] = "Compartir hasta…";
language_sp["share_my_pool_date_picker_validation"] = "Rellene la fecha de expiración";
language_sp["share_my_pool_delete_share_dialog_bt_remove"] = "Borrar";
language_sp["share_my_pool_delete_share_dialog_message"] = "¿Quiere realmente borrar el uso compartido de su piscina con la cuenta\"%1%s\"?";
language_sp["share_my_pool_dialog_contact_not_found_message"] = "Debe rellenar sus datos antes de poder compartir su piscina.";
language_sp["share_my_pool_hint_date"] = "Hasta DD/MM/AAAA";
language_sp["share_my_pool_no_shares"] = "Ningún uso compartido a mostrar.";
language_sp["share_pool_description"] = "Rellene sus datos así como las informaciones relativas a su piscina para poder compartirla con un profesional.";
language_sp["share_pool_new_share"] = "Nuevo uso compartido";
language_sp["share_pool_shared"] = "Mis usos compartidos";
language_sp["share_pool_title"] = "¿Cómo compartir mi piscina?";
language_sp["share_unavailable"] = "Uso compartido de datos no posible";
language_sp["short_ble_history_information"] = "Conecta tu equipo al Wifi para aprovechar el historial de consumo";
language_sp["short_ble_history_information_return_line"] = "Conecta tu equipo\nal Wifi para aprovechar\nel historial de consumo";
language_sp["short_debit_history"] = "Historial de caudal";
language_sp["short_pressure_history"] = "Historial de presión";
language_sp["should_add_to_vigipool_account_alert_message"] = "Hemos constatado que su equipo está conectado a internet y que usted está conectado a una cuenta Vigipool, pero ambos no están ligados entre ellos.\n\n¿Desea ligar este equipo a su cuenta Vigipool para poder controlarlo a distancia?";
language_sp["side_menu_configure"] = "Configurar";
language_sp["side_menu_configure_devices"] = "Mis equipos";
language_sp["side_menu_configure_measurements"] = "Sondas & calibración";
language_sp["side_menu_configure_units"] = "Unidades de medida";
language_sp["side_menu_others"] = "Otros";
language_sp["side_menu_others_cgu"] = "Términos y condiciones";
language_sp["side_menu_others_faq"] = "Preguntas frecuentes";
language_sp["side_menu_others_share_pool"] = "Compartir mi piscina";
language_sp["side_menu_vigipool"] = "Cuenta Vigipool";
language_sp["side_menu_vigipool_connected_devices"] = "Equipamientos conectados";
language_sp["side_menu_vigipool_my_pool"] = "Mi piscina";
language_sp["side_menu_vigipool_sign_in"] = "Conexión / Creación";
language_sp["side_menu_vigipool_sign_out"] = "Desconectarse";
language_sp["sign_in_success_title"] = "Conexión conseguida";
language_sp["sign_in_up_vigipool"] = "¿Crear un cuenta o conectarse al Vigipool?";
language_sp["sign_up_complete_success_title"] = "¡Su cuenta está validada!\nAhora puede iniciar sesión.\n";
language_sp["sign_up_success_description"] = "Recibirá rápidamente un código de verificación por correo electrónico. Una vez recibido, complete el código a continuación para validar su cuenta.";
language_sp["sign_up_success_title"] = "¡Su cuenta ha sido creada!";
language_sp["skip_rinse"] = "Omitir paso de enjuague";
language_sp["something_went_wrong"] = "Ha ocurrido un error.";
language_sp["spotify_connection_lost"] = "Conexión perdida con Spotify";
language_sp["spotify_connection_lost_description"] = "Reproduce música en Spotify y vuelve sobre la aplicación Vigipool para que podamos restaurar la conexión.";
language_sp["spotify_unavailable"] = "Spotify no disponible";
language_sp["spotify_unavailable_description"] = "No somos capaces de comunicar con los servidores de Spotify.\nEsto puede deberse a un problema temporal de su parte o de un problema de conexión a internet de tu teléfono.";
language_sp["start"] = "Comenzar";
language_sp["start2"] = "Arrancar";
language_sp["start_timer"] = "Arrancar el cronómetro";
language_sp["status_accepted"] = "Aceptado";
language_sp["status_denied"] = "Rechazado";
language_sp["status_pending"] = "En espera";
language_sp["stop"] = "Parar";
language_sp["stop_backwash"] = "Para el contralavado";
language_sp["stop_calibration"] = "Parar la calibración";
language_sp["sunday_short"] = "Dom";
language_sp["switch_device_device_type_not_supported"] = "El tipo de equipo %s no es aún soportado por la aplicación Vigipool.";
language_sp["switch_device_message"] = "¿Quiere realmente conectarse al equipo %1$s?";
language_sp["temp_current"] = "Temp. actual";
language_sp["temp_desired"] = "Temp. rectificada";
language_sp["temp_error_meteor_notification"] = "Error de medición de la temperatura del agua. Verifique la conexión de la sonda de temperatura.";
language_sp["temp_measurement_temp_history"] = "Historial de valores de temperatura";
language_sp["temp_measurement_temp_history_ble_hint"] = "El historial de valores de temperatura está disponible solamente utilizando el modo de conexión a distancia:\n\n- su equipo Vigipool debe estar conectado a Wifi\n- debe crear y confirmar su cuenta Vigipool\n- debe conectarse \"A distancia\"";
language_sp["temp_measurement_temp_probe_calibration"] = "Calibración sonda temperatura";
language_sp["temp_measurement_title"] = "Historial de temperatura";
language_sp["temp_min_start"] = "Temperatura mínima de arranque";
language_sp["temp_picker_dialog_title"] = "Elegir la temperatura";
language_sp["temp_probe_calibration_error_dialog_message"] = "Error de calibración, verifique la sonda de Temperatura.";
language_sp["temp_setpoint"] = "Consigna de temperatura";
language_sp["temperature_min_start_help"] = "El tratamiento se pondrá en marcha durante los intervalos horarios elegidos, pero sólo si la temperatura del agua es superior a la temperatura mínima de arranque.";
language_sp["temperature_min_start_help_detailed"] = "La temperatura elegida será también aplicada a todos los parámetros.\nSi la temperatura del agua está debajo de la consigna, el tratamiento no arrancará.";
language_sp["temperature_setpoint_help"] = "El calentador se encenderá durante las horas que usted indique.\nSi la consigna se alcanza, la temperatura será mantenida hasta la hora del fin del programa.";
language_sp["temperature_setpoint_help_detailed"] = "La temperatura elegida será también aplicada a todos los programas.\nSi la temperatura del agua alcanza la consigna y el calentador está encendido, éste funcionará lo justo para mantener la temperatura.";
language_sp["tendency_week"] = "Tendencia 7 días";
language_sp["tension"] = "Tensión";
language_sp["terms_of_use"] = "Condiciones generales de utilización";
language_sp["text_copied_to_clipboard"] = "%1$s copiado en el portapapeles.";
language_sp["text_serial_number"] = "Número de serie";
language_sp["text_watcher_invalid_email"] = "La dirección de correo ha sido validada";
language_sp["text_watcher_lower_case_error"] = "Introduzca al menos una minúscula.";
language_sp["text_watcher_max_length_error"] = "Introduzca al menos %1$s caracteres.";
language_sp["text_watcher_min_length_error"] = "Introduzca al menos %1$d caracteres.";
language_sp["text_watcher_number_error"] = "Introduzca al menos una cifra.";
language_sp["text_watcher_password_confirm_error"] = "Las contraseñas no se corresponden.";
language_sp["text_watcher_password_error"] = "La contraseña no es muy fuerte.";
language_sp["text_watcher_required"] = "Este campo es requerido";
language_sp["text_watcher_special_char_error"] = "Introduzca al menos un carácter especial.";
language_sp["text_watcher_upper_case_error"] = "Introduzca al menos una mayúscula.";
language_sp["theme"] = "Tema";
language_sp["theme_black_and_white"] = "Negro y blanco";
language_sp["theme_disco"] = "Disco";
language_sp["theme_disco2"] = "Disco 2";
language_sp["theme_france"] = "Francia";
language_sp["theme_jamaica"] = "Reggae";
language_sp["theme_rainbow"] = "Arcoiris";
language_sp["theme_spotify_cold_colors"] = "Colores fríos";
language_sp["theme_spotify_hot_colors"] = "Colores cálidos";
language_sp["theme_white"] = "Variación de blanco";
language_sp["thermoregulated_mode_help"] = "El modo termorregulado adaptará la duración de los intervalos de programación en función de la temperatura del agua.\nSi la temperatura del agua es elevada, la filtración funcionará un poco más de lo previsto, e inversamente si la temperatura es baja.";
language_sp["thursday_short"] = "Jue";
language_sp["time_ago"] = "Son las %1$s";
language_sp["time_picker_dialog_sunset_mode_tooltip"] = "Arranque de la iluminación cuando el sol se pone";
language_sp["time_picker_dialog_sunset_mode_tooltip_with_twilight"] = "Arranque de la iluminación cuando el sol se pone (%1$s hoy)";
language_sp["time_picker_dialog_title_end_time"] = "Configurar la hora de fin";
language_sp["time_picker_dialog_title_start_time"] = "Configurar la hora de inicio";
language_sp["title_activity_base_regulation"] = "Regulación";
language_sp["title_activity_bonding"] = "Configuración";
language_sp["title_activity_faq"] = "Preguntas frecuentes";
language_sp["title_activity_probes_and_calibration"] = "Sondas & calibración";
language_sp["title_activity_settings"] = "Parámetros";
language_sp["title_activity_temp_measurement"] = "Medida Temperatura";
language_sp["title_activity_temp_probe_calibration"] = "Calibración Temp";
language_sp["title_activity_update_name"] = "Actualización del nombre";
language_sp["title_activity_wifi_setup"] = "Configuración Wifi";
language_sp["toast_ble_auto_connect_error"] = "Imposible de conectarse automáticamente al último equipo.";
language_sp["toast_serial_number_copied_to_clipboard"] = "Número de serie copiado en el portapapeles.";
language_sp["too_high"] = "Demasiado elevado";
language_sp["too_low"] = "Demasiado bajo";
language_sp["treatment"] = "Tratamiento";
language_sp["tuesday_short"] = "Mar";
language_sp["turbo_mode_tooltip_help"] = "El modo turbo está disponible únicamente cuando la bomba de calor está funcionando, y volverá automáticamente al modo Smart una vez la temperatura de consigna se haya alcanzado";
language_sp["turn_off"] = "Apagar";
language_sp["turn_off_auto"] = "Apagar automáticamente";
language_sp["turn_off_filtration_forced"] = "Parar marcha continua";
language_sp["turn_on"] = "Encender";
language_sp["turn_on_filtration_forced"] = "Activar marcha continua";
language_sp["turn_on_the_light"] = "Encender la iluminación";
language_sp["turned_off"] = "Apagado";
language_sp["twilight"] = "Crepúsculo";
language_sp["twilight_unavailable"] = "Crepúsculo no disponible";
language_sp["unable_to_read_device_data"] = "Error inesperado: imposible leer el caché de los datos del equipo.";
language_sp["units_measure_eu"] = "Métrica (m, L, kg…)";
language_sp["units_measure_na"] = "Imperial (ft, US Gal, lbs…)";
language_sp["units_measure_title"] = "Unidades de medida";
language_sp["unknown"] = "Desconocido";
language_sp["unpair"] = "Borrar";
language_sp["update_action"] = "Actualizar";
language_sp["update_device_for_backwash_description"] = "Para poder disfrutar del contralavado guiado es necesario conectar su instalación a internet y actualizar sus equipos.";
language_sp["update_failed_alert_title"] = "Actualización fallida";
language_sp["update_firmware_ask_state_description"] = "¿Desea instalarlo ahora? (Si no, es posible hacer la actualización en cualquier momento desde la pantalla de parámetros)";
language_sp["update_firmware_error_description"] = "Ha ocurrido un error durante la actualización.";
language_sp["update_firmware_progress_description"] = "Descarga de la actualización en curso…";
language_sp["update_firmware_restart_description"] = "Reinicio en curso…";
language_sp["update_firmware_success_description"] = "¡Actualización instalada con éxito!";
language_sp["update_mandatory"] = "Actualización obligatoria";
language_sp["update_name_validation_error"] = "El nombre debe contener al menos tres caractéres.";
language_sp["update_necessary"] = "Actualización del equipo requerida";
language_sp["update_ota_f1_bt_download_and_install"] = "Descargar & Instalar";
language_sp["update_ota_f1_text_top"] = "Actualización disponible para %1$s (%2$s)";
language_sp["update_ota_f2_text_top"] = "Espere, su equipo se está actualizando.";
language_sp["update_ota_f2_text_top_restarting"] = "Espere, su equipo está reiniciando.";
language_sp["update_ota_f2_text_top_restarting_with_device_type"] = "Espere, su equipo %1$s está reiniciando.";
language_sp["update_ota_f2_text_top_with_device_type"] = "Espere, su equipo %1$s se está actualizando.";
language_sp["update_ota_f2_update_progress"] = "%1$d %%";
language_sp["update_succeed_alert_title"] = "Actualización realizada";
language_sp["validation_required"] = "Este campo es obligatorio.";
language_sp["verification_code"] = "Código :";
language_sp["version_firmware_prefix"] = "Versión firmware: ";
language_sp["version_hardware_prefix"] = "Versión hardware: ";
language_sp["vigipool_account_not_verified_message"] = "Su cuenta de Vigipool no está activada.\n\nPor favor, introduzca el código recibido en su correo electrónico para validar su cuenta.";
language_sp["vigipool_device"] = "equipo Vigipool";
language_sp["vigipool_device_added_success"] = "¡Equipo añadido con éxito!";
language_sp["volume_unit_litre"] = "Litro";
language_sp["volume_unit_us_gallon"] = "Gallon US";
language_sp["volume_unit_us_gallon_unit"] = "US gal";
language_sp["vs_need_tild_or_meteor_alert"] = "Gracias por asociar tu tild VP o tu Meteor VP a tu Antea-VS para poder disfrutar del control de la filtración.";
language_sp["vspump_brand"] = "Marca:";
language_sp["vspump_help"] = "Desactiva la Selección automático si deseas";
language_sp["vspump_model"] = "Modelo:";
language_sp["vspump_new_device_button"] = "Configurar";
language_sp["vspump_onoff_details"] = "con arranque/parada controlable";
language_sp["vspump_select"] = "Elegir otra bomba";
language_sp["vspump_settings"] = "Parametraje de la bomba";
language_sp["vspump_settings_confirm_message"] = "Atención, estos parámetros tienen un impacto sobre el buen funcionamiento del aparato";
language_sp["vspump_settings_confirm_title"] = "Verifica que las informaciones han sido introducidas";
language_sp["vspump_settings_help"] = "Selecciona tu bomba en la lista de abajo";
language_sp["vspump_settings_title"] = "Reglajes de la bomba";
language_sp["vspump_speed"] = "Velocidad";
language_sp["vspump_speed_auto"] = "Velocidad automática";
language_sp["vspump_speed_details"] = "Bomba %1$d velocidades";
language_sp["vspump_speed_eco"] = "Eco";
language_sp["vspump_speed_fast"] = "Turbo";
language_sp["vspump_speed_normal"] = "Normal";
language_sp["vspump_speed_off"] = "Apagado";
language_sp["vspump_type"] = "Tipo de bomba:";
language_sp["water_hardness_hard"] = "Dura";
language_sp["water_hardness_slightly_hard"] = "Ligeramente dura";
language_sp["water_hardness_slightly_soft"] = "Ligeramente dulce";
language_sp["water_hardness_soft"] = "Dulce";
language_sp["water_hardness_very_hard"] = "Muy dura";
language_sp["water_hardness_very_soft"] = "Muy dulce";
language_sp["water_renewal"] = "Modo vigilancia temperatura";
language_sp["water_temperature"] = "Temperatura del agua";
language_sp["water_temperature_error"] = "Error temperatura: %1$s";
language_sp["wednesday_short"] = "Mie";
language_sp["white"] = "Blanco";
language_sp["wifi_lynx_fail_description"] = "Conexión a Lynx fallida";
language_sp["wifi_lynx_in_progress_description"] = "Búsqueda del Lynx para conectarse…";
language_sp["wifi_lynx_success_description"] = "Conexión al Lynx conseguida";
language_sp["wifi_setup_error_dialog_failure_message"] = "Error de conexión Wifi, gracias de verificar su SSID y su contraseña.";
language_sp["wifi_setup_error_dialog_failure_message_wps"] = "Error de conexión Wifi, verifique que está lo suficientemente cerca del rúter.";
language_sp["wifi_setup_error_dialog_timeout_message"] = "Tiempo de espera superado para la conexión Wifi";
language_sp["wifi_setup_error_dialog_timeout_message_ssid"] = "Tiempo de espera superado para la conexión Wifi.\n\nVerifique las informaciones escritas y verifique que la cobertura Wifi de su instalación es suficiente.";
language_sp["wifi_setup_error_dialog_timeout_message_wps"] = "Tiempo de espera superado para la conexión Wifi.\n\nVerifique que la cobertura Wifi de su instalación es suficiente.";
language_sp["wifi_setup_error_dialog_wrong_password"] = "Verifique su contraseña.";
language_sp["wifi_setup_lynx_hint"] = "Si usted posse un Lynx, puede utilizarlo como punto de acceso para poder conectarse al Wifi.\n\nUna vez que su Lynx esté en modo punto de acceso, pulse sobre el botón \"Conectarse\" aquí debajo y su instalación se conectará.\nDespués, vaya a su Lynx y configure el Wifi: ¡su instalación tiene ahora acceso a internet a través del punto de acceso del Lynx!";
language_sp["wifi_setup_ssid_5ghz_hint"] = "Atención, las redes Wifi 5GHz no son soportadas.";
language_sp["wifi_setup_ssid_hint_ssid"] = "SSID";
language_sp["wifi_setup_ssid_scan_qr_code"] = "Escanee el Código QR de la contraseña";
language_sp["wifi_setup_success_dialog_button_setup"] = "Gestionar mi cuenta";
language_sp["wifi_setup_success_dialog_message"] = "La conexión Wifi ha sido configurada con éxito.\n\nPuede ahora crear o conectarse a su cuenta Vigipool.";
language_sp["wifi_setup_wps_hint"] = "Wi-Fi Protected Setup (WPS) es una funcionalidad suministrada por numerosos rúteres. Ha sido creada con el objetivo de simplificar el proceso de conexión a una red Wifi segura desde un ordenador u otro aparato.\n\nPara continuar, pulse simplemente sobre el botón WPS de su rúter, después pulse sobre el botón \"Conexión\" aquí debajo.";
language_sp["wifi_state_connected_no_internet"] = "Wifi conectado, no hay internet";
language_sp["wifi_state_in_progress"] = "Conexión Wifi en curso";
language_sp["wifi_state_internet"] = "Conectado a internet";
language_sp["wifi_state_no_internet"] = "No hay internet";
language_sp["wifi_state_not_connected"] = "Wifi no conectado";
language_sp["wifi_wpsin_progress_description"] = "Pulse sobre el botón WPS de su rúter para poder conectar su aparato Vigipool\n\nIntento de conexión en curso…";
language_sp["winter_mode_disabled"] = "El modo invernaje está desactivado en la versión %1$s.\n\nConecte su instalación Vigipool a internet para beneficiarse de las últimas actualizaciones y activar esta funcionalidad.";
language_sp["winter_mode_short"] = "Invernaje";
language_sp["wix_settings_merge_zones"] = "Fusionar las zonas";
language_sp["write_cancel_not_connected"] = "Problema de comunicación con el equipo";
language_sp["write_cancel_poor_connection"] = "Su teléfono tiene una mala conexión";
language_sp["zones"] = "Zonas";
language_sp["ios_with_thermoregulation"] = "Con termorregulación ≃ %@";

language_sp["forced_for_temp"] = "La filtración está en camino para actualizar la temperatura.";
function get_text(id) {

    var language = $(".vigipool_language").html();

    switch (language) {
        case "fr_FR":
            if (language_fr[id] === undefined)
                return "ERR : " + id;
            if (language_fr[id] !== undefined)
                return language_fr[id];
        case "en_US":
            if (language_en[id] === undefined)
                return "ERR : " + id;
            if (language_en[id] !== undefined)
                return language_en[id];
        case "es_ES":
            if (language_sp[id] === undefined)
                return "ERR : " + id;
            if (language_sp[id] !== undefined)
                return language_sp[id];
        case "de_DE":
            if (language_ge[id] === undefined)
                return "ERR : " + id;
            if (language_ge[id] !== undefined)
                return language_ge[id];
        case "it_IT":
            if (language_it[id] === undefined)
                return "ERR : " + id;
            if (language_it[id] !== undefined)
                return language_it[id];
        default:
            if (language_en[id] === undefined)
                return "ERR : " + id;
            if (language_en[id] !== undefined)
                return language_en[id];
    }
}

function change_aux_conf(aux_conf, aux_type, bit, value) {

    var aux_conf = parseInt(aux_conf);
    var aux_type = parseInt(aux_type);

    console.log("aux_conf = " + aux_conf);

    var aux_conf = converter("dec", "bin", aux_conf);

    console.log("aux_conf = " + aux_conf);

    var en_marche = aux_conf[7];
    var asservi_filt = aux_conf[6];
    var prio_aux = aux_conf[5];
    var consigne_temp = aux_conf[4];
    var aux_min_temp = aux_conf[3];
    var consigne_orp = aux_conf[2];

    console.log("aux_conf = " + aux_conf);
    console.log("en_marche = " + en_marche);
    console.log("asservi_filt = " + asservi_filt);
    console.log("prio_aux = " + prio_aux);
    console.log("consigne_temp = " + consigne_temp);
    console.log("aux_min_temp = " + aux_min_temp);
    console.log("consigne_orp = " + consigne_orp);

    console.log("Before -> " + `00${consigne_orp}${aux_min_temp}${consigne_temp}${prio_aux}${asservi_filt}${en_marche}`);

    switch (aux_type) {
        case 0:
            switch (bit) {
                case 0:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 1:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 2:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 3:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 4:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 5:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                default:
                    console.log(`ERROR : bit not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
            }
            break;
        case 1:
            switch (bit) {
                case 0:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 1:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 2:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 3:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 4:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 5:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                default:
                    console.log(`ERROR : bit not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
            }
            break;
        case 2:
            switch (bit) {
                case 0:
                    en_marche = value;
                    break;
                case 1:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 2:
                    prio_aux = value;
                    break;
                case 3:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 4:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 5:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                default:
                    console.log(`ERROR : bit not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
            }
            break;
        case 3:
            switch (bit) {
                case 0:
                    en_marche = value;
                    break;
                case 1:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 2:
                    prio_aux = value;
                    break;
                case 3:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 4:
                    aux_min_temp = value;
                    break;
                case 5:
                    consigne_orp = value;
                    break;
                default:
                    console.log(`ERROR : bit not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
            }
            break;
        case 4:
            switch (bit) {
                case 0:
                    en_marche = value;
                    break;
                case 1:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 2:
                    prio_aux = value;
                    break;
                case 3:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 4:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 5:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                default:
                    console.log(`ERROR : bit not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
            }
            break;
        case 5:
            switch (bit) {
                case 0:
                    en_marche = value;
                    break;
                case 1:
                    asservi_filt = value;
                    break;
                case 2:
                    prio_aux = value;
                    break;
                case 3:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 4:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                case 5:
                    console.log(`ERROR : It is forbidden to change the variable in this case : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
                default:
                    console.log(`ERROR : bit not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
                    break;
            }
            break;
        default:
            console.log(`ERROR : aux_type not found : aux_conf = ${aux_conf} | aux_type = ${aux_type} | bit = ${bit} | value = ${value}`);
            break;
    }

    console.log("After -> " + `00${consigne_orp}${aux_min_temp}${consigne_temp}${prio_aux}${asservi_filt}${en_marche}`);

    return converter("bin", "dec", `00${consigne_orp}${aux_min_temp}${consigne_temp}${prio_aux}${asservi_filt}${en_marche}`);
}



function create_slider(id, init_value, division, unit, disable, type, variable, info, desired, value, special = "") {

    // console.log("id = " + id);
    // console.log("init_value = " + init_value);
    // console.log("division = " + division);
    // console.log("unit = " + unit);
    // console.log("disable = " + disable);
    // console.log("type = " + type);
    // console.log("variable = " + variable);
    // console.log("info = " + info);
    // console.log("desired = " + desired);
    // console.log("value = " + value);
    // console.log("special = " + special);

    var slider = document.getElementById("my" + id);
    slider.value = init_value;

    var output = document.getElementById(id);

    if (slider.value == 0 && disable)
        output.innerHTML = get_text("disabled");
    else if (special === "water_hardness")
        output.innerHTML = get_water_hardness(slider.value);
    else if (special === "time_4")
        output.innerHTML = converter("dec", "time_4", parseInt(slider.value));
    else
        output.innerHTML = (slider.value / division) + " " + unit; // Display the default slider value

    // Update the current slider value (each time you drag the slider handle)
    slider.oninput = function () {
        if (slider.value == 0 && disable)
            output.innerHTML = get_text("disabled");
        else if (special === "water_hardness")
            output.innerHTML = get_water_hardness(slider.value);
        else if (special === "time_4")
            output.innerHTML = converter("dec", "time_4", parseInt(slider.value));
        else
            output.innerHTML = (slider.value / division) + " " + unit; // Display the default slider value
    };

    switch (id) {
        case "light_timer":
            var value_mqtt = convert_time_4_to_timer(slider.value * value);
            break;
        default:
            var value_mqtt = slider.value * value;
            break;
    }

    slider.onclick = function () {
        quick_send(type, variable, info, desired, value_mqtt);
    };
    slider.ontouchend = function () {
        quick_send(type, variable, info, desired, value_mqtt);
    };

    //    slider.onabort = function () {
    //        console.log("onabort");
//    }
//    slider.onafterprint = function () {
//        console.log("onafterprint");
//    }
//    slider.onanimationend = function () {
//        console.log("onanimationend");
//    }
//    slider.onanimationiteration = function () {
//        console.log("onanimationiteration");
//    }
//    slider.onanimationstart = function () {
//        console.log("onanimationstart");
//    }
//    slider.onbeforeprint = function () {
//        console.log("onbeforeprint");
//    }
//    slider.onbeforeunload = function () {
//        console.log("onbeforeunload");
//    }
//    slider.onblur = function () {
//        console.log("onblur");
//    }
//    slider.oncanplay = function () {
//        console.log("oncanplay");
//    }
//    slider.oncanplaythrough = function () {
//        console.log("oncanplaythrough");
//    }
//    slider.onchange = function () {
//        console.log("onchange");
//    }
//    slider.onclick = function () {
//        console.log("onclick");
//    }
//    slider.oncontextmenu = function () {
//        console.log("oncontextmenu");
//    }
//    slider.oncopy = function () {
//        console.log("oncopy");
//    }
//    slider.oncut = function () {
//        console.log("oncut");
//    }
//    slider.ondblclick = function () {
//        console.log("ondblclick");
//    }
//    slider.ondrag = function () {
//        console.log("ondrag");
//    }
//    slider.ondragend = function () {
//        console.log("ondragend");
//    }
//    slider.ondragenter = function () {
//        console.log("ondragenter");
//    }
//    slider.ondragleave = function () {
//        console.log("ondragleave");
//    }
//    slider.ondragover = function () {
//        console.log("ondragover");
//    }
//    slider.ondragstart = function () {
//        console.log("ondragstart");
//    }
//    slider.ondrop = function () {
//        console.log("ondrop");
//    }
//    slider.ondurationchange = function () {
//        console.log("ondurationchange");
//    }
//    slider.onended = function () {
//        console.log("onended");
//    }
//    slider.onerror = function () {
//        console.log("onerror");
//    }
//    slider.onfocus = function () {
//        console.log("onfocus");
//    }
//    slider.onfocusin = function () {
//        console.log("onfocusin");
//    }
//    slider.onfocusout = function () {
//        console.log("onfocusout");
//    }
//    slider.onfullscreenchange = function () {
//        console.log("onfullscreenchange");
//    }
//    slider.onfullscreenerror = function () {
//        console.log("onfullscreenerror");
//    }
//    slider.onhashchange = function () {
//        console.log("onhashchange");
//    }
//    slider.oninput = function () {
//        console.log("oninput");
//    }
//    slider.oninvalid = function () {
//        console.log("oninvalid");
//    }
//    slider.onkeydown = function () {
//        console.log("onkeydown");
//    }
//    slider.onkeypress = function () {
//        console.log("onkeypress");
//    }
//    slider.onkeyup = function () {
//        console.log("onkeyup");
//    }
//    slider.onload = function () {
//        console.log("onload");
//    }
//    slider.onloadeddata = function () {
//        console.log("onloadeddata");
//    }
//    slider.onloadedmetadata = function () {
//        console.log("onloadedmetadata");
//    }
//    slider.onloadstart = function () {
//        console.log("onloadstart");
//    }
//    slider.onmessage = function () {
//        console.log("onmessage");
//    }
//    slider.onmousedown = function () {
//        console.log("onmousedown");
//    }
//    slider.onmouseenter = function () {
//        console.log("onmouseenter");
//    }
//    slider.onmouseleave = function () {
//        console.log("onmouseleave");
//    }
//    slider.onmousemove = function () {
//        console.log("onmousemove");
//    }
//    slider.onmouseover = function () {
//        console.log("onmouseover");
//    }
//    slider.onmouseout = function () {
//        console.log("onmouseout");
//    }
//    slider.onmouseup = function () {
//        console.log("onmouseup");
//    }
//    slider.onoffline = function () {
//        console.log("onoffline");
//    }
//    slider.ononline = function () {
//        console.log("ononline");
//    }
//    slider.onopen = function () {
//        console.log("onopen");
//    }
//    slider.onpagehide = function () {
//        console.log("onpagehide");
//    }
//    slider.onpageshow = function () {
//        console.log("onpageshow");
//    }
//    slider.onpaste = function () {
//        console.log("onpaste");
//    }
//    slider.onpause = function () {
//        console.log("onpause");
//    }
//    slider.onplay = function () {
//        console.log("onplay");
//    }
//    slider.onplaying = function () {
//        console.log("onplaying");
//    }
//    slider.onprogress = function () {
//        console.log("onprogress");
//    }
//    slider.onratechange = function () {
//        console.log("onratechange");
//    }
//    slider.onresize = function () {
//        console.log("onresize");
//    }
//    slider.onreset = function () {
//        console.log("onreset");
//    }
//    slider.onscroll = function () {
//        console.log("onscroll");
//    }
//    slider.onsearch = function () {
//        console.log("onsearch");
//    }
//    slider.onseeked = function () {
//        console.log("onseeked");
//    }
//    slider.onseeking = function () {
//        console.log("onseeking");
//    }
//    slider.onselect = function () {
//        console.log("onselect");
//    }
//    slider.onshow = function () {
//        console.log("onshow");
//    }
//    slider.onstalled = function () {
//        console.log("onstalled");
//    }
//    slider.onsubmit = function () {
//        console.log("onsubmit");
//    }
//    slider.onsuspend = function () {
//        console.log("onsuspend");
//    }
//    slider.ontimeupdate = function () {
//        console.log("ontimeupdate");
//    }
//    slider.ontoggle = function () {
//        console.log("ontoggle");
//    }
//    slider.ontouchcancel = function () {
//        console.log("ontouchcancel");
//    }
//    slider.ontouchend = function () {
//        console.log("ontouchend");
//    }
//    slider.ontouchmove = function () {
//        console.log("ontouchmove");
//    }
//    slider.ontouchstart = function () {
//        console.log("ontouchstart");
//    }
//    slider.ontransitionend = function () {
//        console.log("ontransitionend");
//    }
//    slider.onunload = function () {
//        console.log("onunload");
//    }
//    slider.onvolumechange = function () {
//        console.log("onvolumechange");
//    }
//    slider.onwaiting = function () {
//        console.log("onwaiting");
//    }
//    slider.onwheel = function () {
//        console.log("onwheel");
//    }
}

function create_slider_sched(id, init_value, division, unit, disable, type, variable, info, desired, value, special = "") {

//    console.log("id = " + id);
//    console.log("init_value = " + init_value);
//    console.log("division = " + division);
//    console.log("unit = " + unit);
//    console.log("disable = " + disable);
//    console.log("type = " + type);
//    console.log("variable = " + variable);
//    console.log("info = " + info);
//    console.log("desired = " + desired);
//    console.log("value = " + value);
//    console.log("special = " + special);

    var slider = document.getElementById("my" + id);
    slider.value = init_value;

    var output = document.getElementById(id);

    if (slider.value == 0 && disable)
        output.innerHTML = get_text("disabled");
    else if (special === "water_hardness")
        output.innerHTML = get_water_hardness(slider.value);
    else if (special === "time_4")
        output.innerHTML = converter("dec", "time_4", parseInt(slider.value));
    else if (special === "time_2")
        output.innerHTML = converter("dec", "time_2", parseInt(slider.value));
    else
        output.innerHTML = (slider.value / division) + " " + unit; // Display the default slider value

    // Update the current slider value (each time you drag the slider handle)
    slider.oninput = function () {
        if (slider.value == 0 && disable)
            output.innerHTML = get_text("disabled");
        else if (special === "water_hardness")
            output.innerHTML = get_water_hardness(slider.value);
        else if (special === "time_4")
            output.innerHTML = converter("dec", "time_4", parseInt(slider.value));
        else if (special === "time_2")
            output.innerHTML = converter("dec", "time_2", parseInt(slider.value));
        else
            output.innerHTML = (slider.value / division) + " " + unit; // Display the default slider value
    };



    slider.onclick = function () {
        switch (variable) {
            case "vigipool_modal_auxiliary_prog_1_consigne_temp" :
                set_auxiliary_sched_value("prog_1_bright", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_1_sched_1_begin" :
                set_auxiliary_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_1_sched_1_end" :
                set_auxiliary_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_1_sched_2_begin" :
                set_auxiliary_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_1_sched_2_end" :
                set_auxiliary_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_1_sched_3_begin" :
                set_auxiliary_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_1_sched_3_end" :
                set_auxiliary_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_2_sched_1_begin" :
                set_auxiliary_sched_value("prog_2_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_2_sched_1_end" :
                set_auxiliary_sched_value("prog_2_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_2_sched_2_begin" :
                set_auxiliary_sched_value("prog_2_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_2_sched_2_end" :
                set_auxiliary_sched_value("prog_2_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_2_sched_3_begin" :
                set_auxiliary_sched_value("prog_2_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_prog_2_sched_3_end" :
                set_auxiliary_sched_value("prog_2_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_1_sched_1_begin" :
                set_filtration_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_1_sched_1_end" :
                set_filtration_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_1_sched_2_begin" :
                set_filtration_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_1_sched_2_end" :
                set_filtration_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_1_sched_3_begin" :
                set_filtration_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_1_sched_3_end" :
                set_filtration_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_2_sched_1_begin" :
                set_filtration_sched_value("prog_2_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_2_sched_1_end" :
                set_filtration_sched_value("prog_2_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_2_sched_2_begin" :
                set_filtration_sched_value("prog_2_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_2_sched_2_end" :
                set_filtration_sched_value("prog_2_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_2_sched_3_begin" :
                set_filtration_sched_value("prog_2_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_prog_2_sched_3_end" :
                set_filtration_sched_value("prog_2_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_1_begin" :
                set_light_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_1_end" :
                set_light_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_2_begin" :
                set_light_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_2_end" :
                set_light_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_3_begin" :
                set_light_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_3_end" :
                set_light_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_1_begin" :
                set_light_sched_value("prog_2_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_1_end" :
                set_light_sched_value("prog_2_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_2_begin" :
                set_light_sched_value("prog_2_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_2_end" :
                set_light_sched_value("prog_2_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_3_begin" :
                set_light_sched_value("prog_2_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_3_end" :
                set_light_sched_value("prog_2_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_bright" :
                set_sched_value("prog_1_bright", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_1_begin" :
                set_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_1_end" :
                set_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_2_begin" :
                set_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_2_end" :
                set_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_3_begin" :
                set_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_3_end" :
                set_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_bright" :
                set_sched_value("prog_2_bright", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_1_begin" :
                set_sched_value("prog_2_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_1_end" :
                set_sched_value("prog_2_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_2_begin" :
                set_sched_value("prog_2_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_2_end" :
                set_sched_value("prog_2_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_3_begin" :
                set_sched_value("prog_2_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_3_end" :
                set_sched_value("prog_2_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_light_m_prog_1_sched_1_begin" :
                set_light_m_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_light_m_prog_1_sched_1_end" :
                set_light_m_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_1_begin" :
                set_filtration_m_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_1_end" :
                set_filtration_m_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_2_begin" :
                set_filtration_m_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_2_end" :
                set_filtration_m_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_3_begin" :
                set_filtration_m_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_3_end" :
                set_filtration_m_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_1_prog_1_sched_1_begin" :
                set_auxiliary_1_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_auxiliary_1_prog_1_sched_1_end" :
                set_auxiliary_1_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            default:
                console.log("variable not found : " + variable);
                break;
        }
    };
    slider.ontouchend = function () {
        switch (variable) {
            case "vigipool_modal_light_prog_1_sched_1_begin" :
                set_light_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_1_end" :
                set_light_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_2_begin" :
                set_light_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_2_end" :
                set_light_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_3_begin" :
                set_light_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_1_sched_3_end" :
                set_light_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_1_begin" :
                set_light_sched_value("prog_2_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_1_end" :
                set_light_sched_value("prog_2_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_2_begin" :
                set_light_sched_value("prog_2_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_2_end" :
                set_light_sched_value("prog_2_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_3_begin" :
                set_light_sched_value("prog_2_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_light_prog_2_sched_3_end" :
                set_light_sched_value("prog_2_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_bright" :
                set_sched_value("prog_1_bright", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_1_begin" :
                set_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_1_end" :
                set_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_2_begin" :
                set_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_2_end" :
                set_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_3_begin" :
                set_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_1_sched_3_end" :
                set_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_bright" :
                set_sched_value("prog_2_bright", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_1_begin" :
                set_sched_value("prog_2_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_1_end" :
                set_sched_value("prog_2_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_2_begin" :
                set_sched_value("prog_2_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_2_end" :
                set_sched_value("prog_2_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_3_begin" :
                set_sched_value("prog_2_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_x3_state_prog_2_sched_3_end" :
                set_sched_value("prog_2_sched_3_end", slider.value * value);
                break;
            case "vigipool_modal_light_m_prog_1_sched_1_begin" :
                set_light_m_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_light_m_prog_1_sched_1_end" :
                set_light_m_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_1_begin" :
                set_filtration_m_sched_value("prog_1_sched_1_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_1_end" :
                set_filtration_m_sched_value("prog_1_sched_1_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_2_begin" :
                set_filtration_m_sched_value("prog_1_sched_2_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_2_end" :
                set_filtration_m_sched_value("prog_1_sched_2_end", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_3_begin" :
                set_filtration_m_sched_value("prog_1_sched_3_begin", slider.value * value);
                break;
            case "vigipool_modal_filtration_m_prog_1_sched_3_end" :
                set_filtration_m_sched_value("prog_1_sched_3_end", slider.value * value);
                break;
            default:
                console.log("variable not found : " + variable);
                break;
        }
    };

    // test_input(slider);
}

function get_water_hardness(water_hardness) {
    switch (parseInt(water_hardness)) {
        case 0:
            return get_text("very_soft");
        case 1:
            return get_text("soft");
        case 2:
            return get_text("slightly_soft");
        case 3:
            return get_text("slightly_hard");
        case 4:
            return get_text("hard");
        case 5:
            return get_text("very_hard");
    }

}

var last_is_zelix = false;

function is_zelix(eq_position) {

    if (isNaN(eq_position)) {
        return last_is_zelix;
    } else {
        last_is_zelix = false;
    }

    // console.log("eq_position = " + eq_position);

    var all_mqtt_data = get_all_mqtt_data();
    // console.log("all_mqtt_data = " + all_mqtt_data);

    var devices = all_mqtt_data[eq_position];
    // console.log("devices = " + devices);

    const pattern = /zelix_/;
    // console.log("pattern = " + pattern);

    for (var i = 0, max = devices.length; i < max; i++) {
        var device = devices[i];
        // console.log("device = " + device);

        if (pattern.test(devices[i])) {
            // console.log("return true");
            last_is_zelix = true;
            return true;
        }
    }

// console.log("return false");
    last_is_zelix = false;
    return false;
}

function is_device(device_id, device_search) {

    var pattern = /_/;

    switch (device_search) {
        case "tild":
            pattern = /tild_/;
            break;
        case "phileo":
            pattern = /phileox_/;
            break;
        case "ziphox":
            pattern = /ziphox_/;
            break;
        case "ofix":
            pattern = /ziphox_/;
            break;
        case "anteam":
            pattern = /anteam_/;
            break;
        case "zelix":
            pattern = /zelix_/;
            break;
        case "zelia":
            pattern = /zelix_/;
            break;
        case "daisyox":
            pattern = /daisyox_/;
            break;
        default:
            console.log("ERROR device_id = " + device_id);
            break;
    }

    return pattern.test(device_id);
}

function check_screen() {
    var data = $("[data-eqtype='vigipool']").length;
    // console.log("data = " + data);

    for (var i = 0, max = data; i < max; i++) {

        if ($(".ui-mobile").length > 0) {
            // console.log("mobile");
            var perfect_height = $(".scrolling-image").eq(i).height();
            // console.log("perfect_height = " + perfect_height);

            $("[data-eqtype='vigipool']").eq(i).height(perfect_height);


        } else {
            // console.log("fix");
            var width = $("[data-eqtype='vigipool']").eq(i).width();
            var height = $("[data-eqtype='vigipool']").eq(i).height();
            // console.log("width = " + width);
            // console.log("height = " + height);

            if (width < 200 || height < 300) {
                $(".top_box.top_overlay").eq(i).html("<h5>" + get_text("window_size_error") + "</h5>");
            }
        }
    }
}


function check_data() {
    var all_mqtt_data = get_all_mqtt_data();
    // console.log("all_mqtt_data = ");
    // console.log(all_mqtt_data);

    for (var i = 0, max = all_mqtt_data.length; i < max; i++) {
        if (all_mqtt_data[i].length < 2) {
            // console.log("no data found");
            $(".top_box.top_overlay").eq(i).html("<h5>" + get_text("no_mqtt_data") + "</h5>");
        } else {
            // console.log("data found");
        }
    }
}

function convert_time_4_to_timer(value) {
    value = parseInt(value);
    // console.log("Step 1 : value = " + value);

    value = value * (3600 / 4);
    // console.log("Step 2 : value = " + value);

    value = value + Date.now();
    // console.log("Step 3 : value = " + value);

    value = value / 1000;
    // console.log("Step 4 : value = " + value);

    value = parseInt(value);
    // console.log("Step 5 : value = " + value);
    // console.log("Step 6 : debug = 1691148210");

    return value;
}

function binary_to_off_on(binary) {
    switch (binary) {
        case 0:
            return get_text("off");
        case 1:
            return get_text("on");
        default:
            return "-";
    }
}

function binary_to_open_close(binary) {
    switch (binary) {
        case 0:
            return get_text("open");
        case 1:
            return get_text("close");
        default:
            return "-";
    }
}

function link_variable_to_buttons(ely_duration_theo, vigipool_modal_ely_daily_production_duration_, min, max) {

    for (var i = min; i < max; i++) {
        $("." + vigipool_modal_ely_daily_production_duration_ + i).removeClass("btn-primary");
    }

    $("." + vigipool_modal_ely_daily_production_duration_ + ely_duration_theo).addClass("btn-primary");
}


function set_title(ip_selected, id_selected, title_place) {
    // console.log("ip_selected = " + ip_selected);
    // console.log("id_selected = " + id_selected);
    // console.log("title_place = " + title_place);
    $("." + title_place).html(id_selected + " (" + ip_selected + ")");
}

function show_history(flow_on, eq_modal)
{
    eq_modal = parseInt(eq_modal);

    while (eq_modal > 0) {

        var html = $("[data-template='vigipool_" + flow_on + "']").eq(eq_modal).html();

        if (html !== undefined) {
            $("[data-template='vigipool_" + flow_on + "']").eq(eq_modal).click();
            return;
        }

        eq_modal = eq_modal - 1;
    }
}

$('.vigipool_ui_init_fail_button').eq(1).click(function () {
    console.log(`Launching the script (${1})`);
    $('.vigipool_scanner').eq(1).click();
    console.log(`updates ${1}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(2).click(function () {
    console.log(`Launching the script (${2})`);
    $('.vigipool_scanner').eq(2).click();
    console.log(`updates ${2}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(3).click(function () {
    console.log(`Launching the script (${3})`);
    $('.vigipool_scanner').eq(3).click();
    console.log(`updates ${3}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(4).click(function () {
    console.log(`Launching the script (${4})`);
    $('.vigipool_scanner').eq(4).click();
    console.log(`updates ${4}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(5).click(function () {
    console.log(`Launching the script (${5})`);
    $('.vigipool_scanner').eq(5).click();
    console.log(`updates ${5}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(6).click(function () {
    console.log(`Launching the script (${6})`);
    $('.vigipool_scanner').eq(6).click();
    console.log(`updates ${6}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(7).click(function () {
    console.log(`Launching the script (${7})`);
    $('.vigipool_scanner').eq(7).click();
    console.log(`updates ${7}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(8).click(function () {
    console.log(`Launching the script (${8})`);
    $('.vigipool_scanner').eq(8).click();
    console.log(`updates ${8}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(9).click(function () {
    console.log(`Launching the script (${9})`);
    $('.vigipool_scanner').eq(9).click();
    console.log(`updates ${9}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(10).click(function () {
    console.log(`Launching the script (${10})`);
    $('.vigipool_scanner').eq(10).click();
    console.log(`updates ${10}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(11).click(function () {
    console.log(`Launching the script (${11})`);
    $('.vigipool_scanner').eq(11).click();
    console.log(`updates ${11}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(12).click(function () {
    console.log(`Launching the script (${12})`);
    $('.vigipool_scanner').eq(12).click();
    console.log(`updates ${12}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(13).click(function () {
    console.log(`Launching the script (${13})`);
    $('.vigipool_scanner').eq(13).click();
    console.log(`updates ${13}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(14).click(function () {
    console.log(`Launching the script (${14})`);
    $('.vigipool_scanner').eq(14).click();
    console.log(`updates ${14}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(15).click(function () {
    console.log(`Launching the script (${15})`);
    $('.vigipool_scanner').eq(15).click();
    console.log(`updates ${15}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(16).click(function () {
    console.log(`Launching the script (${16})`);
    $('.vigipool_scanner').eq(16).click();
    console.log(`updates ${16}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(17).click(function () {
    console.log(`Launching the script (${17})`);
    $('.vigipool_scanner').eq(17).click();
    console.log(`updates ${17}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(18).click(function () {
    console.log(`Launching the script (${18})`);
    $('.vigipool_scanner').eq(18).click();
    console.log(`updates ${18}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(19).click(function () {
    console.log(`Launching the script (${19})`);
    $('.vigipool_scanner').eq(19).click();
    console.log(`updates ${19}`);
    actualize_data();
});
$('.vigipool_ui_init_fail_button').eq(20).click(function () {
    console.log(`Launching the script (${20})`);
    $('.vigipool_scanner').eq(20).click();
    console.log(`updates ${20}`);
    actualize_data();
});
// Hist

$('.vigipool_ui_value_ph_ui').unbind();
$('.vigipool_ui_value_ph_ui').eq(0).click(function () {
    $("[data-template='vigipool_value_ph']").eq(0).click();
});
$('.vigipool_ui_value_ph_ui').eq(1).click(function () {
    $("[data-template='vigipool_value_ph']").eq(1).click();
});
$('.vigipool_ui_value_ph_ui').eq(2).click(function () {
    $("[data-template='vigipool_value_ph']").eq(2).click();
});
$('.vigipool_ui_value_ph_ui').eq(3).click(function () {
    $("[data-template='vigipool_value_ph']").eq(3).click();
});
$('.vigipool_ui_value_ph_ui').eq(4).click(function () {
    $("[data-template='vigipool_value_ph']").eq(4).click();
});
$('.vigipool_ui_value_ph_ui').eq(5).click(function () {
    $("[data-template='vigipool_value_ph']").eq(5).click();
});
$('.vigipool_ui_value_ph_ui').eq(6).click(function () {
    $("[data-template='vigipool_value_ph']").eq(6).click();
});
$('.vigipool_ui_value_ph_ui').eq(7).click(function () {
    $("[data-template='vigipool_value_ph']").eq(7).click();
});
$('.vigipool_ui_value_ph_ui').eq(8).click(function () {
    $("[data-template='vigipool_value_ph']").eq(8).click();
});
$('.vigipool_ui_value_ph_ui').eq(9).click(function () {
    $("[data-template='vigipool_value_ph']").eq(9).click();
});
$('.vigipool_ui_value_ph_ui').eq(10).click(function () {
    $("[data-template='vigipool_value_ph']").eq(10).click();
});
$('.vigipool_ui_value_ph_ui').eq(11).click(function () {
    $("[data-template='vigipool_value_ph']").eq(11).click();
});
$('.vigipool_ui_value_ph_ui').eq(12).click(function () {
    $("[data-template='vigipool_value_ph']").eq(12).click();
});
$('.vigipool_ui_value_ph_ui').eq(13).click(function () {
    $("[data-template='vigipool_value_ph']").eq(13).click();
});
$('.vigipool_ui_value_ph_ui').eq(14).click(function () {
    $("[data-template='vigipool_value_ph']").eq(14).click();
});
$('.vigipool_ui_value_ph_ui').eq(15).click(function () {
    $("[data-template='vigipool_value_ph']").eq(15).click();
});
$('.vigipool_ui_value_ph_ui').eq(16).click(function () {
    $("[data-template='vigipool_value_ph']").eq(16).click();
});
$('.vigipool_ui_value_ph_ui').eq(17).click(function () {
    $("[data-template='vigipool_value_ph']").eq(17).click();
});
$('.vigipool_ui_value_ph_ui').eq(18).click(function () {
    $("[data-template='vigipool_value_ph']").eq(18).click();
});
$('.vigipool_ui_value_ph_ui').eq(19).click(function () {
    $("[data-template='vigipool_value_ph']").eq(19).click();
});
$('.vigipool_ui_value_ph_ui').eq(20).click(function () {
    $("[data-template='vigipool_value_ph']").eq(20).click();
});
$('.vigipool_ui_value_orp_ui').unbind();
$('.vigipool_ui_value_orp_ui').eq(0).click(function () {
    $("[data-template='vigipool_value_orp']").eq(0).click();
});
$('.vigipool_ui_value_orp_ui').eq(1).click(function () {
    $("[data-template='vigipool_value_orp']").eq(1).click();
});
$('.vigipool_ui_value_orp_ui').eq(2).click(function () {
    $("[data-template='vigipool_value_orp']").eq(2).click();
});
$('.vigipool_ui_value_orp_ui').eq(3).click(function () {
    $("[data-template='vigipool_value_orp']").eq(3).click();
});
$('.vigipool_ui_value_orp_ui').eq(4).click(function () {
    $("[data-template='vigipool_value_orp']").eq(4).click();
});
$('.vigipool_ui_value_orp_ui').eq(5).click(function () {
    $("[data-template='vigipool_value_orp']").eq(5).click();
});
$('.vigipool_ui_value_orp_ui').eq(6).click(function () {
    $("[data-template='vigipool_value_orp']").eq(6).click();
});
$('.vigipool_ui_value_orp_ui').eq(7).click(function () {
    $("[data-template='vigipool_value_orp']").eq(7).click();
});
$('.vigipool_ui_value_orp_ui').eq(8).click(function () {
    $("[data-template='vigipool_value_orp']").eq(8).click();
});
$('.vigipool_ui_value_orp_ui').eq(9).click(function () {
    $("[data-template='vigipool_value_orp']").eq(9).click();
});
$('.vigipool_ui_value_orp_ui').eq(10).click(function () {
    $("[data-template='vigipool_value_orp']").eq(10).click();
});
$('.vigipool_ui_value_orp_ui').eq(11).click(function () {
    $("[data-template='vigipool_value_orp']").eq(11).click();
});
$('.vigipool_ui_value_orp_ui').eq(12).click(function () {
    $("[data-template='vigipool_value_orp']").eq(12).click();
});
$('.vigipool_ui_value_orp_ui').eq(13).click(function () {
    $("[data-template='vigipool_value_orp']").eq(13).click();
});
$('.vigipool_ui_value_orp_ui').eq(14).click(function () {
    $("[data-template='vigipool_value_orp']").eq(14).click();
});
$('.vigipool_ui_value_orp_ui').eq(15).click(function () {
    $("[data-template='vigipool_value_orp']").eq(15).click();
});
$('.vigipool_ui_value_orp_ui').eq(16).click(function () {
    $("[data-template='vigipool_value_orp']").eq(16).click();
});
$('.vigipool_ui_value_orp_ui').eq(17).click(function () {
    $("[data-template='vigipool_value_orp']").eq(17).click();
});
$('.vigipool_ui_value_orp_ui').eq(18).click(function () {
    $("[data-template='vigipool_value_orp']").eq(18).click();
});
$('.vigipool_ui_value_orp_ui').eq(19).click(function () {
    $("[data-template='vigipool_value_orp']").eq(19).click();
});
$('.vigipool_ui_value_orp_ui').eq(20).click(function () {
    $("[data-template='vigipool_value_orp']").eq(20).click();
}
);function common_modals_finish_load() {
    $(document).ready(function () {
        check_all("5");
    });
}

function access_modal(id, modal, eq) {

    $(id).eq(eq).click(function () {

        devices = Array();
        // console.log("devices = " + devices);

        // console.log("modal = " + modal);

        var title = modal_to_title(modal);

        // console.log("title = " + title);

        $('#md_modal')
                .dialog({title: title})
                .load('index.php?v=d&plugin=vigipool&eq_modal=' + eq + '&modal=' + modal + '&id=' + $('.eqLogicAttr[data-l1key=id]').value())
                .dialog('open');
    });
}

access_modal(".vigipool_ui_logo", "vigipool_modal_all", eq);

access_modal(".vigipool_ui_light_circle", "vigipool_modal_light", eq);
access_modal(".vigipool_ui_tild_flow_on_1", "vigipool_modal_filtration", eq);
access_modal(".vigipool_ui_tild_flow_on_2", "vigipool_modal_filtration", eq);
access_modal(".vigipool_ui_tild_flow_on_3", "vigipool_modal_filtration", eq);
access_modal(".vigipool_ui_tild_flow_on_4", "vigipool_modal_filtration", eq);
access_modal(".vigipool_ui_aux_state", "vigipool_modal_auxiliary", eq);

access_modal(".vigipool_ui_source_ph_state > p", "vigipool_modal_ph", eq);
access_modal(".vigipool_ui_source_orp_state > p", "vigipool_modal_orp", eq);

access_modal(".vigipool_ui_light_m_circle", "vigipool_modal_light_m", eq);
access_modal(".vigipool_ui_tild_flow_on_m_1", "vigipool_modal_filtration_m", eq);
access_modal(".vigipool_ui_tild_flow_on_m_2", "vigipool_modal_filtration_m", eq);
access_modal(".vigipool_ui_tild_flow_on_m_3", "vigipool_modal_filtration_m", eq);
access_modal(".vigipool_ui_tild_flow_on_m_4", "vigipool_modal_filtration_m", eq);
access_modal(".vigipool_ui_aux1_state", "vigipool_modal_auxiliary_1", eq);
access_modal(".vigipool_ui_aux2_state", "vigipool_modal_auxiliary_2", eq);

access_modal(".vigipool_ui_x3_state_label", "vigipool_modal_x3_state", eq);
access_modal(".vigipool_ui_x3_state_state", "vigipool_modal_x3_state", eq);

access_modal(".vigipool_ui_prod_on_label", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_prod_on_state", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_mode_ely_label", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_mode_ely_state", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_prod_chlore_label", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_prod_chlore_state", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_cell_flow_label", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_cell_flow_state", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_couv_on_label", "vigipool_modal_ely", eq);
access_modal(".vigipool_ui_couv_on_state", "vigipool_modal_ely", eq);


function modal_to_title(modal) {
    if (modal === "vigipool_modal_all")
        return get_text("vigipool_modal_all");
    else if (modal === "vigipool_modal_light")
        return get_text("vigipool_modal_light");
    else if (modal === "vigipool_modal_filtration")
        return get_text("vigipool_modal_filtration");
    else if (modal === "vigipool_modal_filtration")
        return get_text("vigipool_modal_filtration");
    else if (modal === "vigipool_modal_filtration")
        return get_text("vigipool_modal_filtration");
    else if (modal === "vigipool_modal_filtration")
        return get_text("vigipool_modal_filtration");
    else if (modal === "vigipool_modal_auxiliary")
        return get_text("vigipool_modal_auxiliary");
    else if (modal === "vigipool_modal_ph")
        return get_text("vigipool_modal_ph");
    else if (modal === "vigipool_modal_orp")
        return get_text("vigipool_modal_orp");
    else if (modal === "vigipool_modal_light_m")
        return get_text("vigipool_modal_light_m");
    else if (modal === "tild_modal_filt_m")
        return get_text("tild_modal_filt_m");
    else if (modal === "vigipool_modal_auxiliary_1")
        return get_text("vigipool_modal_auxiliary_1");
    else if (modal === "vigipool_modal_auxiliary_2")
        return get_text("vigipool_modal_auxiliary_2");
    else if (modal === "vigipool_modal_ely")
        return get_text("vigipool_modal_ely");
    else if (modal === "vigipool_modal_x3_state")
        return get_text("vigipool_modal_x3_state");
    else if (modal === "vigipool_modal_x3_state_prog_1")
        return get_text("vigipool_modal_x3_state_prog_1");
    else if (modal === "vigipool_modal_x3_state_prog_2")
        return get_text("vigipool_modal_x3_state_prog_2");
    else {
        console.log("ERROR : modal_to_title = " + modal);
    }

}var all_dec = new Array();
all_dec.push(0);
all_dec.push(1);
all_dec.push(2);
all_dec.push(3);
all_dec.push(4);
all_dec.push(5);
all_dec.push(6);
all_dec.push(7);
all_dec.push(8);
all_dec.push(9);
all_dec.push(10);
all_dec.push(11);
all_dec.push(12);
all_dec.push(13);
all_dec.push(14);
all_dec.push(15);
all_dec.push(16);
all_dec.push(17);
all_dec.push(18);
all_dec.push(19);
all_dec.push(20);
all_dec.push(21);
all_dec.push(22);
all_dec.push(23);
all_dec.push(24);
all_dec.push(25);
all_dec.push(26);
all_dec.push(27);
all_dec.push(28);
all_dec.push(29);
all_dec.push(30);
all_dec.push(31);
all_dec.push(32);
all_dec.push(33);
all_dec.push(34);
all_dec.push(35);
all_dec.push(36);
all_dec.push(37);
all_dec.push(38);
all_dec.push(39);
all_dec.push(40);
all_dec.push(41);
all_dec.push(42);
all_dec.push(43);
all_dec.push(44);
all_dec.push(45);
all_dec.push(46);
all_dec.push(47);
all_dec.push(48);
all_dec.push(49);
all_dec.push(50);
all_dec.push(51);
all_dec.push(52);
all_dec.push(53);
all_dec.push(54);
all_dec.push(55);
all_dec.push(56);
all_dec.push(57);
all_dec.push(58);
all_dec.push(59);
all_dec.push(60);
all_dec.push(61);
all_dec.push(62);
all_dec.push(63);
all_dec.push(64);
all_dec.push(65);
all_dec.push(66);
all_dec.push(67);
all_dec.push(68);
all_dec.push(69);
all_dec.push(70);
all_dec.push(71);
all_dec.push(72);
all_dec.push(73);
all_dec.push(74);
all_dec.push(75);
all_dec.push(76);
all_dec.push(77);
all_dec.push(78);
all_dec.push(79);
all_dec.push(80);
all_dec.push(81);
all_dec.push(82);
all_dec.push(83);
all_dec.push(84);
all_dec.push(85);
all_dec.push(86);
all_dec.push(87);
all_dec.push(88);
all_dec.push(89);
all_dec.push(90);
all_dec.push(91);
all_dec.push(92);
all_dec.push(93);
all_dec.push(94);
all_dec.push(95);
all_dec.push(96);
all_dec.push(97);
all_dec.push(98);
all_dec.push(99);
all_dec.push(100);
all_dec.push(101);
all_dec.push(102);
all_dec.push(103);
all_dec.push(104);
all_dec.push(105);
all_dec.push(106);
all_dec.push(107);
all_dec.push(108);
all_dec.push(109);
all_dec.push(110);
all_dec.push(111);
all_dec.push(112);
all_dec.push(113);
all_dec.push(114);
all_dec.push(115);
all_dec.push(116);
all_dec.push(117);
all_dec.push(118);
all_dec.push(119);
all_dec.push(120);
all_dec.push(121);
all_dec.push(122);
all_dec.push(123);
all_dec.push(124);
all_dec.push(125);
all_dec.push(126);
all_dec.push(127);
all_dec.push(128);
all_dec.push(129);
all_dec.push(130);
all_dec.push(131);
all_dec.push(132);
all_dec.push(133);
all_dec.push(134);
all_dec.push(135);
all_dec.push(136);
all_dec.push(137);
all_dec.push(138);
all_dec.push(139);
all_dec.push(140);
all_dec.push(141);
all_dec.push(142);
all_dec.push(143);
all_dec.push(144);
all_dec.push(145);
all_dec.push(146);
all_dec.push(147);
all_dec.push(148);
all_dec.push(149);
all_dec.push(150);
all_dec.push(151);
all_dec.push(152);
all_dec.push(153);
all_dec.push(154);
all_dec.push(155);
all_dec.push(156);
all_dec.push(157);
all_dec.push(158);
all_dec.push(159);
all_dec.push(160);
all_dec.push(161);
all_dec.push(162);
all_dec.push(163);
all_dec.push(164);
all_dec.push(165);
all_dec.push(166);
all_dec.push(167);
all_dec.push(168);
all_dec.push(169);
all_dec.push(170);
all_dec.push(171);
all_dec.push(172);
all_dec.push(173);
all_dec.push(174);
all_dec.push(175);
all_dec.push(176);
all_dec.push(177);
all_dec.push(178);
all_dec.push(179);
all_dec.push(180);
all_dec.push(181);
all_dec.push(182);
all_dec.push(183);
all_dec.push(184);
all_dec.push(185);
all_dec.push(186);
all_dec.push(187);
all_dec.push(188);
all_dec.push(189);
all_dec.push(190);
all_dec.push(191);
all_dec.push(192);
all_dec.push(193);
all_dec.push(194);
all_dec.push(195);
all_dec.push(196);
all_dec.push(197);
all_dec.push(198);
all_dec.push(199);
all_dec.push(200);
all_dec.push(201);
all_dec.push(202);
all_dec.push(203);
all_dec.push(204);
all_dec.push(205);
all_dec.push(206);
all_dec.push(207);
all_dec.push(208);
all_dec.push(209);
all_dec.push(210);
all_dec.push(211);
all_dec.push(212);
all_dec.push(213);
all_dec.push(214);
all_dec.push(215);
all_dec.push(216);
all_dec.push(217);
all_dec.push(218);
all_dec.push(219);
all_dec.push(220);
all_dec.push(221);
all_dec.push(222);
all_dec.push(223);
all_dec.push(224);
all_dec.push(225);
all_dec.push(226);
all_dec.push(227);
all_dec.push(228);
all_dec.push(229);
all_dec.push(230);
all_dec.push(231);
all_dec.push(232);
all_dec.push(233);
all_dec.push(234);
all_dec.push(235);
all_dec.push(236);
all_dec.push(237);
all_dec.push(238);
all_dec.push(239);
all_dec.push(240);
all_dec.push(241);
all_dec.push(242);
all_dec.push(243);
all_dec.push(244);
all_dec.push(245);
all_dec.push(246);
all_dec.push(247);
all_dec.push(248);
all_dec.push(249);
all_dec.push(250);
all_dec.push(251);
all_dec.push(252);
all_dec.push(253);
all_dec.push(254);
all_dec.push(255);
all_dec.push(-1);
all_dec.push(-2);
all_dec.push(-3);
all_dec.push(-4);
all_dec.push(-5);
all_dec.push(-6);
all_dec.push(-7);
all_dec.push(-8);
all_dec.push(-9);
all_dec.push(-10);
all_dec.push(-11);
all_dec.push(-12);
all_dec.push(-13);
all_dec.push(-14);
all_dec.push(-15);
all_dec.push(-16);
all_dec.push(-17);
all_dec.push(-18);
all_dec.push(-19);
all_dec.push(-20);
all_dec.push(-21);
all_dec.push(-22);
all_dec.push(-23);
all_dec.push(-24);
all_dec.push(-25);
all_dec.push(-26);
all_dec.push(-27);
all_dec.push(-28);
all_dec.push(-29);
all_dec.push(-30);
all_dec.push(-31);
all_dec.push(-32);
all_dec.push(-33);
all_dec.push(-34);
all_dec.push(-35);
all_dec.push(-36);
all_dec.push(-37);
all_dec.push(-38);
all_dec.push(-39);
all_dec.push(-40);
all_dec.push(-41);
all_dec.push(-42);
all_dec.push(-43);
all_dec.push(-44);
all_dec.push(-45);
all_dec.push(-46);
all_dec.push(-47);
all_dec.push(-48);
all_dec.push(-49);
all_dec.push(-50);
all_dec.push(-51);
all_dec.push(-52);
all_dec.push(-53);
all_dec.push(-54);
all_dec.push(-55);
all_dec.push(-56);
all_dec.push(-57);
all_dec.push(-58);
all_dec.push(-59);
all_dec.push(-60);
all_dec.push(-61);
all_dec.push(-62);
all_dec.push(-63);
all_dec.push(-64);
all_dec.push(-65);
all_dec.push(-66);
all_dec.push(-67);
all_dec.push(-68);
all_dec.push(-69);
all_dec.push(-70);
all_dec.push(-71);
all_dec.push(-72);
all_dec.push(-73);
all_dec.push(-74);
all_dec.push(-75);
all_dec.push(-76);
all_dec.push(-77);
all_dec.push(-78);
all_dec.push(-79);
all_dec.push(-80);
all_dec.push(-81);
all_dec.push(-82);
all_dec.push(-83);
all_dec.push(-84);
all_dec.push(-85);
all_dec.push(-86);
all_dec.push(-87);
all_dec.push(-88);
all_dec.push(-89);
all_dec.push(-90);
all_dec.push(-91);
all_dec.push(-92);
all_dec.push(-93);
all_dec.push(-94);
all_dec.push(-95);
all_dec.push(-96);
all_dec.push(-97);
all_dec.push(-98);
all_dec.push(-99);
all_dec.push(-100);
all_dec.push(-101);
all_dec.push(-102);
all_dec.push(-103);
all_dec.push(-104);
all_dec.push(-105);
all_dec.push(-106);
all_dec.push(-107);
all_dec.push(-108);
all_dec.push(-109);
all_dec.push(-110);
all_dec.push(-111);
all_dec.push(-112);
all_dec.push(-113);
all_dec.push(-114);
all_dec.push(-115);
all_dec.push(-116);
all_dec.push(-117);
all_dec.push(-118);
all_dec.push(-119);
all_dec.push(-120);
all_dec.push(-121);
all_dec.push(-122);
all_dec.push(-123);
all_dec.push(-124);
all_dec.push(-125);
all_dec.push(-126);
all_dec.push(-127);
all_dec.push(-128);
all_dec.push(-129);
all_dec.push(-130);
all_dec.push(-131);
all_dec.push(-132);
all_dec.push(-133);
all_dec.push(-134);
all_dec.push(-135);
all_dec.push(-136);
all_dec.push(-137);
all_dec.push(-138);
all_dec.push(-139);
all_dec.push(-140);
all_dec.push(-141);
all_dec.push(-142);
all_dec.push(-143);
all_dec.push(-144);
all_dec.push(-145);
all_dec.push(-146);
all_dec.push(-147);
all_dec.push(-148);
all_dec.push(-149);
all_dec.push(-150);
all_dec.push(-151);
all_dec.push(-152);
all_dec.push(-153);
all_dec.push(-154);
all_dec.push(-155);
all_dec.push(-156);
all_dec.push(-157);
all_dec.push(-158);
all_dec.push(-159);
all_dec.push(-160);
all_dec.push(-161);
all_dec.push(-162);
all_dec.push(-163);
all_dec.push(-164);
all_dec.push(-165);
all_dec.push(-166);
all_dec.push(-167);
all_dec.push(-168);
all_dec.push(-169);
all_dec.push(-170);
all_dec.push(-171);
all_dec.push(-172);
all_dec.push(-173);
all_dec.push(-174);
all_dec.push(-175);
all_dec.push(-176);
all_dec.push(-177);
all_dec.push(-178);
all_dec.push(-179);
all_dec.push(-180);
all_dec.push(-181);
all_dec.push(-182);
all_dec.push(-183);
all_dec.push(-184);
all_dec.push(-185);
all_dec.push(-186);
all_dec.push(-187);
all_dec.push(-188);
all_dec.push(-189);
all_dec.push(-190);
all_dec.push(-191);
all_dec.push(-192);
all_dec.push(-193);
all_dec.push(-194);
all_dec.push(-195);
all_dec.push(-196);
all_dec.push(-197);
all_dec.push(-198);
all_dec.push(-199);
all_dec.push(-200);
all_dec.push(-201);
all_dec.push(-202);
all_dec.push(-203);
all_dec.push(-204);
all_dec.push(-205);
all_dec.push(-206);
all_dec.push(-207);
all_dec.push(-208);
all_dec.push(-209);
all_dec.push(-210);
all_dec.push(-211);
all_dec.push(-212);
all_dec.push(-213);
all_dec.push(-214);
all_dec.push(-215);
all_dec.push(-216);
all_dec.push(-217);
all_dec.push(-218);
all_dec.push(-219);
all_dec.push(-220);
all_dec.push(-221);
all_dec.push(-222);
all_dec.push(-223);
all_dec.push(-224);
all_dec.push(-225);
all_dec.push(-226);
all_dec.push(-227);
all_dec.push(-228);
all_dec.push(-229);
all_dec.push(-230);
all_dec.push(-231);
all_dec.push(-232);
all_dec.push(-233);
all_dec.push(-234);
all_dec.push(-235);
all_dec.push(-236);
all_dec.push(-237);
all_dec.push(-238);
all_dec.push(-239);
all_dec.push(-240);
all_dec.push(-241);
all_dec.push(-242);
all_dec.push(-243);
all_dec.push(-244);
all_dec.push(-245);
all_dec.push(-246);
all_dec.push(-247);
all_dec.push(-248);
all_dec.push(-249);
all_dec.push(-250);
all_dec.push(-251);
all_dec.push(-252);
all_dec.push(-253);
all_dec.push(-254);
all_dec.push(-255);
var all_hex = new Array();
all_hex.push("00");
all_hex.push("01");
all_hex.push("02");
all_hex.push("03");
all_hex.push("04");
all_hex.push("05");
all_hex.push("06");
all_hex.push("07");
all_hex.push("08");
all_hex.push("09");
all_hex.push("0A");
all_hex.push("0B");
all_hex.push("0C");
all_hex.push("0D");
all_hex.push("0E");
all_hex.push("0F");
all_hex.push("10");
all_hex.push("11");
all_hex.push("12");
all_hex.push("13");
all_hex.push("14");
all_hex.push("15");
all_hex.push("16");
all_hex.push("17");
all_hex.push("18");
all_hex.push("19");
all_hex.push("1A");
all_hex.push("1B");
all_hex.push("1C");
all_hex.push("1D");
all_hex.push("1E");
all_hex.push("1F");
all_hex.push("20");
all_hex.push("21");
all_hex.push("22");
all_hex.push("23");
all_hex.push("24");
all_hex.push("25");
all_hex.push("26");
all_hex.push("27");
all_hex.push("28");
all_hex.push("29");
all_hex.push("2A");
all_hex.push("2B");
all_hex.push("2C");
all_hex.push("2D");
all_hex.push("2E");
all_hex.push("2F");
all_hex.push("30");
all_hex.push("31");
all_hex.push("32");
all_hex.push("33");
all_hex.push("34");
all_hex.push("35");
all_hex.push("36");
all_hex.push("37");
all_hex.push("38");
all_hex.push("39");
all_hex.push("3A");
all_hex.push("3B");
all_hex.push("3C");
all_hex.push("3D");
all_hex.push("3E");
all_hex.push("3F");
all_hex.push("40");
all_hex.push("41");
all_hex.push("42");
all_hex.push("43");
all_hex.push("44");
all_hex.push("45");
all_hex.push("46");
all_hex.push("47");
all_hex.push("48");
all_hex.push("49");
all_hex.push("4A");
all_hex.push("4B");
all_hex.push("4C");
all_hex.push("4D");
all_hex.push("4E");
all_hex.push("4F");
all_hex.push("50");
all_hex.push("51");
all_hex.push("52");
all_hex.push("53");
all_hex.push("54");
all_hex.push("55");
all_hex.push("56");
all_hex.push("57");
all_hex.push("58");
all_hex.push("59");
all_hex.push("5A");
all_hex.push("5B");
all_hex.push("5C");
all_hex.push("5D");
all_hex.push("5E");
all_hex.push("5F");
all_hex.push("60");
all_hex.push("61");
all_hex.push("62");
all_hex.push("63");
all_hex.push("64");
all_hex.push("65");
all_hex.push("66");
all_hex.push("67");
all_hex.push("68");
all_hex.push("69");
all_hex.push("6A");
all_hex.push("6B");
all_hex.push("6C");
all_hex.push("6D");
all_hex.push("6E");
all_hex.push("6F");
all_hex.push("70");
all_hex.push("71");
all_hex.push("72");
all_hex.push("73");
all_hex.push("74");
all_hex.push("75");
all_hex.push("76");
all_hex.push("77");
all_hex.push("78");
all_hex.push("79");
all_hex.push("7A");
all_hex.push("7B");
all_hex.push("7C");
all_hex.push("7D");
all_hex.push("7E");
all_hex.push("7F");
all_hex.push("80");
all_hex.push("81");
all_hex.push("82");
all_hex.push("83");
all_hex.push("84");
all_hex.push("85");
all_hex.push("86");
all_hex.push("87");
all_hex.push("88");
all_hex.push("89");
all_hex.push("8A");
all_hex.push("8B");
all_hex.push("8C");
all_hex.push("8D");
all_hex.push("8E");
all_hex.push("8F");
all_hex.push("90");
all_hex.push("91");
all_hex.push("92");
all_hex.push("93");
all_hex.push("94");
all_hex.push("95");
all_hex.push("96");
all_hex.push("97");
all_hex.push("98");
all_hex.push("99");
all_hex.push("9A");
all_hex.push("9B");
all_hex.push("9C");
all_hex.push("9D");
all_hex.push("9E");
all_hex.push("9F");
all_hex.push("A0");
all_hex.push("A1");
all_hex.push("A2");
all_hex.push("A3");
all_hex.push("A4");
all_hex.push("A5");
all_hex.push("A6");
all_hex.push("A7");
all_hex.push("A8");
all_hex.push("A9");
all_hex.push("AA");
all_hex.push("AB");
all_hex.push("AC");
all_hex.push("AD");
all_hex.push("AE");
all_hex.push("AF");
all_hex.push("B0");
all_hex.push("B1");
all_hex.push("B2");
all_hex.push("B3");
all_hex.push("B4");
all_hex.push("B5");
all_hex.push("B6");
all_hex.push("B7");
all_hex.push("B8");
all_hex.push("B9");
all_hex.push("BA");
all_hex.push("BB");
all_hex.push("BC");
all_hex.push("BD");
all_hex.push("BE");
all_hex.push("BF");
all_hex.push("C0");
all_hex.push("C1");
all_hex.push("C2");
all_hex.push("C3");
all_hex.push("C4");
all_hex.push("C5");
all_hex.push("C6");
all_hex.push("C7");
all_hex.push("C8");
all_hex.push("C9");
all_hex.push("CA");
all_hex.push("CB");
all_hex.push("CC");
all_hex.push("CD");
all_hex.push("CE");
all_hex.push("CF");
all_hex.push("D0");
all_hex.push("D1");
all_hex.push("D2");
all_hex.push("D3");
all_hex.push("D4");
all_hex.push("D5");
all_hex.push("D6");
all_hex.push("D7");
all_hex.push("D8");
all_hex.push("D9");
all_hex.push("DA");
all_hex.push("DB");
all_hex.push("DC");
all_hex.push("DD");
all_hex.push("DE");
all_hex.push("DF");
all_hex.push("E0");
all_hex.push("E1");
all_hex.push("E2");
all_hex.push("E3");
all_hex.push("E4");
all_hex.push("E5");
all_hex.push("E6");
all_hex.push("E7");
all_hex.push("E8");
all_hex.push("E9");
all_hex.push("EA");
all_hex.push("EB");
all_hex.push("EC");
all_hex.push("ED");
all_hex.push("EE");
all_hex.push("EF");
all_hex.push("F0");
all_hex.push("F1");
all_hex.push("F2");
all_hex.push("F3");
all_hex.push("F4");
all_hex.push("F5");
all_hex.push("F6");
all_hex.push("F7");
all_hex.push("F8");
all_hex.push("F9");
all_hex.push("FA");
all_hex.push("FB");
all_hex.push("FC");
all_hex.push("FD");
all_hex.push("FE");
all_hex.push("FF");
var all_bin = new Array();
all_bin.push("00000000");
all_bin.push("00000001");
all_bin.push("00000010");
all_bin.push("00000011");
all_bin.push("00000100");
all_bin.push("00000101");
all_bin.push("00000110");
all_bin.push("00000111");
all_bin.push("00001000");
all_bin.push("00001001");
all_bin.push("00001010");
all_bin.push("00001011");
all_bin.push("00001100");
all_bin.push("00001101");
all_bin.push("00001110");
all_bin.push("00001111");
all_bin.push("00010000");
all_bin.push("00010001");
all_bin.push("00010010");
all_bin.push("00010011");
all_bin.push("00010100");
all_bin.push("00010101");
all_bin.push("00010110");
all_bin.push("00010111");
all_bin.push("00011000");
all_bin.push("00011001");
all_bin.push("00011010");
all_bin.push("00011011");
all_bin.push("00011100");
all_bin.push("00011101");
all_bin.push("00011110");
all_bin.push("00011111");
all_bin.push("00100000");
all_bin.push("00100001");
all_bin.push("00100010");
all_bin.push("00100011");
all_bin.push("00100100");
all_bin.push("00100101");
all_bin.push("00100110");
all_bin.push("00100111");
all_bin.push("00101000");
all_bin.push("00101001");
all_bin.push("00101010");
all_bin.push("00101011");
all_bin.push("00101100");
all_bin.push("00101101");
all_bin.push("00101110");
all_bin.push("00101111");
all_bin.push("00110000");
all_bin.push("00110001");
all_bin.push("00110010");
all_bin.push("00110011");
all_bin.push("00110100");
all_bin.push("00110101");
all_bin.push("00110110");
all_bin.push("00110111");
all_bin.push("00111000");
all_bin.push("00111001");
all_bin.push("00111010");
all_bin.push("00111011");
all_bin.push("00111100");
all_bin.push("00111101");
all_bin.push("00111110");
all_bin.push("00111111");
all_bin.push("01000000");
all_bin.push("01000001");
all_bin.push("01000010");
all_bin.push("01000011");
all_bin.push("01000100");
all_bin.push("01000101");
all_bin.push("01000110");
all_bin.push("01000111");
all_bin.push("01001000");
all_bin.push("01001001");
all_bin.push("01001010");
all_bin.push("01001011");
all_bin.push("01001100");
all_bin.push("01001101");
all_bin.push("01001110");
all_bin.push("01001111");
all_bin.push("01010000");
all_bin.push("01010001");
all_bin.push("01010010");
all_bin.push("01010011");
all_bin.push("01010100");
all_bin.push("01010101");
all_bin.push("01010110");
all_bin.push("01010111");
all_bin.push("01011000");
all_bin.push("01011001");
all_bin.push("01011010");
all_bin.push("01011011");
all_bin.push("01011100");
all_bin.push("01011101");
all_bin.push("01011110");
all_bin.push("01011111");
all_bin.push("01100000");
all_bin.push("01100001");
all_bin.push("01100010");
all_bin.push("01100011");
all_bin.push("01100100");
all_bin.push("01100101");
all_bin.push("01100110");
all_bin.push("01100111");
all_bin.push("01101000");
all_bin.push("01101001");
all_bin.push("01101010");
all_bin.push("01101011");
all_bin.push("01101100");
all_bin.push("01101101");
all_bin.push("01101110");
all_bin.push("01101111");
all_bin.push("01110000");
all_bin.push("01110001");
all_bin.push("01110010");
all_bin.push("01110011");
all_bin.push("01110100");
all_bin.push("01110101");
all_bin.push("01110110");
all_bin.push("01110111");
all_bin.push("01111000");
all_bin.push("01111001");
all_bin.push("01111010");
all_bin.push("01111011");
all_bin.push("01111100");
all_bin.push("01111101");
all_bin.push("01111110");
all_bin.push("01111111");
all_bin.push("10000000");
all_bin.push("10000001");
all_bin.push("10000010");
all_bin.push("10000011");
all_bin.push("10000100");
all_bin.push("10000101");
all_bin.push("10000110");
all_bin.push("10000111");
all_bin.push("10001000");
all_bin.push("10001001");
all_bin.push("10001010");
all_bin.push("10001011");
all_bin.push("10001100");
all_bin.push("10001101");
all_bin.push("10001110");
all_bin.push("10001111");
all_bin.push("10010000");
all_bin.push("10010001");
all_bin.push("10010010");
all_bin.push("10010011");
all_bin.push("10010100");
all_bin.push("10010101");
all_bin.push("10010110");
all_bin.push("10010111");
all_bin.push("10011000");
all_bin.push("10011001");
all_bin.push("10011010");
all_bin.push("10011011");
all_bin.push("10011100");
all_bin.push("10011101");
all_bin.push("10011110");
all_bin.push("10011111");
all_bin.push("10100000");
all_bin.push("10100001");
all_bin.push("10100010");
all_bin.push("10100011");
all_bin.push("10100100");
all_bin.push("10100101");
all_bin.push("10100110");
all_bin.push("10100111");
all_bin.push("10101000");
all_bin.push("10101001");
all_bin.push("10101010");
all_bin.push("10101011");
all_bin.push("10101100");
all_bin.push("10101101");
all_bin.push("10101110");
all_bin.push("10101111");
all_bin.push("10110000");
all_bin.push("10110001");
all_bin.push("10110010");
all_bin.push("10110011");
all_bin.push("10110100");
all_bin.push("10110101");
all_bin.push("10110110");
all_bin.push("10110111");
all_bin.push("10111000");
all_bin.push("10111001");
all_bin.push("10111010");
all_bin.push("10111011");
all_bin.push("10111100");
all_bin.push("10111101");
all_bin.push("10111110");
all_bin.push("10111111");
all_bin.push("11000000");
all_bin.push("11000001");
all_bin.push("11000010");
all_bin.push("11000011");
all_bin.push("11000100");
all_bin.push("11000101");
all_bin.push("11000110");
all_bin.push("11000111");
all_bin.push("11001000");
all_bin.push("11001001");
all_bin.push("11001010");
all_bin.push("11001011");
all_bin.push("11001100");
all_bin.push("11001101");
all_bin.push("11001110");
all_bin.push("11001111");
all_bin.push("11010000");
all_bin.push("11010001");
all_bin.push("11010010");
all_bin.push("11010011");
all_bin.push("11010100");
all_bin.push("11010101");
all_bin.push("11010110");
all_bin.push("11010111");
all_bin.push("11011000");
all_bin.push("11011001");
all_bin.push("11011010");
all_bin.push("11011011");
all_bin.push("11011100");
all_bin.push("11011101");
all_bin.push("11011110");
all_bin.push("11011111");
all_bin.push("11100000");
all_bin.push("11100001");
all_bin.push("11100010");
all_bin.push("11100011");
all_bin.push("11100100");
all_bin.push("11100101");
all_bin.push("11100110");
all_bin.push("11100111");
all_bin.push("11101000");
all_bin.push("11101001");
all_bin.push("11101010");
all_bin.push("11101011");
all_bin.push("11101100");
all_bin.push("11101101");
all_bin.push("11101110");
all_bin.push("11101111");
all_bin.push("11110000");
all_bin.push("11110001");
all_bin.push("11110010");
all_bin.push("11110011");
all_bin.push("11110100");
all_bin.push("11110101");
all_bin.push("11110110");
all_bin.push("11110111");
all_bin.push("11111000");
all_bin.push("11111001");
all_bin.push("11111010");
all_bin.push("11111011");
all_bin.push("11111100");
all_bin.push("11111101");
all_bin.push("11111110");
all_bin.push("11111111");
var all_time_2 = new Array();
all_time_2.push("00h00");
all_time_2.push("00h30");
all_time_2.push("01h00");
all_time_2.push("01h30");
all_time_2.push("02h00");
all_time_2.push("02h30");
all_time_2.push("03h00");
all_time_2.push("03h30");
all_time_2.push("04h00");
all_time_2.push("04h30");
all_time_2.push("05h00");
all_time_2.push("05h30");
all_time_2.push("06h00");
all_time_2.push("06h30");
all_time_2.push("07h00");
all_time_2.push("07h30");
all_time_2.push("08h00");
all_time_2.push("08h30");
all_time_2.push("09h00");
all_time_2.push("09h30");
all_time_2.push("10h00");
all_time_2.push("10h30");
all_time_2.push("11h00");
all_time_2.push("11h30");
all_time_2.push("12h00");
all_time_2.push("12h30");
all_time_2.push("13h00");
all_time_2.push("13h30");
all_time_2.push("14h00");
all_time_2.push("14h30");
all_time_2.push("15h00");
all_time_2.push("15h30");
all_time_2.push("16h00");
all_time_2.push("16h30");
all_time_2.push("17h00");
all_time_2.push("17h30");
all_time_2.push("18h00");
all_time_2.push("18h30");
all_time_2.push("19h00");
all_time_2.push("19h30");
all_time_2.push("20h00");
all_time_2.push("20h30");
all_time_2.push("21h00");
all_time_2.push("21h30");
all_time_2.push("22h00");
all_time_2.push("22h30");
all_time_2.push("23h00");
all_time_2.push("23h30");
all_time_2.push("24h00");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("error time 2");
all_time_2.push("23h30");
all_time_2.push("23h00");
all_time_2.push("22h30");
all_time_2.push("22h00");
all_time_2.push("21h30");
all_time_2.push("21h00");
all_time_2.push("20h30");
all_time_2.push("20h00");
all_time_2.push("19h30");
all_time_2.push("19h00");
all_time_2.push("18h30");
all_time_2.push("18h00");
all_time_2.push("17h30");
all_time_2.push("17h00");
all_time_2.push("16h30");
all_time_2.push("16h00");
all_time_2.push("15h30");
all_time_2.push("15h00");
all_time_2.push("14h30");
all_time_2.push("14h00");
all_time_2.push("13h30");
all_time_2.push("13h00");
all_time_2.push("12h30");
all_time_2.push("12h00");
all_time_2.push("11h30");
all_time_2.push("11h00");
all_time_2.push("10h30");
all_time_2.push("10h00");
all_time_2.push("09h30");
all_time_2.push("09h00");
all_time_2.push("08h30");
all_time_2.push("08h00");
all_time_2.push("07h30");
all_time_2.push("07h00");
all_time_2.push("06h30");
all_time_2.push("06h00");
all_time_2.push("05h30");
all_time_2.push("05h00");
all_time_2.push("04h30");
all_time_2.push("04h00");
all_time_2.push("03h30");
all_time_2.push("03h00");
all_time_2.push("02h30");
all_time_2.push("02h00");
all_time_2.push("01h30");
all_time_2.push("01h00");
all_time_2.push("00h30");
all_time_2.push("00h00");
var all_time_4 = new Array();
all_time_4.push("00h00");
all_time_4.push("00h15");
all_time_4.push("00h30");
all_time_4.push("00h45");
all_time_4.push("01h00");
all_time_4.push("01h15");
all_time_4.push("01h30");
all_time_4.push("01h45");
all_time_4.push("02h00");
all_time_4.push("02h15");
all_time_4.push("02h30");
all_time_4.push("02h45");
all_time_4.push("03h00");
all_time_4.push("03h15");
all_time_4.push("03h30");
all_time_4.push("03h45");
all_time_4.push("04h00");
all_time_4.push("04h15");
all_time_4.push("04h30");
all_time_4.push("04h45");
all_time_4.push("05h00");
all_time_4.push("05h15");
all_time_4.push("05h30");
all_time_4.push("05h45");
all_time_4.push("06h00");
all_time_4.push("06h15");
all_time_4.push("06h30");
all_time_4.push("06h45");
all_time_4.push("07h00");
all_time_4.push("07h15");
all_time_4.push("07h30");
all_time_4.push("07h45");
all_time_4.push("08h00");
all_time_4.push("08h15");
all_time_4.push("08h30");
all_time_4.push("08h45");
all_time_4.push("09h00");
all_time_4.push("09h15");
all_time_4.push("09h30");
all_time_4.push("09h45");
all_time_4.push("10h00");
all_time_4.push("10h15");
all_time_4.push("10h30");
all_time_4.push("10h45");
all_time_4.push("11h00");
all_time_4.push("11h15");
all_time_4.push("11h30");
all_time_4.push("11h45");
all_time_4.push("12h00");
all_time_4.push("12h15");
all_time_4.push("12h30");
all_time_4.push("12h45");
all_time_4.push("13h00");
all_time_4.push("13h15");
all_time_4.push("13h30");
all_time_4.push("13h45");
all_time_4.push("14h00");
all_time_4.push("14h15");
all_time_4.push("14h30");
all_time_4.push("14h45");
all_time_4.push("15h00");
all_time_4.push("15h15");
all_time_4.push("15h30");
all_time_4.push("15h45");
all_time_4.push("16h00");
all_time_4.push("16h15");
all_time_4.push("16h30");
all_time_4.push("16h45");
all_time_4.push("17h00");
all_time_4.push("17h15");
all_time_4.push("17h30");
all_time_4.push("17h45");
all_time_4.push("18h00");
all_time_4.push("18h15");
all_time_4.push("18h30");
all_time_4.push("18h45");
all_time_4.push("19h00");
all_time_4.push("19h15");
all_time_4.push("19h30");
all_time_4.push("19h45");
all_time_4.push("20h00");
all_time_4.push("20h15");
all_time_4.push("20h30");
all_time_4.push("20h45");
all_time_4.push("21h00");
all_time_4.push("21h15");
all_time_4.push("21h30");
all_time_4.push("21h45");
all_time_4.push("22h00");
all_time_4.push("22h15");
all_time_4.push("22h30");
all_time_4.push("22h45");
all_time_4.push("23h00");
all_time_4.push("23h15");
all_time_4.push("23h30");
all_time_4.push("23h45");
all_time_4.push("24h00");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("error time 4");
all_time_4.push("23h45");
all_time_4.push("23h30");
all_time_4.push("23h15");
all_time_4.push("23h00");
all_time_4.push("22h45");
all_time_4.push("22h30");
all_time_4.push("22h15");
all_time_4.push("22h00");
all_time_4.push("21h45");
all_time_4.push("21h30");
all_time_4.push("21h15");
all_time_4.push("21h00");
all_time_4.push("20h45");
all_time_4.push("20h30");
all_time_4.push("20h15");
all_time_4.push("20h00");
all_time_4.push("19h45");
all_time_4.push("19h30");
all_time_4.push("19h15");
all_time_4.push("19h00");
all_time_4.push("18h45");
all_time_4.push("18h30");
all_time_4.push("18h15");
all_time_4.push("18h00");
all_time_4.push("17h45");
all_time_4.push("17h30");
all_time_4.push("17h15");
all_time_4.push("17h00");
all_time_4.push("16h45");
all_time_4.push("16h30");
all_time_4.push("16h15");
all_time_4.push("16h00");
all_time_4.push("15h45");
all_time_4.push("15h30");
all_time_4.push("15h15");
all_time_4.push("15h00");
all_time_4.push("14h45");
all_time_4.push("14h30");
all_time_4.push("14h15");
all_time_4.push("14h00");
all_time_4.push("13h45");
all_time_4.push("13h30");
all_time_4.push("13h15");
all_time_4.push("13h00");
all_time_4.push("12h45");
all_time_4.push("12h30");
all_time_4.push("12h15");
all_time_4.push("12h00");
all_time_4.push("11h45");
all_time_4.push("11h30");
all_time_4.push("11h15");
all_time_4.push("11h00");
all_time_4.push("10h45");
all_time_4.push("10h30");
all_time_4.push("10h15");
all_time_4.push("10h00");
all_time_4.push("09h45");
all_time_4.push("09h30");
all_time_4.push("09h15");
all_time_4.push("09h00");
all_time_4.push("08h45");
all_time_4.push("08h30");
all_time_4.push("08h15");
all_time_4.push("08h00");
all_time_4.push("07h45");
all_time_4.push("07h30");
all_time_4.push("07h15");
all_time_4.push("07h00");
all_time_4.push("06h45");
all_time_4.push("06h30");
all_time_4.push("06h15");
all_time_4.push("06h00");
all_time_4.push("05h45");
all_time_4.push("05h30");
all_time_4.push("05h15");
all_time_4.push("05h00");
all_time_4.push("04h45");
all_time_4.push("04h30");
all_time_4.push("04h15");
all_time_4.push("04h00");
all_time_4.push("03h45");
all_time_4.push("03h30");
all_time_4.push("03h15");
all_time_4.push("03h00");
all_time_4.push("02h45");
all_time_4.push("02h30");
all_time_4.push("02h15");
all_time_4.push("02h00");
all_time_4.push("01h45");
all_time_4.push("01h30");
all_time_4.push("01h15");
all_time_4.push("01h00");
all_time_4.push("00h45");
all_time_4.push("00h30");
all_time_4.push("00h15");
all_time_4.push("00h00");
function converter(from, to, value) {

    if (from === "dec")
        from = all_dec;
    if (from === "hex")
        from = all_hex;
    if (from === "bin")
        from = all_bin;
    if (from === "time_2")
        from = all_time_2;
    if (from === "time_4")
        from = all_time_4;
    if (to === "dec")
        to = all_dec;
    if (to === "hex")
        to = all_hex;
    if (to === "bin")
        to = all_bin;
    if (to === "time_2")
        to = all_time_2;
    if (to === "time_4")
        to = all_time_4;
    for (var i = 0, max = from.length; i < max;
            i++
            ) {
        if (value === from[i]) {
            return to[i];
        }
    }
}

function code_to_src(code) {
    if (code === 0)
        return "/plugins/vigipool/desktop/img/warm.svg";
    else if (code === 1)
        return "/plugins/vigipool/desktop/img/cold.svg";
    else if (code === 2)
        return "/plugins/vigipool/desktop/img/blue.svg";
    else if (code === 3)
        return "/plugins/vigipool/desktop/img/lagoon.svg";
    else if (code === 4)
        return "/plugins/vigipool/desktop/img/cyan.svg";
    else if (code === 10)
        return "/plugins/vigipool/desktop/img/green.svg";
    else if (code === 5)
        return "/plugins/vigipool/desktop/img/purple.svg";
    else if (code === 6)
        return "/plugins/vigipool/desktop/img/magenta.svg";
    else if (code === 7)
        return "/plugins/vigipool/desktop/img/pink.svg";
    else if (code === 8)
        return "/plugins/vigipool/desktop/img/red.svg";
    else if (code === 9)
        return "/plugins/vigipool/desktop/img/orange.svg";
    else if (code === 11)
        return "/plugins/vigipool/desktop/img/favorite.svg";
    else if (code === 16)
        return "/plugins/vigipool/desktop/img/gradiant.png";
    else if (code === 17)
        return "/plugins/vigipool/desktop/img/rainbow.png";
    else if (code === 18)
        return "/plugins/vigipool/desktop/img/parade.png";
    else if (code === 19)
        return "/plugins/vigipool/desktop/img/techno.png";
    else if (code === 20)
        return "/plugins/vigipool/desktop/img/horizon.png";
    else if (code === 21)
        return "/plugins/vigipool/desktop/img/random.png";
    else if (code === 22)
        return "/plugins/vigipool/desktop/img/magical.png";
    else if (code === 255)
        return "/plugins/vigipool/desktop/img/warm.svg";
    else
        console.log("ERROR - code_to_src : " + code);
}

function code_to_color(code) {
    if (code === 0)
        return get_text("warm");
    else if (code === 1)
        return get_text("cold");
    else if (code === 2)
        return get_text("blue");
    else if (code === 3)
        return get_text("lagoon");
    else if (code === 4)
        return get_text("cyan");
    else if (code === 10)
        return get_text("green");
    else if (code === 5)
        return get_text("purple");
    else if (code === 6)
        return get_text("magenta");
    else if (code === 7)
        return get_text("pink");
    else if (code === 8)
        return get_text("red");
    else if (code === 9)
        return get_text("orange");
    else if (code === 11)
        return get_text("favorite");
    else if (code === 16)
        return get_text("gradiant");
    else if (code === 17)
        return get_text("rainbow");
    else if (code === 18)
        return get_text("parade");
    else if (code === 19)
        return get_text("techno");
    else if (code === 20)
        return get_text("horizon");
    else if (code === 21)
        return get_text("random");
    else if (code === 22)
        return get_text("magical");
    else if (code === 255)
        return get_text("warm");
    else
        console.log("ERROR - code_to_color : " + code);
}

function get_bit(state, position) {

// console.log("state = " + state);

    if (isNaN(state)) {
        return 0;
    }

    position = parseInt(position);
    // console.log("position = " + position);

    switch (position) {
        case 0:
            true_position = 7;
            break;
        case 1:
            true_position = 6;
            break;
        case 2:
            true_position = 5;
            break;
        case 3:
            true_position = 4;
            break;
        case 4:
            true_position = 3;
            break;
        case 5:
            true_position = 2;
            break;
        case 6:
            true_position = 1;
            break;
        case 7:
            true_position = 0;
            break;
        default:
            // console.log("ERROR true_position not found (position = " + position + ")");
            break;
    }

    var bin_state = converter("dec", "bin", state)
    // console.log("bin_state = " + bin_state);

    if (bin_state === undefined) {
        return get_bit_longer(state, position);
    }

    var result = bin_state[true_position];
    result = parseInt(result);
    // console.log("result = " + result);


    return result;
}

function get_bit_longer(state, position) {
    var dec = parseInt(state);
    var bin = dec.toString(2);
    var true_position = bin.length - 1 - position;
    var result = bin[true_position];
    if (result === undefined)
        return 0;
    return result;
}

function vol_max_24h_to_ui(vol_max_24h) {
    switch (vol_max_24h) {
        case 0:
            return "0_00";
        case 0.1:
            return "0_10";
        case 0.2:
            return "0_20";
        case 0.3:
            return "0_30";
        case 0.4:
            return "0_40";
        case 0.5:
            return "0_50";
        case 0.6:
            return "0_60";
        case 0.7:
            return "0_70";
        case 0.8:
            return "0_80";
        case 0.9:
            return "0_90";
        case 1:
            return "1_00";
        case 1.1:
            return "1_10";
        case 1.2:
            return "1_20";
        case 1.3:
            return "1_30";
        case 1.4:
            return "1_40";
        case 1.5:
            return "1_50";
        case 1.6:
            return "1_60";
        case 1.7:
            return "1_70";
        case 1.8:
            return "1_80";
        case 1.9:
            return "1_90";
        case 2:
            return "2_00";
    }
}function update_vigipool_ui_logo() {

    var max_devices = $(".vigipool_ipaddr").length;
    // console.log("max_devices = " + max_devices);

    for (var i = 0, max = max_devices; i < max; i++) {

        var sw_vers = get_value_from_position(i, "sw_vers");
        // console.log("sw_vers = " + sw_vers);

        if (!is_variable_available(i, "sw_vers")) {
            $(".vigipool_ui_device").eq(i).html("v");
        } else if (sw_vers !== undefined) {
            sw_vers = sw_vers.toString(16);
            sw_vers = sw_vers / 100;
            $(".vigipool_ui_device").eq(i).html("v" + sw_vers);
        }
    }
}function update_vigipool_ui_mqtt() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var mqtt_connected = get_value_from_position(i, "mqtt_connected");
        var rssi = get_value_from_position(i, "rssi");
        // console.log("mqtt_connected = " + mqtt_connected);
        // console.log("rssi = " + rssi);

        if (mqtt_connected === 0) {
            $(".vigipool_ui_mqtt_icon").eq(i).attr("src", "/plugins/vigipool/desktop/img/wifi-off.svg");
        } else if (mqtt_connected === 1) {
            if (rssi <= -80)
                $(".vigipool_ui_mqtt_icon").eq(i).attr("src", "/plugins/vigipool/desktop/img/wifi_red.svg");
            else if (-80 <= rssi && rssi <= -70)
                $(".vigipool_ui_mqtt_icon").eq(i).attr("src", "/plugins/vigipool/desktop/img/wifi_yellow.svg");
            else if (rssi >= -70)
                $(".vigipool_ui_mqtt_icon").eq(i).attr("src", "/plugins/vigipool/desktop/img/wifi_green.svg");
        }
    }
}
// Text

$(".vigipool_ui_water").html(get_text("water"));


var length = $(".vigipool_ui_water_temp").length;
//console.log("length = " + length);

$('.vigipool_ui_water_temp').unbind();

for (var i = 0; i < length; i++) {
    $(".vigipool_ui_water_temp").eq(i).attr("equipement_position", i);
    $('.vigipool_ui_water_temp').eq(i).click(function () {
        console.log(this);
        var equipement_position = this.getAttribute("equipement_position");
        console.log("equipement_position = " + equipement_position);
        $("[data-template='vigipool_value_temp']").eq(equipement_position).click();
    });
}

function update_vigipool_ui_water() {
    assign_element_to_value("vigipool_ui_water_temp", "vigipool_value_temp_unit", "vigipool_value_temp_unit", eq);
}
function update_vigipool_modal_all() {

    // console.log("///// update_vigipool_modal_all /////");

    // Variables

    var device_id = get_value_from_position(eq_modal, "device_id");
    var frost_free = get_value_from_position(eq_modal, "frost_free");
    var light_type = get_value_from_position(eq_modal, "light_type");
    var aux_type = get_value_from_position(eq_modal, "aux_type");
    var winter_mode = get_value_from_position(eq_modal, "winter_mode");

    // Logs

    // console.log("device_id = " + device_id);
    // console.log("frost_free = " + frost_free);
    // console.log("light_type = " + light_type);
    // console.log("aux_type = " + aux_type);
    // console.log("winter_mode = " + winter_mode);

    // Check

    const variables = [device_id, frost_free, light_type, aux_type, winter_mode];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    if (!is_variable_available(eq_modal, "frost_free")) {
        $(".vigipool_common_modal_all_frost_free").hide();
        $(".vigipool_common_modal_all_frost_free_off").hide();
        $(".vigipool_common_modal_all_frost_free_0").hide();
        $(".vigipool_common_modal_all_frost_free_1").hide();
        $(".vigipool_common_modal_all_frost_free_2").hide();
    }
    if (!is_variable_available(eq_modal, "light_type")) {
        $(".vigipool_common_modal_all_light_type").hide();
        $(".vigipool_common_modal_all_light_type_rc").hide();
        $(".vigipool_common_modal_all_light_type_mono").hide();
        $(".vigipool_common_modal_all_light_type_mono_dim").hide();
        $(".vigipool_common_modal_all_light_type_micro_cuts").hide();
    }
    if (!is_variable_available(eq_modal, "aux_type")) {
        $(".vigipool_common_modal_all_aux_type").hide();
        $(".vigipool_common_modal_all_aux_type_none").hide();
        $(".vigipool_common_modal_all_aux_type_heater").hide();
        $(".vigipool_common_modal_all_aux_type_treatment").hide();
        $(".vigipool_common_modal_all_aux_type_booster").hide();
        $(".vigipool_common_modal_all_aux_type_auxiliary").hide();
    }
    if (!is_variable_available(eq_modal, "aux_type")) {
        $(".vigipool_common_modal_all_winter_mode").hide();
        $(".vigipool_common_modal_all_winter_mode_off").hide();
        $(".vigipool_common_modal_all_winter_mode_on").hide();
    }

    if (is_device(device_id, "anteam")) {
        $(".vigipool_common_modal_all_light_type").hide();
        $(".vigipool_common_modal_all_light_type_rc").hide();
        $(".vigipool_common_modal_all_light_type_mono").hide();
        $(".vigipool_common_modal_all_light_type_mono_dim").hide();
        $(".vigipool_common_modal_all_light_type_micro_cuts").hide();
    } else if (is_device(device_id, "zelix")) {
        $(".vigipool_common_modal_all_frost_free").html(get_text("no_parameters"));
        $(".vigipool_common_modal_all_light_type").hide();
        $(".vigipool_common_modal_all_aux_type").hide();
        $(".vigipool_common_modal_all_winter_mode").hide();

        $(".vigipool_common_modal_all_frost_free_off").hide();
        $(".vigipool_common_modal_all_frost_free_0").hide();
        $(".vigipool_common_modal_all_frost_free_1").hide();
        $(".vigipool_common_modal_all_frost_free_2").hide();
        $(".vigipool_common_modal_all_light_type_rc").hide();
        $(".vigipool_common_modal_all_light_type_mono").hide();
        $(".vigipool_common_modal_all_light_type_mono_dim").hide();
        $(".vigipool_common_modal_all_light_type_micro_cuts").hide();
        $(".vigipool_common_modal_all_aux_type_none").hide();
        $(".vigipool_common_modal_all_aux_type_heater").hide();
        $(".vigipool_common_modal_all_aux_type_treatment").hide();
        $(".vigipool_common_modal_all_aux_type_booster").hide();
        $(".vigipool_common_modal_all_aux_type_auxiliary").hide();
        $(".vigipool_common_modal_all_winter_mode_off").hide();
        $(".vigipool_common_modal_all_winter_mode_on").hide();
        $(".vigipool_common_modal_all_button_deletion").hide();
    } else if (is_device(device_id, "phileo")) {
        $(".vigipool_common_modal_all_frost_free").hide();
        $(".vigipool_common_modal_all_light_type").hide();
        $(".vigipool_common_modal_all_aux_type").hide();

        $(".vigipool_common_modal_all_frost_free_off").hide();
        $(".vigipool_common_modal_all_frost_free_0").hide();
        $(".vigipool_common_modal_all_frost_free_1").hide();
        $(".vigipool_common_modal_all_frost_free_2").hide();
        $(".vigipool_common_modal_all_light_type_rc").hide();
        $(".vigipool_common_modal_all_light_type_mono").hide();
        $(".vigipool_common_modal_all_light_type_mono_dim").hide();
        $(".vigipool_common_modal_all_light_type_micro_cuts").hide();
        $(".vigipool_common_modal_all_aux_type_none").hide();
        $(".vigipool_common_modal_all_aux_type_heater").hide();
        $(".vigipool_common_modal_all_aux_type_treatment").hide();
        $(".vigipool_common_modal_all_aux_type_booster").hide();
        $(".vigipool_common_modal_all_aux_type_auxiliary").hide();
        $(".vigipool_common_modal_all_button_deletion").hide();
    }

    // Init

    $(".vigipool_common_modal_all_frost_free_off").removeClass("btn-primary");
    $(".vigipool_common_modal_all_frost_free_0").removeClass("btn-primary");
    $(".vigipool_common_modal_all_frost_free_1").removeClass("btn-primary");
    $(".vigipool_common_modal_all_frost_free_2").removeClass("btn-primary");
    $(".vigipool_common_modal_all_light_type_rc").removeClass("btn-primary");
    $(".vigipool_common_modal_all_light_type_mono").removeClass("btn-primary");
    $(".vigipool_common_modal_all_light_type_mono_dim").removeClass("btn-primary");
    $(".vigipool_common_modal_all_light_type_micro_cuts").removeClass("btn-primary");
    $(".vigipool_common_modal_all_aux_type_none").removeClass("btn-primary");
    $(".vigipool_common_modal_all_aux_type_heater").removeClass("btn-primary");
    $(".vigipool_common_modal_all_aux_type_treatment").removeClass("btn-primary");
    $(".vigipool_common_modal_all_aux_type_booster").removeClass("btn-primary");
    $(".vigipool_common_modal_all_aux_type_auxiliary").removeClass("btn-primary");
    $(".vigipool_common_modal_all_anteam_frost_protection_mode_off").removeClass("btn-primary");
    $(".vigipool_common_modal_all_anteam_frost_protection_mode_0").removeClass("btn-primary");
    $(".vigipool_common_modal_all_anteam_frost_protection_mode_1").removeClass("btn-primary");
    $(".vigipool_common_modal_all_anteam_frost_protection_mode_2").removeClass("btn-primary");

    // frost_free

    switch (frost_free) {
        case 255:
            $(".vigipool_common_modal_all_frost_free_off").addClass("btn-primary");
            break;
        case 0:
            $(".vigipool_common_modal_all_frost_free_0").addClass("btn-primary");
            break;
        case 1:
            $(".vigipool_common_modal_all_frost_free_1").addClass("btn-primary");
            break;
        case 2:
            $(".vigipool_common_modal_all_frost_free_2").addClass("btn-primary");
            break;
    }

    // light_type

    switch (light_type) {
        case 0:
            $(".vigipool_common_modal_all_light_type_rc").addClass("btn-primary");
            break;
        case 1:
            $(".vigipool_common_modal_all_light_type_mono").addClass("btn-primary");
            break;
        case 2:
            $(".vigipool_common_modal_all_light_type_mono_dim").addClass("btn-primary");
            break;
        case 3:
            $(".vigipool_common_modal_all_light_type_micro_cuts").addClass("btn-primary");
            break;
    }

    // aux_type

    switch (aux_type) {
        case 1:
            $(".vigipool_common_modal_all_aux_type_none").addClass("btn-primary");
            break;
        case 2:
            $(".vigipool_common_modal_all_aux_type_heater").addClass("btn-primary");
            break;
        case 3:
            $(".vigipool_common_modal_all_aux_type_treatment").addClass("btn-primary");
            break;
        case 4:
            $(".vigipool_common_modal_all_aux_type_booster").addClass("btn-primary");
            break;
        case 5:
            $(".vigipool_common_modal_all_aux_type_auxiliary").addClass("btn-primary");
            break;
    }

    // winter_mode

    switch (winter_mode) {
        case 0:
            $(".vigipool_common_modal_all_winter_mode_off").addClass("btn-primary");
            break;
        case 1:
            $(".vigipool_common_modal_all_winter_mode_on").addClass("btn-primary");
            break;
    }
}// texts

$(".vigipool_ui_x3_state_label > p:nth-child(1)").html(get_text("light"));

function update_vigipool_ui_x3_state() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var device_id = get_value_from_eq(i, "device_id", "x312");
        var x3_color = get_value_from_position(i, "x3_color");
        var x3_state = get_value_from_position(i, "x3_state");

        if (device_id !== undefined) {
            $(".vigipool_ui_x3_state_label").eq(i).show();
            $(".vigipool_ui_x3_state_state").eq(i).show();
        } else {
            $(".vigipool_ui_x3_state_label").eq(i).hide();
            $(".vigipool_ui_x3_state_state").eq(i).hide();
        }

        if (device_id !== undefined) {
            device_id = device_id.replace("x312_", "");
            $(".vigipool_ui_x3_state_label > p:nth-child(2)").eq(i).html(device_id);
        }

        if (x3_state === 0) {
            $('.vigipool_ui_x3_state_circle').eq(i).css("background-color", "#085a7d");
            $('.vigipool_ui_x3_state_circle').eq(i).css("background-image", "none");
            $(".vigipool_ui_x3_state_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/light_off.png");
        } else {
            $(".vigipool_ui_x3_state_circle").eq(i).css("background-color", x3_color);
            $('.vigipool_ui_x3_state_circle').eq(i).css("background-image", "none");
            $(".vigipool_ui_x3_state_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/light_white.png");
        }


    }
}function update_vigipool_modal_x3_state() {

    // console.log("///// update_vigipool_modal_x3_state /////");

    // Variables

    var x3_state = get_value_from_position(eq_modal, "x3_state");

    // Logs

    // console.log("x3_state = " + x3_state);

    // Check

    const variables = [x3_state];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    if (x3_state === 0) {
        $(".vigipool_modal_x3_state_button_off").addClass("btn-primary");
        $(".vigipool_modal_x3_state_button_on").removeClass("btn-primary");
    } else if (x3_state === 1) {
        $(".vigipool_modal_x3_state_button_off").removeClass("btn-primary");
        $(".vigipool_modal_x3_state_button_on").addClass("btn-primary");
    }

    // x3_color

    var x3_color = get_value_from_position(eq_modal, "x3_color");
//    console.log("x3_color = " + x3_color);

    $(".vigipool_modal_x3_state_button_color_picker").val(x3_color);

    if (x3_color === x3_rainbow_value) {
        $(x3_rainbow_button).attr("src", x3_rainbow_image_ok);
        // console.log(x3_color + " === " + x3_rainbow_value);
    } else {
        $(x3_rainbow_button).attr("src", x3_rainbow_image);
        // console.log(x3_color + " !== " + x3_rainbow_value);
    }
    if (x3_color === x3_fun_value) {
        $(x3_fun_button).attr("src", x3_fun_image_ok);
        // console.log(x3_color + " === " + x3_fun_value);
    } else {
        $(x3_fun_button).attr("src", x3_fun_image);
        // console.log(x3_color + " !== " + x3_fun_value);
    }
    if (x3_color === x3_ocean_value) {
        $(x3_ocean_button).attr("src", x3_ocean_image_ok);
        // console.log(x3_color + " === " + x3_ocean_value);
    } else {
        $(x3_ocean_button).attr("src", x3_ocean_image);
        // console.log(x3_color + " !== " + x3_ocean_value);
    }
    if (x3_color === x3_flamme_value) {
        $(x3_flamme_button).attr("src", x3_flamme_image_ok);
        // console.log(x3_color + " === " + x3_flamme_value);
    } else {
        $(x3_flamme_button).attr("src", x3_flamme_image);
        // console.log(x3_color + " !== " + x3_flamme_value);
    }
    if (x3_color === x3_parade_value) {
        $(x3_parade_button).attr("src", x3_parade_image_ok);
        // console.log(x3_color + " === " + x3_parade_value);
    } else {
        $(x3_parade_button).attr("src", x3_parade_image);
        // console.log(x3_color + " !== " + x3_parade_value);
    }
    if (x3_color === x3_elegant_value) {
        $(x3_elegant_button).attr("src", x3_elegant_image_ok);
        // console.log(x3_color + " === " + x3_elegant_value);
    } else {
        $(x3_elegant_button).attr("src", x3_elegant_image);
        // console.log(x3_color + " !== " + x3_elegant_value);
    }
    if (x3_color === x3_horizon_value) {
        $(x3_horizon_button).attr("src", x3_horizon_image_ok);
        // console.log(x3_color + " === " + x3_horizon_value);
    } else {
        $(x3_horizon_button).attr("src", x3_horizon_image);
        // console.log(x3_color + " !== " + x3_horizon_value);
    }
    if (x3_color === x3_psyche_value) {
        $(x3_psyche_button).attr("src", x3_psyche_image_ok);
        // console.log(x3_color + " === " + x3_psyche_value);
    } else {
        $(x3_psyche_button).attr("src", x3_psyche_image);
        // console.log(x3_color + " !== " + x3_psyche_value);
    }

    $(document).ready(function () {
        var x3_bright = get_value_from_position(eq_modal, "x3_bright");
        // console.log("x3_bright = " + x3_bright);
        $("#myx3_bright").value(x3_bright);
    });

    // bright

    // speed

    if (is_sequence(x3_color)) {
        $('.vigipool_modal_x3_state_speed').show();
        $('.vigipool_modal_x3_state_speed_title').show();
    } else {
        $('.vigipool_modal_x3_state_speed').hide();
        $('.vigipool_modal_x3_state_speed_title').hide();
    }

    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";

    $('.vigipool_modal_x3_state_speed > th:nth-child(2) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_speed > th:nth-child(2) > p').css("color", color_off);
    $('.vigipool_modal_x3_state_speed > th:nth-child(3) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_speed > th:nth-child(3) > p').css("color", color_off);
    $('.vigipool_modal_x3_state_speed > th:nth-child(4) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_speed > th:nth-child(4) > p').css("color", color_off);

    var x3_speed = get_value_from_position(eq_modal, "x3_speed");

    if (x3_speed === 50) {
        $('.vigipool_modal_x3_state_speed > th:nth-child(2) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_speed > th:nth-child(2) > p').css("color", color_on);
    } else if (x3_speed === 100) {
        $('.vigipool_modal_x3_state_speed > th:nth-child(3) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_speed > th:nth-child(3) > p').css("color", color_on);
    } else if (x3_speed === 150) {
        $('.vigipool_modal_x3_state_speed > th:nth-child(4) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_speed > th:nth-child(4) > p').css("color", color_on);
    }

    $(document).ready(function () {
        var x3_sched = get_value_from_position(eq_modal, "x3_sched");
        var p1_color = get_value_from_position(eq_modal, "p1_color");
        var p2_color = get_value_from_position(eq_modal, "p2_color");
        // console.log("x3_sched = " + x3_sched);
        // console.log("p1_color = " + p1_color);
        // console.log("p2_color = " + p2_color);

        create_program("vigipool_modal_x3_state", 1, x3_sched, p1_color);
        create_program("vigipool_modal_x3_state", 2, x3_sched, p2_color);
    });
}


update_vigipool_modal_x3_state();function update_vigipool_modal_x3_state_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_x3_state_prog_1 /////");

    // Variables

    if (set_sched_value_save === "") {
        var x3_sched = get_value_from_position(eq_modal, "x3_sched");
    } else {
        var x3_sched = set_sched_value_save;
    }

    // Logs

    // console.log("x3_sched = " + x3_sched);

    // Check

    const variables = [x3_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // console.log("x3_sched = " + x3_sched);

    var p1_color = get_value_from_position(eq_modal, "p1_color");

    var programs_number = get_sched_value(x3_sched, "programs_number");
    var program_1_off_on_and_days = get_sched_value(x3_sched, "program_1_off_on_and_days");
    var program_1_bright = get_sched_value(x3_sched, "program_1_bright");
    var program_1_speed = get_sched_value(x3_sched, "program_1_speed");
    var program_1_sched_number = get_sched_value(x3_sched, "program_1_sched_number");
    var program_1_sched_1_begin = get_sched_value(x3_sched, "program_1_sched_1_begin");
    var program_1_sched_1_end = fix_end_dec(get_sched_value(x3_sched, "program_1_sched_1_end"));
    var program_1_sched_2_begin = get_sched_value(x3_sched, "program_1_sched_2_begin");
    var program_1_sched_2_end = fix_end_dec(get_sched_value(x3_sched, "program_1_sched_2_end"));
    var program_1_sched_3_begin = get_sched_value(x3_sched, "program_1_sched_3_begin");
    var program_1_sched_3_end = fix_end_dec(get_sched_value(x3_sched, "program_1_sched_3_end"));
    var program_1_off_on = get_sched_value(x3_sched, "program_1_off_on");
    var program_1_samedi = get_sched_value(x3_sched, "program_1_samedi");
    var program_1_vendredi = get_sched_value(x3_sched, "program_1_vendredi");
    var program_1_jeudi = get_sched_value(x3_sched, "program_1_jeudi");
    var program_1_mercredi = get_sched_value(x3_sched, "program_1_mercredi");
    var program_1_mardi = get_sched_value(x3_sched, "program_1_mardi");
    var program_1_lundi = get_sched_value(x3_sched, "program_1_lundi");
    var program_1_dimanche = get_sched_value(x3_sched, "program_1_dimanche");

    // console.log("programs_number = " + programs_number);
    // console.log("program_1_off_on_and_days = " + program_1_off_on_and_days);
    // console.log("program_1_bright = " + program_1_bright);
    // console.log("program_1_speed = " + program_1_speed);
    // console.log("program_1_sched_number = " + program_1_sched_number);
    // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
    // console.log("program_1_sched_1_end = " + program_1_sched_1_end);
    // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
    // console.log("program_1_sched_2_end = " + program_1_sched_2_end);
    // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
    // console.log("program_1_sched_3_end = " + program_1_sched_3_end);
    // console.log("program_1_off_on = " + program_1_off_on);
    // console.log("program_1_samedi = " + program_1_samedi);
    // console.log("program_1_vendredi = " + program_1_vendredi);
    // console.log("program_1_jeudi = " + program_1_jeudi);
    // console.log("program_1_mercredi = " + program_1_mercredi);
    // console.log("program_1_mardi = " + program_1_mardi);
    // console.log("program_1_lundi = " + program_1_lundi);
    // console.log("program_1_dimanche = " + program_1_dimanche);

    if (isNaN(program_1_sched_1_begin))
        program_1_sched_1_begin = 0;
    if (isNaN(program_1_sched_1_end))
        program_1_sched_1_end = 0;
    if (isNaN(program_1_sched_2_begin))
        program_1_sched_2_begin = 0;
    if (isNaN(program_1_sched_2_end))
        program_1_sched_2_end = 0;
    if (isNaN(program_1_sched_3_begin))
        program_1_sched_3_begin = 0;
    if (isNaN(program_1_sched_3_end))
        program_1_sched_3_end = 0;

    // State

    if (program_1_off_on === 0) {
        $(".vigipool_modal_x3_state_prog_1_button_off").addClass("btn-primary");
        $(".vigipool_modal_x3_state_prog_1_button_on").removeClass("btn-primary");
    } else if (program_1_off_on === 1) {
        $(".vigipool_modal_x3_state_prog_1_button_off").removeClass("btn-primary");
        $(".vigipool_modal_x3_state_prog_1_button_on").addClass("btn-primary");
    }

    // Color picker

    $(".vigipool_modal_x3_state_prog_1_button_color_picker").val(p1_color);

    // Saved colors 
    // Sequences

    if (p1_color === x3_rainbow_value) {
        $(x3_rainbow_button).attr("src", x3_rainbow_image_ok);
        // console.log(p1_color + " === " + x3_rainbow_value);
    } else {
        $(x3_rainbow_button).attr("src", x3_rainbow_image);
        // console.log(p1_color + " !== " + x3_rainbow_value);
    }
    if (p1_color === x3_fun_value) {
        $(x3_fun_button).attr("src", x3_fun_image_ok);
        // console.log(p1_color + " === " + x3_fun_value);
    } else {
        $(x3_fun_button).attr("src", x3_fun_image);
        // console.log(p1_color + " !== " + x3_fun_value);
    }
    if (p1_color === x3_ocean_value) {
        $(x3_ocean_button).attr("src", x3_ocean_image_ok);
        // console.log(p1_color + " === " + x3_ocean_value);
    } else {
        $(x3_ocean_button).attr("src", x3_ocean_image);
        // console.log(p1_color + " !== " + x3_ocean_value);
    }
    if (p1_color === x3_flamme_value) {
        $(x3_flamme_button).attr("src", x3_flamme_image_ok);
        // console.log(p1_color + " === " + x3_flamme_value);
    } else {
        $(x3_flamme_button).attr("src", x3_flamme_image);
        // console.log(p1_color + " !== " + x3_flamme_value);
    }
    if (p1_color === x3_parade_value) {
        $(x3_parade_button).attr("src", x3_parade_image_ok);
        // console.log(p1_color + " === " + x3_parade_value);
    } else {
        $(x3_parade_button).attr("src", x3_parade_image);
        // console.log(p1_color + " !== " + x3_parade_value);
    }
    if (p1_color === x3_elegant_value) {
        $(x3_elegant_button).attr("src", x3_elegant_image_ok);
        // console.log(p1_color + " === " + x3_elegant_value);
    } else {
        $(x3_elegant_button).attr("src", x3_elegant_image);
        // console.log(p1_color + " !== " + x3_elegant_value);
    }
    if (p1_color === x3_horizon_value) {
        $(x3_horizon_button).attr("src", x3_horizon_image_ok);
        // console.log(p1_color + " === " + x3_horizon_value);
    } else {
        $(x3_horizon_button).attr("src", x3_horizon_image);
        // console.log(p1_color + " !== " + x3_horizon_value);
    }
    if (p1_color === x3_psyche_value) {
        $(x3_psyche_button).attr("src", x3_psyche_image_ok);
        // console.log(p1_color + " === " + x3_psyche_value);
    } else {
        $(x3_psyche_button).attr("src", x3_psyche_image);
        // console.log(p1_color + " !== " + x3_psyche_value);
    }

    // Schedule 1
    // At
    $("#x3_state_begin_1").html(converter("dec", "time_4", parseInt(program_1_sched_1_begin)));
    $("#myx3_state_begin_1").val(program_1_sched_1_begin);
    // During
    $("#x3_state_end_1").html(converter("dec", "time_4", parseInt(program_1_sched_1_end)));
    $("#myx3_state_end_1").val(program_1_sched_1_end);

    // Schedule 2
    // At
    $("#x3_state_begin_2").html(converter("dec", "time_4", parseInt(program_1_sched_2_begin)));
    $("#myx3_state_begin_2").val(program_1_sched_2_begin);
    // During
    $("#x3_state_end_2").html(converter("dec", "time_4", parseInt(program_1_sched_2_end)));
    $("#myx3_state_end_2").val(program_1_sched_2_end);

    // Schedule 3
    // At
    $("#x3_state_begin_3").html(converter("dec", "time_4", parseInt(program_1_sched_3_begin)));
    $("#myx3_state_begin_3").val(program_1_sched_3_begin);
    // During
    $("#x3_state_end_3").html(converter("dec", "time_4", parseInt(program_1_sched_3_end)));
    $("#myx3_state_end_3").val(program_1_sched_3_end);

    // Brightness
    $("#myx3_bright").val(program_1_bright);

    if (program_1_sched_2_begin === 0 && program_1_sched_2_end === 0) {
        $(".vigipool_modal_x3_state_prog_1_sched_2").hide();
        $(".vigipool_modal_x3_state_prog_1_sched_2_add").show();
    } else {
        $(".vigipool_modal_x3_state_prog_1_sched_2").show();
        $(".vigipool_modal_x3_state_prog_1_sched_2_add").hide();
    }
    if (program_1_sched_3_begin === 0 && program_1_sched_3_end === 0) {
        $(".vigipool_modal_x3_state_prog_1_sched_3").hide();
        $(".vigipool_modal_x3_state_prog_1_sched_3_add").show();
    } else {
        $(".vigipool_modal_x3_state_prog_1_sched_3").show();
        $(".vigipool_modal_x3_state_prog_1_sched_3_add").hide();
    }

    // Speed

    if (is_sequence(p1_color)) {
        $('.vigipool_modal_x3_state_prog_1_speed').show();
        $('.vigipool_modal_x3_state_prog_1_speed_title').show();
    } else {
        $('.vigipool_modal_x3_state_prog_1_speed').hide();
        $('.vigipool_modal_x3_state_prog_1_speed_title').hide();
    }

    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";

    $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(2) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(2) > p').css("color", color_off);
    $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(3) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(3) > p').css("color", color_off);
    $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(4) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(4) > p').css("color", color_off);

    if (program_1_speed === 50) {
        $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(2) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(2) > p').css("color", color_on);
    } else if (program_1_speed === 100) {
        $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(3) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(3) > p').css("color", color_on);
    } else if (program_1_speed === 150) {
        $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(4) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_prog_1_speed > th:nth-child(4) > p').css("color", color_on);
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_x3_state_prog_1", 1, x3_sched, p1_color);

}


function update_vigipool_modal_x3_state_prog_2(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_x3_state_prog_2 /////");

    // Variables

    if (set_sched_value_save === "") {
        var x3_sched = get_value_from_position(eq_modal, "x3_sched");
    } else {
        var x3_sched = set_sched_value_save;
    }

    // Logs

    // console.log("x3_sched = " + x3_sched);

    // Check

    const variables = [x3_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display
    
    var p2_color = get_value_from_position(eq_modal, "p2_color");

    var programs_number = get_sched_value(x3_sched, "programs_number");
    var program_2_off_on_and_days = get_sched_value(x3_sched, "program_2_off_on_and_days");
    var program_2_bright = get_sched_value(x3_sched, "program_2_bright");
    var program_2_speed = get_sched_value(x3_sched, "program_2_speed");
    var program_2_sched_number = get_sched_value(x3_sched, "program_2_sched_number");
    var program_2_sched_1_begin = get_sched_value(x3_sched, "program_2_sched_1_begin");
    var program_2_sched_1_end = fix_end_dec(get_sched_value(x3_sched, "program_2_sched_1_end"));
    var program_2_sched_2_begin = get_sched_value(x3_sched, "program_2_sched_2_begin");
    var program_2_sched_2_end = fix_end_dec(get_sched_value(x3_sched, "program_2_sched_2_end"));
    var program_2_sched_3_begin = get_sched_value(x3_sched, "program_2_sched_3_begin");
    var program_2_sched_3_end = fix_end_dec(get_sched_value(x3_sched, "program_2_sched_3_end"));
    var program_2_off_on = get_sched_value(x3_sched, "program_2_off_on");
    var program_2_samedi = get_sched_value(x3_sched, "program_2_samedi");
    var program_2_vendredi = get_sched_value(x3_sched, "program_2_vendredi");
    var program_2_jeudi = get_sched_value(x3_sched, "program_2_jeudi");
    var program_2_mercredi = get_sched_value(x3_sched, "program_2_mercredi");
    var program_2_mardi = get_sched_value(x3_sched, "program_2_mardi");
    var program_2_lundi = get_sched_value(x3_sched, "program_2_lundi");
    var program_2_dimanche = get_sched_value(x3_sched, "program_2_dimanche");

    // console.log("programs_number = " + programs_number);
    // console.log("program_2_off_on_and_days = " + program_2_off_on_and_days);
    // console.log("program_2_bright = " + program_2_bright);
    // console.log("program_2_speed = " + program_2_speed);
    // console.log("program_2_sched_number = " + program_2_sched_number);
    // console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
    // console.log("program_2_sched_1_end = " + program_2_sched_1_end);
    // console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
    // console.log("program_2_sched_2_end = " + program_2_sched_2_end);
    // console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
    // console.log("program_2_sched_3_end = " + program_2_sched_3_end);
    // console.log("program_2_off_on = " + program_2_off_on);
    // console.log("program_2_samedi = " + program_2_samedi);
    // console.log("program_2_vendredi = " + program_2_vendredi);
    // console.log("program_2_jeudi = " + program_2_jeudi);
    // console.log("program_2_mercredi = " + program_2_mercredi);
    // console.log("program_2_mardi = " + program_2_mardi);
    // console.log("program_2_lundi = " + program_2_lundi);
    // console.log("program_2_dimanche = " + program_2_dimanche);

    if (isNaN(program_2_sched_1_begin))
        program_2_sched_1_begin = 0;
    if (isNaN(program_2_sched_1_end))
        program_2_sched_1_end = 0;
    if (isNaN(program_2_sched_2_begin))
        program_2_sched_2_begin = 0;
    if (isNaN(program_2_sched_2_end))
        program_2_sched_2_end = 0;
    if (isNaN(program_2_sched_3_begin))
        program_2_sched_3_begin = 0;
    if (isNaN(program_2_sched_3_end))
        program_2_sched_3_end = 0;

    // State

    if (program_2_off_on === 0) {
        $(".vigipool_modal_x3_state_prog_2_button_off").addClass("btn-primary");
        $(".vigipool_modal_x3_state_prog_2_button_on").removeClass("btn-primary");
    } else if (program_2_off_on === 1) {
        $(".vigipool_modal_x3_state_prog_2_button_off").removeClass("btn-primary");
        $(".vigipool_modal_x3_state_prog_2_button_on").addClass("btn-primary");
    }

    // Color picker

    $(".vigipool_modal_x3_state_prog_2_button_color_picker").val(p2_color);

    // Saved colors 
    // Sequences

    if (p2_color === x3_rainbow_value) {
        $(x3_rainbow_button).attr("src", x3_rainbow_image_ok);
        // console.log(p2_color + " === " + x3_rainbow_value);
    } else {
        $(x3_rainbow_button).attr("src", x3_rainbow_image);
        // console.log(p2_color + " !== " + x3_rainbow_value);
    }
    if (p2_color === x3_fun_value) {
        $(x3_fun_button).attr("src", x3_fun_image_ok);
        // console.log(p2_color + " === " + x3_fun_value);
    } else {
        $(x3_fun_button).attr("src", x3_fun_image);
        // console.log(p2_color + " !== " + x3_fun_value);
    }
    if (p2_color === x3_ocean_value) {
        $(x3_ocean_button).attr("src", x3_ocean_image_ok);
        // console.log(p2_color + " === " + x3_ocean_value);
    } else {
        $(x3_ocean_button).attr("src", x3_ocean_image);
        // console.log(p2_color + " !== " + x3_ocean_value);
    }
    if (p2_color === x3_flamme_value) {
        $(x3_flamme_button).attr("src", x3_flamme_image_ok);
        // console.log(p2_color + " === " + x3_flamme_value);
    } else {
        $(x3_flamme_button).attr("src", x3_flamme_image);
        // console.log(p2_color + " !== " + x3_flamme_value);
    }
    if (p2_color === x3_parade_value) {
        $(x3_parade_button).attr("src", x3_parade_image_ok);
        // console.log(p2_color + " === " + x3_parade_value);
    } else {
        $(x3_parade_button).attr("src", x3_parade_image);
        // console.log(p2_color + " !== " + x3_parade_value);
    }
    if (p2_color === x3_elegant_value) {
        $(x3_elegant_button).attr("src", x3_elegant_image_ok);
        // console.log(p2_color + " === " + x3_elegant_value);
    } else {
        $(x3_elegant_button).attr("src", x3_elegant_image);
        // console.log(p2_color + " !== " + x3_elegant_value);
    }
    if (p2_color === x3_horizon_value) {
        $(x3_horizon_button).attr("src", x3_horizon_image_ok);
        // console.log(p2_color + " === " + x3_horizon_value);
    } else {
        $(x3_horizon_button).attr("src", x3_horizon_image);
        // console.log(p2_color + " !== " + x3_horizon_value);
    }
    if (p2_color === x3_psyche_value) {
        $(x3_psyche_button).attr("src", x3_psyche_image_ok);
        // console.log(p2_color + " === " + x3_psyche_value);
    } else {
        $(x3_psyche_button).attr("src", x3_psyche_image);
        // console.log(p2_color + " !== " + x3_psyche_value);
    }

    // Schedule 1
    // At
    $("#vigipool_modal_x3_state_prog_2_sched_1_begin").html(converter("dec", "time_4", parseInt(program_2_sched_1_begin)));
    $("#myvigipool_modal_x3_state_prog_2_sched_1_begin").val(program_2_sched_1_begin);
    // During
    $("#vigipool_modal_x3_state_prog_2_sched_1_end").html(converter("dec", "time_4", parseInt(program_2_sched_1_end)));
    $("#myvigipool_modal_x3_state_prog_2_sched_1_end").val(program_2_sched_1_end);

    // Schedule 2
    // At
    $("#vigipool_modal_x3_state_prog_2_sched_2_begin").html(converter("dec", "time_4", parseInt(program_2_sched_2_begin)));
    $("#myvigipool_modal_x3_state_prog_2_sched_2_begin").val(program_2_sched_2_begin);
    // During
    $("#vigipool_modal_x3_state_prog_2_sched_2_end").html(converter("dec", "time_4", parseInt(program_2_sched_2_end)));
    $("#myvigipool_modal_x3_state_prog_2_sched_2_end").val(program_2_sched_2_end);

    // Schedule 3
    // At
    $("#vigipool_modal_x3_state_prog_2_sched_3_begin").html(converter("dec", "time_4", parseInt(program_2_sched_3_begin)));
    $("#myvigipool_modal_x3_state_prog_2_sched_3_begin").val(program_2_sched_3_begin);
    // During
    $("#vigipool_modal_x3_state_prog_2_sched_3_end").html(converter("dec", "time_4", parseInt(program_2_sched_3_end)));
    $("#myvigipool_modal_x3_state_prog_2_sched_3_end").val(program_2_sched_3_end);

    if (program_2_sched_2_begin === 0 && program_2_sched_2_end === 0) {
        $(".vigipool_modal_x3_state_prog_2_sched_2").hide();
        $(".vigipool_modal_x3_state_prog_2_sched_2_add").show();
    } else {
        $(".vigipool_modal_x3_state_prog_2_sched_2").show();
        $(".vigipool_modal_x3_state_prog_2_sched_2_add").hide();
    }
    if (program_2_sched_3_begin === 0 && program_2_sched_3_end === 0) {
        $(".vigipool_modal_x3_state_prog_2_sched_3").hide();
        $(".vigipool_modal_x3_state_prog_2_sched_3_add").show();
    } else {
        $(".vigipool_modal_x3_state_prog_2_sched_3").show();
        $(".vigipool_modal_x3_state_prog_2_sched_3_add").hide();
    }

    // Brightness
    $("#vigipool_modal_x3_state_prog_2_bright").val(program_2_bright);

    // Speed
    if (is_sequence(p2_color)) {
        $('.vigipool_modal_x3_state_prog_2_speed').show();
        $('.vigipool_modal_x3_state_prog_2_speed_title').show();
    } else {
        $('.vigipool_modal_x3_state_prog_2_speed').hide();
        $('.vigipool_modal_x3_state_prog_2_speed_title').hide();
    }

    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";

    $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(2) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(2) > p').css("color", color_off);
    $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(3) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(3) > p').css("color", color_off);
    $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(4) > p').css("background-color", background_color_off);
    $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(4) > p').css("color", color_off);

    if (program_2_speed === 50) {
        $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(2) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(2) > p').css("color", color_on);
    } else if (program_2_speed === 100) {
        $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(3) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(3) > p').css("color", color_on);
    } else if (program_2_speed === 150) {
        $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(4) > p').css("background-color", background_color_on);
        $('.vigipool_modal_x3_state_prog_2_speed > th:nth-child(4) > p').css("color", color_on);
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_x3_state_prog_2", 2, x3_sched, p2_color);
}

// texts

$(".vigipool_ui_light_label > p").html(get_text("light"));

// other

var warm = "#f4e3be";
var cold = "#ffffff";
var blue = "#7eadcf";
var lagoon = "#a0d4dc";
var cyan = "#c1f1f9";
var green = "#9dc46f";
var purple = "#c25dba";
var magenta = "#cc86c3";
var pink = "#ecb7e7";
var red = "#d3585a";
var orange = "#e3aa52";
var favorite = "#758f8d";

function update_vigipool_ui_light_state() {

    // console.log("update_vigipool_ui_light_state");

    // variables
    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        // console.log("i = " + i);

        var light_code = get_value_from_position(i, "light_code");
        var light_state = get_value_from_position(i, "light_state");
        // console.log("light_code = " + light_code);
        // console.log("light_state = " + light_state);

        if (is_variable_available(i, "light_state")) {
            $(".vigipool_ui_light_label").eq(i).show();
            $(".vigipool_ui_light_state").eq(i).show();
        } else {
            $(".vigipool_ui_light_label").eq(i).hide();
            $(".vigipool_ui_light_state").eq(i).hide();
        }

        // actions

        if (!is_variable_available(i, "light_state")) {
            $(".vigipool_ui_tild_light").eq(i).hide();
        } else {

            var light_state = parseInt(light_state);
            var light_code = parseInt(light_code);

            if (light_state === 0) {
                $('.vigipool_ui_light_circle').eq(i).css("background-color", "#085a7d");
                $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                $(".vigipool_ui_light_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/light_off.png");
            } else {
                $(".vigipool_ui_light_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/light_white.png");
                switch (light_code) {
                    case 0:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", warm);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 1:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", cold);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        $(".vigipool_ui_light_circle").attr("src", "/plugins/vigipool/desktop/img/light_black.png");
                        break;
                    case 2:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", blue);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 3:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", lagoon);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 4:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", cyan);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 10:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", green);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 5:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", purple);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 6:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", magenta);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 7:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", pink);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 8:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", red);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 9:
                        $('.vigipool_ui_light_circle').eq(i).css("background-color", orange);
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "none");
                        break;
                    case 16:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_gradiant_large.png\")");
                        break;
                    case 17:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_rainbow_large.png\")");
                        break;
                    case 18:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_parade_large.png\")");
                        break;
                    case 19:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_techno_large.png\")");
                        break;
                    case 20:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_horizon_large.png\")");
                        break;
                    case 21:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_random_large.png\")");
                        break;
                    case 22:
                        $('.vigipool_ui_light_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_magical_large.png\")");
                        break;
                }
            }
        }
    }
}

$(".vigipool_ui_filt_label > p").html(get_text("vigipool_modal_filtration"));

function update_vigipool_ui_filt_state() {

    // console.log("refresh_dashboard_filt_state");

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        // Variables de bases

        var filt_sched = get_value_from_position(i, "filt_sched");
        var filt_light_force = get_value_from_position(i, "filt_light_force");
        var filt_state = get_value_from_position(i, "filt_state");
        var filt_state_m = get_value_from_position(i, "filt_state_m");
        var filt_serv_inter = get_value_from_position(i, "filt_serv_inter");

        // console.log("filt_sched = " + filt_sched);
        // console.log("filt_light_force = " + filt_light_force);
        // console.log("filt_state = " + filt_state);
        // console.log("filt_serv_inter = " + filt_serv_inter);

        if (filt_state === undefined || filt_state_m !== undefined) {
            $(".vigipool_ui_filt_label").eq(i).hide();
            $(".vigipool_ui_filt_state").eq(i).hide();
        } else {
            $(".vigipool_ui_filt_label").eq(i).show();
            $(".vigipool_ui_filt_state").eq(i).show();
        }

        var flow_on = get_value_from_position(i, "flow_on");

        // Variables avancées

        var FILT_ON = get_bit(filt_state, 0);
        var FILT_ON = get_bit(filt_state, 1);
        var FILT_PROG = get_bit(filt_state, 2);
        var FILT_LIGHT = get_bit(filt_state, 3);
        var FILT_AUX = get_bit(filt_state, 4);
        var FILT_SERV = get_bit(filt_state, 5);
        var FILT_FROST = get_bit(filt_state, 6);
        var FILT_PAC = get_bit(filt_state, 7);

        var vigipool_aux_conf = parseInt($(".vigipool_aux_conf").eq(i).html());

        var en_marche = get_bit(vigipool_aux_conf, 0);
        var asservi_filt = get_bit(vigipool_aux_conf, 1);
        var prio_aux = get_bit(vigipool_aux_conf, 2);
        var consigne_temp = get_bit(vigipool_aux_conf, 3);
        var aux_min_temp = get_bit(vigipool_aux_conf, 4);
        var consigne_orp = get_bit(vigipool_aux_conf, 5);

        // Result

        var prog = false;

        if (filt_state)
            prog = true;

        var marche = false;

        if (flow_on)
            marche = true;

        var forcer = false;

        if (filt_light_force)
            forcer = true;
        if (asservi_filt)
            forcer = true;
        if (prio_aux)
            forcer = true;

        $(".vigipool_ui_tild_flow_on_1").eq(i).hide();
        $(".vigipool_ui_tild_flow_on_2").eq(i).hide();
        $(".vigipool_ui_tild_flow_on_3").eq(i).hide();
        $(".vigipool_ui_tild_flow_on_4").eq(i).hide();

        if (!marche && !forcer === prog) {
            $(".vigipool_ui_tild_flow_on_1").eq(i).show();
        } else if (marche && !forcer === prog) {
            $(".vigipool_ui_tild_flow_on_2").eq(i).show();
        } else if (!marche && forcer === prog) {
            $(".vigipool_ui_tild_flow_on_3").eq(i).show();
        } else if (marche && forcer === prog) {
            $(".vigipool_ui_tild_flow_on_4").eq(i).show();
        }
    }
}function update_vigipool_ui_aux_state() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var aux_sched = get_value_from_position(i, "aux_sched");
        var aux_type = get_value_from_position(i, "aux_type");
        var aux_temp_hyst = get_value_from_position(i, "aux_temp_hyst");
        var aux_state = get_value_from_position(i, "aux_state");
        var aux_conf = get_value_from_position(i, "aux_conf");
        var aux_min_temp = get_value_from_position(i, "aux_min_temp");
        var consigne_temp = get_value_from_position(i, "consigne_temp");
        var consigne_temp_unit = get_value_from_position(i, "consigne_temp_unit");

        var en_marche = get_bit(aux_conf, 0);
        var asservi_filt = get_bit(aux_conf, 1);
        var prio_aux = get_bit(aux_conf, 2);
        var consigne_temp = get_bit(aux_conf, 3);
        var aux_min_temp = get_bit(aux_conf, 4);
        var consigne_orp = get_bit(aux_conf, 5);

        // console.log("aux_sched = " + aux_sched);
        // console.log("aux_type = " + aux_type);
        // console.log("aux_temp_hyst = " + aux_temp_hyst);
        // console.log("aux_state = " + aux_state);
        // console.log("aux_conf = " + aux_conf);
        // console.log("aux_min_temp = " + aux_min_temp);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("consigne_temp_unit = " + consigne_temp_unit);
        // console.log("en_marche = " + en_marche);
        // console.log("asservi_filt = " + asservi_filt);
        // console.log("prio_aux = " + prio_aux);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("aux_min_temp = " + aux_min_temp);
        // console.log("consigne_orp = " + consigne_orp);

        if (aux_state === undefined || aux_type === 1) {
            $(".vigipool_ui_aux_label").eq(i).hide();
            $(".vigipool_ui_aux_state").eq(i).hide();
        } else {
            $(".vigipool_ui_aux_label").eq(i).show();
            $(".vigipool_ui_aux_state").eq(i).show();
        }


        // console.log("aux_sched = " + aux_sched);
        // 
        // 
        // console.log("aux_type = " + aux_type);
        // console.log("aux_temp_hyst = " + aux_temp_hyst);
        // console.log("aux_state = " + aux_state);
        // console.log("aux_conf = " + aux_conf);
        // console.log("aux_min_temp = " + aux_min_temp);
        //
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("consigne_temp_unit = " + consigne_temp_unit);
        //
        // console.log("en_marche = " + en_marche);
        // console.log("asservi_filt = " + asservi_filt);
        // console.log("prio_aux = " + prio_aux);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("aux_min_temp = " + aux_min_temp);
        // console.log("consigne_orp = " + consigne_orp);


        switch (aux_type) {
            case 0:
                $(".vigipool_ui_aux_label > p").eq(i).html("");
                break;
            case 1:
                $(".vigipool_ui_aux_label > p").eq(i).html(get_text("none"));
                break;
            case 2:
                $(".vigipool_ui_aux_label > p").eq(i).html(get_text("heater"));
                break;
            case 3:
                $(".vigipool_ui_aux_label > p").eq(i).html(get_text("treatment"));
                break;
            case 4:
                $(".vigipool_ui_aux_label > p").eq(i).html(get_text("booster"));
                break;
            case 5:
                $(".vigipool_ui_aux_label > p").eq(i).html(get_text("auxiliary"));
                break;
            default:
                $(".vigipool_ui_aux_label > p").eq(i).html(get_text("auxiliary"));
                break;
        }

        $(".vigipool_ui_aux_layer_2").eq(i).html(consigne_temp + consigne_temp_unit);

        if (aux_type === 1)
            $(".vigipool_ui_tild_auxiliary").eq(i).hide();
        else
            $(".vigipool_ui_tild_auxiliary").eq(i).show();

        // console.log("aux_type = " + aux_type);
        // console.log("en_marche = " + en_marche);

        switch (aux_type)
        {
            case 2:
                switch (en_marche)
                {
                    case 0:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/heater_off.png");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/heater_on.png");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "linear-gradient(#711a16, #d98233)");
                        $(".vigipool_ui_aux_layer_2").eq(i).show();
                        break;
                }
                break;
            case 3:
                switch (en_marche)
                {
                    case 0:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_off.png");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_on.png");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 4:
                switch (en_marche)
                {
                    case 0:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/booster_off.png");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/booster_on.png");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 5:
                switch (en_marche)
                {
                    case 0:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_off.svg");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_on.svg");
                        $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux_layer_2").eq(i).hide();
                        break;
                }
                break;
            default :
                $(".vigipool_ui_aux_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_off.svg");
                $(".vigipool_ui_aux_circle").eq(i).css("background", "");
                $(".vigipool_ui_aux_circle").eq(i).css("background-color", "#085a7d");
                $(".vigipool_ui_aux_layer_2").eq(i).hide();
                break;
        }
    }
}function update_vigipool_modal_light() {

    // console.log("////////// update_vigipool_modal_light //////////");

    // Variables

    var light_state = get_value_from_position(eq_modal, "light_state");
    var light_code = get_value_from_position(eq_modal, "light_code");
    var light_bright = get_value_from_position(eq_modal, "light_bright");
    var light_speed = get_value_from_position(eq_modal, "light_speed");
    var light_sched = get_value_from_position(eq_modal, "light_sched");

    // Logs

    // console.log("light_state = " + light_state);
    // console.log("light_code = " + light_code);
    // console.log("light_bright = " + light_bright);
    // console.log("light_speed = " + light_speed);
    // console.log("light_sched = " + light_sched);

    // Check

    const variables = [light_state, light_code, light_bright, light_speed, light_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // light_state

    if (light_state === 0) {
        $(".vigipool_modal_light_button_off").addClass("btn-primary");
        $(".vigipool_modal_light_button_on").removeClass("btn-primary");
    } else if (light_state === 1) {
        $(".vigipool_modal_light_button_off").removeClass("btn-primary");
        $(".vigipool_modal_light_button_on").addClass("btn-primary");
    }

    // light_code

    create_ui_tild_light("vigipool_modal_light", light_code);

    // Timer

    if (light_state === 3) {
        $(".vigipool_modal_light_button_timer_off").removeClass("btn-primary");
        $(".vigipool_modal_light_button_timer_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_light_button_timer_off").addClass("btn-primary");
        $(".vigipool_modal_light_button_timer_on").removeClass("btn-primary");
    }

    // light_bright

    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";

    $(document).ready(function () {
        $('.vigipool_modal_light_bright > th:nth-child(2) > p').css("background-color", background_color_off);
        $('.vigipool_modal_light_bright > th:nth-child(2) > p').css("color", color_off);
        $('.vigipool_modal_light_bright > th:nth-child(3) > p').css("background-color", background_color_off);
        $('.vigipool_modal_light_bright > th:nth-child(3) > p').css("color", color_off);
        $('.vigipool_modal_light_bright > th:nth-child(4) > p').css("background-color", background_color_off);
        $('.vigipool_modal_light_bright > th:nth-child(4) > p').css("color", color_off);
        $('.vigipool_modal_light_bright > th:nth-child(5) > p').css("background-color", background_color_off);
        $('.vigipool_modal_light_bright > th:nth-child(5) > p').css("color", color_off);

        if (light_bright === 0) {
            $('.vigipool_modal_light_bright > th:nth-child(2) > p').css("background-color", background_color_on);
            $('.vigipool_modal_light_bright > th:nth-child(2) > p').css("color", color_on);
        } else if (light_bright === 1) {
            $('.vigipool_modal_light_bright > th:nth-child(3) > p').css("background-color", background_color_on);
            $('.vigipool_modal_light_bright > th:nth-child(3) > p').css("color", color_on);
        } else if (light_bright === 2) {
            $('.vigipool_modal_light_bright > th:nth-child(4) > p').css("background-color", background_color_on);
            $('.vigipool_modal_light_bright > th:nth-child(4) > p').css("color", color_on);
        } else if (light_bright === 3) {
            $('.vigipool_modal_light_bright > th:nth-child(5) > p').css("background-color", background_color_on);
            $('.vigipool_modal_light_bright > th:nth-child(5) > p').css("color", color_on);
        }
    });

    // light_speed

    if (light_code > 11) {
        $('.vigipool_modal_light_speed').eq(eq).show();
        $('.vigipool_modal_light_speed_title').eq(eq).show();
    } else {
        $('.vigipool_modal_light_speed').eq(eq).hide();
        $('.vigipool_modal_light_speed_title').eq(eq).hide();
    }

    $('.vigipool_modal_light_speed > th:nth-child(2) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_speed > th:nth-child(2) > p').css("color", color_off);
    $('.vigipool_modal_light_speed > th:nth-child(3) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_speed > th:nth-child(3) > p').css("color", color_off);
    $('.vigipool_modal_light_speed > th:nth-child(4) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_speed > th:nth-child(4) > p').css("color", color_off);

    if (light_speed === 0) {
        $('.vigipool_modal_light_speed > th:nth-child(2) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_speed > th:nth-child(2) > p').css("color", color_on);
    } else if (light_speed === 1) {
        $('.vigipool_modal_light_speed > th:nth-child(3) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_speed > th:nth-child(3) > p').css("color", color_on);
    } else if (light_speed === 2) {
        $('.vigipool_modal_light_speed > th:nth-child(4) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_speed > th:nth-child(4) > p').css("color", color_on);
    }

    // light_sched
    var program_1_color = get_sched_value(light_sched, "program_1_color");
    var program_2_color = get_sched_value(light_sched, "program_2_color");
    // console.log("program_1_color = " + program_1_color);
    // console.log("program_2_color = " + program_2_color);
    create_program("vigipool_modal_light", 1, light_sched, program_1_color);
    create_program("vigipool_modal_light", 2, light_sched, program_2_color);
}

function fix_duration_bug(programmation_1_duration, hex)
{
    if (programmation_1_duration === "error time 4") {
        var dec = converter("hex", "dec", hex);
        dec = dec - 128;
        var time_4 = converter("dec", "time_4", dec);
        return time_4;
    } else {
        return programmation_1_duration;
    }
}function update_vigipool_modal_light_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_all /////");

    // Variables

    if (set_sched_value_save === "") {
        var light_sched = get_value_from_position(eq_modal, "light_sched");
    } else {
        var light_sched = set_sched_value_save;
    }

    // Logs

    // console.log("light_sched = " + light_sched);

    // Check

    const variables = [light_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var p1_color = get_sched_value(light_sched, "program_1_color");

    var programs_number = get_sched_value(light_sched, "programs_number");
    var program_1_off_on_and_days = get_sched_value(light_sched, "program_1_off_on_and_days");
    var program_1_bright = get_sched_value(light_sched, "program_1_bright");
    var program_1_speed = get_sched_value(light_sched, "program_1_speed");
    var program_1_sched_number = get_sched_value(light_sched, "program_1_sched_number");
    var program_1_sched_1_begin = get_sched_value(light_sched, "program_1_sched_1_begin");
    var program_1_sched_1_end = fix_end_dec(get_sched_value(light_sched, "program_1_sched_1_end"));
    var program_1_sched_2_begin = get_sched_value(light_sched, "program_1_sched_2_begin");
    var program_1_sched_2_end = fix_end_dec(get_sched_value(light_sched, "program_1_sched_2_end"));
    var program_1_sched_3_begin = get_sched_value(light_sched, "program_1_sched_3_begin");
    var program_1_sched_3_end = fix_end_dec(get_sched_value(light_sched, "program_1_sched_3_end"));
    var program_1_off_on = get_sched_value(light_sched, "program_1_off_on");
    var program_1_samedi = get_sched_value(light_sched, "program_1_samedi");
    var program_1_vendredi = get_sched_value(light_sched, "program_1_vendredi");
    var program_1_jeudi = get_sched_value(light_sched, "program_1_jeudi");
    var program_1_mercredi = get_sched_value(light_sched, "program_1_mercredi");
    var program_1_mardi = get_sched_value(light_sched, "program_1_mardi");
    var program_1_lundi = get_sched_value(light_sched, "program_1_lundi");
    var program_1_dimanche = get_sched_value(light_sched, "program_1_dimanche");

    // Fix for recovered brightness and speed

    program_1_bright_speed = converter("dec", "bin", program_1_speed);

    if (program_1_bright_speed !== undefined) {
        var bright_1 = parseInt(program_1_bright_speed[7]);
        var bright_2 = parseInt(program_1_bright_speed[6]);
        var speed_1 = parseInt(program_1_bright_speed[5]);
        var speed_2 = parseInt(program_1_bright_speed[4]);
        var speed_3 = parseInt(program_1_bright_speed[3]);
        var unused_1 = parseInt(program_1_bright_speed[2]);
        var unused_2 = parseInt(program_1_bright_speed[1]);
        var unused_3 = parseInt(program_1_bright_speed[0]);

        if (bright_2 === 0 && bright_1 === 0)
            program_1_bright = 0;
        if (bright_2 === 0 && bright_1 === 1)
            program_1_bright = 1;
        if (bright_2 === 1 && bright_1 === 0)
            program_1_bright = 2;
        if (bright_2 === 1 && bright_1 === 1)
            program_1_bright = 3;

        if (speed_3 === 0 && speed_2 === 0 && speed_1 === 0)
            program_1_speed = 0;
        if (speed_3 === 0 && speed_2 === 0 && speed_1 === 1)
            program_1_speed = 1;
        if (speed_3 === 0 && speed_2 === 1 && speed_1 === 0)
            program_1_speed = 2;
        if (speed_3 === 1 && speed_2 === 0 && speed_1 === 0)
            program_1_speed = 3;
    }

    // console.log("p1_color = " + p1_color);
    // console.log("programs_number = " + programs_number);
    // console.log("program_1_off_on_and_days = " + program_1_off_on_and_days);
    // console.log("program_1_bright = " + program_1_bright);
    // console.log("program_1_speed = " + program_1_speed);
    // console.log("program_1_sched_number = " + program_1_sched_number);
    // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
    // console.log("program_1_sched_1_end = " + program_1_sched_1_end);
    // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
    // console.log("program_1_sched_2_end = " + program_1_sched_2_end);
    // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
    // console.log("program_1_sched_3_end = " + program_1_sched_3_end);
    // console.log("program_1_off_on = " + program_1_off_on);
    // console.log("program_1_samedi = " + program_1_samedi);
    // console.log("program_1_vendredi = " + program_1_vendredi);
    // console.log("program_1_jeudi = " + program_1_jeudi);
    // console.log("program_1_mercredi = " + program_1_mercredi);
    // console.log("program_1_mardi = " + program_1_mardi);
    // console.log("program_1_lundi = " + program_1_lundi);
    // console.log("program_1_dimanche = " + program_1_dimanche);

    if (isNaN(program_1_sched_1_begin))
        program_1_sched_1_begin = 0;
    if (isNaN(program_1_sched_1_end))
        program_1_sched_1_end = 0;
    if (isNaN(program_1_sched_2_begin))
        program_1_sched_2_begin = 0;
    if (isNaN(program_1_sched_2_end))
        program_1_sched_2_end = 0;
    if (isNaN(program_1_sched_3_begin))
        program_1_sched_3_begin = 0;
    if (isNaN(program_1_sched_3_end))
        program_1_sched_3_end = 0;

    // State

    if (program_1_off_on === 0) {
        $(".vigipool_modal_light_prog_1_button_off").addClass("btn-primary");
        $(".vigipool_modal_light_prog_1_button_on").removeClass("btn-primary");
    } else if (program_1_off_on === 1) {
        $(".vigipool_modal_light_prog_1_button_off").removeClass("btn-primary");
        $(".vigipool_modal_light_prog_1_button_on").addClass("btn-primary");
    }

    // light_code

    $(document).ready(function () {
        switch (p1_color) {
            case 0:
                $(".vigipool_modal_light_prog_1_warm_button > img").show();
                $(".vigipool_modal_light_prog_1_warm_label").css("opacity", "50%");
                break;
            case 1:
                $(".vigipool_modal_light_prog_1_cold_button > img").show();
                $(".vigipool_modal_light_prog_1_cold_label").css("opacity", "50%");
                break;
            case 2:
                $(".vigipool_modal_light_prog_1_blue_button > img").show();
                $(".vigipool_modal_light_prog_1_blue_label").css("opacity", "50%");
                break;
            case 3:
                $(".vigipool_modal_light_prog_1_lagoon_button > img").show();
                $(".vigipool_modal_light_prog_1_lagoon_label").css("opacity", "50%");
                break;
            case 4:
                $(".vigipool_modal_light_prog_1_cyan_button > img").show();
                $(".vigipool_modal_light_prog_1_cyan_label").css("opacity", "50%");
                break;
            case 10:
                $(".vigipool_modal_light_prog_1_green_button > img").show();
                $(".vigipool_modal_light_prog_1_green_label").css("opacity", "50%");
                break;
            case 5:
                $(".vigipool_modal_light_prog_1_purple_button > img").show();
                $(".vigipool_modal_light_prog_1_purple_label").css("opacity", "50%");
                break;
            case 6:
                $(".vigipool_modal_light_prog_1_magenta_button > img").show();
                $(".vigipool_modal_light_prog_1_magenta_label").css("opacity", "50%");
                break;
            case 7:
                $(".vigipool_modal_light_prog_1_pink_button > img").show();
                $(".vigipool_modal_light_prog_1_pink_label").css("opacity", "50%");
                break;
            case 8:
                $(".vigipool_modal_light_prog_1_red_button > img").show();
                $(".vigipool_modal_light_prog_1_red_label").css("opacity", "50%");
                break;
            case 9:
                $(".vigipool_modal_light_prog_1_orange_button > img").show();
                $(".vigipool_modal_light_prog_1_orange_label").css("opacity", "50%");
                break;
            case 11:
                $(".vigipool_modal_light_prog_1_favorite_button > img").show();
                $(".vigipool_modal_light_prog_1_favorite_label").css("opacity", "50%");
                break;
            case 16:
                $(".vigipool_modal_light_prog_1_gradiant_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_gradiant_label").css("opacity", "50%");
                break;
            case 17:
                $(".vigipool_modal_light_prog_1_rainbow_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_rainbow_label").css("opacity", "50%");
                break;
            case 18:
                $(".vigipool_modal_light_prog_1_parade_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_parade_label").css("opacity", "50%");
                break;
            case 19:
                $(".vigipool_modal_light_prog_1_techno_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_techno_label").css("opacity", "50%");
                break;
            case 20:
                $(".vigipool_modal_light_prog_1_horizon_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_horizon_label").css("opacity", "50%");
                break;
            case 21:
                $(".vigipool_modal_light_prog_1_random_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_random_label").css("opacity", "50%");
                break;
            case 22:
                $(".vigipool_modal_light_prog_1_magical_button > img").css("opacity", "100%");
                $(".vigipool_modal_light_prog_1_magical_label").css("opacity", "50%");
                break;
        }
    });

    // Schedule 1
    // At
    $("#light_begin_1").html(converter("dec", "time_4", parseInt(program_1_sched_1_begin)));
    $("#mylight_begin_1").val(program_1_sched_1_begin);
    // During
    $("#light_end_1").html(converter("dec", "time_4", parseInt(program_1_sched_1_end)));
    $("#mylight_end_1").val(program_1_sched_1_end);

    // Schedule 2
    // At
    $("#light_begin_2").html(converter("dec", "time_4", parseInt(program_1_sched_2_begin)));
    $("#mylight_begin_2").val(program_1_sched_2_begin);
    // During
    $("#light_end_2").html(converter("dec", "time_4", parseInt(program_1_sched_2_end)));
    $("#mylight_end_2").val(program_1_sched_2_end);

    // Schedule 3
    // At
    $("#light_begin_3").html(converter("dec", "time_4", parseInt(program_1_sched_3_begin)));
    $("#mylight_begin_3").val(program_1_sched_3_begin);
    // During
    $("#light_end_3").html(converter("dec", "time_4", parseInt(program_1_sched_3_end)));
    $("#mylight_end_3").val(program_1_sched_3_end);

    if (program_1_sched_2_begin === 0 && program_1_sched_2_end === 0) {
        $(".vigipool_modal_light_prog_1_sched_2").hide();
        $(".vigipool_modal_light_prog_1_sched_2_add").show();
    } else {
        $(".vigipool_modal_light_prog_1_sched_2").show();
        $(".vigipool_modal_light_prog_1_sched_2_add").hide();
    }
    if (program_1_sched_3_begin === 0 && program_1_sched_3_end === 0) {
        $(".vigipool_modal_light_prog_1_sched_3").hide();
        $(".vigipool_modal_light_prog_1_sched_3_add").show();
    } else {
        $(".vigipool_modal_light_prog_1_sched_3").show();
        $(".vigipool_modal_light_prog_1_sched_3_add").hide();
    }

    // Brightness
    var background_color_off = "#dbdbdb";
    var color_off = "#7e7e7e";
    var background_color_on = "#758f8d";
    var color_on = "white";

    $('.vigipool_modal_light_prog_1_bright > th:nth-child(2) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(2) > p').css("color", color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(3) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(3) > p').css("color", color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(4) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(4) > p').css("color", color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(5) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_bright > th:nth-child(5) > p').css("color", color_off);

    if (program_1_bright === 0) {
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(2) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(2) > p').css("color", color_on);
    } else if (program_1_bright === 1) {
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(3) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(3) > p').css("color", color_on);
    } else if (program_1_bright === 2) {
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(4) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(4) > p').css("color", color_on);
    } else if (program_1_bright === 3) {
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(5) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_bright > th:nth-child(5) > p').css("color", color_on);
    }

    // Speed
    $(document).ready(function () {
        if (16 <= p1_color) {
            $('.vigipool_modal_light_prog_1_speed').show();
            $('.vigipool_modal_light_prog_1_speed_title').show();
        } else {
            $('.vigipool_modal_light_prog_1_speed').hide();
            $('.vigipool_modal_light_prog_1_speed_title').hide();
        }
    });

    $('.vigipool_modal_light_prog_1_speed > th:nth-child(2) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_speed > th:nth-child(2) > p').css("color", color_off);
    $('.vigipool_modal_light_prog_1_speed > th:nth-child(3) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_speed > th:nth-child(3) > p').css("color", color_off);
    $('.vigipool_modal_light_prog_1_speed > th:nth-child(4) > p').css("background-color", background_color_off);
    $('.vigipool_modal_light_prog_1_speed > th:nth-child(4) > p').css("color", color_off);

    if (program_1_speed === 1) {
        $('.vigipool_modal_light_prog_1_speed > th:nth-child(2) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_speed > th:nth-child(2) > p').css("color", color_on);
    } else if (program_1_speed === 2) {
        $('.vigipool_modal_light_prog_1_speed > th:nth-child(3) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_speed > th:nth-child(3) > p').css("color", color_on);
    } else if (program_1_speed === 3) {
        $('.vigipool_modal_light_prog_1_speed > th:nth-child(4) > p').css("background-color", background_color_on);
        $('.vigipool_modal_light_prog_1_speed > th:nth-child(4) > p').css("color", color_on);
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_light_prog_1", 1, light_sched, p1_color);

}

function update_vigipool_modal_light_prog_2(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_light_prog_2 /////");

    // Variables

    if (set_sched_value_save === "") {
        var light_sched = get_value_from_position(eq_modal, "light_sched");
    } else {
        var light_sched = set_sched_value_save;
    }

    // Logs

    // console.log("light_sched = " + light_sched);

    // Check

    const variables = [light_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display
    
    var p2_color = get_sched_value(light_sched, "program_2_color");

    var programs_number = get_sched_value(light_sched, "programs_number");
    var program_2_off_on_and_days = get_sched_value(light_sched, "program_2_off_on_and_days");
    var program_2_bright = get_sched_value(light_sched, "program_2_bright");
    var program_2_speed = get_sched_value(light_sched, "program_2_speed");
    var program_2_sched_number = get_sched_value(light_sched, "program_2_sched_number");
    var program_2_sched_1_begin = get_sched_value(light_sched, "program_2_sched_1_begin");
    var program_2_sched_1_end = fix_end_dec(get_sched_value(light_sched, "program_2_sched_1_end"));
    var program_2_sched_2_begin = get_sched_value(light_sched, "program_2_sched_2_begin");
    var program_2_sched_2_end = fix_end_dec(get_sched_value(light_sched, "program_2_sched_2_end"));
    var program_2_sched_3_begin = get_sched_value(light_sched, "program_2_sched_3_begin");
    var program_2_sched_3_end = fix_end_dec(get_sched_value(light_sched, "program_2_sched_3_end"));
    var program_2_off_on = get_sched_value(light_sched, "program_2_off_on");
    var program_2_samedi = get_sched_value(light_sched, "program_2_samedi");
    var program_2_vendredi = get_sched_value(light_sched, "program_2_vendredi");
    var program_2_jeudi = get_sched_value(light_sched, "program_2_jeudi");
    var program_2_mercredi = get_sched_value(light_sched, "program_2_mercredi");
    var program_2_mardi = get_sched_value(light_sched, "program_2_mardi");
    var program_2_lundi = get_sched_value(light_sched, "program_2_lundi");
    var program_2_dimanche = get_sched_value(light_sched, "program_2_dimanche");

    // Fix for recovered brightness and speed

    program_2_bright_speed = converter("dec", "bin", program_2_speed);

    if (program_2_bright_speed !== undefined) {
        var bright_1 = parseInt(program_2_bright_speed[7]);
        var bright_2 = parseInt(program_2_bright_speed[6]);
        var speed_1 = parseInt(program_2_bright_speed[5]);
        var speed_2 = parseInt(program_2_bright_speed[4]);
        var speed_3 = parseInt(program_2_bright_speed[3]);
        var unused_1 = parseInt(program_2_bright_speed[2]);
        var unused_2 = parseInt(program_2_bright_speed[1]);
        var unused_3 = parseInt(program_2_bright_speed[0]);

        if (bright_2 === 0 && bright_1 === 0)
            program_2_bright = 0;
        if (bright_2 === 0 && bright_1 === 1)
            program_2_bright = 1;
        if (bright_2 === 1 && bright_1 === 0)
            program_2_bright = 2;
        if (bright_2 === 1 && bright_1 === 1)
            program_2_bright = 3;

        if (speed_3 === 0 && speed_2 === 0 && speed_1 === 0)
            program_2_speed = 0;
        if (speed_3 === 0 && speed_2 === 0 && speed_1 === 1)
            program_2_speed = 1;
        if (speed_3 === 0 && speed_2 === 1 && speed_1 === 0)
            program_2_speed = 2;
        if (speed_3 === 1 && speed_2 === 0 && speed_1 === 0)
            program_2_speed = 3;
    }

//    console.log("p2_color = " + p2_color);
//    console.log("programs_number = " + programs_number);
//    console.log("program_2_off_on_and_days = " + program_2_off_on_and_days);
//    console.log("program_2_bright = " + program_2_bright);
//    console.log("program_2_speed = " + program_2_speed);
//    console.log("program_2_sched_number = " + program_2_sched_number);
//    console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
//    console.log("program_2_sched_1_end = " + program_2_sched_1_end);
//    console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
//    console.log("program_2_sched_2_end = " + program_2_sched_2_end);
//    console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
//    console.log("program_2_sched_3_end = " + program_2_sched_3_end);
//    console.log("program_2_off_on = " + program_2_off_on);
//    console.log("program_2_samedi = " + program_2_samedi);
//    console.log("program_2_vendredi = " + program_2_vendredi);
//    console.log("program_2_jeudi = " + program_2_jeudi);
//    console.log("program_2_mercredi = " + program_2_mercredi);
//    console.log("program_2_mardi = " + program_2_mardi);
//    console.log("program_2_lundi = " + program_2_lundi);
//    console.log("program_2_dimanche = " + program_2_dimanche);

    if (isNaN(program_2_sched_1_begin))
        program_2_sched_1_begin = 0;
    if (isNaN(program_2_sched_1_end))
        program_2_sched_1_end = 0;
    if (isNaN(program_2_sched_2_begin))
        program_2_sched_2_begin = 0;
    if (isNaN(program_2_sched_2_end))
        program_2_sched_2_end = 0;
    if (isNaN(program_2_sched_3_begin))
        program_2_sched_3_begin = 0;
    if (isNaN(program_2_sched_3_end))
        program_2_sched_3_end = 0;

    // State

    if (program_2_off_on === 0) {
        $(".vigipool_modal_light_prog_2_button_off").addClass("btn-primary");
        $(".vigipool_modal_light_prog_2_button_on").removeClass("btn-primary");
    } else if (program_2_off_on === 1) {
        $(".vigipool_modal_light_prog_2_button_off").removeClass("btn-primary");
        $(".vigipool_modal_light_prog_2_button_on").addClass("btn-primary");
    }

    // light_code

    $(document).ready(function () {
        create_ui_tild_light("vigipool_modal_light_prog_2", p2_color);
    });

    // Schedule 1
    // At
    $("#light_begin_1").html(converter("dec", "time_4", parseInt(program_2_sched_1_begin)));
    $("#mylight_begin_1").val(program_2_sched_1_begin);
    // During
    $("#light_end_1").html(converter("dec", "time_4", parseInt(program_2_sched_1_end)));
    $("#mylight_end_1").val(program_2_sched_1_end);

    // Schedule 2
    // At
    $("#light_begin_2").html(converter("dec", "time_4", parseInt(program_2_sched_2_begin)));
    $("#mylight_begin_2").val(program_2_sched_2_begin);
    // During
    $("#light_end_2").html(converter("dec", "time_4", parseInt(program_2_sched_2_end)));
    $("#mylight_end_2").val(program_2_sched_2_end);

    // Schedule 3
    // At
    $("#light_begin_3").html(converter("dec", "time_4", parseInt(program_2_sched_3_begin)));
    $("#mylight_begin_3").val(program_2_sched_3_begin);
    // During
    $("#light_end_3").html(converter("dec", "time_4", parseInt(program_2_sched_3_end)));
    $("#mylight_end_3").val(program_2_sched_3_end);

    if (program_2_sched_2_begin === 0 && program_2_sched_2_end === 0) {
        $(".vigipool_modal_light_prog_2_sched_2").hide();
        $(".vigipool_modal_light_prog_2_sched_2_add").show();
    } else {
        $(".vigipool_modal_light_prog_2_sched_2").show();
        $(".vigipool_modal_light_prog_2_sched_2_add").hide();
    }
    if (program_2_sched_3_begin === 0 && program_2_sched_3_end === 0) {
        $(".vigipool_modal_light_prog_2_sched_3").hide();
        $(".vigipool_modal_light_prog_2_sched_3_add").show();
    } else {
        $(".vigipool_modal_light_prog_2_sched_3").show();
        $(".vigipool_modal_light_prog_2_sched_3_add").hide();
    }

    // Brightness
    create_ui_bright("vigipool_modal_light_prog_2", program_2_bright);

    // Speed
    create_ui_speed("vigipool_modal_light_prog_2", program_2_speed, p2_color);

    // Scheduling
    // Program 1
    create_program("vigipool_modal_light_prog_2", 2, light_sched, p2_color);

}



function update_vigipool_modal_filtration() {

    // console.log("///// update_vigipool_modal_filtration /////");

    // Variables

    var filt_state = get_value_from_eq(eq_modal, "filt_state", "tild");
    var flow_on = get_value_from_position(eq_modal, "flow_on");
    var filtration_sched = get_value_from_position(eq_modal, "filt_sched");

    // Logs

    // console.log("filt_state = " + filt_state);
    // console.log("flow_on = " + flow_on);
    // console.log("filtration_sched = " + filtration_sched);

    // Check

    const variables = [filt_state, flow_on, filtration_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Reason

    filt_state = converter("dec", "bin", parseInt(filt_state));
    // console.log("filt_state = " + filt_state);
    // console.log("flow_on = " + flow_on);

    if (filt_state !== undefined) {
        if (parseInt(flow_on) === 0 && parseInt(filt_state) === 0) {
            $(".vigipool_tild_modal_filtration_reason").html("");
            // console.log("Message : none");
        } else if (parseInt(flow_on) === 0 && parseInt(filt_state) > 0) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("forced_by_box")); // forcée par le coffret
            // console.log("Message : forced_by_box");
        } else if (parseInt(flow_on) === 1 && parseInt(filt_state) === 0) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("prohibited_by_box")); // interdit pompe
            // console.log("Message : prohibited_by_box");
        } else if (parseInt(filt_state[7]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("forced_march")); // Forcée par la marche continue
            // console.log("Message : forced_march");
        } else if (parseInt(filt_state[6]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("filtration_forced_by_user")); // Forcée par la programmation
            // console.log("Message : filtration_forced_by_user");
        } else if (parseInt(filt_state[5]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("forced_by_lighting")); // Forcée par l’éclairage
            // console.log("Message : forced_by_lighting");
        } else if (parseInt(filt_state[4]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("forced_by_aux")); // Forcée par l’auxiliaire
            // console.log("Message : forced_by_aux");
        } else if (parseInt(filt_state[1]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("filtration_forced_by_frost_free_mode")); // La filtration est en marche forcée pour protéger contre le gel
            // console.log("Message : filtration_forced_by_frost_free_mode");
        } else if (parseInt(filt_state[2]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("forced_by_pac")); // Forcée par le chauffage
            // console.log("Message : forced_by_pac");
        } else if (parseInt(filt_state[3]) === 1) {
            $(".vigipool_tild_modal_filtration_reason").html(get_text("forced_for_temp")); // Filtration en route pour actualiser la température
            // console.log("Message : forced_for_temp");
        }
    }

    // flow_on

    switch (flow_on) {
        case 0:
            $(".vigipool_tild_modal_filtration_button_off").addClass("btn-primary");
            $(".vigipool_tild_modal_filtration_button_on").removeClass("btn-primary");
            break;
        case 1:
            $(".vigipool_tild_modal_filtration_button_off").removeClass("btn-primary");
            $(".vigipool_tild_modal_filtration_button_on").addClass("btn-primary");
            break;
    }

    // filtration_sched
    create_program("vigipool_modal_filtration", 1, filtration_sched);
    create_program("vigipool_modal_filtration", 2, filtration_sched);
}
function update_vigipool_modal_filtration_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_filtration_prog_1 /////");

    // Variables

    if (set_sched_value_save === "") {
        var filtration_sched = get_value_from_position(eq_modal, "filt_sched");
    } else {
        var filtration_sched = set_sched_value_save;
    }

    // Logs

    // console.log("filtration_sched = " + filtration_sched);

    // Check

    const variables = [filtration_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var programs_number = get_sched_value(filtration_sched, "programs_number");

    var program_1_off_on_and_days = get_sched_value(filtration_sched, "program_1_off_on_and_days");
    var program_1_thermo = get_sched_value(filtration_sched, "program_1_bright");
    var program_1_sched_number = get_sched_value(filtration_sched, "program_1_sched_number");
    var program_1_sched_1_begin = get_sched_value(filtration_sched, "program_1_sched_1_begin");
    var program_1_sched_1_end = fix_end_dec(get_sched_value(filtration_sched, "program_1_sched_1_end"));
    var program_1_sched_2_begin = get_sched_value(filtration_sched, "program_1_sched_2_begin");
    var program_1_sched_2_end = fix_end_dec(get_sched_value(filtration_sched, "program_1_sched_2_end"));
    var program_1_sched_3_begin = get_sched_value(filtration_sched, "program_1_sched_3_begin");
    var program_1_sched_3_end = fix_end_dec(get_sched_value(filtration_sched, "program_1_sched_3_end"));

    var program_1_off_on = get_sched_value(filtration_sched, "program_1_off_on");
    var program_1_samedi = get_sched_value(filtration_sched, "program_1_samedi");
    var program_1_vendredi = get_sched_value(filtration_sched, "program_1_vendredi");
    var program_1_jeudi = get_sched_value(filtration_sched, "program_1_jeudi");
    var program_1_mercredi = get_sched_value(filtration_sched, "program_1_mercredi");
    var program_1_mardi = get_sched_value(filtration_sched, "program_1_mardi");
    var program_1_lundi = get_sched_value(filtration_sched, "program_1_lundi");
    var program_1_dimanche = get_sched_value(filtration_sched, "program_1_dimanche");

    if (isNaN(program_1_sched_1_begin))
        program_1_sched_1_begin = 0;
    if (isNaN(program_1_sched_1_end))
        program_1_sched_1_end = 0;
    if (isNaN(program_1_sched_2_begin))
        program_1_sched_2_begin = 0;
    if (isNaN(program_1_sched_2_end))
        program_1_sched_2_end = 0;
    if (isNaN(program_1_sched_3_begin))
        program_1_sched_3_begin = 0;
    if (isNaN(program_1_sched_3_end))
        program_1_sched_3_end = 0;

    // console.log("filtration_sched = " + filtration_sched);
    // console.log("filtration_sched = " + filtration_sched);
    // console.log("programs_number = " + programs_number);
    // console.log("program_1_off_on_and_days = " + program_1_off_on_and_days);
    // console.log("program_1_thermo = " + program_1_thermo);
    // console.log("program_1_sched_number = " + program_1_sched_number);
    // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
    // console.log("program_1_sched_1_end = " + program_1_sched_1_end);
    // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
    // console.log("program_1_sched_2_end = " + program_1_sched_2_end);
    // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
    // console.log("program_1_sched_3_end = " + program_1_sched_3_end);
    // console.log("program_1_off_on = " + program_1_off_on);
    // console.log("program_1_samedi = " + program_1_samedi);
    // console.log("program_1_vendredi = " + program_1_vendredi);
    // console.log("program_1_jeudi = " + program_1_jeudi);
    // console.log("program_1_mercredi = " + program_1_mercredi);
    // console.log("program_1_mardi = " + program_1_mardi);
    // console.log("program_1_lundi = " + program_1_lundi);
    // console.log("program_1_dimanche = " + program_1_dimanche);

    // State

    if (program_1_off_on === 0) {
        $(".vigipool_modal_filtration_prog_1_button_off").addClass("btn-primary");
        $(".vigipool_modal_filtration_prog_1_button_on").removeClass("btn-primary");
    } else if (program_1_off_on === 1) {
        $(".vigipool_modal_filtration_prog_1_button_off").removeClass("btn-primary");
        $(".vigipool_modal_filtration_prog_1_button_on").addClass("btn-primary");
    }

    // Schedule 1
    // At
    $("#vigipool_modal_filtration_prog_1_sched_1_begin").html(converter("dec", "time_4", parseInt(program_1_sched_1_begin)));
    $("#myvigipool_modal_filtration_prog_1_sched_1_begin").val(program_1_sched_1_begin);
    // During
    $("#vigipool_modal_filtration_prog_1_sched_1_end").html(converter("dec", "time_4", parseInt(program_1_sched_1_end)));
    $("#myvigipool_modal_filtration_prog_1_sched_1_end").val(program_1_sched_1_end);

    // Schedule 2
    // At
    $("#vigipool_modal_filtration_prog_1_sched_2_begin").html(converter("dec", "time_4", parseInt(program_1_sched_2_begin)));
    $("#myvigipool_modal_filtration_prog_1_sched_2_begin").val(program_1_sched_2_begin);
    // During
    $("#vigipool_modal_filtration_prog_1_sched_2_end").html(converter("dec", "time_4", parseInt(program_1_sched_2_end)));
    $("#myvigipool_modal_filtration_prog_1_sched_2_end").val(program_1_sched_2_end);

    // Schedule 3
    // At
    $("#vigipool_modal_filtration_prog_1_sched_3_begin").html(converter("dec", "time_4", parseInt(program_1_sched_3_begin)));
    $("#myvigipool_modal_filtration_prog_1_sched_3_begin").val(program_1_sched_3_begin);
    // During
    $("#vigipool_modal_filtration_prog_1_sched_3_end").html(converter("dec", "time_4", parseInt(program_1_sched_3_end)));
    $("#myvigipool_modal_filtration_prog_1_sched_3_end").val(program_1_sched_3_end);

    if (program_1_sched_2_begin === 0 && program_1_sched_2_end === 0) {
        $(".vigipool_modal_filtration_prog_1_sched_2").hide();
        $(".vigipool_modal_filtration_prog_1_sched_2_add").show();
    } else {
        $(".vigipool_modal_filtration_prog_1_sched_2").show();
        $(".vigipool_modal_filtration_prog_1_sched_2_add").hide();
    }
    if (program_1_sched_3_begin === 0 && program_1_sched_3_end === 0) {
        $(".vigipool_modal_filtration_prog_1_sched_3").hide();
        $(".vigipool_modal_filtration_prog_1_sched_3_add").show();
    } else {
        $(".vigipool_modal_filtration_prog_1_sched_3").show();
        $(".vigipool_modal_filtration_prog_1_sched_3_add").hide();
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_filtration_prog_1", 1, filtration_sched);

    // thermo

    if (program_1_thermo === 0) {
        $(".vigipool_modal_filtration_prog_1_button_thermo_off").addClass("btn-primary");
        $(".vigipool_modal_filtration_prog_1_button_thermo_on").removeClass("btn-primary");
    } else if (program_1_thermo === 1) {
        $(".vigipool_modal_filtration_prog_1_button_thermo_off").removeClass("btn-primary");
        $(".vigipool_modal_filtration_prog_1_button_thermo_on").addClass("btn-primary");
}
}

function update_vigipool_modal_filtration_prog_2(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_filtration_prog_2 /////");

    // Variables

    if (set_sched_value_save === "") {
        var filtration_sched = get_value_from_position(eq_modal, "filt_sched");
    } else {
        var filtration_sched = set_sched_value_save;
    }

    // Logs

    // console.log("filtration_sched = " + filtration_sched);

    // Check

    const variables = [filtration_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var programs_number = get_sched_value(filtration_sched, "programs_number");

    var program_2_off_on_and_days = get_sched_value(filtration_sched, "program_2_off_on_and_days");
    var program_2_thermo = get_sched_value(filtration_sched, "program_2_bright");
    var program_2_sched_number = get_sched_value(filtration_sched, "program_2_sched_number");
    var program_2_sched_1_begin = get_sched_value(filtration_sched, "program_2_sched_1_begin");
    var program_2_sched_1_end = fix_end_dec(get_sched_value(filtration_sched, "program_2_sched_1_end"));
    var program_2_sched_2_begin = get_sched_value(filtration_sched, "program_2_sched_2_begin");
    var program_2_sched_2_end = fix_end_dec(get_sched_value(filtration_sched, "program_2_sched_2_end"));
    var program_2_sched_3_begin = get_sched_value(filtration_sched, "program_2_sched_3_begin");
    var program_2_sched_3_end = fix_end_dec(get_sched_value(filtration_sched, "program_2_sched_3_end"));

    var program_2_off_on = get_sched_value(filtration_sched, "program_2_off_on");
    var program_2_samedi = get_sched_value(filtration_sched, "program_2_samedi");
    var program_2_vendredi = get_sched_value(filtration_sched, "program_2_vendredi");
    var program_2_jeudi = get_sched_value(filtration_sched, "program_2_jeudi");
    var program_2_mercredi = get_sched_value(filtration_sched, "program_2_mercredi");
    var program_2_mardi = get_sched_value(filtration_sched, "program_2_mardi");
    var program_2_lundi = get_sched_value(filtration_sched, "program_2_lundi");
    var program_2_dimanche = get_sched_value(filtration_sched, "program_2_dimanche");

    if (isNaN(program_2_sched_1_begin))
        program_2_sched_1_begin = 0;
    if (isNaN(program_2_sched_1_end))
        program_2_sched_1_end = 0;
    if (isNaN(program_2_sched_2_begin))
        program_2_sched_2_begin = 0;
    if (isNaN(program_2_sched_2_end))
        program_2_sched_2_end = 0;
    if (isNaN(program_2_sched_3_begin))
        program_2_sched_3_begin = 0;
    if (isNaN(program_2_sched_3_end))
        program_2_sched_3_end = 0;

    // console.log("filtration_sched = " + filtration_sched);
    // console.log("filtration_sched = " + filtration_sched);
    // console.log("programs_number = " + programs_number);
    // console.log("program_2_off_on_and_days = " + program_2_off_on_and_days);
    // console.log("program_2_thermo = " + program_2_thermo);
    // console.log("program_2_sched_number = " + program_2_sched_number);
    // console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
    // console.log("program_2_sched_1_end = " + program_2_sched_1_end);
    // console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
    // console.log("program_2_sched_2_end = " + program_2_sched_2_end);
    // console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
    // console.log("program_2_sched_3_end = " + program_2_sched_3_end);
    // console.log("program_2_off_on = " + program_2_off_on);
    // console.log("program_2_samedi = " + program_2_samedi);
    // console.log("program_2_vendredi = " + program_2_vendredi);
    // console.log("program_2_jeudi = " + program_2_jeudi);
    // console.log("program_2_mercredi = " + program_2_mercredi);
    // console.log("program_2_mardi = " + program_2_mardi);
    // console.log("program_2_lundi = " + program_2_lundi);
    // console.log("program_2_dimanche = " + program_2_dimanche);

    // State

    if (program_2_off_on === 0) {
        $(".vigipool_modal_filtration_prog_2_button_off").addClass("btn-primary");
        $(".vigipool_modal_filtration_prog_2_button_on").removeClass("btn-primary");
    } else if (program_2_off_on === 1) {
        $(".vigipool_modal_filtration_prog_2_button_off").removeClass("btn-primary");
        $(".vigipool_modal_filtration_prog_2_button_on").addClass("btn-primary");
    }

    // Schedule 1
    // At
    $("#vigipool_modal_filtration_prog_2_sched_1_begin").html(converter("dec", "time_4", parseInt(program_2_sched_1_begin)));
    $("#myvigipool_modal_filtration_prog_2_sched_1_begin").val(program_2_sched_1_begin);
    // During
    $("#vigipool_modal_filtration_prog_2_sched_1_end").html(converter("dec", "time_4", parseInt(program_2_sched_1_end)));
    $("#myvigipool_modal_filtration_prog_2_sched_1_end").val(program_2_sched_1_end);

    // Schedule 2
    // At
    $("#vigipool_modal_filtration_prog_2_sched_2_begin").html(converter("dec", "time_4", parseInt(program_2_sched_2_begin)));
    $("#myvigipool_modal_filtration_prog_2_sched_2_begin").val(program_2_sched_2_begin);
    // During
    $("#vigipool_modal_filtration_prog_2_sched_2_end").html(converter("dec", "time_4", parseInt(program_2_sched_2_end)));
    $("#myvigipool_modal_filtration_prog_2_sched_2_end").val(program_2_sched_2_end);

    // Schedule 3
    // At
    $("#vigipool_modal_filtration_prog_2_sched_3_begin").html(converter("dec", "time_4", parseInt(program_2_sched_3_begin)));
    $("#myvigipool_modal_filtration_prog_2_sched_3_begin").val(program_2_sched_3_begin);
    // During
    $("#vigipool_modal_filtration_prog_2_sched_3_end").html(converter("dec", "time_4", parseInt(program_2_sched_3_end)));
    $("#myvigipool_modal_filtration_prog_2_sched_3_end").val(program_2_sched_3_end);

    if (program_2_sched_2_begin === 0 && program_2_sched_2_end === 0) {
        $(".vigipool_modal_filtration_prog_2_sched_2").hide();
        $(".vigipool_modal_filtration_prog_2_sched_2_add").show();
    } else {
        $(".vigipool_modal_filtration_prog_2_sched_2").show();
        $(".vigipool_modal_filtration_prog_2_sched_2_add").hide();
    }
    if (program_2_sched_3_begin === 0 && program_2_sched_3_end === 0) {
        $(".vigipool_modal_filtration_prog_2_sched_3").hide();
        $(".vigipool_modal_filtration_prog_2_sched_3_add").show();
    } else {
        $(".vigipool_modal_filtration_prog_2_sched_3").show();
        $(".vigipool_modal_filtration_prog_2_sched_3_add").hide();
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_filtration_prog_2", 2, filtration_sched);

    // thermo

    if (program_2_thermo === 0) {
        $(".vigipool_modal_filtration_prog_2_button_thermo_off").addClass("btn-primary");
        $(".vigipool_modal_filtration_prog_2_button_thermo_on").removeClass("btn-primary");
    } else if (program_2_thermo === 1) {
        $(".vigipool_modal_filtration_prog_2_button_thermo_off").removeClass("btn-primary");
        $(".vigipool_modal_filtration_prog_2_button_thermo_on").addClass("btn-primary");
}
}

function update_vigipool_modal_auxiliary() {

    // console.log("///// update_vigipool_modal_auxiliary /////");

    // Variables

    var aux_conf = get_value_from_position(eq_modal, "aux_conf");
    var aux_type = get_value_from_position(eq_modal, "aux_type");
    var consigne_temp = get_value_from_position(eq_modal, "consigne_temp");
    var aux_min_temp = get_value_from_position(eq_modal, "aux_min_temp") / 10;
    var aux_sched = get_value_from_position(eq_modal, "aux_sched");

    // Logs

    // console.log("aux_conf = " + aux_conf);
    // console.log("aux_type = " + aux_type);
    // console.log("consigne_temp = " + consigne_temp);
    // console.log("aux_min_temp = " + aux_min_temp);
    // console.log("aux_sched = " + aux_sched);

    // Check

    const variables = [aux_conf, aux_type, consigne_temp, aux_min_temp, aux_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // en_marche

    var en_marche = get_bit(aux_conf, 0);
    switch (en_marche) {
        case 0:
            $('.vigipool_modal_auxiliary_aux_state_on').removeClass("btn-primary");
            $('.vigipool_modal_auxiliary_aux_state_off').addClass("btn-primary");
            break;
        case 1:
            $('.vigipool_modal_auxiliary_aux_state_off').removeClass("btn-primary");
            $('.vigipool_modal_auxiliary_aux_state_on').addClass("btn-primary");
            break;
    }

    // consigne_temp
    if (aux_type !== 2) {
        $("#md_modal > div > h4:nth-child(6)").hide();
        $("#consigne_temp").hide();
        $("#md_modal > div > div:nth-child(8)").hide();
    }

    // aux_min_temp
    if (aux_type !== 3) {
        $("#md_modal > div > h4:nth-child(9)").hide();
        $("#md_modal > div > div:nth-child(11)").hide();
    }

    create_program("vigipool_modal_auxiliary", 1, aux_sched);
    create_program("vigipool_modal_auxiliary", 2, aux_sched);
}function update_vigipool_modal_auxiliary_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_auxiliary_prog_1 /////");

    // Variables

    if (set_sched_value_save === "") {
        var auxiliary_sched = get_value_from_position(eq_modal, "aux_sched");
    } else {
        var auxiliary_sched = set_sched_value_save;
    }

    // Logs

    // console.log("auxiliary_sched = " + auxiliary_sched);

    // Check

    const variables = [auxiliary_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Retrieval of sub-variables in the variable

    var programs_number = get_sched_value(auxiliary_sched, "programs_number");

    var program_1_off_on_and_days = get_sched_value(auxiliary_sched, "program_1_off_on_and_days");
    var program_1_thermo = get_sched_value(auxiliary_sched, "program_1_bright");
    var program_1_sched_number = get_sched_value(auxiliary_sched, "program_1_sched_number");
    var program_1_sched_1_begin = get_sched_value(auxiliary_sched, "program_1_sched_1_begin");
    var program_1_sched_1_end = fix_end_dec(get_sched_value(auxiliary_sched, "program_1_sched_1_end"));
    var program_1_sched_2_begin = get_sched_value(auxiliary_sched, "program_1_sched_2_begin");
    var program_1_sched_2_end = fix_end_dec(get_sched_value(auxiliary_sched, "program_1_sched_2_end"));
    var program_1_sched_3_begin = get_sched_value(auxiliary_sched, "program_1_sched_3_begin");
    var program_1_sched_3_end = fix_end_dec(get_sched_value(auxiliary_sched, "program_1_sched_3_end"));

    var program_1_off_on = get_sched_value(auxiliary_sched, "program_1_off_on");
    var program_1_samedi = get_sched_value(auxiliary_sched, "program_1_samedi");
    var program_1_vendredi = get_sched_value(auxiliary_sched, "program_1_vendredi");
    var program_1_jeudi = get_sched_value(auxiliary_sched, "program_1_jeudi");
    var program_1_mercredi = get_sched_value(auxiliary_sched, "program_1_mercredi");
    var program_1_mardi = get_sched_value(auxiliary_sched, "program_1_mardi");
    var program_1_lundi = get_sched_value(auxiliary_sched, "program_1_lundi");
    var program_1_dimanche = get_sched_value(auxiliary_sched, "program_1_dimanche");

    if (isNaN(program_1_sched_1_begin))
        program_1_sched_1_begin = 0;
    if (isNaN(program_1_sched_1_end))
        program_1_sched_1_end = 0;
    if (isNaN(program_1_sched_2_begin))
        program_1_sched_2_begin = 0;
    if (isNaN(program_1_sched_2_end))
        program_1_sched_2_end = 0;
    if (isNaN(program_1_sched_3_begin))
        program_1_sched_3_begin = 0;
    if (isNaN(program_1_sched_3_end))
        program_1_sched_3_end = 0;

    // console.log("auxiliary_sched = " + auxiliary_sched);
    // console.log("auxiliary_sched = " + auxiliary_sched);
    // console.log("programs_number = " + programs_number);
    // console.log("program_1_off_on_and_days = " + program_1_off_on_and_days);
    // console.log("program_1_thermo = " + program_1_thermo);
    // console.log("program_1_sched_number = " + program_1_sched_number);
    // console.log("program_1_sched_1_begin = " + program_1_sched_1_begin);
    // console.log("program_1_sched_1_end = " + program_1_sched_1_end);
    // console.log("program_1_sched_2_begin = " + program_1_sched_2_begin);
    // console.log("program_1_sched_2_end = " + program_1_sched_2_end);
    // console.log("program_1_sched_3_begin = " + program_1_sched_3_begin);
    // console.log("program_1_sched_3_end = " + program_1_sched_3_end);
    // console.log("program_1_off_on = " + program_1_off_on);
    // console.log("program_1_samedi = " + program_1_samedi);
    // console.log("program_1_vendredi = " + program_1_vendredi);
    // console.log("program_1_jeudi = " + program_1_jeudi);
    // console.log("program_1_mercredi = " + program_1_mercredi);
    // console.log("program_1_mardi = " + program_1_mardi);
    // console.log("program_1_lundi = " + program_1_lundi);
    // console.log("program_1_dimanche = " + program_1_dimanche);

    // State

    if (program_1_off_on === 0) {
        $(".vigipool_modal_auxiliary_prog_1_button_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_1_button_on").removeClass("btn-primary");
    } else if (program_1_off_on === 1) {
        $(".vigipool_modal_auxiliary_prog_1_button_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_1_button_on").addClass("btn-primary");
    }

    // Schedule 1
    // At
    $("#vigipool_modal_auxiliary_prog_1_sched_1_begin").html(converter("dec", "time_4", parseInt(program_1_sched_1_begin)));
    $("#myvigipool_modal_auxiliary_prog_1_sched_1_begin").val(program_1_sched_1_begin);
    // During
    $("#vigipool_modal_auxiliary_prog_1_sched_1_end").html(converter("dec", "time_4", parseInt(program_1_sched_1_end)));
    $("#myvigipool_modal_auxiliary_prog_1_sched_1_end").val(program_1_sched_1_end);

    // Schedule 2
    // At
    $("#vigipool_modal_auxiliary_prog_1_sched_2_begin").html(converter("dec", "time_4", parseInt(program_1_sched_2_begin)));
    $("#myvigipool_modal_auxiliary_prog_1_sched_2_begin").val(program_1_sched_2_begin);
    // During
    $("#vigipool_modal_auxiliary_prog_1_sched_2_end").html(converter("dec", "time_4", parseInt(program_1_sched_2_end)));
    $("#myvigipool_modal_auxiliary_prog_1_sched_2_end").val(program_1_sched_2_end);

    // Schedule 3
    // At
    $("#vigipool_modal_auxiliary_prog_1_sched_3_begin").html(converter("dec", "time_4", parseInt(program_1_sched_3_begin)));
    $("#myvigipool_modal_auxiliary_prog_1_sched_3_begin").val(program_1_sched_3_begin);
    // During
    $("#vigipool_modal_auxiliary_prog_1_sched_3_end").html(converter("dec", "time_4", parseInt(program_1_sched_3_end)));
    $("#myvigipool_modal_auxiliary_prog_1_sched_3_end").val(program_1_sched_3_end);

    if (program_1_sched_2_begin === 0 && program_1_sched_2_end === 0) {
        $(".vigipool_modal_auxiliary_prog_1_sched_2").hide();
        $(".vigipool_modal_auxiliary_prog_1_sched_2_add").show();
    } else {
        $(".vigipool_modal_auxiliary_prog_1_sched_2").show();
        $(".vigipool_modal_auxiliary_prog_1_sched_2_add").hide();
    }
    if (program_1_sched_3_begin === 0 && program_1_sched_3_end === 0) {
        $(".vigipool_modal_auxiliary_prog_1_sched_3").hide();
        $(".vigipool_modal_auxiliary_prog_1_sched_3_add").show();
    } else {
        $(".vigipool_modal_auxiliary_prog_1_sched_3").show();
        $(".vigipool_modal_auxiliary_prog_1_sched_3_add").hide();
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_auxiliary_prog_1", 1, auxiliary_sched);

    // thermo

    if (program_1_thermo === 0) {
        $(".vigipool_modal_auxiliary_prog_1_button_thermo_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_1_button_thermo_on").removeClass("btn-primary");
    } else if (program_1_thermo === 1) {
        $(".vigipool_modal_auxiliary_prog_1_button_thermo_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_1_button_thermo_on").addClass("btn-primary");
}
}

function update_vigipool_modal_auxiliary_prog_2(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_auxiliary_prog_2 /////");

    // Variables

    if (set_sched_value_save === "") {
        var auxiliary_sched = get_value_from_position(eq_modal, "aux_sched");
    } else {
        var auxiliary_sched = set_sched_value_save;
    }

    // Logs

    // console.log("auxiliary_sched = " + auxiliary_sched);

    // Check

    const variables = [auxiliary_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var programs_number = get_sched_value(auxiliary_sched, "programs_number");

    var program_2_off_on_and_days = get_sched_value(auxiliary_sched, "program_2_off_on_and_days");
    var program_2_thermo = get_sched_value(auxiliary_sched, "program_2_bright");
    var program_2_sched_number = get_sched_value(auxiliary_sched, "program_2_sched_number");
    var program_2_sched_1_begin = get_sched_value(auxiliary_sched, "program_2_sched_1_begin");
    var program_2_sched_1_end = fix_end_dec(get_sched_value(auxiliary_sched, "program_2_sched_1_end"));
    var program_2_sched_2_begin = get_sched_value(auxiliary_sched, "program_2_sched_2_begin");
    var program_2_sched_2_end = fix_end_dec(get_sched_value(auxiliary_sched, "program_2_sched_2_end"));
    var program_2_sched_3_begin = get_sched_value(auxiliary_sched, "program_2_sched_3_begin");
    var program_2_sched_3_end = fix_end_dec(get_sched_value(auxiliary_sched, "program_2_sched_3_end"));

    var program_2_off_on = get_sched_value(auxiliary_sched, "program_2_off_on");
    var program_2_samedi = get_sched_value(auxiliary_sched, "program_2_samedi");
    var program_2_vendredi = get_sched_value(auxiliary_sched, "program_2_vendredi");
    var program_2_jeudi = get_sched_value(auxiliary_sched, "program_2_jeudi");
    var program_2_mercredi = get_sched_value(auxiliary_sched, "program_2_mercredi");
    var program_2_mardi = get_sched_value(auxiliary_sched, "program_2_mardi");
    var program_2_lundi = get_sched_value(auxiliary_sched, "program_2_lundi");
    var program_2_dimanche = get_sched_value(auxiliary_sched, "program_2_dimanche");

    if (isNaN(program_2_sched_1_begin))
        program_2_sched_1_begin = 0;
    if (isNaN(program_2_sched_1_end))
        program_2_sched_1_end = 0;
    if (isNaN(program_2_sched_2_begin))
        program_2_sched_2_begin = 0;
    if (isNaN(program_2_sched_2_end))
        program_2_sched_2_end = 0;
    if (isNaN(program_2_sched_3_begin))
        program_2_sched_3_begin = 0;
    if (isNaN(program_2_sched_3_end))
        program_2_sched_3_end = 0;

    // console.log("auxiliary_sched = " + auxiliary_sched);
    // console.log("auxiliary_sched = " + auxiliary_sched);
    // console.log("programs_number = " + programs_number);
    // console.log("program_2_off_on_and_days = " + program_2_off_on_and_days);
    // console.log("program_2_thermo = " + program_2_thermo);
    // console.log("program_2_sched_number = " + program_2_sched_number);
    // console.log("program_2_sched_1_begin = " + program_2_sched_1_begin);
    // console.log("program_2_sched_1_end = " + program_2_sched_1_end);
    // console.log("program_2_sched_2_begin = " + program_2_sched_2_begin);
    // console.log("program_2_sched_2_end = " + program_2_sched_2_end);
    // console.log("program_2_sched_3_begin = " + program_2_sched_3_begin);
    // console.log("program_2_sched_3_end = " + program_2_sched_3_end);
    // console.log("program_2_off_on = " + program_2_off_on);
    // console.log("program_2_samedi = " + program_2_samedi);
    // console.log("program_2_vendredi = " + program_2_vendredi);
    // console.log("program_2_jeudi = " + program_2_jeudi);
    // console.log("program_2_mercredi = " + program_2_mercredi);
    // console.log("program_2_mardi = " + program_2_mardi);
    // console.log("program_2_lundi = " + program_2_lundi);
    // console.log("program_2_dimanche = " + program_2_dimanche);

    // State

    if (program_2_off_on === 0) {
        $(".vigipool_modal_auxiliary_prog_2_button_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_2_button_on").removeClass("btn-primary");
    } else if (program_2_off_on === 1) {
        $(".vigipool_modal_auxiliary_prog_2_button_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_2_button_on").addClass("btn-primary");
    }

    // Schedule 1
    // At
    $("#vigipool_modal_auxiliary_prog_2_sched_1_begin").html(converter("dec", "time_4", parseInt(program_2_sched_1_begin)));
    $("#myvigipool_modal_auxiliary_prog_2_sched_1_begin").val(program_2_sched_1_begin);
    // During
    $("#vigipool_modal_auxiliary_prog_2_sched_1_end").html(converter("dec", "time_4", parseInt(program_2_sched_1_end)));
    $("#myvigipool_modal_auxiliary_prog_2_sched_1_end").val(program_2_sched_1_end);

    // Schedule 2
    // At
    $("#vigipool_modal_auxiliary_prog_2_sched_2_begin").html(converter("dec", "time_4", parseInt(program_2_sched_2_begin)));
    $("#myvigipool_modal_auxiliary_prog_2_sched_2_begin").val(program_2_sched_2_begin);
    // During
    $("#vigipool_modal_auxiliary_prog_2_sched_2_end").html(converter("dec", "time_4", parseInt(program_2_sched_2_end)));
    $("#myvigipool_modal_auxiliary_prog_2_sched_2_end").val(program_2_sched_2_end);

    // Schedule 3
    // At
    $("#vigipool_modal_auxiliary_prog_2_sched_3_begin").html(converter("dec", "time_4", parseInt(program_2_sched_3_begin)));
    $("#myvigipool_modal_auxiliary_prog_2_sched_3_begin").val(program_2_sched_3_begin);
    // During
    $("#vigipool_modal_auxiliary_prog_2_sched_3_end").html(converter("dec", "time_4", parseInt(program_2_sched_3_end)));
    $("#myvigipool_modal_auxiliary_prog_2_sched_3_end").val(program_2_sched_3_end);

    if (program_2_sched_2_begin === 0 && program_2_sched_2_end === 0) {
        $(".vigipool_modal_auxiliary_prog_2_sched_2").hide();
        $(".vigipool_modal_auxiliary_prog_2_sched_2_add").show();
    } else {
        $(".vigipool_modal_auxiliary_prog_2_sched_2").show();
        $(".vigipool_modal_auxiliary_prog_2_sched_2_add").hide();
    }
    if (program_2_sched_3_begin === 0 && program_2_sched_3_end === 0) {
        $(".vigipool_modal_auxiliary_prog_2_sched_3").hide();
        $(".vigipool_modal_auxiliary_prog_2_sched_3_add").show();
    } else {
        $(".vigipool_modal_auxiliary_prog_2_sched_3").show();
        $(".vigipool_modal_auxiliary_prog_2_sched_3_add").hide();
    }

    // Scheduling
    // Program 1
    create_program("vigipool_modal_auxiliary_prog_2", 2, auxiliary_sched);

    // thermo

    if (program_2_thermo === 0) {
        $(".vigipool_modal_auxiliary_prog_2_button_thermo_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_2_button_thermo_on").removeClass("btn-primary");
    } else if (program_2_thermo === 1) {
        $(".vigipool_modal_auxiliary_prog_2_button_thermo_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_prog_2_button_thermo_on").addClass("btn-primary");
}
}

function update_vigipool_modal_light_advanced_options() {

    // console.log("///// update_vigipool_modal_light_advanced_options /////");

    // Variables

    var filt_light_force = get_value_from_position(eq_modal, "filt_light_force");

    // Logs

    // console.log("filt_light_force = " + filt_light_force);

    // Check

    const variables = [filt_light_force];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    if (filt_light_force === 1) {
        $(".vigipool_modal_light_advanced_options_lighting_settings_dialog_forced_filtration_off").removeClass("btn-primary");
        $(".vigipool_modal_light_advanced_options_lighting_settings_dialog_forced_filtration_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_light_advanced_options_lighting_settings_dialog_forced_filtration_off").addClass("btn-primary");
        $(".vigipool_modal_light_advanced_options_lighting_settings_dialog_forced_filtration_on").removeClass("btn-primary");
    }
}function update_vigipool_modal_filtration_advanced_options() {

    // console.log("///// update_vigipool_modal_filtration_advanced_options /////");
    
    // Variables

    var frost_free = get_value_from_position(eq_modal, "frost_free");

    // Logs

    // console.log("frost_free = " + frost_free);

    // Check

    const variables = [frost_free];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    switch (frost_free) {
        case 255:
            $(".vigipool_modal_filtration_advanced_options_frost_free_off").addClass("btn-primary");
            break;
        case 0:
            $(".vigipool_modal_filtration_advanced_options_frost_free_0").addClass("btn-primary");
            break;
        case 1:
            $(".vigipool_modal_filtration_advanced_options_frost_free_1").addClass("btn-primary");
            break;
        case 2:
            $(".vigipool_modal_filtration_advanced_options_frost_free_2").addClass("btn-primary");
            break;
    }
}function update_vigipool_modal_auxiliary_advanced_options() {

    // console.log("||||| update_vigipool_modal_auxiliary_advanced_options |||||");

    // Variables

    var aux_conf = get_value_from_position(eq_modal, "aux_conf");
    if (aux_conf === undefined)
        return;
    aux_conf = parseInt(aux_conf);
    aux_conf = converter("dec", "bin", aux_conf);

    var enslaved_to_filtration = parseInt(aux_conf[6]);
    var force_filtration_during_aux = parseInt(aux_conf[5]);
    var consigne_temp = parseInt(aux_conf[4]);
    var aux_min_temp = parseInt(aux_conf[3]);
    var consigne_orp = parseInt(aux_conf[2]);

    // Logs

    // console.log("aux_conf = " + aux_conf);
    // console.log("enslaved_to_filtration = " + enslaved_to_filtration);
    // console.log("force_filtration_during_aux = " + force_filtration_during_aux);
    // console.log("consigne_temp = " + consigne_temp);
    // console.log("aux_min_temp = " + aux_min_temp);
    // console.log("consigne_orp = " + consigne_orp);

    // Check

    const variables = [aux_conf, enslaved_to_filtration, force_filtration_during_aux, consigne_temp, aux_min_temp, consigne_orp];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // enslaved_to_filtration

    if (enslaved_to_filtration === 1) {
        $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").removeClass("btn-primary");
    }

    // force_filtration_during_aux

    if (force_filtration_during_aux === 1) {
        $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").removeClass("btn-primary");
    }

    // consigne_temp

    if (consigne_temp === 1) {
        $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").removeClass("btn-primary");
    }

    // aux_min_temp

    if (aux_min_temp === 1) {
        $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").removeClass("btn-primary");
    }

    // consigne_orp

    if (consigne_orp === 1) {
        $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").removeClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").addClass("btn-primary");
    } else {
        $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").addClass("btn-primary");
        $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").removeClass("btn-primary");
    }

    var aux_type = get_value_from_position(eq_modal, "aux_type");
    aux_type = parseInt(aux_type);
    // console.log("aux_type = " + aux_type);

    switch (aux_type) {
        case 0:
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").hide();
            break;
        case 1:
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").hide();
            break;
        case 2:
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").show();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").hide();
            break;
        case 3:
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").show();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp").show();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").show();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").show();
            var consigne_orp_zelix = get_value_from_eq(eq_modal, "consigne_orp", "zelix");
            if (consigne_orp_zelix > 0) {
                $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").show();
                $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").show();
                $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").show();
            } else {
                $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").hide();
                $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").hide();
                $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").hide();
            }
            break;
        case 4:
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").show();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").hide();
            break;
        case 5:
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration").show();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_off").show();
            $(".vigipool_modal_auxiliary_advanced_options_enslaved_to_filtration_on").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_off").show();
            $(".vigipool_modal_auxiliary_advanced_options_force_filtration_during_aux_on").show();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_aux_min_temp_on").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_off").hide();
            $(".vigipool_modal_auxiliary_advanced_options_consigne_orp_on").hide();
            break;
    }
}// texts

$(".vigipool_ui_light_m_label > p").html(get_text("light"));

// other

var warm = "#f4e3be";
var cold = "#ffffff";
var blue = "#7eadcf";
var lagoon = "#a0d4dc";
var cyan = "#c1f1f9";
var green = "#9dc46f";
var purple = "#c25dba";
var magenta = "#cc86c3";
var pink = "#ecb7e7";
var red = "#d3585a";
var orange = "#e3aa52";
var favorite = "#758f8d";

function update_vigipool_ui_light_m_state() {

    // console.log("refresh_dashboard_light_m_state");

    // variables
    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {
        var light_m_code = get_value_from_position(i, "light_code");
        var light_m_state = get_value_from_position(i, "light_state_m");
        // console.log("light_m_code = " + light_m_code);
        // console.log("light_m_state = " + light_m_state);

        if (!is_variable_available(i, "light_type_m")) {
            $(".vigipool_ui_light_m_label").eq(i).hide();
            $(".vigipool_ui_light_m_state").eq(i).hide();
        } else {
            $(".vigipool_ui_light_m_label").eq(i).show();
            $(".vigipool_ui_light_m_state").eq(i).show();
        }

        // actions

        var light_m_state = parseInt(light_m_state);
        var light_m_code = parseInt(light_m_code);

        if (light_m_state === 0) {
            $('.vigipool_ui_light_m_circle').eq(i).css("background-color", "#085a7d");
            $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
            $(".vigipool_ui_light_m_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/light_off.png");
        } else {
            $(".vigipool_ui_light_m_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/light_white.png");
            switch (light_m_code) {
                case 0:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", warm);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 1:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", cold);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    $(".vigipool_ui_light_m_circle").attr("src", "/plugins/vigipool/desktop/img/light_black.png");
                    break;
                case 2:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", blue);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 3:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", lagoon);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 4:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", cyan);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 10:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", green);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 5:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", purple);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 6:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", magenta);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 7:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", pink);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 8:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", red);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 9:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-color", orange);
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "none");
                    break;
                case 16:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_gradiant_large.png\")");
                    break;
                case 17:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_rainbow_large.png\")");
                    break;
                case 18:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_parade_large.png\")");
                    break;
                case 19:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_techno_large.png\")");
                    break;
                case 20:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_horizon_large.png\")");
                    break;
                case 21:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_random_large.png\")");
                    break;
                case 22:
                    $('.vigipool_ui_light_m_circle').eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/sequence_magical_large.png\")");
                    break;
            }
        }
    }
}

function update_vigipool_ui_filt_m_state() {

//     console.log("refresh_dashboard_filt_m_state");

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        // Variables de bases

        var filt_m_sched = get_value_from_position(i, "filt_sched_m");
        var filt_mode = get_value_from_position(i, "filt_mode");
        var filt_m_state = get_value_from_position(i, "filt_state_m");
        var filt_cur_nom = get_value_from_position(i, "filt_cur_nom");
        var filt_cur = get_value_from_position(i, "filt_cur");
        var filt_state = get_value_from_position(i, "filt_state");

        if (!is_variable_available(i, "filt_state_m")) {
            $(".vigipool_ui_filt_m_label").eq(i).hide();
            $(".vigipool_ui_filt_m_state").eq(i).hide();
        } else {
            $(".vigipool_ui_filt_m_label").eq(i).show();
            $(".vigipool_ui_filt_m_state").eq(i).show();
        }

        var flow_on = get_value_from_position(i, "flow_on");

        // Variables avancées

        var FILT_ON = get_bit(filt_m_state, 0);
        var FILT_ON = get_bit(filt_m_state, 1);
        var FILT_PROG = get_bit(filt_m_state, 2);
        var FILT_LIGHT = get_bit(filt_m_state, 3);
        var FILT_AUX = get_bit(filt_m_state, 4);
        var FILT_SERV = get_bit(filt_m_state, 5);
        var FILT_FROST = get_bit(filt_m_state, 6);
        var FILT_PAC = get_bit(filt_m_state, 7);

        // console.log("FILT_ON = " + FILT_ON);
        // console.log("FILT_PROG = " + FILT_PROG);
        // console.log("FILT_LIGHT = " + FILT_LIGHT);
        // console.log("FILT_AUX = " + FILT_AUX);
        // console.log("FILT_SERV = " + FILT_SERV);
        // console.log("FILT_FROST = " + FILT_FROST);
        // console.log("FILT_PAC = " + FILT_PAC);

        var vigipool_aux_conf = parseInt($(".vigipool_aux_conf").eq(i).html());

        var en_marche = get_bit(vigipool_aux_conf, 0);
        var asservi_filt = get_bit(vigipool_aux_conf, 1);
        var prio_aux = get_bit(vigipool_aux_conf, 2);
        var consigne_temp = get_bit(vigipool_aux_conf, 3);
        var aux_min_temp = get_bit(vigipool_aux_conf, 4);
        var consigne_orp = get_bit(vigipool_aux_conf, 5);

        // Result

        $(".vigipool_ui_tild_flow_on_m_1").eq(i).hide();
        $(".vigipool_ui_tild_flow_on_m_2").eq(i).hide();
        $(".vigipool_ui_tild_flow_on_m_3").eq(i).hide();
        $(".vigipool_ui_tild_flow_on_m_4").eq(i).hide();

        if (!filt_m_state) {
            $(".vigipool_ui_tild_flow_on_m_1").eq(i).show();
        } else if (filt_m_state) {
            $(".vigipool_ui_tild_flow_on_m_2").eq(i).show();
        }


    }
}

function update_vigipool_ui_aux1_state() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var aux1_sched = get_value_from_position(i, "aux1_sched");
        var aux1_type = get_value_from_position(i, "aux1_type");
        var aux1_temp_hyst = get_value_from_position(i, "aux1_temp_hyst");
        var aux1_state = get_value_from_position(i, "aux1_state");
        var aux1_conf = get_value_from_position(i, "aux1_conf");
        var aux1_min_temp = get_value_from_position(i, "aux1_min_temp");
        var consigne_temp = get_value_from_position(i, "consigne_temp");
        var consigne_temp_unit = get_value_from_position(i, "consigne_temp_unit");

        var en_marche = get_bit(aux1_conf, 0);
        var asservi_filt = get_bit(aux1_conf, 1);
        var prio_aux = get_bit(aux1_conf, 2);
        var consigne_temp = get_bit(aux1_conf, 3);
        var aux1_min_temp = get_bit(aux1_conf, 4);
        var consigne_orp = get_bit(aux1_conf, 5);

        // console.log("aux1_sched = " + aux1_sched);
        // console.log("aux1_type = " + aux1_type);
        // console.log("aux1_temp_hyst = " + aux1_temp_hyst);
        // console.log("aux1_state = " + aux1_state);
        // console.log("aux1_conf = " + aux1_conf);
        // console.log("aux1_min_temp = " + aux1_min_temp);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("consigne_temp_unit = " + consigne_temp_unit);
        // console.log("en_marche = " + en_marche);
        // console.log("asservi_filt = " + asservi_filt);
        // console.log("prio_aux = " + prio_aux);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("aux1_min_temp = " + aux1_min_temp);
        // console.log("consigne_orp = " + consigne_orp);
        if (!is_variable_available(i, "aux1_state")) {
            $(".vigipool_ui_aux1_label").eq(i).hide();
            $(".vigipool_ui_aux1_state").eq(i).hide();
        } else {
            $(".vigipool_ui_aux1_label").eq(i).show();
            $(".vigipool_ui_aux1_state").eq(i).show();
        }


        // console.log("aux1_sched = " + aux1_sched);
        // 
        // 
        // console.log("aux1_type = " + aux1_type);
        // console.log("aux1_temp_hyst = " + aux1_temp_hyst);
        // console.log("aux1_state = " + aux1_state);
        // console.log("aux1_conf = " + aux1_conf);
        // console.log("aux1_min_temp = " + aux1_min_temp);
        //
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("consigne_temp_unit = " + consigne_temp_unit);
        //
        // console.log("en_marche = " + en_marche);
        // console.log("asservi_filt = " + asservi_filt);
        // console.log("prio_aux = " + prio_aux);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("aux1_min_temp = " + aux1_min_temp);
        // console.log("consigne_orp = " + consigne_orp);

        switch (aux1_type) {
            case 0:
                $(".vigipool_ui_aux1_label > p").eq(i).html(get_text("treatment"));
                break;
            case 1:
                $(".vigipool_ui_aux1_label > p").eq(i).html(get_text("auxiliary"));
                break;
            case 2:
                $(".vigipool_ui_aux1_label > p").eq(i).html(get_text("heater"));
                break;
            case 3:
                $(".vigipool_ui_aux1_label > p").eq(i).html(get_text("booster"));
                break;
            case 4:
                $(".vigipool_ui_aux1_label > p").eq(i).html(get_text("treatment_orp"));
                break;
        }

        $(".vigipool_ui_aux1_layer_2 > p").eq(i).html(consigne_temp + consigne_temp_unit);

        switch (aux1_type)
        {
            case 0:
                switch (aux1_state)
                {
                    case 0:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_off.svg");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_on.svg");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 1:
                switch (aux1_state)
                {
                    case 0:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_off.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_on.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 2:
                switch (aux1_state)
                {
                    case 0:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/heater_off.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/heater_on.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "linear-gradient(#711a16, #d98233)");
                        $(".vigipool_ui_aux1_layer_2").eq(i).show();
                        break;
                }
                break;
            case 3:
                switch (aux1_state)
                {
                    case 0:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/booster_off.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/booster_on.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 4:
                switch (aux1_state)
                {
                    case 0:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_off.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux1_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_on.png");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux1_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux1_layer_2").eq(i).hide();
                        break;
                }
                break;
        }
    }
}function update_vigipool_ui_aux2_state() {

    var max_devices = $(".vigipool_ipaddr").length;

    $(".vigipool_ui_aux2_label > p").html(get_text("auxiliary") + " " + 2);

    for (var i = 0, max = max_devices; i < max; i++) {

        var aux2_sched = get_value_from_position(i, "aux2_sched");
        var aux2_type = 0;
        var aux2_temp_hyst = get_value_from_position(i, "aux2_temp_hyst");
        var aux2_state = get_value_from_position(i, "aux2_state");
        var aux2_conf = get_value_from_position(i, "aux2_conf");
        var aux2_min_temp = get_value_from_position(i, "aux2_min_temp");
        var consigne_temp = get_value_from_position(i, "consigne_temp");
        var consigne_temp_unit = get_value_from_position(i, "consigne_temp_unit");

        var en_marche = get_bit(aux2_conf, 0);
        var asservi_filt = get_bit(aux2_conf, 1);
        var prio_aux = get_bit(aux2_conf, 2);
        var consigne_temp = get_bit(aux2_conf, 3);
        var aux2_min_temp = get_bit(aux2_conf, 4);
        var consigne_orp = get_bit(aux2_conf, 5);

        // console.log("aux2_sched = " + aux2_sched);
        // console.log("aux2_type = " + aux2_type);
        // console.log("aux2_temp_hyst = " + aux2_temp_hyst);
        // console.log("aux2_state = " + aux2_state);
        // console.log("aux2_conf = " + aux2_conf);
        // console.log("aux2_min_temp = " + aux2_min_temp);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("consigne_temp_unit = " + consigne_temp_unit);
        // console.log("en_marche = " + en_marche);
        // console.log("asservi_filt = " + asservi_filt);
        // console.log("prio_aux = " + prio_aux);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("aux2_min_temp = " + aux2_min_temp);
        // console.log("consigne_orp = " + consigne_orp);

        if (!is_variable_available(i, "aux2_state")) {
            $(".vigipool_ui_aux2_label").eq(i).hide();
            $(".vigipool_ui_aux2_state").eq(i).hide();
        } else {
            $(".vigipool_ui_aux2_label").eq(i).show();
            $(".vigipool_ui_aux2_state").eq(i).show();
        }


        // console.log("aux2_sched = " + aux2_sched);
        // 
        // 
        // console.log("aux2_type = " + aux2_type);
        // console.log("aux2_temp_hyst = " + aux2_temp_hyst);
        // console.log("aux2_state = " + aux2_state);
        // console.log("aux2_conf = " + aux2_conf);
        // console.log("aux2_min_temp = " + aux2_min_temp);
        //
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("consigne_temp_unit = " + consigne_temp_unit);
        //
        // console.log("en_marche = " + en_marche);
        // console.log("asservi_filt = " + asservi_filt);
        // console.log("prio_aux = " + prio_aux);
        // console.log("consigne_temp = " + consigne_temp);
        // console.log("aux2_min_temp = " + aux2_min_temp);
        // console.log("consigne_orp = " + consigne_orp);



        switch (aux2_type) {
            case 0:
                $(".vigipool_ui_aux2_aux").eq(i).html(get_text("auxiliary"));
                break;
            case 1:
                $(".vigipool_ui_aux2_aux").eq(i).html(get_text("treatment"));
                break;
            case 2:
                $(".vigipool_ui_aux2_aux").eq(i).html(get_text("heater"));
                break;
            case 3:
                $(".vigipool_ui_aux2_aux").eq(i).html(get_text("booster"));
                break;
            case 4:
                $(".vigipool_ui_aux2_aux").eq(i).html(get_text("treatment_orp"));
                break;
        }

        $(".vigipool_ui_aux2_layer_2 > p").eq(i).html(consigne_temp + consigne_temp_unit);

        switch (aux2_type)
        {
            case 0:
                switch (aux2_state)
                {
                    case 0:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_off.svg");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/auxiliary_on.svg");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 1:
                switch (aux2_state)
                {
                    case 0:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_off.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_on.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 2:
                switch (aux2_state)
                {
                    case 0:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/heater_off.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/heater_on.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "linear-gradient(#711a16, #d98233)");
                        $(".vigipool_ui_aux2_layer_2").eq(i).show();
                        break;
                }
                break;
            case 3:
                switch (aux2_state)
                {
                    case 0:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/booster_off.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/booster_on.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                }
                break;
            case 4:
                switch (aux2_state)
                {
                    case 0:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_off.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#085a7d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                    default:
                        $(".vigipool_ui_aux2_circle").eq(i).attr("src", "/plugins/vigipool/desktop/img/treatment_on.png");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background", "");
                        $(".vigipool_ui_aux2_circle").eq(i).css("background-color", "#758f8d");
                        $(".vigipool_ui_aux2_layer_2").eq(i).hide();
                        break;
                }
                break;
        }
    }
}function update_vigipool_modal_light_m() {

    // console.log("///// update_vigipool_modal_light_m /////");

    // Variables

    var light_sched = get_value_from_position(eq_modal, "light_sched_m");
    var light_mode = get_value_from_position(eq_modal, "light_mode");
    var light_type = get_value_from_position(eq_modal, ".light_type_m");
    var light_code = get_value_from_position(eq_modal, ".light_code");
    var light_bright = get_value_from_position(eq_modal, "light_bright");
    var light_speed = get_value_from_position(eq_modal, "light_speed");
    var light_state = get_value_from_position(eq_modal, "light_state_m");

    // Logs

    // console.log("light_sched = " + light_sched);
    // console.log("light_mode = " + light_mode);
    // console.log("light_type = " + light_type);
    // console.log("light_code = " + light_code);
    // console.log("light_bright = " + light_bright);
    // console.log("light_speed = " + light_speed);
    // console.log("light_state = " + light_state);

    // Check

    const variables = [light_sched, light_mode, light_type, light_code, light_bright, light_speed, light_state];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Bright
    $('.vigipool_modal_light_m_bright > th:nth-child(2) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_bright > th:nth-child(2) > p').css("color", "black");
    $('.vigipool_modal_light_m_bright > th:nth-child(3) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_bright > th:nth-child(3) > p').css("color", "black");
    $('.vigipool_modal_light_m_bright > th:nth-child(4) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_bright > th:nth-child(4) > p').css("color", "black");
    $('.vigipool_modal_light_m_bright > th:nth-child(5) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_bright > th:nth-child(5) > p').css("color", "black");

    if (light_bright === 0) {
        $('.vigipool_modal_light_m_bright > th:nth-child(2) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_bright > th:nth-child(2) > p').css("color", "white");
    } else if (light_bright === 1) {
        $('.vigipool_modal_light_m_bright > th:nth-child(3) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_bright > th:nth-child(3) > p').css("color", "white");
    } else if (light_bright === 2) {
        $('.vigipool_modal_light_m_bright > th:nth-child(4) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_bright > th:nth-child(4) > p').css("color", "white");
    } else if (light_bright === 3) {
        $('.vigipool_modal_light_m_bright > th:nth-child(5) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_bright > th:nth-child(5) > p').css("color", "white");
    }

    // Speed

    if (light_code > 11) {
        $('.vigipool_modal_light_m_speed').show();
        $('.vigipool_modal_light_m_speed_title').show();
    } else {
        $('.vigipool_modal_light_m_speed').hide();
        $('.vigipool_modal_light_m_speed_title').hide();
    }

    $('.vigipool_modal_light_m_speed > th:nth-child(2) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_speed > th:nth-child(2) > p').css("color", "black");
    $('.vigipool_modal_light_m_speed > th:nth-child(3) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_speed > th:nth-child(3) > p').css("color", "black");
    $('.vigipool_modal_light_m_speed > th:nth-child(4) > p').css("background-color", "white");
    $('.vigipool_modal_light_m_speed > th:nth-child(4) > p').css("color", "black");


    if (light_speed === 0) {
        $('.vigipool_modal_light_m_speed > th:nth-child(2) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_speed > th:nth-child(2) > p').css("color", "white");
    } else if (light_speed === 1) {
        $('.vigipool_modal_light_m_speed > th:nth-child(3) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_speed > th:nth-child(3) > p').css("color", "white");
    } else if (light_speed === 2) {
        $('.vigipool_modal_light_m_speed > th:nth-child(4) > p').css("background-color", "gray");
        $('.vigipool_modal_light_m_speed > th:nth-child(4) > p').css("color", "white");
    }

    //////////////////////////////

    // if (isset(light_sched)) {
    //     var vigipool_light_sched_prog_begin_hex = light_sched[0] + light_sched[1];
    //     var vigipool_light_sched_prog_end_hex = light_sched[2] + light_sched[3];
    //     var begin = converter("hex", "time_2", vigipool_light_sched_prog_begin_hex);
    //     var end = converter("hex", "time_2", vigipool_light_sched_prog_end_hex);
    //
    //     var duration = converter("hex", "dec", vigipool_light_sched_prog_end_hex) - converter("hex", "dec", vigipool_light_sched_prog_begin_hex);
    //     duration = converter("dec", "time_2", duration);
    //
    //     $(".vigipool_modal_light_1_prog_begin_end").html(get_text("from") + " " + begin + " " + get_text("to") + " " + end);
    //     $(".vigipool_modal_light_1_prog_duration").html(duration + "h / " + get_text("day"));
    // }

    create_program_simple("vigipool_modal_light_m", 1, light_sched);

    //////////////////////////////

    switch (light_mode) {
        case 0:
            $(".vigipool_modal_light_m_button_off").addClass("btn-primary");
            $(".vigipool_modal_light_m_button_on").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_prog").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_auto").removeClass("btn-primary");
            break;
        case 1:
            $(".vigipool_modal_light_m_button_off").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_on").addClass("btn-primary");
            $(".vigipool_modal_light_m_button_prog").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_auto").removeClass("btn-primary");
            break;
        case 2:
            $(".vigipool_modal_light_m_button_off").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_on").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_prog").addClass("btn-primary");
            $(".vigipool_modal_light_m_button_auto").removeClass("btn-primary");
            break;
        case 3:
            $(".vigipool_modal_light_m_button_off").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_on").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_prog").removeClass("btn-primary");
            $(".vigipool_modal_light_m_button_auto").addClass("btn-primary");
            break;
    }

    hide_checks_anteam();

    switch (light_code) {
        case 0:
            $(".vigipool_modal_light_m_warm_button > img").show();
            $(".vigipool_modal_light_m_warm_label").css("opacity", "50%");
            break;
        case 1:
            $(".vigipool_modal_light_m_cold_button > img").show();
            $(".vigipool_modal_light_m_cold_label").css("opacity", "50%");
            break;
        case 2:
            $(".vigipool_modal_light_m_blue_button > img").show();
            $(".vigipool_modal_light_m_blue_label").css("opacity", "50%");
            break;
        case 3:
            $(".vigipool_modal_light_m_lagoon_button > img").show();
            $(".vigipool_modal_light_m_lagoon_label").css("opacity", "50%");
            break;
        case 4:
            $(".vigipool_modal_light_m_cyan_button > img").show();
            $(".vigipool_modal_light_m_cyan_label").css("opacity", "50%");
            break;
        case 10:
            $(".vigipool_modal_light_m_green_button > img").show();
            $(".vigipool_modal_light_m_green_label").css("opacity", "50%");
            break;
        case 5:
            $(".vigipool_modal_light_m_purple_button > img").show();
            $(".vigipool_modal_light_m_purple_label").css("opacity", "50%");
            break;
        case 6:
            $(".vigipool_modal_light_m_magenta_button > img").show();
            $(".vigipool_modal_light_m_magenta_label").css("opacity", "50%");
            break;
        case 7:
            $(".vigipool_modal_light_m_pink_button > img").show();
            $(".vigipool_modal_light_m_pink_label").css("opacity", "50%");
            break;
        case 8:
            $(".vigipool_modal_light_m_red_button > img").show();
            $(".vigipool_modal_light_m_red_label").css("opacity", "50%");
            break;
        case 9:
            $(".vigipool_modal_light_m_orange_button > img").show();
            $(".vigipool_modal_light_m_orange_label").css("opacity", "50%");
            break;
        case 11:
            $(".vigipool_modal_light_m_favorite_button > img").show();
            $(".vigipool_modal_light_m_favorite_label").css("opacity", "50%");
            break;
        case 16:
            $(".vigipool_modal_light_m_gradiant_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_gradiant_label").css("opacity", "50%");
            break;
        case 17:
            $(".vigipool_modal_light_m_rainbow_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_rainbow_label").css("opacity", "50%");
            break;
        case 18:
            $(".vigipool_modal_light_m_parade_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_parade_label").css("opacity", "50%");
            break;
        case 19:
            $(".vigipool_modal_light_m_techno_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_techno_label").css("opacity", "50%");
            break;
        case 20:
            $(".vigipool_modal_light_m_horizon_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_horizon_label").css("opacity", "50%");
            break;
        case 21:
            $(".vigipool_modal_light_m_random_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_random_label").css("opacity", "50%");
            break;
        case 22:
            $(".vigipool_modal_light_m_magical_button > img").css("opacity", "100%");
            $(".vigipool_modal_light_m_magical_label").css("opacity", "50%");
            break;
    }

}



function hide_checks_anteam() {
    $('.vigipool_modal_light_m_warm_button > img').hide();
    $('.vigipool_modal_light_m_cold_button > img').hide();
    $('.vigipool_modal_light_m_blue_button > img').hide();
    $('.vigipool_modal_light_m_lagoon_button > img').hide();
    $('.vigipool_modal_light_m_cyan_button > img').hide();
    $('.vigipool_modal_light_m_green_button > img').hide();
    $('.vigipool_modal_light_m_purple_button > img').hide();
    $('.vigipool_modal_light_m_magenta_button > img').hide();
    $('.vigipool_modal_light_m_pink_button > img').hide();
    $('.vigipool_modal_light_m_red_button > img').hide();
    $('.vigipool_modal_light_m_orange_button > img').hide();
    $('.vigipool_modal_light_m_favorite_button > img').hide();

    $('.vigipool_modal_light_m_warm_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_cold_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_blue_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_lagoon_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_cyan_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_green_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_purple_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_magenta_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_pink_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_red_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_orange_label').css("opacity", "100%");
    $('.vigipool_modal_light_m_favorite_label').css("opacity", "100%");

    $(".vigipool_modal_light_m_gradiant_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_gradiant_label").css("opacity", "100%");
    $(".vigipool_modal_light_m_rainbow_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_rainbow_label").css("opacity", "100%");
    $(".vigipool_modal_light_m_parade_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_parade_label").css("opacity", "100%");
    $(".vigipool_modal_light_m_techno_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_techno_label").css("opacity", "100%");
    $(".vigipool_modal_light_m_horizon_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_horizon_label").css("opacity", "100%");
    $(".vigipool_modal_light_m_random_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_random_label").css("opacity", "100%");
    $(".vigipool_modal_light_m_magical_button > img").css("opacity", "0%");
    $(".vigipool_modal_light_m_magical_label").css("opacity", "100%");
}
function update_vigipool_modal_light_m_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_all /////");

    // Variables

    if (set_sched_value_save === "") {
        var light_sched = get_value_from_position(eq_modal, "light_sched_m");
    } else {
        var light_sched = set_sched_value_save;
    }

    // Logs

    // console.log("light_sched = " + light_sched);

    // Check

    const variables = [light_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var begin = get_sched_value(light_sched, "programs_number");
    var end = get_sched_value(light_sched, "program_1_off_on_and_days");
    $(".slidecontainer").show();

    //    console.log("begin = " + begin);
    //    console.log("end = " + end);

    // Schedule 1
    // At
    $("#vigipool_modal_light_m_prog_1_sched_1_begin").html(converter("dec", "time_2", parseInt(begin)));
    $("#myvigipool_modal_light_m_prog_1_sched_1_begin").val(begin);
    // During
    $("#vigipool_modal_light_m_prog_1_sched_1_end").html(converter("dec", "time_2", parseInt(end)));
    $("#myvigipool_modal_light_m_prog_1_sched_1_end").val(end);

}

function update_vigipool_modal_filtration_m() {

    // console.log("///// update_vigipool_modal_filtration_m /////");

    // Variables

    var filt_mode = get_value_from_position(eq_modal, "filt_mode");
    var filt_sched_m = get_value_from_position(eq_modal, "filt_sched_m");

    // Logs

    // console.log("filt_mode = " + filt_mode);
    // console.log("filt_sched_m = " + filt_sched_m);

    // Check

    const variables = [filt_mode, filt_sched_m];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // filt_mode

    $(".vigipool_modal_filtration_m_off").removeClass("btn-primary");
    $(".vigipool_modal_filtration_m_on").removeClass("btn-primary");
    $(".vigipool_modal_filtration_m_prog").removeClass("btn-primary");
    $(".vigipool_modal_filtration_m_auto").removeClass("btn-primary");

    switch (filt_mode) {
        case 0:
            $(".vigipool_modal_filtration_m_off").addClass("btn-primary");
            break;
        case 1:
            $(".vigipool_modal_filtration_m_on").addClass("btn-primary");
            break;
        case 2:
            $(".vigipool_modal_filtration_m_prog").addClass("btn-primary");
            break;
        case 3:
            $(".vigipool_modal_filtration_m_auto").addClass("btn-primary");
            break;
    }

    // filt_sched_m

    create_program_simple("vigipool_modal_filtration_m", 1, filt_sched_m);
}
function update_vigipool_modal_filtration_m_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_all /////");

    // Variables

    if (set_sched_value_save === "") {
        var filt_sched_m = get_value_from_position(eq_modal, "filt_sched_m");
    } else {
        var filt_sched_m = set_sched_value_save;
    }

    // Logs

    // console.log("filt_sched_m = " + filt_sched_m);

    // Check

    const variables = [filt_sched_m];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var begin_1 = get_sched_value(filt_sched_m, "programs_number");
    var end_1 = get_sched_value(filt_sched_m, "program_1_off_on_and_days");
    var begin_2 = get_sched_value(filt_sched_m, "program_1_bright");
    var end_2 = get_sched_value(filt_sched_m, "program_1_speed");
    var begin_3 = get_sched_value(filt_sched_m, "program_1_sched_number");
    var end_3 = get_sched_value(filt_sched_m, "program_1_sched_1_begin");

//    console.log("begin_1 = " + begin_1);
//    console.log("end_1 = " + end_1);
//    console.log("begin_2 = " + begin_2);
//    console.log("end_2 = " + end_2);
//    console.log("begin_3 = " + begin_3);
//    console.log("end_3 = " + end_3);


    $(".slidecontainer").show();


    // Schedule 1
    // At
    $("#vigipool_modal_filtration_m_prog_1_sched_1_begin").html(converter("dec", "time_2", parseInt(begin_1)));
    $("#myvigipool_modal_filtration_m_prog_1_sched_1_begin").val(begin_1);
    // During
    $("#vigipool_modal_filtration_m_prog_1_sched_1_end").html(converter("dec", "time_2", parseInt(end_1)));
    $("#myvigipool_modal_filtration_m_prog_1_sched_1_end").val(end_1);
    // Schedule 2
    // At
    $("#vigipool_modal_filtration_m_prog_1_sched_2_begin").html(converter("dec", "time_2", parseInt(begin_2)));
    $("#myvigipool_modal_filtration_m_prog_1_sched_2_begin").val(begin_2);
    // During
    $("#vigipool_modal_filtration_m_prog_1_sched_2_end").html(converter("dec", "time_2", parseInt(end_2)));
    $("#myvigipool_modal_filtration_m_prog_1_sched_2_end").val(end_2);
    // Schedule 1
    // At
    $("#vigipool_modal_filtration_m_prog_1_sched_3_begin").html(converter("dec", "time_2", parseInt(begin_3)));
    $("#myvigipool_modal_filtration_m_prog_1_sched_3_begin").val(begin_3);
    // During
    $("#vigipool_modal_filtration_m_prog_1_sched_3_end").html(converter("dec", "time_2", parseInt(end_3)));
    $("#myvigipool_modal_filtration_m_prog_1_sched_3_end").val(end_3);

    if (begin_2 === 255 || end_2 === 255) {
        $(".vigipool_modal_filtration_m_prog_1_sched_2").hide();
        $(".vigipool_modal_filtration_m_prog_1_sched_2_add").show();
    } else {
        $(".vigipool_modal_filtration_m_prog_1_sched_2").show();
        $(".vigipool_modal_filtration_m_prog_1_sched_2_add").hide();
    }
    if (begin_3 === 255 || end_3 === 255) {
        $(".vigipool_modal_filtration_m_prog_1_sched_3").hide();
        $(".vigipool_modal_filtration_m_prog_1_sched_3_add").show();
    } else {
        $(".vigipool_modal_filtration_m_prog_1_sched_3").show();
        $(".vigipool_modal_filtration_m_prog_1_sched_3_add").hide();
}

}

function update_vigipool_modal_auxiliary_1() {

    // console.log("///// update_vigipool_modal_auxiliary_1 /////");

    // Variables

    var aux1_sched = get_value_from_position(eq_modal, "aux1_sched");
    var aux1_type = get_value_from_position(eq_modal, "aux1_type");
    var aux1_mode = get_value_from_position(eq_modal, "aux1_mode");
    var aux1_state = get_value_from_position(eq_modal, "aux1_state");
    var aux_conf_m = get_value_from_position(eq_modal, "aux_conf_m");

    // Logs

    // console.log("aux1_sched = " + aux1_sched);
    // console.log("aux1_type = " + aux1_type);
    // console.log("aux1_mode = " + aux1_mode);
    // console.log("aux1_state = " + aux1_state);
    // console.log("aux_conf_m = " + aux_conf_m);

    // Check

    const variables = [aux1_sched, aux1_type, aux1_mode, aux1_state, aux_conf_m];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    if (!isNaN(aux1_mode)) {
        var aux_mode_1 = aux1_mode;

        $('.vigipool_modal_auxiliary_1_off').removeClass("btn-primary");
        $('.vigipool_modal_auxiliary_1_on').removeClass("btn-primary");
        $('.vigipool_modal_auxiliary_1_prog').removeClass("btn-primary");
        $('.vigipool_modal_auxiliary_1_auto').removeClass("btn-primary");

        switch (aux_mode_1) {
            case 0:
                $('.vigipool_modal_auxiliary_1_off').addClass("btn-primary");
                break;
            case 1:
                $('.vigipool_modal_auxiliary_1_on').addClass("btn-primary");
                break;
            case 2:
                $('.vigipool_modal_auxiliary_1_prog').addClass("btn-primary");
                break;
            case 3:
                $('.vigipool_modal_auxiliary_1_auto').addClass("btn-primary");
                break;
            default:
                break;
        }

        //////////////////////////////

    }

    create_program_simple("vigipool_modal_auxiliary_1", 1, aux1_sched);
}

function update_vigipool_modal_auxiliary_1_prog_1(set_sched_value_save = "") {

    // console.log("///// update_vigipool_modal_all /////");

    // Variables

    if (set_sched_value_save === "") {
        var aux1_sched = get_value_from_position(eq_modal, "aux1_sched");
    } else {
        var aux1_sched = set_sched_value_save;
    }

    // Logs

    // console.log("aux1_sched = " + aux1_sched);

    // Check

    const variables = [aux1_sched];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // Retrieval of sub-variables in the variable

    var begin = get_sched_value(aux1_sched, "programs_number");
    var end = get_sched_value(aux1_sched, "program_1_off_on_and_days");
    $(".slidecontainer").show();

    //    console.log("begin = " + begin);
    //    console.log("end = " + end);

    // Schedule 1
    // At
    $("#vigipool_modal_auxiliary_1_prog_1_sched_1_begin").html(converter("dec", "time_2", parseInt(begin)));
    $("#myvigipool_modal_auxiliary_1_prog_1_sched_1_begin").val(begin);
    // During
    $("#vigipool_modal_auxiliary_1_prog_1_sched_1_end").html(converter("dec", "time_2", parseInt(end)));
    $("#myvigipool_modal_auxiliary_1_prog_1_sched_1_end").val(end);

}

function update_vigipool_modal_auxiliary_2() {

    // console.log("///// update_vigipool_modal_auxiliary_2 /////");

    // Variables

    var aux2_sched = get_value_from_position(eq_modal, "aux2_sched");
    var aux2_mode = get_value_from_position(eq_modal, "aux2_mode");
    var aux2_state = get_value_from_position(eq_modal, "aux2_state");
    var aux_conf_m = get_value_from_position(eq_modal, "aux_conf_m");

    // Logs

    // console.log("vigipool_aux2_sched = " + vigipool_aux2_sched);
    // console.log("vigipool_aux2_mode = " + vigipool_aux2_mode);
    // console.log("vigipool_aux2_state = " + vigipool_aux2_state);
    // console.log("vigipool_aux_conf_m = " + vigipool_aux_conf_m);

    // Check

    const variables = [aux2_sched, aux2_mode, aux2_state, aux_conf_m];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    if (!isNaN(aux2_mode)) {
        var aux_mode_2 = aux2_mode;

        $('.vigipool_modal_auxiliary_2_off').removeClass("btn-primary");
        $('.vigipool_modal_auxiliary_2_on').removeClass("btn-primary");
        $('.vigipool_modal_auxiliary_2_prog').removeClass("btn-primary");
        $('.vigipool_modal_auxiliary_2_auto').removeClass("btn-primary");

        switch (aux_mode_2) {
            case 0:
                $('.vigipool_modal_auxiliary_2_off').addClass("btn-primary");
                break;
            case 1:
                $('.vigipool_modal_auxiliary_2_on').addClass("btn-primary");
                break;
            case 2:
                $('.vigipool_modal_auxiliary_2_prog').addClass("btn-primary");
                break;
            case 3:
                $('.vigipool_modal_auxiliary_2_auto').addClass("btn-primary");
                break;
            default:
                break;
        }

        //////////////////////////////

    }

    create_program_simple("vigipool_modal_auxiliary_2", 1, aux2_sched);
}

$(".vigipool_ui_source_ph_label > p").html(get_text("ph_regulation"));
$(".vigipool_ui_source_orp_label > p").html(get_text("orp_regulation"));
$(".vigipool_ui_inject_on_label > p").html(get_text("injection_in_progress"));
$(".vigipool_ui_vol_max_24h_label > p").html(get_text("volume_injected_in_24h"));

function update_vigipool_ui_source_ph() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var source_ph = get_value_from_position(i, "source_ph");
        var inject_on = get_value_from_position(i, "inject_on");
        var vol_max_24h = get_value_from_position(i, "vol_max_24h");
//        console.log("source_ph = " + source_ph);
//        console.log("inject_on = " + inject_on);
//        console.log("vol_max_24h = " + vol_max_24h);

        if (!is_variable_available(i, "source_ph")) {
            $(".vigipool_ui_source_ph_label").eq(i).hide();
            $(".vigipool_ui_source_ph_state").eq(i).hide();
        } else {
            $(".vigipool_ui_source_ph_label").eq(i).show();
            $(".vigipool_ui_source_ph_state").eq(i).show();
        }
        if (!is_variable_available(i, "inject_on")) {
            $(".vigipool_ui_inject_on_label").eq(i).hide();
            $(".vigipool_ui_inject_on_state").eq(i).hide();
        } else {
            $(".vigipool_ui_inject_on_label").eq(i).show();
            $(".vigipool_ui_inject_on_state").eq(i).show();
        }
        if (!is_variable_available(i, "vol_max_24h")) {
            $(".vigipool_ui_vol_max_24h_label").eq(i).hide();
            $(".vigipool_ui_vol_max_24h_state").eq(i).hide();
        } else {
            $(".vigipool_ui_vol_max_24h_label").eq(i).show();
            $(".vigipool_ui_vol_max_24h_state").eq(i).show();
        }

        switch (inject_on) {
            case 0:
                $(".vigipool_ui_inject_on_state > p").eq(i).html(`Off`);
                break;
            case 1:
                $(".vigipool_ui_inject_on_state > p").eq(i).html(`On`);
                break;
        }

        $(".vigipool_ui_vol_max_24h_label > p").eq(i).html(get_text("vol_24h_inject"));

        var vol_max_24h = get_value_from_position(i, "vol_max_24h");
        $(".vigipool_ui_vol_max_24h_state > p").eq(i).html(`0.0 L / ${vol_max_24h} L`);
    }
}function update_vigipool_ui_source_orp() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var device_id = get_value_from_position(i, "device_id");

        var source_orp = get_value_from_position(i, "source_orp");
        var inject_on = get_value_from_position(i, "inject_on");
        var vol_max_24h = get_value_from_position(i, "vol_max_24h");
        // console.log("source_orp = " + source_orp);
        // console.log("inject_on = " + inject_on);
        // console.log("vol_max_24h = " + vol_max_24h);

        if (!is_variable_available(i, "source_orp") || !is_variable_available(i, "inject_on")) {
            $(".vigipool_ui_source_orp_label").eq(i).hide();
            $(".vigipool_ui_source_orp_state").eq(i).hide();
        } else {
            $(".vigipool_ui_source_orp_label").eq(i).show();
            $(".vigipool_ui_source_orp_state").eq(i).show();
        }
        if (!is_variable_available(i, "inject_on")) {
            $(".vigipool_ui_inject_on_label").eq(i).hide();
            $(".vigipool_ui_inject_on_state").eq(i).hide();
        } else {
            $(".vigipool_ui_vol_max_24h_label").eq(i).show();
            $(".vigipool_ui_vol_max_24h_state").eq(i).show();
        }
        if (!is_variable_available(i, "vol_max_24h")) {
            $(".vigipool_ui_vol_max_24h_label").eq(i).hide();
            $(".vigipool_ui_vol_max_24h_state").eq(i).hide();
        } else {
            $(".vigipool_ui_vol_max_24h_label").eq(i).show();
            $(".vigipool_ui_vol_max_24h_state").eq(i).show();
        }

        switch (inject_on) {
            case 0:
                $(".vigipool_ui_inject_on_state > p").eq(i).html(`Off`);
                break;
            case 1:
                $(".vigipool_ui_inject_on_state > p").eq(i).html(`On`);
                break;
        }

        $(".vigipool_ui_vol_max_24h_label > p").eq(i).html(get_text("vol_24h_inject"));

        var vol_max_24h = get_value_from_position(i, "vol_max_24h");
        $(".vigipool_ui_vol_max_24h_state > p").eq(i).html(`0.0 L / ${vol_max_24h} L`);
    }
}
function update_vigipool_ui_value_ph() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {

        var value_ph = get_value_from_position(i, "value_ph");
        var consigne_ph = get_value_from_position(i, "consigne_ph");
        // console.log("value_ph = " + value_ph);
        // console.log("consigne_ph = " + consigne_ph);

        // Show Hide

        if (value_ph === undefined || value_ph === 0) {
            $(".vigipool_ui_value_ph_ui").eq(i).hide();
        } else {
            $(".vigipool_ui_value_ph_ui").eq(i).show();
        }

   

        // value_ph

        var value_ph_position = ph_to_position(value_ph);
        $(".vigipool_ui_value_ph").eq(i).css("margin-left", value_ph_position);

        var ph_limit_1 = 6.3;
        var ph_limit_2 = 6.6;
        var ph_limit_3 = 6.9;
        var ph_limit_4 = 7.2;
        var ph_limit_5 = 7.5;
        var ph_limit_6 = 7.8;
        var ph_limit_7 = 8.1;

        if (value_ph <= ph_limit_2 || ph_limit_6 <= value_ph)
        {
            $(".vigipool_ui_value_ph").eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/ph_orp_red.png\")");
            $(".vigipool_ui_value_ph").eq(i).html("<i class=\"fas fa-times-circle\" ></i> " + value_ph);
        }
        if (ph_limit_2 <= value_ph && value_ph <= ph_limit_3 || ph_limit_5 <= value_ph && value_ph <= ph_limit_6)
        {
            $(".vigipool_ui_value_ph").eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/ph_orp_orange.png\")");
            $(".vigipool_ui_value_ph").eq(i).html("<i class=\"fas fa-exclamation-circle\" ></i> " + value_ph);
        }
        if (ph_limit_3 <= value_ph && value_ph <= ph_limit_5)
        {
            $(".vigipool_ui_value_ph").eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/ph_orp_green.png\")");
            $(".vigipool_ui_value_ph").eq(i).html("<i class=\"fas fa-check-circle\" ></i> " + value_ph);
        }

        // consigne_ph

        if (consigne_ph === undefined || consigne_ph === 0) {
            $(".vigipool_ui_value_ph_setpoint").eq(i).hide();
        } else {
            $(".vigipool_ui_value_ph_setpoint").eq(i).show();
        }

        var vigipool_ph_setpoint_position = ph_to_position(consigne_ph);
        $(".vigipool_ui_value_ph_setpoint").eq(i).css("margin-left", vigipool_ph_setpoint_position);

        var ph_limit_1 = 6.3;
        var ph_limit_2 = 6.6;
        var ph_limit_3 = 6.9;
        var ph_limit_4 = 7.2;
        var ph_limit_5 = 7.5;
        var ph_limit_6 = 7.8;
        var ph_limit_7 = 8.1;

        $(".vigipool_ui_value_ph_setpoint").eq(i).html(get_text("setpoint") + " " + consigne_ph);

    }
}

function ph_to_position(ph) {
    if (ph <= 6.3)
        return "-99%";
    if (ph === 6.4)
        return "-88%";
    if (ph === 6.5)
        return "-77%";
    if (ph === 6.6)
        return "-66%";
    if (ph === 6.7)
        return "-55%";
    if (ph === 6.8)
        return "-44%";
    if (ph === 6.9)
        return "-33%";
    if (ph === 7.0)
        return "-22%";
    if (ph === 7.1)
        return "-11%";
    if (ph === 7.2)
        return "0%";
    if (ph === 7.3)
        return "11%";
    if (ph === 7.4)
        return "22%";
    if (ph === 7.5)
        return "33%";
    if (ph === 7.6)
        return "44%";
    if (ph === 7.7)
        return "55%";
    if (ph === 7.8)
        return "66%";
    if (ph === 7.9)
        return "77%";
    if (ph === 8.0)
        return "88%";
    if (ph >= 8.1)
        return "99%";
}//$('.value_orpileox_modal_button_history').click(function () {
//    $("[data-template='vigipool_value_orp']").click();
//});

var orp_limit_1 = 350;
var orp_limit_2 = 450;
var orp_limit_3 = 550;
var orp_limit_4 = 650;
var orp_limit_5 = 750;
var orp_limit_6 = 850;
var orp_limit_7 = 950;

function update_vigipool_ui_value_orp() {

    var max_devices = $(".vigipool_ipaddr").length;

    for (var i = 0, max = max_devices; i < max; i++) {
        var value_orp = get_value_from_position(i, "value_orp");
        var consigne_orp = get_value_from_eq(i, "consigne_orp", "zelix");

        // console.log("value_orp = " + value_orp);
        // console.log("consigne_orp = " + consigne_orp);

        if (value_orp === undefined || value_orp === 0) {
            $(".vigipool_ui_value_orp_ui").eq(i).hide();
        } else {
            $(".vigipool_ui_value_orp_ui").eq(i).show();
        }

        // value_orp

        var value_orp_position = orp_to_position(value_orp);
        $(".vigipool_ui_value_orp").eq(i).css("margin-left", value_orp_position);



        if (value_orp <= orp_limit_2 || orp_limit_6 <= value_orp)
        {
            $(".vigipool_ui_value_orp").eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/ph_orp_red.png\")");
            $(".vigipool_ui_value_orp").eq(i).html("<i class=\"fas fa-times-circle\" ></i> " + value_orp);
        } else if (orp_limit_2 <= value_orp && value_orp <= orp_limit_3 || orp_limit_5 <= value_orp && value_orp <= orp_limit_6)
        {
            $(".vigipool_ui_value_orp").eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/ph_orp_orange.png\")");
            $(".vigipool_ui_value_orp").eq(i).html("<i class=\"fas fa-exclamation-circle\" ></i> " + value_orp);
        } else if (orp_limit_3 <= value_orp && value_orp <= orp_limit_5)
        {
            $(".vigipool_ui_value_orp").eq(i).css("background-image", "url(\"/plugins/vigipool/desktop/img/ph_orp_green.png\")");
            $(".vigipool_ui_value_orp").eq(i).html("<i class=\"fas fa-check-circle\" ></i> " + value_orp);
        } else {
            // console.log("error !");
            // console.log("value_orp = " + value_orp);
            // console.log("orp_limit_2 = " + orp_limit_2);
            // console.log("orp_limit_6 = " + orp_limit_6);
        }

        // consigne_orp

        if (consigne_orp === undefined || consigne_orp === 0) {
            $(".vigipool_ui_value_orp_setpoint").eq(i).hide();
        } else {
            $(".vigipool_ui_value_orp_setpoint").eq(i).show();
        }

        var vigipool_orp_setpoint_position = orp_to_position(consigne_orp);
        $(".vigipool_ui_value_orp_setpoint").eq(i).css("margin-left", vigipool_orp_setpoint_position);

        $(".vigipool_ui_value_orp_setpoint").eq(i).html(get_text("setpoint") + " " + consigne_orp);

    }
}

function orp_to_position(orp) {
    if (orp <= 350)
        return "-98.9999999999996%";
    if (orp === 351)
        return "-98.6699999999996%";
    if (orp === 352)
        return "-98.3399999999996%";
    if (orp === 353)
        return "-98.0099999999996%";
    if (orp === 354)
        return "-97.6799999999996%";
    if (orp === 355)
        return "-97.3499999999996%";
    if (orp === 356)
        return "-97.0199999999996%";
    if (orp === 357)
        return "-96.6899999999996%";
    if (orp === 358)
        return "-96.3599999999996%";
    if (orp === 359)
        return "-96.0299999999996%";
    if (orp === 360)
        return "-95.6999999999996%";
    if (orp === 361)
        return "-95.3699999999996%";
    if (orp === 362)
        return "-95.0399999999996%";
    if (orp === 363)
        return "-94.7099999999996%";
    if (orp === 364)
        return "-94.3799999999996%";
    if (orp === 365)
        return "-94.0499999999996%";
    if (orp === 366)
        return "-93.7199999999996%";
    if (orp === 367)
        return "-93.3899999999996%";
    if (orp === 368)
        return "-93.0599999999996%";
    if (orp === 369)
        return "-92.7299999999996%";
    if (orp === 370)
        return "-92.3999999999996%";
    if (orp === 371)
        return "-92.0699999999996%";
    if (orp === 372)
        return "-91.7399999999996%";
    if (orp === 373)
        return "-91.4099999999996%";
    if (orp === 374)
        return "-91.0799999999996%";
    if (orp === 375)
        return "-90.7499999999996%";
    if (orp === 376)
        return "-90.4199999999996%";
    if (orp === 377)
        return "-90.0899999999996%";
    if (orp === 378)
        return "-89.7599999999996%";
    if (orp === 379)
        return "-89.4299999999996%";
    if (orp === 380)
        return "-89.0999999999996%";
    if (orp === 381)
        return "-88.7699999999996%";
    if (orp === 382)
        return "-88.4399999999996%";
    if (orp === 383)
        return "-88.1099999999996%";
    if (orp === 384)
        return "-87.7799999999996%";
    if (orp === 385)
        return "-87.4499999999996%";
    if (orp === 386)
        return "-87.1199999999996%";
    if (orp === 387)
        return "-86.7899999999996%";
    if (orp === 388)
        return "-86.4599999999996%";
    if (orp === 389)
        return "-86.1299999999996%";
    if (orp === 390)
        return "-85.7999999999996%";
    if (orp === 391)
        return "-85.4699999999996%";
    if (orp === 392)
        return "-85.1399999999997%";
    if (orp === 393)
        return "-84.8099999999997%";
    if (orp === 394)
        return "-84.4799999999997%";
    if (orp === 395)
        return "-84.1499999999997%";
    if (orp === 396)
        return "-83.8199999999997%";
    if (orp === 397)
        return "-83.4899999999997%";
    if (orp === 398)
        return "-83.1599999999997%";
    if (orp === 399)
        return "-82.8299999999997%";
    if (orp === 400)
        return "-82.4999999999997%";
    if (orp === 401)
        return "-82.1699999999997%";
    if (orp === 402)
        return "-81.8399999999997%";
    if (orp === 403)
        return "-81.5099999999997%";
    if (orp === 404)
        return "-81.1799999999997%";
    if (orp === 405)
        return "-80.8499999999997%";
    if (orp === 406)
        return "-80.5199999999997%";
    if (orp === 407)
        return "-80.1899999999997%";
    if (orp === 408)
        return "-79.8599999999997%";
    if (orp === 409)
        return "-79.5299999999997%";
    if (orp === 410)
        return "-79.1999999999997%";
    if (orp === 411)
        return "-78.8699999999997%";
    if (orp === 412)
        return "-78.5399999999997%";
    if (orp === 413)
        return "-78.2099999999997%";
    if (orp === 414)
        return "-77.8799999999997%";
    if (orp === 415)
        return "-77.5499999999997%";
    if (orp === 416)
        return "-77.2199999999997%";
    if (orp === 417)
        return "-76.8899999999997%";
    if (orp === 418)
        return "-76.5599999999997%";
    if (orp === 419)
        return "-76.2299999999997%";
    if (orp === 420)
        return "-75.8999999999997%";
    if (orp === 421)
        return "-75.5699999999997%";
    if (orp === 422)
        return "-75.2399999999997%";
    if (orp === 423)
        return "-74.9099999999997%";
    if (orp === 424)
        return "-74.5799999999997%";
    if (orp === 425)
        return "-74.2499999999997%";
    if (orp === 426)
        return "-73.9199999999997%";
    if (orp === 427)
        return "-73.5899999999997%";
    if (orp === 428)
        return "-73.2599999999997%";
    if (orp === 429)
        return "-72.9299999999997%";
    if (orp === 430)
        return "-72.5999999999997%";
    if (orp === 431)
        return "-72.2699999999997%";
    if (orp === 432)
        return "-71.9399999999997%";
    if (orp === 433)
        return "-71.6099999999997%";
    if (orp === 434)
        return "-71.2799999999997%";
    if (orp === 435)
        return "-70.9499999999997%";
    if (orp === 436)
        return "-70.6199999999997%";
    if (orp === 437)
        return "-70.2899999999997%";
    if (orp === 438)
        return "-69.9599999999997%";
    if (orp === 439)
        return "-69.6299999999997%";
    if (orp === 440)
        return "-69.2999999999997%";
    if (orp === 441)
        return "-68.9699999999997%";
    if (orp === 442)
        return "-68.6399999999997%";
    if (orp === 443)
        return "-68.3099999999997%";
    if (orp === 444)
        return "-67.9799999999997%";
    if (orp === 445)
        return "-67.6499999999997%";
    if (orp === 446)
        return "-67.3199999999997%";
    if (orp === 447)
        return "-66.9899999999997%";
    if (orp === 448)
        return "-66.6599999999997%";
    if (orp === 449)
        return "-66.3299999999997%";
    if (orp === 450)
        return "-65.9999999999997%";
    if (orp === 451)
        return "-65.6699999999998%";
    if (orp === 452)
        return "-65.3399999999998%";
    if (orp === 453)
        return "-65.0099999999998%";
    if (orp === 454)
        return "-64.6799999999998%";
    if (orp === 455)
        return "-64.3499999999998%";
    if (orp === 456)
        return "-64.0199999999998%";
    if (orp === 457)
        return "-63.6899999999998%";
    if (orp === 458)
        return "-63.3599999999998%";
    if (orp === 459)
        return "-63.0299999999998%";
    if (orp === 460)
        return "-62.6999999999998%";
    if (orp === 461)
        return "-62.3699999999998%";
    if (orp === 462)
        return "-62.0399999999998%";
    if (orp === 463)
        return "-61.7099999999998%";
    if (orp === 464)
        return "-61.3799999999998%";
    if (orp === 465)
        return "-61.0499999999998%";
    if (orp === 466)
        return "-60.7199999999998%";
    if (orp === 467)
        return "-60.3899999999998%";
    if (orp === 468)
        return "-60.0599999999998%";
    if (orp === 469)
        return "-59.7299999999998%";
    if (orp === 470)
        return "-59.3999999999998%";
    if (orp === 471)
        return "-59.0699999999998%";
    if (orp === 472)
        return "-58.7399999999998%";
    if (orp === 473)
        return "-58.4099999999998%";
    if (orp === 474)
        return "-58.0799999999998%";
    if (orp === 475)
        return "-57.7499999999998%";
    if (orp === 476)
        return "-57.4199999999998%";
    if (orp === 477)
        return "-57.0899999999998%";
    if (orp === 478)
        return "-56.7599999999998%";
    if (orp === 479)
        return "-56.4299999999998%";
    if (orp === 480)
        return "-56.0999999999998%";
    if (orp === 481)
        return "-55.7699999999998%";
    if (orp === 482)
        return "-55.4399999999998%";
    if (orp === 483)
        return "-55.1099999999998%";
    if (orp === 484)
        return "-54.7799999999998%";
    if (orp === 485)
        return "-54.4499999999998%";
    if (orp === 486)
        return "-54.1199999999998%";
    if (orp === 487)
        return "-53.7899999999998%";
    if (orp === 488)
        return "-53.4599999999998%";
    if (orp === 489)
        return "-53.1299999999998%";
    if (orp === 490)
        return "-52.7999999999998%";
    if (orp === 491)
        return "-52.4699999999998%";
    if (orp === 492)
        return "-52.1399999999998%";
    if (orp === 493)
        return "-51.8099999999998%";
    if (orp === 494)
        return "-51.4799999999998%";
    if (orp === 495)
        return "-51.1499999999998%";
    if (orp === 496)
        return "-50.8199999999998%";
    if (orp === 497)
        return "-50.4899999999998%";
    if (orp === 498)
        return "-50.1599999999998%";
    if (orp === 499)
        return "-49.8299999999998%";
    if (orp === 500)
        return "-49.4999999999998%";
    if (orp === 501)
        return "-49.1699999999998%";
    if (orp === 502)
        return "-48.8399999999998%";
    if (orp === 503)
        return "-48.5099999999998%";
    if (orp === 504)
        return "-48.1799999999998%";
    if (orp === 505)
        return "-47.8499999999998%";
    if (orp === 506)
        return "-47.5199999999998%";
    if (orp === 507)
        return "-47.1899999999998%";
    if (orp === 508)
        return "-46.8599999999998%";
    if (orp === 509)
        return "-46.5299999999998%";
    if (orp === 510)
        return "-46.1999999999999%";
    if (orp === 511)
        return "-45.8699999999999%";
    if (orp === 512)
        return "-45.5399999999999%";
    if (orp === 513)
        return "-45.2099999999999%";
    if (orp === 514)
        return "-44.8799999999999%";
    if (orp === 515)
        return "-44.5499999999999%";
    if (orp === 516)
        return "-44.2199999999999%";
    if (orp === 517)
        return "-43.8899999999999%";
    if (orp === 518)
        return "-43.5599999999999%";
    if (orp === 519)
        return "-43.2299999999999%";
    if (orp === 520)
        return "-42.8999999999999%";
    if (orp === 521)
        return "-42.5699999999999%";
    if (orp === 522)
        return "-42.2399999999999%";
    if (orp === 523)
        return "-41.9099999999999%";
    if (orp === 524)
        return "-41.5799999999999%";
    if (orp === 525)
        return "-41.2499999999999%";
    if (orp === 526)
        return "-40.9199999999999%";
    if (orp === 527)
        return "-40.5899999999999%";
    if (orp === 528)
        return "-40.2599999999999%";
    if (orp === 529)
        return "-39.9299999999999%";
    if (orp === 530)
        return "-39.5999999999999%";
    if (orp === 531)
        return "-39.2699999999999%";
    if (orp === 532)
        return "-38.9399999999999%";
    if (orp === 533)
        return "-38.6099999999999%";
    if (orp === 534)
        return "-38.2799999999999%";
    if (orp === 535)
        return "-37.9499999999999%";
    if (orp === 536)
        return "-37.6199999999999%";
    if (orp === 537)
        return "-37.2899999999999%";
    if (orp === 538)
        return "-36.9599999999999%";
    if (orp === 539)
        return "-36.6299999999999%";
    if (orp === 540)
        return "-36.2999999999999%";
    if (orp === 541)
        return "-35.9699999999999%";
    if (orp === 542)
        return "-35.6399999999999%";
    if (orp === 543)
        return "-35.3099999999999%";
    if (orp === 544)
        return "-34.9799999999999%";
    if (orp === 545)
        return "-34.6499999999999%";
    if (orp === 546)
        return "-34.3199999999999%";
    if (orp === 547)
        return "-33.9899999999999%";
    if (orp === 548)
        return "-33.6599999999999%";
    if (orp === 549)
        return "-33.3299999999999%";
    if (orp === 550)
        return "-32.9999999999999%";
    if (orp === 551)
        return "-32.6699999999999%";
    if (orp === 552)
        return "-32.3399999999999%";
    if (orp === 553)
        return "-32.0099999999999%";
    if (orp === 554)
        return "-31.6799999999999%";
    if (orp === 555)
        return "-31.3499999999999%";
    if (orp === 556)
        return "-31.0199999999999%";
    if (orp === 557)
        return "-30.6899999999999%";
    if (orp === 558)
        return "-30.3599999999999%";
    if (orp === 559)
        return "-30.0299999999999%";
    if (orp === 560)
        return "-29.6999999999999%";
    if (orp === 561)
        return "-29.3699999999999%";
    if (orp === 562)
        return "-29.0399999999999%";
    if (orp === 563)
        return "-28.7099999999999%";
    if (orp === 564)
        return "-28.3799999999999%";
    if (orp === 565)
        return "-28.0499999999999%";
    if (orp === 566)
        return "-27.7199999999999%";
    if (orp === 567)
        return "-27.3899999999999%";
    if (orp === 568)
        return "-27.0599999999999%";
    if (orp === 569)
        return "-26.7299999999999%";
    if (orp === 570)
        return "-26.4%";
    if (orp === 571)
        return "-26.07%";
    if (orp === 572)
        return "-25.74%";
    if (orp === 573)
        return "-25.41%";
    if (orp === 574)
        return "-25.08%";
    if (orp === 575)
        return "-24.75%";
    if (orp === 576)
        return "-24.42%";
    if (orp === 577)
        return "-24.09%";
    if (orp === 578)
        return "-23.76%";
    if (orp === 579)
        return "-23.43%";
    if (orp === 580)
        return "-23.1%";
    if (orp === 581)
        return "-22.77%";
    if (orp === 582)
        return "-22.44%";
    if (orp === 583)
        return "-22.11%";
    if (orp === 584)
        return "-21.78%";
    if (orp === 585)
        return "-21.45%";
    if (orp === 586)
        return "-21.12%";
    if (orp === 587)
        return "-20.79%";
    if (orp === 588)
        return "-20.46%";
    if (orp === 589)
        return "-20.13%";
    if (orp === 590)
        return "-19.8%";
    if (orp === 591)
        return "-19.47%";
    if (orp === 592)
        return "-19.14%";
    if (orp === 593)
        return "-18.81%";
    if (orp === 594)
        return "-18.48%";
    if (orp === 595)
        return "-18.15%";
    if (orp === 596)
        return "-17.82%";
    if (orp === 597)
        return "-17.49%";
    if (orp === 598)
        return "-17.16%";
    if (orp === 599)
        return "-16.83%";
    if (orp === 600)
        return "-16.5%";
    if (orp === 601)
        return "-16.17%";
    if (orp === 602)
        return "-15.84%";
    if (orp === 603)
        return "-15.51%";
    if (orp === 604)
        return "-15.18%";
    if (orp === 605)
        return "-14.85%";
    if (orp === 606)
        return "-14.52%";
    if (orp === 607)
        return "-14.19%";
    if (orp === 608)
        return "-13.86%";
    if (orp === 609)
        return "-13.53%";
    if (orp === 610)
        return "-13.2%";
    if (orp === 611)
        return "-12.87%";
    if (orp === 612)
        return "-12.54%";
    if (orp === 613)
        return "-12.21%";
    if (orp === 614)
        return "-11.88%";
    if (orp === 615)
        return "-11.55%";
    if (orp === 616)
        return "-11.22%";
    if (orp === 617)
        return "-10.89%";
    if (orp === 618)
        return "-10.56%";
    if (orp === 619)
        return "-10.23%";
    if (orp === 620)
        return "-9.9%";
    if (orp === 621)
        return "-9.57%";
    if (orp === 622)
        return "-9.24%";
    if (orp === 623)
        return "-8.91%";
    if (orp === 624)
        return "-8.58%";
    if (orp === 625)
        return "-8.25%";
    if (orp === 626)
        return "-7.92%";
    if (orp === 627)
        return "-7.59%";
    if (orp === 628)
        return "-7.26%";
    if (orp === 629)
        return "-6.93%";
    if (orp === 630)
        return "-6.6%";
    if (orp === 631)
        return "-6.27%";
    if (orp === 632)
        return "-5.94%";
    if (orp === 633)
        return "-5.61%";
    if (orp === 634)
        return "-5.28%";
    if (orp === 635)
        return "-4.95%";
    if (orp === 636)
        return "-4.62%";
    if (orp === 637)
        return "-4.29%";
    if (orp === 638)
        return "-3.96%";
    if (orp === 639)
        return "-3.63%";
    if (orp === 640)
        return "-3.3%";
    if (orp === 641)
        return "-2.97%";
    if (orp === 642)
        return "-2.64%";
    if (orp === 643)
        return "-2.31%";
    if (orp === 644)
        return "-1.98%";
    if (orp === 645)
        return "-1.65%";
    if (orp === 646)
        return "-1.32%";
    if (orp === 647)
        return "-0.99%";
    if (orp === 648)
        return "-0.66%";
    if (orp === 649)
        return "-0.33%";
    if (orp === 650)
        return "0%";
    if (orp === 651)
        return "0.33%";
    if (orp === 652)
        return "0.66%";
    if (orp === 653)
        return "0.99%";
    if (orp === 654)
        return "1.32%";
    if (orp === 655)
        return "1.65%";
    if (orp === 656)
        return "1.98%";
    if (orp === 657)
        return "2.31%";
    if (orp === 658)
        return "2.64%";
    if (orp === 659)
        return "2.97%";
    if (orp === 660)
        return "3.3%";
    if (orp === 661)
        return "3.63%";
    if (orp === 662)
        return "3.96%";
    if (orp === 663)
        return "4.29%";
    if (orp === 664)
        return "4.62%";
    if (orp === 665)
        return "4.95%";
    if (orp === 666)
        return "5.28%";
    if (orp === 667)
        return "5.61%";
    if (orp === 668)
        return "5.94%";
    if (orp === 669)
        return "6.27%";
    if (orp === 670)
        return "6.6%";
    if (orp === 671)
        return "6.93%";
    if (orp === 672)
        return "7.26%";
    if (orp === 673)
        return "7.59%";
    if (orp === 674)
        return "7.92%";
    if (orp === 675)
        return "8.25%";
    if (orp === 676)
        return "8.58%";
    if (orp === 677)
        return "8.91%";
    if (orp === 678)
        return "9.24%";
    if (orp === 679)
        return "9.57%";
    if (orp === 680)
        return "9.9%";
    if (orp === 681)
        return "10.23%";
    if (orp === 682)
        return "10.56%";
    if (orp === 683)
        return "10.89%";
    if (orp === 684)
        return "11.22%";
    if (orp === 685)
        return "11.55%";
    if (orp === 686)
        return "11.88%";
    if (orp === 687)
        return "12.21%";
    if (orp === 688)
        return "12.54%";
    if (orp === 689)
        return "12.87%";
    if (orp === 690)
        return "13.2%";
    if (orp === 691)
        return "13.53%";
    if (orp === 692)
        return "13.86%";
    if (orp === 693)
        return "14.19%";
    if (orp === 694)
        return "14.52%";
    if (orp === 695)
        return "14.85%";
    if (orp === 696)
        return "15.18%";
    if (orp === 697)
        return "15.51%";
    if (orp === 698)
        return "15.84%";
    if (orp === 699)
        return "16.17%";
    if (orp === 700)
        return "16.5%";
    if (orp === 701)
        return "16.83%";
    if (orp === 702)
        return "17.16%";
    if (orp === 703)
        return "17.49%";
    if (orp === 704)
        return "17.82%";
    if (orp === 705)
        return "18.15%";
    if (orp === 706)
        return "18.48%";
    if (orp === 707)
        return "18.81%";
    if (orp === 708)
        return "19.14%";
    if (orp === 709)
        return "19.47%";
    if (orp === 710)
        return "19.8%";
    if (orp === 711)
        return "20.13%";
    if (orp === 712)
        return "20.46%";
    if (orp === 713)
        return "20.79%";
    if (orp === 714)
        return "21.12%";
    if (orp === 715)
        return "21.45%";
    if (orp === 716)
        return "21.78%";
    if (orp === 717)
        return "22.11%";
    if (orp === 718)
        return "22.44%";
    if (orp === 719)
        return "22.77%";
    if (orp === 720)
        return "23.1%";
    if (orp === 721)
        return "23.43%";
    if (orp === 722)
        return "23.76%";
    if (orp === 723)
        return "24.09%";
    if (orp === 724)
        return "24.42%";
    if (orp === 725)
        return "24.75%";
    if (orp === 726)
        return "25.08%";
    if (orp === 727)
        return "25.41%";
    if (orp === 728)
        return "25.74%";
    if (orp === 729)
        return "26.07%";
    if (orp === 730)
        return "26.4%";
    if (orp === 731)
        return "26.7299999999999%";
    if (orp === 732)
        return "27.0599999999999%";
    if (orp === 733)
        return "27.3899999999999%";
    if (orp === 734)
        return "27.7199999999999%";
    if (orp === 735)
        return "28.0499999999999%";
    if (orp === 736)
        return "28.3799999999999%";
    if (orp === 737)
        return "28.7099999999999%";
    if (orp === 738)
        return "29.0399999999999%";
    if (orp === 739)
        return "29.3699999999999%";
    if (orp === 740)
        return "29.6999999999999%";
    if (orp === 741)
        return "30.0299999999999%";
    if (orp === 742)
        return "30.3599999999999%";
    if (orp === 743)
        return "30.6899999999999%";
    if (orp === 744)
        return "31.0199999999999%";
    if (orp === 745)
        return "31.3499999999999%";
    if (orp === 746)
        return "31.6799999999999%";
    if (orp === 747)
        return "32.0099999999999%";
    if (orp === 748)
        return "32.3399999999999%";
    if (orp === 749)
        return "32.6699999999999%";
    if (orp === 750)
        return "32.9999999999999%";
    if (orp === 751)
        return "33.3299999999999%";
    if (orp === 752)
        return "33.6599999999999%";
    if (orp === 753)
        return "33.9899999999999%";
    if (orp === 754)
        return "34.3199999999999%";
    if (orp === 755)
        return "34.6499999999999%";
    if (orp === 756)
        return "34.9799999999999%";
    if (orp === 757)
        return "35.3099999999999%";
    if (orp === 758)
        return "35.6399999999999%";
    if (orp === 759)
        return "35.9699999999999%";
    if (orp === 760)
        return "36.2999999999999%";
    if (orp === 761)
        return "36.6299999999999%";
    if (orp === 762)
        return "36.9599999999999%";
    if (orp === 763)
        return "37.2899999999999%";
    if (orp === 764)
        return "37.6199999999999%";
    if (orp === 765)
        return "37.9499999999999%";
    if (orp === 766)
        return "38.2799999999999%";
    if (orp === 767)
        return "38.6099999999999%";
    if (orp === 768)
        return "38.9399999999999%";
    if (orp === 769)
        return "39.2699999999999%";
    if (orp === 770)
        return "39.5999999999999%";
    if (orp === 771)
        return "39.9299999999999%";
    if (orp === 772)
        return "40.2599999999999%";
    if (orp === 773)
        return "40.5899999999999%";
    if (orp === 774)
        return "40.9199999999999%";
    if (orp === 775)
        return "41.2499999999999%";
    if (orp === 776)
        return "41.5799999999999%";
    if (orp === 777)
        return "41.9099999999999%";
    if (orp === 778)
        return "42.2399999999999%";
    if (orp === 779)
        return "42.5699999999999%";
    if (orp === 780)
        return "42.8999999999999%";
    if (orp === 781)
        return "43.2299999999999%";
    if (orp === 782)
        return "43.5599999999999%";
    if (orp === 783)
        return "43.8899999999999%";
    if (orp === 784)
        return "44.2199999999999%";
    if (orp === 785)
        return "44.5499999999999%";
    if (orp === 786)
        return "44.8799999999999%";
    if (orp === 787)
        return "45.2099999999999%";
    if (orp === 788)
        return "45.5399999999999%";
    if (orp === 789)
        return "45.8699999999999%";
    if (orp === 790)
        return "46.1999999999999%";
    if (orp === 791)
        return "46.5299999999998%";
    if (orp === 792)
        return "46.8599999999998%";
    if (orp === 793)
        return "47.1899999999998%";
    if (orp === 794)
        return "47.5199999999998%";
    if (orp === 795)
        return "47.8499999999998%";
    if (orp === 796)
        return "48.1799999999998%";
    if (orp === 797)
        return "48.5099999999998%";
    if (orp === 798)
        return "48.8399999999998%";
    if (orp === 799)
        return "49.1699999999998%";
    if (orp === 800)
        return "49.4999999999998%";
    if (orp === 801)
        return "49.8299999999998%";
    if (orp === 802)
        return "50.1599999999998%";
    if (orp === 803)
        return "50.4899999999998%";
    if (orp === 804)
        return "50.8199999999998%";
    if (orp === 805)
        return "51.1499999999998%";
    if (orp === 806)
        return "51.4799999999998%";
    if (orp === 807)
        return "51.8099999999998%";
    if (orp === 808)
        return "52.1399999999998%";
    if (orp === 809)
        return "52.4699999999998%";
    if (orp === 810)
        return "52.7999999999998%";
    if (orp === 811)
        return "53.1299999999998%";
    if (orp === 812)
        return "53.4599999999998%";
    if (orp === 813)
        return "53.7899999999998%";
    if (orp === 814)
        return "54.1199999999998%";
    if (orp === 815)
        return "54.4499999999998%";
    if (orp === 816)
        return "54.7799999999998%";
    if (orp === 817)
        return "55.1099999999998%";
    if (orp === 818)
        return "55.4399999999998%";
    if (orp === 819)
        return "55.7699999999998%";
    if (orp === 820)
        return "56.0999999999998%";
    if (orp === 821)
        return "56.4299999999998%";
    if (orp === 822)
        return "56.7599999999998%";
    if (orp === 823)
        return "57.0899999999998%";
    if (orp === 824)
        return "57.4199999999998%";
    if (orp === 825)
        return "57.7499999999998%";
    if (orp === 826)
        return "58.0799999999998%";
    if (orp === 827)
        return "58.4099999999998%";
    if (orp === 828)
        return "58.7399999999998%";
    if (orp === 829)
        return "59.0699999999998%";
    if (orp === 830)
        return "59.3999999999998%";
    if (orp === 831)
        return "59.7299999999998%";
    if (orp === 832)
        return "60.0599999999998%";
    if (orp === 833)
        return "60.3899999999998%";
    if (orp === 834)
        return "60.7199999999998%";
    if (orp === 835)
        return "61.0499999999998%";
    if (orp === 836)
        return "61.3799999999998%";
    if (orp === 837)
        return "61.7099999999998%";
    if (orp === 838)
        return "62.0399999999998%";
    if (orp === 839)
        return "62.3699999999998%";
    if (orp === 840)
        return "62.6999999999998%";
    if (orp === 841)
        return "63.0299999999998%";
    if (orp === 842)
        return "63.3599999999998%";
    if (orp === 843)
        return "63.6899999999998%";
    if (orp === 844)
        return "64.0199999999998%";
    if (orp === 845)
        return "64.3499999999998%";
    if (orp === 846)
        return "64.6799999999998%";
    if (orp === 847)
        return "65.0099999999998%";
    if (orp === 848)
        return "65.3399999999998%";
    if (orp === 849)
        return "65.6699999999998%";
    if (orp === 850)
        return "65.9999999999997%";
    if (orp === 851)
        return "66.3299999999997%";
    if (orp === 852)
        return "66.6599999999997%";
    if (orp === 853)
        return "66.9899999999997%";
    if (orp === 854)
        return "67.3199999999997%";
    if (orp === 855)
        return "67.6499999999997%";
    if (orp === 856)
        return "67.9799999999997%";
    if (orp === 857)
        return "68.3099999999997%";
    if (orp === 858)
        return "68.6399999999997%";
    if (orp === 859)
        return "68.9699999999997%";
    if (orp === 860)
        return "69.2999999999997%";
    if (orp === 861)
        return "69.6299999999997%";
    if (orp === 862)
        return "69.9599999999997%";
    if (orp === 863)
        return "70.2899999999997%";
    if (orp === 864)
        return "70.6199999999997%";
    if (orp === 865)
        return "70.9499999999997%";
    if (orp === 866)
        return "71.2799999999997%";
    if (orp === 867)
        return "71.6099999999997%";
    if (orp === 868)
        return "71.9399999999997%";
    if (orp === 869)
        return "72.2699999999997%";
    if (orp === 870)
        return "72.5999999999997%";
    if (orp === 871)
        return "72.9299999999997%";
    if (orp === 872)
        return "73.2599999999997%";
    if (orp === 873)
        return "73.5899999999997%";
    if (orp === 874)
        return "73.9199999999997%";
    if (orp === 875)
        return "74.2499999999997%";
    if (orp === 876)
        return "74.5799999999997%";
    if (orp === 877)
        return "74.9099999999997%";
    if (orp === 878)
        return "75.2399999999997%";
    if (orp === 879)
        return "75.5699999999997%";
    if (orp === 880)
        return "75.8999999999997%";
    if (orp === 881)
        return "76.2299999999997%";
    if (orp === 882)
        return "76.5599999999997%";
    if (orp === 883)
        return "76.8899999999997%";
    if (orp === 884)
        return "77.2199999999997%";
    if (orp === 885)
        return "77.5499999999997%";
    if (orp === 886)
        return "77.8799999999997%";
    if (orp === 887)
        return "78.2099999999997%";
    if (orp === 888)
        return "78.5399999999997%";
    if (orp === 889)
        return "78.8699999999997%";
    if (orp === 890)
        return "79.1999999999997%";
    if (orp === 891)
        return "79.5299999999997%";
    if (orp === 892)
        return "79.8599999999997%";
    if (orp === 893)
        return "80.1899999999997%";
    if (orp === 894)
        return "80.5199999999997%";
    if (orp === 895)
        return "80.8499999999997%";
    if (orp === 896)
        return "81.1799999999997%";
    if (orp === 897)
        return "81.5099999999997%";
    if (orp === 898)
        return "81.8399999999997%";
    if (orp === 899)
        return "82.1699999999997%";
    if (orp === 900)
        return "82.4999999999997%";
    if (orp === 901)
        return "82.8299999999997%";
    if (orp === 902)
        return "83.1599999999997%";
    if (orp === 903)
        return "83.4899999999997%";
    if (orp === 904)
        return "83.8199999999997%";
    if (orp === 905)
        return "84.1499999999997%";
    if (orp === 906)
        return "84.4799999999997%";
    if (orp === 907)
        return "84.8099999999997%";
    if (orp === 908)
        return "85.1399999999997%";
    if (orp === 909)
        return "85.4699999999996%";
    if (orp === 910)
        return "85.7999999999996%";
    if (orp === 911)
        return "86.1299999999996%";
    if (orp === 912)
        return "86.4599999999996%";
    if (orp === 913)
        return "86.7899999999996%";
    if (orp === 914)
        return "87.1199999999996%";
    if (orp === 915)
        return "87.4499999999996%";
    if (orp === 916)
        return "87.7799999999996%";
    if (orp === 917)
        return "88.1099999999996%";
    if (orp === 918)
        return "88.4399999999996%";
    if (orp === 919)
        return "88.7699999999996%";
    if (orp === 920)
        return "89.0999999999996%";
    if (orp === 921)
        return "89.4299999999996%";
    if (orp === 922)
        return "89.7599999999996%";
    if (orp === 923)
        return "90.0899999999996%";
    if (orp === 924)
        return "90.4199999999996%";
    if (orp === 925)
        return "90.7499999999996%";
    if (orp === 926)
        return "91.0799999999996%";
    if (orp === 927)
        return "91.4099999999996%";
    if (orp === 928)
        return "91.7399999999996%";
    if (orp === 929)
        return "92.0699999999996%";
    if (orp === 930)
        return "92.3999999999996%";
    if (orp === 931)
        return "92.7299999999996%";
    if (orp === 932)
        return "93.0599999999996%";
    if (orp === 933)
        return "93.3899999999996%";
    if (orp === 934)
        return "93.7199999999996%";
    if (orp === 935)
        return "94.0499999999996%";
    if (orp === 936)
        return "94.3799999999996%";
    if (orp === 937)
        return "94.7099999999996%";
    if (orp === 938)
        return "95.0399999999996%";
    if (orp === 939)
        return "95.3699999999996%";
    if (orp === 940)
        return "95.6999999999996%";
    if (orp === 941)
        return "96.0299999999996%";
    if (orp === 942)
        return "96.3599999999996%";
    if (orp === 943)
        return "96.6899999999996%";
    if (orp === 944)
        return "97.0199999999996%";
    if (orp === 945)
        return "97.3499999999996%";
    if (orp === 946)
        return "97.6799999999996%";
    if (orp === 947)
        return "98.0099999999996%";
    if (orp === 948)
        return "98.3399999999996%";
    if (orp === 949)
        return "98.6699999999996%";
    if (orp >= 950)
        return "98.9999999999996%";

}function update_vigipool_modal_ph() {

    // console.log("///// update_vigipool_modal_ph /////");

    // Variables

    var mode_ph = get_value_from_position(eq_modal, "mode_ph");
    var vol_max_24h = get_value_from_position(eq_modal, "vol_max_24h");
    var vol_bac = get_value_from_position(eq_modal, "vol_bac");

    // Logs

    // console.log("mode_ph = " + mode_ph);
    // console.log("vol_max_24h = " + vol_max_24h);
    // console.log("vol_bac = " + vol_bac);

    // Init

    for (var i = 0; i < 2; i++) {
        for (var j = 0; j < 9; j++) {
            $(`.vigipool_modal_source_ph_${i}_${j}0`).removeClass("btn-primary");
        }
    }

    // Check

    const variables = [mode_ph, vol_max_24h, vol_bac];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    if (mode_ph === 0) {
        $(".vigipool_modal_source_ph_ph_m").addClass("btn-primary");
        $(".vigipool_modal_source_ph_ph_p").removeClass("btn-primary");
    } else if (mode_ph === 1) {
        $(".vigipool_modal_source_ph_ph_m").removeClass("btn-primary");
        $(".vigipool_modal_source_ph_ph_p").addClass("btn-primary");
    }

    var to_ui = vol_max_24h_to_ui(vol_max_24h);
    $(`.vigipool_modal_source_ph_${to_ui}`).addClass("btn-primary");

    // vol_bac

    // console.log("vol_bac = " + vol_bac);

    for (var i = 0; i < 50; i++) {
        $(`.vigipool_modal_source_ph_${i}`).removeClass("btn-primary");
    }

    var to_ui = parseInt(vol_bac / 100);
    $(`.vigipool_modal_source_ph_${to_ui}`).addClass("btn-primary");

}function update_vigipool_modal_orp() {

    // console.log("////////// update_vigipool_modal_orp //////////");

    // Variables

    var vol_max_24h = get_value_from_position(eq_modal, "vol_max_24h");

    // Logs

    // console.log("vol_max_24h = " + vol_max_24h);

    // Check

    const variables = [vol_max_24h];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display
    

    for (var i = 0; i < 2; i++) {
        for (var j = 0; j < 9; j++) {
            $(`.vigipool_modal_source_orp_${i}_${j}0`).removeClass("btn-primary");
        }
    }

    var to_ui = vol_max_24h_to_ui(vol_max_24h);
    $(`.vigipool_modal_source_orp_${to_ui}`).addClass("btn-primary");

    // vol_bac

    var vol_bac = get_value_from_position(eq_modal, "vol_bac");
    // console.log("vol_bac = " + vol_bac);

    for (var i = 0; i < 50; i++) {
        $(`.vigipool_modal_source_orp_${i}`).removeClass("btn-primary");
    }

    var to_ui = parseInt(vol_bac / 100);
    $(`.vigipool_modal_source_orp_${to_ui}`).addClass("btn-primary");

}$(".vigipool_ui_prod_on_label > p").html(get_text("electrolyse"));
$(".vigipool_ui_prod_chlore_label > p").html(get_text("chlorine_prod"));

function update_vigipool_ui_ely_state() {

    var max_devices = $(".vigipool_ipaddr").length;

    $(".vigipool_ui_couv_on_label > p").html(get_text("cover"));
    $(".vigipool_ui_cell_flow_label > p").html(get_text("cell_flow"));

    for (var i = 0, max = max_devices; i < max; i++) {

        // On Off
        var flow_on = parseInt(get_value_from_eq(i, "flow_on", "zelix"));
        // console.log("flow_on = " + flow_on);
        switch (flow_on) {
            case 0:
                $(".vigipool_ui_prod_on_state > p").eq(i).html("Off");
                break;
            case 1:
                $(".vigipool_ui_prod_on_state > p").eq(i).html("On");
                break;
        }

        // Mod
        var mode_ely = get_value_from_position(i, "mode_ely");
        switch (mode_ely) {
            case 0:
                $(".vigipool_ui_mode_ely_state > p").eq(i).html("OFF");
                break;
            case 1:
                $(".vigipool_ui_mode_ely_state > p").eq(i).html("PROG");
                break;
            case 2:
                $(".vigipool_ui_mode_ely_state > p").eq(i).html("AUTO");
                break;
            case 3:
                $(".vigipool_ui_mode_ely_state > p").eq(i).html("REGU");
                break;
        }

        // Prod Chlore
        var prod_chlore = get_value_from_position(i, "prod_chlore");
        $(".vigipool_ui_prod_chlore_state > p").eq(i).html(prod_chlore + " g/h");

        // Flux Celulle
        var flow_on = get_value_from_position(i, "flow_on");
        switch (flow_on) {
            case 0:
                $(".vigipool_ui_cell_flow_state > p").eq(i).html("⬤ " + binary_to_off_on(flow_on));
                break;
            case 1:
                $(".vigipool_ui_cell_flow_state > p").eq(i).html("<p style=\"color:#085a7d\">" + "⬤ " + binary_to_off_on(flow_on) + "</p>");
                break;
            default:
                break;
        }

        // Couverture
        var couv_on = get_value_from_position(i, "couv_on");
        switch (couv_on) {
            case 0:
                $(".vigipool_ui_couv_on_state > p").eq(i).html("⬤ " + binary_to_open_close(couv_on));
                break;
            case 1:
                $(".vigipool_ui_couv_on_state > p").eq(i).html("<p style=\"color:#085a7d\">" + "⬤ " + binary_to_open_close(couv_on) + "</p>");
                break;
            default:
                break;
        }

        // Display
        var device_id = get_value_from_position(i, "device_id");
        var ipaddr = get_value_from_position(i, "ipaddr");
        // console.log("device_id = " + device_id);
        // console.log("ipaddr = " + ipaddr);

        if (flow_on === undefined || !is_zelix(i)) {
            $(".vigipool_ui_prod_on_label").eq(i).hide();
            $(".vigipool_ui_prod_on_state").eq(i).hide();
        } else {
            $(".vigipool_ui_prod_on_label").eq(i).show();
            $(".vigipool_ui_prod_on_state").eq(i).show();
        }
        if (mode_ely === undefined || !is_zelix(i)) {
            $(".vigipool_ui_mode_ely_label").eq(i).hide();
            $(".vigipool_ui_mode_ely_state").eq(i).hide();
        } else {
            $(".vigipool_ui_mode_ely_label").eq(i).show();
            $(".vigipool_ui_mode_ely_state").eq(i).show();
        }
        if (prod_chlore === undefined || !is_zelix(i)) {
            $(".vigipool_ui_prod_chlore_label").eq(i).hide();
            $(".vigipool_ui_prod_chlore_state").eq(i).hide();
        } else {
            $(".vigipool_ui_prod_chlore_label").eq(i).show();
            $(".vigipool_ui_prod_chlore_state").eq(i).show();
        }
        if (prod_chlore === undefined || !is_zelix(i)) {
            $(".vigipool_ui_prod_chlore_label").eq(i).hide();
            $(".vigipool_ui_prod_chlore_state").eq(i).hide();
            $(".vigipool_ui_cell_flow_label").eq(i).hide();
            $(".vigipool_ui_cell_flow_state").eq(i).hide();
        } else {
            $(".vigipool_ui_prod_chlore_label").eq(i).show();
            $(".vigipool_ui_prod_chlore_state").eq(i).show();
            $(".vigipool_ui_cell_flow_label").eq(i).show();
            $(".vigipool_ui_cell_flow_state").eq(i).show();
        }
        if (couv_on === undefined || !is_zelix(i)) {
            $(".vigipool_ui_couv_on_label").eq(i).hide();
            $(".vigipool_ui_couv_on_state").eq(i).hide();
        } else {
            $(".vigipool_ui_couv_on_label").eq(i).show();
            $(".vigipool_ui_couv_on_state").eq(i).show();
        }

    }
}function update_vigipool_modal_ely() {

    // console.log("///// update_vigipool_modal_ely /////");

    // Variables

    var mode_ely = get_value_from_position(eq_modal, "mode_ely");
    var mode_choc = get_value_from_position(eq_modal, "mode_choc");
    var prod_on = get_value_from_position(eq_modal, "prod_on");
    var prod_chlore = get_value_from_position(eq_modal, "prod_chlore");
    var power_ely = get_value_from_position(eq_modal, "power_ely");
    var value_temp = get_value_from_position(eq_modal, "value_temp");
    var value_temp_int = get_value_from_position(eq_modal, "value_temp_int");
    var temp_min_off_ely = get_value_from_position(eq_modal, "temp_min_off_ely");
    var water_hardness = get_value_from_position(eq_modal, "water_hardness");
    var ely_duration_theo = get_value_from_position(eq_modal, "ely_duration_theo");
    var consigne_orp = get_value_from_position(eq_modal, "consigne_orp");
    var choc_duration = get_value_from_position(eq_modal, "choc_duration");
    var voltage_ely = get_value_from_position(eq_modal, "voltage_ely");
    var current_ely = get_value_from_position(eq_modal, "current_ely");

    // Logs

    // console.log("mode_ely = " + mode_ely);
    // console.log("mode_choc = " + mode_choc);
    // console.log("prod_on = " + prod_on);
    // console.log("prod_chlore = " + prod_chlore);
    // console.log("power_ely = " + power_ely);
    // console.log("value_temp = " + value_temp);
    // console.log("value_temp_int = " + value_temp_int);
    // console.log("temp_min_off_ely = " + temp_min_off_ely);
    // console.log("water_hardness = " + water_hardness);
    // console.log("ely_duration_theo = " + ely_duration_theo);
    // console.log("consigne_orp = " + consigne_orp);
    // console.log("choc_duration = " + choc_duration);
    // console.log("voltage_ely = " + voltage_ely);
    // console.log("current_ely = " + current_ely);

    // Check
    
    const variables = [mode_ely, mode_choc, prod_on, prod_chlore, power_ely, value_temp, value_temp_int, temp_min_off_ely, water_hardness, ely_duration_theo, consigne_orp, choc_duration, voltage_ely, current_ely];

    if (variable_check(variables)) {
        // console.log("go");
    } else {
        // console.log("no go");
        return;
    }

    // Display

    // mode_ely & mode_choc

    $(".vigipool_modal_ely_mode_off").removeClass("btn-primary");
    $(".vigipool_modal_ely_mode_programmed").removeClass("btn-primary");
    $(".vigipool_modal_ely_mode_auto").removeClass("btn-primary");
    $(".vigipool_modal_ely_mode_regulated").removeClass("btn-primary");

    switch (mode_ely) {
        case 0:
            $(".vigipool_modal_ely_mode_off").addClass("btn-primary");
            $(".vigipool_modal_ely_slider_power_ely").hide();
            $(".vigipool_modal_ely_slider_ely_duration_theo").hide();
            $(".vigipool_modal_ely_slider_consigne_orp").hide();
            $(".vigipool_modal_ely_slider_choc_duration").hide();
            break;
        case 1:
            $(".vigipool_modal_ely_mode_programmed").addClass("btn-primary");
            $(".vigipool_modal_ely_slider_power_ely").show();
            $(".vigipool_modal_ely_slider_ely_duration_theo").show();
            $(".vigipool_modal_ely_slider_consigne_orp").hide();
            $(".vigipool_modal_ely_slider_choc_duration").hide();
            break;
        case 2:
            $(".vigipool_modal_ely_mode_auto").addClass("btn-primary");
            $(".vigipool_modal_ely_slider_power_ely").show();
            $(".vigipool_modal_ely_slider_ely_duration_theo").show();
            $(".vigipool_modal_ely_slider_consigne_orp").hide();
            $(".vigipool_modal_ely_slider_choc_duration").hide();
            break;
        case 3:
            $(".vigipool_modal_ely_mode_regulated").addClass("btn-primary");
            $(".vigipool_modal_ely_slider_power_ely").show();
            $(".vigipool_modal_ely_slider_ely_duration_theo").hide();
            $(".vigipool_modal_ely_slider_consigne_orp").show();
            $(".vigipool_modal_ely_slider_choc_duration").hide();
            break;
    }

    switch (mode_choc) {
        case 0:
            $(".vigipool_modal_ely_mode_shock").removeClass("btn-primary");
            break;
        case 1:
            $(".vigipool_modal_ely_mode_off").removeClass("btn-primary");
            $(".vigipool_modal_ely_mode_programmed").removeClass("btn-primary");
            $(".vigipool_modal_ely_mode_auto").removeClass("btn-primary");
            $(".vigipool_modal_ely_mode_regulated").removeClass("btn-primary");
            $(".vigipool_modal_ely_mode_shock").addClass("btn-primary");
            $(".vigipool_modal_ely_slider_power_ely").hide();
            $(".vigipool_modal_ely_slider_ely_duration_theo").hide();
            $(".vigipool_modal_ely_slider_consigne_orp").hide();
            $(".vigipool_modal_ely_slider_choc_duration").show();
            break;
    }

    // ely_duration_theo

    link_variable_to_buttons(ely_duration_theo, "vigipool_modal_ely_daily_production_duration_", 0, 24);

    // power_ely
    var slider = document.getElementById("mypower_ely");
    if (slider !== undefined && slider !== null) {

        var power = $("#power_ely").html();
        power = power.replaceAll(" ", "");
        power = power.replaceAll("%", "");
        if (power <= 100) {
            $("#md_modal > div > p:nth-child(18)").hide();
        } else {
            $("#md_modal > div > p:nth-child(18)").show();
        }

        slider.onmousemove = function () {
            var power = $("#power_ely").html();
            power = power.replaceAll(" ", "");
            power = power.replaceAll("%", "");
            if (power <= 100) {
                $("#md_modal > div > p:nth-child(18)").hide();
            } else {
                $("#md_modal > div > p:nth-child(18)").show();
            }
        };
    }

    // prod_chlore
    $(".vigipool_modal_ely_instant_chlorine_prod").html(prod_chlore + " g/h");

    // value_temp
    $(".vigipool_modal_ely_temperature").html(value_temp + " °C");

    // temp_min_off_ely
    link_variable_to_buttons(temp_min_off_ely, "vigipool_modal_ely_temp_min_off_ely_", 10, 20);

    // prod_on
    if (prod_on === 0)
        $(".vigipool_modal_ely_chlorine_prod").html(get_text("stopped"));
    if (prod_on === 1)
        $(".vigipool_modal_ely_chlorine_prod").html(get_text("on"));

    // water_hardness
    var slider = document.getElementById("mywater_hardness");
    if (slider !== undefined && slider !== null) {

        var mywater_hardness = parseInt($("#water_hardness").html());
        switch (mywater_hardness) {
            case 0:
                $("#water_hardness").html(get_text("very_soft"));
                break;
            case 1:
                $("#water_hardness").html(get_text("soft"));
                break;
            case 2:
                $("#water_hardness").html(get_text("slightly_soft"));
                break;
            case 3:
                $("#water_hardness").html(get_text("slightly_hard"));
                break;
            case 4:
                $("#water_hardness").html(get_text("hard"));
                break;
            case 5:
                $("#water_hardness").html(get_text("very_hard"));
                break;
        }

        slider.onmousemove = function () {
            var mywater_hardness = parseInt($("#water_hardness").html());
            switch (mywater_hardness) {
                case 0:
                    $("#water_hardness").html(get_text("very_soft"));
                    break;
                case 1:
                    $("#water_hardness").html(get_text("soft"));
                    break;
                case 2:
                    $("#water_hardness").html(get_text("slightly_soft"));
                    break;
                case 3:
                    $("#water_hardness").html(get_text("slightly_hard"));
                    break;
                case 4:
                    $("#water_hardness").html(get_text("hard"));
                    break;
                case 5:
                    $("#water_hardness").html(get_text("very_hard"));
                    break;
            }
        }
    }

    // voltage_ely
    $(".vigipool_modal_ely_voltage").html(voltage_ely + " V");

    // current_ely
    $(".vigipool_modal_ely_amperage").html((current_ely / 10) + " A");

    // value_temp_int
    $(".vigipool_modal_ely_internal_temperature").html((value_temp_int / 10) + " °C");
} function check_all(debug = "") {

//     if (debug !== "") {
//         console.log("debug check_all : " + debug);
//     }

    update_vigipool_modal_all();

    update_vigipool_modal_auxiliary_1();
    update_vigipool_modal_auxiliary_2();
    update_vigipool_modal_auxiliary();
    update_vigipool_modal_auxiliary_prog_1();
    update_vigipool_modal_auxiliary_prog_2();

    update_vigipool_modal_light_advanced_options();
    update_vigipool_modal_filtration_advanced_options();
    update_vigipool_modal_auxiliary_advanced_options();

    update_vigipool_modal_ely();

    update_vigipool_modal_filtration();
    update_vigipool_modal_filtration_prog_1();
    update_vigipool_modal_filtration_prog_2();

    update_vigipool_modal_filtration_m();
    update_vigipool_modal_filtration_m_prog_1();

    update_vigipool_modal_light();
    update_vigipool_modal_light_prog_1();
    update_vigipool_modal_light_prog_2();

    update_vigipool_modal_light_m();
    update_vigipool_modal_light_m_prog_1();

    update_vigipool_modal_orp();
    update_vigipool_modal_ph();

    update_vigipool_modal_x3_state();
    update_vigipool_modal_x3_state_prog_1();
    update_vigipool_modal_x3_state_prog_2();

    update_vigipool_ui_aux_state();
    update_vigipool_ui_aux1_state();
    update_vigipool_ui_aux2_state();

    update_vigipool_ui_ely_state();

    update_vigipool_ui_filt_m_state();
    update_vigipool_ui_filt_state();

    update_vigipool_ui_light_m_state();
    update_vigipool_ui_light_state();

    update_vigipool_ui_logo();

    update_vigipool_ui_mqtt();

    update_vigipool_ui_source_orp();
    update_vigipool_ui_source_ph();
    update_vigipool_ui_value_orp();
    update_vigipool_ui_value_ph();

    update_vigipool_ui_water();

    update_vigipool_ui_x3_state();
}

var listened = ["vigipool_scanner", "vigipool_aux1_state", "vigipool_aux2_state", "vigipool_aux_state", "vigipool_filt_state", "vigipool_filt_state_m", "vigipool_flow_on", "vigipool_light_state", "vigipool_light_state_m", "vigipool_winter_mode", "vigipool_action", "vigipool_ap_bcast_duration", "vigipool_aux1_mode", "vigipool_aux1_state", "vigipool_aux1_type", "vigipool_aux2_mode", "vigipool_aux2_state", "vigipool_aux2_type", "vigipool_aux_conf", "vigipool_aux_conf_m", "vigipool_aux_min_temp", "vigipool_aux_state", "vigipool_aux_temp_hyst", "vigipool_aux_type", "vigipool_backwash", "vigipool_bus_err_9", "vigipool_bus_err", "vigipool_choc_duration", "vigipool_consigne_orp", "vigipool_consigne_ph", "vigipool_consigne_temp", "vigipool_couv_on", "vigipool_current_ely", "vigipool_date_mes", "vigipool_date_mes_orp", "vigipool_date_mes_ph", "vigipool_ely_duration_compensated", "vigipool_ely_duration_in_minut", "vigipool_ely_duration_theo", "vigipool_epoch", "vigipool_error", "vigipool_filt_cur", "vigipool_filt_cur_nom", "vigipool_filt_light_force", "vigipool_filt_mode", "vigipool_filt_serv_inter", "vigipool_filt_state", "vigipool_filt_state_m", "vigipool_flow_on", "vigipool_frost_free", "vigipool_horizontal", "vigipool_hw_vers", "vigipool_inject_on", "vigipool_jeedom_dbg", "vigipool_jeedom_interval", "vigipool_lat", "vigipool_light_bright", "vigipool_light_code", "vigipool_light_mode", "vigipool_light_speed", "vigipool_light_state", "vigipool_light_state_m", "vigipool_light_timer", "vigipool_light_type", "vigipool_light_type_m", "vigipool_long", "vigipool_lvl_reg", "vigipool_meteor_errors", "vigipool_meteor_version", "vigipool_mode_choc", "vigipool_mode_ely", "vigipool_model_id", "vigipool_mode_ph", "vigipool_mqtt_connected", "vigipool_orp_calibration_target", "vigipool_ph_calibration_target", "vigipool_power_ely", "vigipool_priority", "vigipool_prod_chlore", "vigipool_prod_on", "vigipool_server_on", "vigipool_source_orp", "vigipool_source_ph", "vigipool_state", "vigipool_sunset", "vigipool_sw_vers", "vigipool_temp_accuracy", "vigipool_temp_min_off_ely", "vigipool_tile", "vigipool_ui", "vigipool_update_ota", "vigipool_value_cond", "vigipool_value_orp", "vigipool_value_ph", "vigipool_value_temp", "vigipool_value_temp_int", "vigipool_valve_on", "vigipool_vol_24h_inject", "vigipool_vol_bac", "vigipool_vol_max_24h", "vigipool_voltage_ely", "vigipool_vol_tot_inject", "vigipool_water_hardness", "vigipool_aux1_sched", "vigipool_aux2_sched", "vigipool_aux_sched_1", "vigipool_aux_sched", "vigipool_aux_sched_m", "vigipool_device_id", "vigipool_filt_sched", "vigipool_filt_sched_m", "vigipool_ipaddr", "vigipool_language", "vigipool_lat", "vigipool_light_sched", "vigipool_light_sched_m", "vigipool_long", "vigipool_name", "vigipool_orp_adjust", "vigipool_ph_adjust", "vigipool_rssi", "vigipool_serial_num", "vigipool_source_orp", "vigipool_source_ph", "vigipool_source_temp", "vigipool_temp_adjust", "vigipool_tz", "vigipool_sunrise", "vigipool_x3_sched", "vigipool_dmx_ch", "vigipool_x3_state", "vigipool_x3_bright", "vigipool_x3_speed", "vigipool_rgbw", "vigipool_x3_color", "vigipool_p1_color", "vigipool_p2_color"];

$(document).ready(function () {
    for (let i = 0; i < listened.length; i++) {
        $("." + listened[i]).on('DOMSubtreeModified', function () {
            check_all("1");
        });
    }
});

check_all("2");
$(document).ready(function () {
    check_all("6");
    // console.log("check_screen begin");
    check_screen();
    check_data();
    // console.log("check_screen end");
});